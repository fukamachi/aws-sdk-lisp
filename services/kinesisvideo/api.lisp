;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/kinesisvideo/api
  (:use)
  (:nicknames #:aws/kinesisvideo)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/kinesisvideo/api)
(common-lisp:progn
 (common-lisp:define-condition kinesisvideo-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'kinesisvideo-error))
(common-lisp:progn
 (common-lisp:defclass kinesisvideo-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "kinesisvideo" :api-version
                        "2017-09-30" :host-prefix "kinesisvideo" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'kinesisvideo-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("AccountChannelLimitExceededException"
     . account-channel-limit-exceeded-exception)
    ("AccountStreamLimitExceededException"
     . account-stream-limit-exceeded-exception)
    ("ClientLimitExceededException" . client-limit-exceeded-exception)
    ("DeviceStreamLimitExceededException"
     . device-stream-limit-exceeded-exception)
    ("InvalidArgumentException" . invalid-argument-exception)
    ("InvalidDeviceException" . invalid-device-exception)
    ("InvalidResourceFormatException" . invalid-resource-format-exception)
    ("NoDataRetentionException" . no-data-retention-exception)
    ("NotAuthorizedException" . not-authorized-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("StreamEdgeConfigurationNotFoundException"
     . stream-edge-configuration-not-found-exception)
    ("TagsPerResourceExceededLimitException"
     . tags-per-resource-exceeded-limit-exception)
    ("VersionMismatchException" . version-mismatch-exception)))
(common-lisp:deftype apiname () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition account-channel-limit-exceeded-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       account-channel-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'account-channel-limit-exceeded-exception
                    'account-channel-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition account-stream-limit-exceeded-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       account-stream-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'account-stream-limit-exceeded-exception
                    'account-stream-limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass channel-info common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor struct-shape-channel-info-channel-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-channel-info-channel-arn :shape
                         "ResourceARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-channel-info-channel-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-status :initarg :channel-status :initform
                         common-lisp:nil :type
                         (common-lisp:or status common-lisp:null) :accessor
                         struct-shape-channel-info-channel-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-info-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (single-master-configuration :initarg
                         :single-master-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or single-master-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-info-single-master-configuration
                         :shape "SingleMasterConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or version common-lisp:null)
                         :accessor struct-shape-channel-info-version :shape
                         "Version" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-info 'make-channel-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-status))
      (common-lisp:list
       (common-lisp:cons "ChannelStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'single-master-configuration))
      (common-lisp:list
       (common-lisp:cons "SingleMasterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-info-list ()
   '(trivial-types:proper-list channel-info))
 (common-lisp:defun make-channel-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-name-condition common-lisp:nil
                       ((comparison-operator :initarg :comparison-operator
                         :initform common-lisp:nil :type
                         (common-lisp:or comparison-operator common-lisp:null)
                         :accessor
                         struct-shape-channel-name-condition-comparison-operator
                         :shape "ComparisonOperator" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comparison-value :initarg :comparison-value :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor
                         struct-shape-channel-name-condition-comparison-value
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-name-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-name-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-name-condition 'make-channel-name-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-name-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-name-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-value))
      (common-lisp:list
       (common-lisp:cons "ComparisonValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-name-condition))
   common-lisp:nil))
(common-lisp:deftype channel-protocol () 'common-lisp:string)
(common-lisp:deftype channel-role () 'common-lisp:string)
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition client-limit-exceeded-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       client-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'client-limit-exceeded-exception
                    'client-limit-exceeded-exception-message)))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:deftype configuration-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-signaling-channel-input common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         (common-lisp:error ":channel-name is required") :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor
                         struct-shape-create-signaling-channel-input-channel-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor
                         struct-shape-create-signaling-channel-input-channel-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (single-master-configuration :initarg
                         :single-master-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or single-master-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-signaling-channel-input-single-master-configuration
                         :shape "SingleMasterConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-on-create-list common-lisp:null)
                         :accessor
                         struct-shape-create-signaling-channel-input-tags
                         :shape "TagOnCreateList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-signaling-channel-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-signaling-channel-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-signaling-channel-input
                    'make-create-signaling-channel-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'single-master-configuration))
      (common-lisp:list
       (common-lisp:cons "SingleMasterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-signaling-channel-output common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-create-signaling-channel-output-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-signaling-channel-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-signaling-channel-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-signaling-channel-output
                    'make-create-signaling-channel-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-signaling-channel-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stream-input common-lisp:nil
                       ((device-name :initarg :device-name :initform
                         common-lisp:nil :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor struct-shape-create-stream-input-device-name
                         :shape "DeviceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-name :initarg :stream-name :initform
                         (common-lisp:error ":stream-name is required") :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor struct-shape-create-stream-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-type :initarg :media-type :initform
                         common-lisp:nil :type
                         (common-lisp:or media-type common-lisp:null) :accessor
                         struct-shape-create-stream-input-media-type :shape
                         "MediaType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-create-stream-input-kms-key-id :shape
                         "KmsKeyId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-retention-in-hours :initarg
                         :data-retention-in-hours :initform common-lisp:nil
                         :type
                         (common-lisp:or data-retention-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-stream-input-data-retention-in-hours
                         :shape "DataRetentionInHours" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor struct-shape-create-stream-input-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stream-input 'make-create-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-type))
      (common-lisp:list
       (common-lisp:cons "MediaType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stream-output common-lisp:nil
                       ((stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-create-stream-output-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stream-output 'make-create-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stream-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stream-output))
   common-lisp:nil))
(common-lisp:deftype data-endpoint () 'common-lisp:string)
(common-lisp:deftype data-retention-change-in-hours () 'common-lisp:integer)
(common-lisp:deftype data-retention-in-hours () 'common-lisp:integer)
(common-lisp:deftype delete-after-upload () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass delete-edge-configuration-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-delete-edge-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-edge-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-edge-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-edge-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-edge-configuration-input
                    'make-delete-edge-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-edge-configuration-output common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-edge-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-edge-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-edge-configuration-output
                    'make-delete-edge-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-edge-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-signaling-channel-input common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-signaling-channel-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-version :initarg :current-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version common-lisp:null) :accessor
                         struct-shape-delete-signaling-channel-input-current-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-signaling-channel-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-signaling-channel-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-signaling-channel-input
                    'make-delete-signaling-channel-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-signaling-channel-output common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-signaling-channel-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-signaling-channel-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-signaling-channel-output
                    'make-delete-signaling-channel-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-signaling-channel-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stream-input common-lisp:nil
                       ((stream-arn :initarg :stream-arn :initform
                         (common-lisp:error ":stream-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-delete-stream-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-version :initarg :current-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version common-lisp:null) :accessor
                         struct-shape-delete-stream-input-current-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-stream-input 'make-delete-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stream-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-stream-output 'make-delete-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stream-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deletion-config common-lisp:nil
                       ((edge-retention-in-hours :initarg
                         :edge-retention-in-hours :initform common-lisp:nil
                         :type
                         (common-lisp:or edge-retention-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-deletion-config-edge-retention-in-hours
                         :shape "EdgeRetentionInHours" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (local-size-config :initarg :local-size-config
                         :initform common-lisp:nil :type
                         (common-lisp:or local-size-config common-lisp:null)
                         :accessor
                         struct-shape-deletion-config-local-size-config :shape
                         "LocalSizeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delete-after-upload :initarg :delete-after-upload
                         :initform common-lisp:nil :type
                         (common-lisp:or delete-after-upload common-lisp:null)
                         :accessor
                         struct-shape-deletion-config-delete-after-upload
                         :shape "DeleteAfterUpload" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deletion-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deletion-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deletion-config 'make-deletion-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deletion-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deletion-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'edge-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "EdgeRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'local-size-config))
      (common-lisp:list
       (common-lisp:cons "LocalSizeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-after-upload))
      (common-lisp:list
       (common-lisp:cons "DeleteAfterUpload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deletion-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-edge-configuration-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-edge-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-edge-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-edge-configuration-input
                    'make-describe-edge-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-edge-configuration-output common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-edge-configuration-output-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-edge-configuration-output-last-updated-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sync-status :initarg :sync-status :initform
                         common-lisp:nil :type
                         (common-lisp:or sync-status common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-sync-status
                         :shape "SyncStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-status-details :initarg :failed-status-details
                         :initform common-lisp:nil :type
                         (common-lisp:or failed-status-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-failed-status-details
                         :shape "FailedStatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (edge-config :initarg :edge-config :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-config common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-edge-config
                         :shape "EdgeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (edge-agent-status :initarg :edge-agent-status
                         :initform common-lisp:nil :type
                         (common-lisp:or edge-agent-status common-lisp:null)
                         :accessor
                         struct-shape-describe-edge-configuration-output-edge-agent-status
                         :shape "EdgeAgentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-edge-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-edge-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-edge-configuration-output
                    'make-describe-edge-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-status))
      (common-lisp:list
       (common-lisp:cons "SyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-status-details))
      (common-lisp:list
       (common-lisp:cons "FailedStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-config))
      (common-lisp:list
       (common-lisp:cons "EdgeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-agent-status))
      (common-lisp:list
       (common-lisp:cons "EdgeAgentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-edge-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-image-generation-configuration-input
                       common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-image-generation-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-image-generation-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-image-generation-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-image-generation-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-image-generation-configuration-input
                    'make-describe-image-generation-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-image-generation-configuration-output
                       common-lisp:nil
                       ((image-generation-configuration :initarg
                         :image-generation-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or image-generation-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-image-generation-configuration-output-image-generation-configuration
                         :shape "ImageGenerationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-image-generation-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-image-generation-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-image-generation-configuration-output
                    'make-describe-image-generation-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-generation-configuration))
      (common-lisp:list
       (common-lisp:cons "ImageGenerationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-image-generation-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-mapped-resource-configuration-input
                       common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-mapped-resource-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-mapped-resource-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          mapped-resource-configuration-list-limit
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-mapped-resource-configuration-input-max-results
                         :shape "MappedResourceConfigurationListLimit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-mapped-resource-configuration-input-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-mapped-resource-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-mapped-resource-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-mapped-resource-configuration-input
                    'make-describe-mapped-resource-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-mapped-resource-configuration-output
                       common-lisp:nil
                       ((mapped-resource-configuration-list :initarg
                         :mapped-resource-configuration-list :initform
                         common-lisp:nil :type
                         (common-lisp:or mapped-resource-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-mapped-resource-configuration-output-mapped-resource-configuration-list
                         :shape "MappedResourceConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-mapped-resource-configuration-output-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-mapped-resource-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-mapped-resource-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-mapped-resource-configuration-output
                    'make-describe-mapped-resource-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mapped-resource-configuration-list))
      (common-lisp:list
       (common-lisp:cons "MappedResourceConfigurationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-mapped-resource-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-media-storage-configuration-input
                       common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor
                         struct-shape-describe-media-storage-configuration-input-channel-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-media-storage-configuration-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-media-storage-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-media-storage-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-media-storage-configuration-input
                    'make-describe-media-storage-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-media-storage-configuration-output
                       common-lisp:nil
                       ((media-storage-configuration :initarg
                         :media-storage-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or media-storage-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-media-storage-configuration-output-media-storage-configuration
                         :shape "MediaStorageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-media-storage-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-media-storage-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-media-storage-configuration-output
                    'make-describe-media-storage-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-storage-configuration))
      (common-lisp:list
       (common-lisp:cons "MediaStorageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-media-storage-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-notification-configuration-input
                       common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-notification-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-notification-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-notification-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-notification-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-notification-configuration-input
                    'make-describe-notification-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-notification-configuration-output
                       common-lisp:nil
                       ((notification-configuration :initarg
                         :notification-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-notification-configuration-output-notification-configuration
                         :shape "NotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-notification-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-notification-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-notification-configuration-output
                    'make-describe-notification-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-configuration))
      (common-lisp:list
       (common-lisp:cons "NotificationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-notification-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-signaling-channel-input common-lisp:nil
                       ((channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-name common-lisp:null)
                         :accessor
                         struct-shape-describe-signaling-channel-input-channel-name
                         :shape "ChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-signaling-channel-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-signaling-channel-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-signaling-channel-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-signaling-channel-input
                    'make-describe-signaling-channel-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-signaling-channel-output common-lisp:nil
                       ((channel-info :initarg :channel-info :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-info common-lisp:null)
                         :accessor
                         struct-shape-describe-signaling-channel-output-channel-info
                         :shape "ChannelInfo" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-signaling-channel-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-signaling-channel-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-signaling-channel-output
                    'make-describe-signaling-channel-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-info))
      (common-lisp:list
       (common-lisp:cons "ChannelInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-signaling-channel-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-stream-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-describe-stream-input-stream-name :shape
                         "StreamName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-stream-input-stream-arn :shape
                         "ResourceARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-stream-input 'make-describe-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-stream-output common-lisp:nil
                       ((stream-info :initarg :stream-info :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-info common-lisp:null)
                         :accessor
                         struct-shape-describe-stream-output-stream-info :shape
                         "StreamInfo" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-stream-output 'make-describe-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-info))
      (common-lisp:list
       (common-lisp:cons "StreamInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-stream-output))
   common-lisp:nil))
(common-lisp:deftype destination-region () 'common-lisp:string)
(common-lisp:deftype destination-uri () 'common-lisp:string)
(common-lisp:deftype device-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition device-stream-limit-exceeded-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       device-stream-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'device-stream-limit-exceeded-exception
                    'device-stream-limit-exceeded-exception-message)))
(common-lisp:deftype duration-in-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass edge-agent-status common-lisp:nil
                       ((last-recorder-status :initarg :last-recorder-status
                         :initform common-lisp:nil :type
                         (common-lisp:or last-recorder-status common-lisp:null)
                         :accessor
                         struct-shape-edge-agent-status-last-recorder-status
                         :shape "LastRecorderStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-uploader-status :initarg :last-uploader-status
                         :initform common-lisp:nil :type
                         (common-lisp:or last-uploader-status common-lisp:null)
                         :accessor
                         struct-shape-edge-agent-status-last-uploader-status
                         :shape "LastUploaderStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-edge-agent-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'edge-agent-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'edge-agent-status 'make-edge-agent-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-agent-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-agent-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-recorder-status))
      (common-lisp:list
       (common-lisp:cons "LastRecorderStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-uploader-status))
      (common-lisp:list
       (common-lisp:cons "LastUploaderStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-agent-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass edge-config common-lisp:nil
                       ((hub-device-arn :initarg :hub-device-arn :initform
                         (common-lisp:error ":hub-device-arn is required")
                         :type (common-lisp:or hub-device-arn common-lisp:null)
                         :accessor struct-shape-edge-config-hub-device-arn
                         :shape "HubDeviceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recorder-config :initarg :recorder-config :initform
                         (common-lisp:error ":recorder-config is required")
                         :type
                         (common-lisp:or recorder-config common-lisp:null)
                         :accessor struct-shape-edge-config-recorder-config
                         :shape "RecorderConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (uploader-config :initarg :uploader-config :initform
                         common-lisp:nil :type
                         (common-lisp:or uploader-config common-lisp:null)
                         :accessor struct-shape-edge-config-uploader-config
                         :shape "UploaderConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deletion-config :initarg :deletion-config :initform
                         common-lisp:nil :type
                         (common-lisp:or deletion-config common-lisp:null)
                         :accessor struct-shape-edge-config-deletion-config
                         :shape "DeletionConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-edge-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'edge-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'edge-config 'make-edge-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hub-device-arn))
      (common-lisp:list
       (common-lisp:cons "HubDeviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recorder-config))
      (common-lisp:list
       (common-lisp:cons "RecorderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uploader-config))
      (common-lisp:list
       (common-lisp:cons "UploaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deletion-config))
      (common-lisp:list
       (common-lisp:cons "DeletionConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-config))
   common-lisp:nil))
(common-lisp:deftype edge-retention-in-hours () 'common-lisp:integer)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype failed-status-details () 'common-lisp:string)
(common-lisp:deftype format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype format-config () 'common-lisp:hash-table)
 (common-lisp:defun make-format-config (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype format-config-key () 'common-lisp:string)
(common-lisp:deftype format-config-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-data-endpoint-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-get-data-endpoint-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-get-data-endpoint-input-stream-arn :shape
                         "ResourceARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (apiname :initarg :apiname :initform
                         (common-lisp:error ":apiname is required") :type
                         (common-lisp:or apiname common-lisp:null) :accessor
                         struct-shape-get-data-endpoint-input-apiname :shape
                         "APIName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-endpoint-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-data-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-endpoint-input 'make-get-data-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apiname))
      (common-lisp:list
       (common-lisp:cons "APIName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-data-endpoint-output common-lisp:nil
                       ((data-endpoint :initarg :data-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or data-endpoint common-lisp:null)
                         :accessor
                         struct-shape-get-data-endpoint-output-data-endpoint
                         :shape "DataEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-endpoint-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-data-endpoint-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-endpoint-output 'make-get-data-endpoint-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-endpoint))
      (common-lisp:list
       (common-lisp:cons "DataEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-endpoint-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-signaling-channel-endpoint-input common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-get-signaling-channel-endpoint-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (single-master-channel-endpoint-configuration :initarg
                         :single-master-channel-endpoint-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          single-master-channel-endpoint-configuration
                          common-lisp:null)
                         :accessor
                         struct-shape-get-signaling-channel-endpoint-input-single-master-channel-endpoint-configuration
                         :shape "SingleMasterChannelEndpointConfiguration"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-signaling-channel-endpoint-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-signaling-channel-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-signaling-channel-endpoint-input
                    'make-get-signaling-channel-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'single-master-channel-endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "SingleMasterChannelEndpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-signaling-channel-endpoint-output common-lisp:nil
                       ((resource-endpoint-list :initarg
                         :resource-endpoint-list :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-endpoint-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-signaling-channel-endpoint-output-resource-endpoint-list
                         :shape "ResourceEndpointList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-signaling-channel-endpoint-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-signaling-channel-endpoint-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-signaling-channel-endpoint-output
                    'make-get-signaling-channel-endpoint-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'resource-endpoint-list))
      (common-lisp:list
       (common-lisp:cons "ResourceEndpointList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-signaling-channel-endpoint-output))
   common-lisp:nil))
(common-lisp:deftype height-pixels () 'common-lisp:integer)
(common-lisp:deftype hub-device-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass image-generation-configuration common-lisp:nil
                       ((status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or configuration-status common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-status
                         :shape "ConfigurationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (image-selector-type :initarg :image-selector-type
                         :initform
                         (common-lisp:error ":image-selector-type is required")
                         :type
                         (common-lisp:or image-selector-type common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-image-selector-type
                         :shape "ImageSelectorType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-config :initarg :destination-config
                         :initform
                         (common-lisp:error ":destination-config is required")
                         :type
                         (common-lisp:or image-generation-destination-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-destination-config
                         :shape "ImageGenerationDestinationConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sampling-interval :initarg :sampling-interval
                         :initform
                         (common-lisp:error ":sampling-interval is required")
                         :type
                         (common-lisp:or sampling-interval common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-sampling-interval
                         :shape "SamplingInterval" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or format common-lisp:null) :accessor
                         struct-shape-image-generation-configuration-format
                         :shape "Format" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (format-config :initarg :format-config :initform
                         common-lisp:nil :type
                         (common-lisp:or format-config common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-format-config
                         :shape "FormatConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (width-pixels :initarg :width-pixels :initform
                         common-lisp:nil :type
                         (common-lisp:or width-pixels common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-width-pixels
                         :shape "WidthPixels" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (height-pixels :initarg :height-pixels :initform
                         common-lisp:nil :type
                         (common-lisp:or height-pixels common-lisp:null)
                         :accessor
                         struct-shape-image-generation-configuration-height-pixels
                         :shape "HeightPixels" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-image-generation-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'image-generation-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'image-generation-configuration
                    'make-image-generation-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-selector-type))
      (common-lisp:list
       (common-lisp:cons "ImageSelectorType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-config))
      (common-lisp:list
       (common-lisp:cons "DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sampling-interval))
      (common-lisp:list
       (common-lisp:cons "SamplingInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format-config))
      (common-lisp:list
       (common-lisp:cons "FormatConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'width-pixels))
      (common-lisp:list
       (common-lisp:cons "WidthPixels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'height-pixels))
      (common-lisp:list
       (common-lisp:cons "HeightPixels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass image-generation-destination-config common-lisp:nil
                       ((uri :initarg :uri :initform
                         (common-lisp:error ":uri is required") :type
                         (common-lisp:or destination-uri common-lisp:null)
                         :accessor
                         struct-shape-image-generation-destination-config-uri
                         :shape "DestinationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-region :initarg :destination-region
                         :initform
                         (common-lisp:error ":destination-region is required")
                         :type
                         (common-lisp:or destination-region common-lisp:null)
                         :accessor
                         struct-shape-image-generation-destination-config-destination-region
                         :shape "DestinationRegion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-image-generation-destination-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'image-generation-destination-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'image-generation-destination-config
                    'make-image-generation-destination-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-region))
      (common-lisp:list
       (common-lisp:cons "DestinationRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          image-generation-destination-config))
   common-lisp:nil))
(common-lisp:deftype image-selector-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition invalid-argument-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-argument-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-argument-exception
                    'invalid-argument-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-device-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-device-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-device-exception
                    'invalid-device-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-resource-format-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-resource-format-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-resource-format-exception
                    'invalid-resource-format-exception-message)))
(common-lisp:deftype job-status-details () 'common-lisp:string)
(common-lisp:deftype kms-key-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass last-recorder-status common-lisp:nil
                       ((job-status-details :initarg :job-status-details
                         :initform common-lisp:nil :type
                         (common-lisp:or job-status-details common-lisp:null)
                         :accessor
                         struct-shape-last-recorder-status-job-status-details
                         :shape "JobStatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-collected-time :initarg :last-collected-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-last-recorder-status-last-collected-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-last-recorder-status-last-updated-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recorder-status :initarg :recorder-status :initform
                         common-lisp:nil :type
                         (common-lisp:or recorder-status common-lisp:null)
                         :accessor
                         struct-shape-last-recorder-status-recorder-status
                         :shape "RecorderStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-last-recorder-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'last-recorder-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'last-recorder-status 'make-last-recorder-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input last-recorder-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input last-recorder-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status-details))
      (common-lisp:list
       (common-lisp:cons "JobStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-collected-time))
      (common-lisp:list
       (common-lisp:cons "LastCollectedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recorder-status))
      (common-lisp:list
       (common-lisp:cons "RecorderStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input last-recorder-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass last-uploader-status common-lisp:nil
                       ((job-status-details :initarg :job-status-details
                         :initform common-lisp:nil :type
                         (common-lisp:or job-status-details common-lisp:null)
                         :accessor
                         struct-shape-last-uploader-status-job-status-details
                         :shape "JobStatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-collected-time :initarg :last-collected-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-last-uploader-status-last-collected-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-last-uploader-status-last-updated-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (uploader-status :initarg :uploader-status :initform
                         common-lisp:nil :type
                         (common-lisp:or uploader-status common-lisp:null)
                         :accessor
                         struct-shape-last-uploader-status-uploader-status
                         :shape "UploaderStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-last-uploader-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'last-uploader-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'last-uploader-status 'make-last-uploader-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input last-uploader-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input last-uploader-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status-details))
      (common-lisp:list
       (common-lisp:cons "JobStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-collected-time))
      (common-lisp:list
       (common-lisp:cons "LastCollectedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uploader-status))
      (common-lisp:list
       (common-lisp:cons "UploaderStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input last-uploader-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-edge-agent-configurations-edge-config
                       common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-last-updated-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sync-status :initarg :sync-status :initform
                         common-lisp:nil :type
                         (common-lisp:or sync-status common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-sync-status
                         :shape "SyncStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-status-details :initarg :failed-status-details
                         :initform common-lisp:nil :type
                         (common-lisp:or failed-status-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-failed-status-details
                         :shape "FailedStatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (edge-config :initarg :edge-config :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-config common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-edge-config-edge-config
                         :shape "EdgeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-edge-agent-configurations-edge-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-edge-agent-configurations-edge-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-edge-agent-configurations-edge-config
                    'make-list-edge-agent-configurations-edge-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-edge-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-edge-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-status))
      (common-lisp:list
       (common-lisp:cons "SyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-status-details))
      (common-lisp:list
       (common-lisp:cons "FailedStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-config))
      (common-lisp:list
       (common-lisp:cons "EdgeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-edge-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-edge-agent-configurations-edge-config-list ()
   '(trivial-types:proper-list list-edge-agent-configurations-edge-config))
 (common-lisp:defun make-list-edge-agent-configurations-edge-config-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            list-edge-agent-configurations-edge-config))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-edge-agent-configurations-input common-lisp:nil
                       ((hub-device-arn :initarg :hub-device-arn :initform
                         (common-lisp:error ":hub-device-arn is required")
                         :type (common-lisp:or hub-device-arn common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-input-hub-device-arn
                         :shape "HubDeviceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-edge-agent-configurations-input-limit
                          common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-input-max-results
                         :shape "ListEdgeAgentConfigurationsInputLimit"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-edge-agent-configurations-input-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-edge-agent-configurations-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-edge-agent-configurations-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-edge-agent-configurations-input
                    'make-list-edge-agent-configurations-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hub-device-arn))
      (common-lisp:list
       (common-lisp:cons "HubDeviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-input))
   common-lisp:nil))
(common-lisp:deftype list-edge-agent-configurations-input-limit ()
  'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-edge-agent-configurations-output common-lisp:nil
                       ((edge-configs :initarg :edge-configs :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-edge-agent-configurations-edge-config-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-edge-agent-configurations-output-edge-configs
                         :shape "ListEdgeAgentConfigurationsEdgeConfigList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-edge-agent-configurations-output-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-edge-agent-configurations-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-edge-agent-configurations-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-edge-agent-configurations-output
                    'make-list-edge-agent-configurations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-configs))
      (common-lisp:list
       (common-lisp:cons "EdgeConfigs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-edge-agent-configurations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-protocols ()
   '(trivial-types:proper-list channel-protocol))
 (common-lisp:defun make-list-of-protocols
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-protocol))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-signaling-channels-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-streams-input-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-signaling-channels-input-max-results
                         :shape "ListStreamsInputLimit" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-signaling-channels-input-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name-condition :initarg
                         :channel-name-condition :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-name-condition
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-signaling-channels-input-channel-name-condition
                         :shape "ChannelNameCondition" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-signaling-channels-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signaling-channels-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-signaling-channels-input
                    'make-list-signaling-channels-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-name-condition))
      (common-lisp:list
       (common-lisp:cons "ChannelNameCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-signaling-channels-output common-lisp:nil
                       ((channel-info-list :initarg :channel-info-list
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-info-list common-lisp:null)
                         :accessor
                         struct-shape-list-signaling-channels-output-channel-info-list
                         :shape "ChannelInfoList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-signaling-channels-output-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-signaling-channels-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-signaling-channels-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-signaling-channels-output
                    'make-list-signaling-channels-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-info-list))
      (common-lisp:list
       (common-lisp:cons "ChannelInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-signaling-channels-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-streams-input common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or list-streams-input-limit
                                         common-lisp:null)
                         :accessor struct-shape-list-streams-input-max-results
                         :shape "ListStreamsInputLimit" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-streams-input-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-name-condition :initarg :stream-name-condition
                         :initform common-lisp:nil :type
                         (common-lisp:or stream-name-condition
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-streams-input-stream-name-condition
                         :shape "StreamNameCondition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-streams-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-streams-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-streams-input 'make-list-streams-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-streams-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-streams-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stream-name-condition))
      (common-lisp:list
       (common-lisp:cons "StreamNameCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-streams-input))
   common-lisp:nil))
(common-lisp:deftype list-streams-input-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass list-streams-output common-lisp:nil
                       ((stream-info-list :initarg :stream-info-list :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-info-list common-lisp:null)
                         :accessor
                         struct-shape-list-streams-output-stream-info-list
                         :shape "StreamInfoList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-streams-output-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-streams-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-streams-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-streams-output 'make-list-streams-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-streams-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-streams-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-info-list))
      (common-lisp:list
       (common-lisp:cons "StreamInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-streams-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-input-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-input-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-output-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-output-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-stream-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-stream-input-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-stream-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-stream-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-stream-input
                    'make-list-tags-for-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-stream-output common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-stream-output-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-stream-output-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-stream-output
                    'make-list-tags-for-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-stream-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass local-size-config common-lisp:nil
                       ((max-local-media-size-in-mb :initarg
                         :max-local-media-size-in-mb :initform common-lisp:nil
                         :type
                         (common-lisp:or max-local-media-size-in-mb
                                         common-lisp:null)
                         :accessor
                         struct-shape-local-size-config-max-local-media-size-in-mb
                         :shape "MaxLocalMediaSizeInMB" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (strategy-on-full-size :initarg :strategy-on-full-size
                         :initform common-lisp:nil :type
                         (common-lisp:or strategy-on-full-size
                                         common-lisp:null)
                         :accessor
                         struct-shape-local-size-config-strategy-on-full-size
                         :shape "StrategyOnFullSize" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-local-size-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'local-size-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'local-size-config 'make-local-size-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input local-size-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input local-size-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-local-media-size-in-mb))
      (common-lisp:list
       (common-lisp:cons "MaxLocalMediaSizeInMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'strategy-on-full-size))
      (common-lisp:list
       (common-lisp:cons "StrategyOnFullSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input local-size-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype mapped-resource-configuration-list ()
   '(trivial-types:proper-list mapped-resource-configuration-list-item))
 (common-lisp:defun make-mapped-resource-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            mapped-resource-configuration-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass mapped-resource-configuration-list-item common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or type common-lisp:null) :accessor
                         struct-shape-mapped-resource-configuration-list-item-type
                         :shape "Type" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-mapped-resource-configuration-list-item-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mapped-resource-configuration-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'mapped-resource-configuration-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mapped-resource-configuration-list-item
                    'make-mapped-resource-configuration-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mapped-resource-configuration-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mapped-resource-configuration-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "ARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mapped-resource-configuration-list-item))
   common-lisp:nil))
(common-lisp:deftype mapped-resource-configuration-list-limit ()
  'common-lisp:integer)
(common-lisp:deftype max-local-media-size-in-mb () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass media-source-config common-lisp:nil
                       ((media-uri-secret-arn :initarg :media-uri-secret-arn
                         :initform
                         (common-lisp:error
                          ":media-uri-secret-arn is required")
                         :type
                         (common-lisp:or media-uri-secret-arn common-lisp:null)
                         :accessor
                         struct-shape-media-source-config-media-uri-secret-arn
                         :shape "MediaUriSecretArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-uri-type :initarg :media-uri-type :initform
                         (common-lisp:error ":media-uri-type is required")
                         :type (common-lisp:or media-uri-type common-lisp:null)
                         :accessor
                         struct-shape-media-source-config-media-uri-type :shape
                         "MediaUriType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-media-source-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'media-source-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'media-source-config 'make-media-source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input media-source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input media-source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-uri-secret-arn))
      (common-lisp:list
       (common-lisp:cons "MediaUriSecretArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-uri-type))
      (common-lisp:list
       (common-lisp:cons "MediaUriType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input media-source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass media-storage-configuration common-lisp:nil
                       ((stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-media-storage-configuration-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or media-storage-configuration-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-media-storage-configuration-status :shape
                         "MediaStorageConfigurationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-media-storage-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'media-storage-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'media-storage-configuration
                    'make-media-storage-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          media-storage-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          media-storage-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          media-storage-configuration))
   common-lisp:nil))
(common-lisp:deftype media-storage-configuration-status () 'common-lisp:string)
(common-lisp:deftype media-type () 'common-lisp:string)
(common-lisp:deftype media-uri-secret-arn () 'common-lisp:string)
(common-lisp:deftype media-uri-type () 'common-lisp:string)
(common-lisp:deftype message-ttl-seconds () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition no-data-retention-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       no-data-retention-exception-message)))
 (common-lisp:export
  (common-lisp:list 'no-data-retention-exception
                    'no-data-retention-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition not-authorized-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-authorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-authorized-exception
                    'not-authorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass notification-configuration common-lisp:nil
                       ((status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or configuration-status common-lisp:null)
                         :accessor
                         struct-shape-notification-configuration-status :shape
                         "ConfigurationStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-config :initarg :destination-config
                         :initform
                         (common-lisp:error ":destination-config is required")
                         :type
                         (common-lisp:or notification-destination-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-notification-configuration-destination-config
                         :shape "NotificationDestinationConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notification-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notification-configuration
                    'make-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-config))
      (common-lisp:list
       (common-lisp:cons "DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass notification-destination-config common-lisp:nil
                       ((uri :initarg :uri :initform
                         (common-lisp:error ":uri is required") :type
                         (common-lisp:or destination-uri common-lisp:null)
                         :accessor
                         struct-shape-notification-destination-config-uri
                         :shape "DestinationUri" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification-destination-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'notification-destination-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notification-destination-config
                    'make-notification-destination-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "Uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-destination-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recorder-config common-lisp:nil
                       ((media-source-config :initarg :media-source-config
                         :initform
                         (common-lisp:error ":media-source-config is required")
                         :type
                         (common-lisp:or media-source-config common-lisp:null)
                         :accessor
                         struct-shape-recorder-config-media-source-config
                         :shape "MediaSourceConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-config :initarg :schedule-config :initform
                         common-lisp:nil :type
                         (common-lisp:or schedule-config common-lisp:null)
                         :accessor struct-shape-recorder-config-schedule-config
                         :shape "ScheduleConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recorder-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recorder-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'recorder-config 'make-recorder-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recorder-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recorder-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-source-config))
      (common-lisp:list
       (common-lisp:cons "MediaSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-config))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recorder-config))
   common-lisp:nil))
(common-lisp:deftype recorder-status () 'common-lisp:string)
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype resource-endpoint () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-endpoint-list ()
   '(trivial-types:proper-list resource-endpoint-list-item))
 (common-lisp:defun make-resource-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            resource-endpoint-list-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass resource-endpoint-list-item common-lisp:nil
                       ((protocol :initarg :protocol :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-protocol common-lisp:null)
                         :accessor
                         struct-shape-resource-endpoint-list-item-protocol
                         :shape "ChannelProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-endpoint :initarg :resource-endpoint
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-endpoint common-lisp:null)
                         :accessor
                         struct-shape-resource-endpoint-list-item-resource-endpoint
                         :shape "ResourceEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-endpoint-list-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-endpoint-list-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-endpoint-list-item
                    'make-resource-endpoint-list-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          resource-endpoint-list-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          resource-endpoint-list-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-endpoint))
      (common-lisp:list
       (common-lisp:cons "ResourceEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          resource-endpoint-list-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:deftype resource-tags () 'common-lisp:hash-table)
 (common-lisp:defun make-resource-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype sampling-interval () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass schedule-config common-lisp:nil
                       ((schedule-expression :initarg :schedule-expression
                         :initform
                         (common-lisp:error ":schedule-expression is required")
                         :type
                         (common-lisp:or schedule-expression common-lisp:null)
                         :accessor
                         struct-shape-schedule-config-schedule-expression
                         :shape "ScheduleExpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (duration-in-seconds :initarg :duration-in-seconds
                         :initform
                         (common-lisp:error ":duration-in-seconds is required")
                         :type
                         (common-lisp:or duration-in-seconds common-lisp:null)
                         :accessor
                         struct-shape-schedule-config-duration-in-seconds
                         :shape "DurationInSeconds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'schedule-config 'make-schedule-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-in-seconds))
      (common-lisp:list
       (common-lisp:cons "DurationInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule-config))
   common-lisp:nil))
(common-lisp:deftype schedule-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass single-master-channel-endpoint-configuration
                       common-lisp:nil
                       ((protocols :initarg :protocols :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-protocols common-lisp:null)
                         :accessor
                         struct-shape-single-master-channel-endpoint-configuration-protocols
                         :shape "ListOfProtocols" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or channel-role common-lisp:null)
                         :accessor
                         struct-shape-single-master-channel-endpoint-configuration-role
                         :shape "ChannelRole" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-single-master-channel-endpoint-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'single-master-channel-endpoint-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'single-master-channel-endpoint-configuration
                    'make-single-master-channel-endpoint-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          single-master-channel-endpoint-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          single-master-channel-endpoint-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocols))
      (common-lisp:list
       (common-lisp:cons "Protocols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          single-master-channel-endpoint-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass single-master-configuration common-lisp:nil
                       ((message-ttl-seconds :initarg :message-ttl-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or message-ttl-seconds common-lisp:null)
                         :accessor
                         struct-shape-single-master-configuration-message-ttl-seconds
                         :shape "MessageTtlSeconds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-single-master-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'single-master-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'single-master-configuration
                    'make-single-master-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          single-master-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          single-master-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-ttl-seconds))
      (common-lisp:list
       (common-lisp:cons "MessageTtlSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          single-master-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-edge-configuration-update-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (edge-config :initarg :edge-config :initform
                         (common-lisp:error ":edge-config is required") :type
                         (common-lisp:or edge-config common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-input-edge-config
                         :shape "EdgeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-edge-configuration-update-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-edge-configuration-update-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-edge-configuration-update-input
                    'make-start-edge-configuration-update-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-config))
      (common-lisp:list
       (common-lisp:cons "EdgeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-edge-configuration-update-output common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-output-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-output-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-start-edge-configuration-update-output-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-start-edge-configuration-update-output-last-updated-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sync-status :initarg :sync-status :initform
                         common-lisp:nil :type
                         (common-lisp:or sync-status common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-output-sync-status
                         :shape "SyncStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-status-details :initarg :failed-status-details
                         :initform common-lisp:nil :type
                         (common-lisp:or failed-status-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-output-failed-status-details
                         :shape "FailedStatusDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (edge-config :initarg :edge-config :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-config common-lisp:null)
                         :accessor
                         struct-shape-start-edge-configuration-update-output-edge-config
                         :shape "EdgeConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-edge-configuration-update-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-edge-configuration-update-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-edge-configuration-update-output
                    'make-start-edge-configuration-update-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sync-status))
      (common-lisp:list
       (common-lisp:cons "SyncStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-status-details))
      (common-lisp:list
       (common-lisp:cons "FailedStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'edge-config))
      (common-lisp:list
       (common-lisp:cons "EdgeConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-edge-configuration-update-output))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype strategy-on-full-size () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition stream-edge-configuration-not-found-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       stream-edge-configuration-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'stream-edge-configuration-not-found-exception
                    'stream-edge-configuration-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass stream-info common-lisp:nil
                       ((device-name :initarg :device-name :initform
                         common-lisp:nil :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor struct-shape-stream-info-device-name :shape
                         "DeviceName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor struct-shape-stream-info-stream-name :shape
                         "StreamName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-stream-info-stream-arn :shape
                         "ResourceARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (media-type :initarg :media-type :initform
                         common-lisp:nil :type
                         (common-lisp:or media-type common-lisp:null) :accessor
                         struct-shape-stream-info-media-type :shape "MediaType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kms-key-id :initarg :kms-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or kms-key-id common-lisp:null) :accessor
                         struct-shape-stream-info-kms-key-id :shape "KmsKeyId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or version common-lisp:null)
                         :accessor struct-shape-stream-info-version :shape
                         "Version" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-stream-info-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-stream-info-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-retention-in-hours :initarg
                         :data-retention-in-hours :initform common-lisp:nil
                         :type
                         (common-lisp:or data-retention-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-stream-info-data-retention-in-hours
                         :shape "DataRetentionInHours" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stream-info 'make-stream-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-type))
      (common-lisp:list
       (common-lisp:cons "MediaType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key-id))
      (common-lisp:list
       (common-lisp:cons "KmsKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype stream-info-list ()
   '(trivial-types:proper-list stream-info))
 (common-lisp:defun make-stream-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stream-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype stream-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-name-condition common-lisp:nil
                       ((comparison-operator :initarg :comparison-operator
                         :initform common-lisp:nil :type
                         (common-lisp:or comparison-operator common-lisp:null)
                         :accessor
                         struct-shape-stream-name-condition-comparison-operator
                         :shape "ComparisonOperator" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comparison-value :initarg :comparison-value :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-stream-name-condition-comparison-value
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-name-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-name-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stream-name-condition 'make-stream-name-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stream-name-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stream-name-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-value))
      (common-lisp:list
       (common-lisp:cons "ComparisonValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stream-name-condition))
   common-lisp:nil))
(common-lisp:deftype sync-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-on-create-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-on-create-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-tag-resource-input-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-input-tags :shape "TagList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-stream-input common-lisp:nil
                       ((stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-tag-stream-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor struct-shape-tag-stream-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor struct-shape-tag-stream-input-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-stream-input 'make-tag-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-stream-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-stream-output 'make-tag-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-stream-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition tags-per-resource-exceeded-limit-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       tags-per-resource-exceeded-limit-exception-message)))
 (common-lisp:export
  (common-lisp:list 'tags-per-resource-exceeded-limit-exception
                    'tags-per-resource-exceeded-limit-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-input-resource-arn :shape
                         "ResourceARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tag-key-list :initarg :tag-key-list :initform
                         (common-lisp:error ":tag-key-list is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-input-tag-key-list :shape
                         "TagKeyList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-list))
      (common-lisp:list
       (common-lisp:cons "TagKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-stream-input common-lisp:nil
                       ((stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-untag-stream-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor struct-shape-untag-stream-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-key-list :initarg :tag-key-list :initform
                         (common-lisp:error ":tag-key-list is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-stream-input-tag-key-list
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-stream-input 'make-untag-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-key-list))
      (common-lisp:list
       (common-lisp:cons "TagKeyList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-stream-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-stream-output 'make-untag-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-stream-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-retention-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-update-data-retention-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-data-retention-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-version :initarg :current-version :initform
                         (common-lisp:error ":current-version is required")
                         :type (common-lisp:or version common-lisp:null)
                         :accessor
                         struct-shape-update-data-retention-input-current-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation :initarg :operation :initform
                         (common-lisp:error ":operation is required") :type
                         (common-lisp:or update-data-retention-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-data-retention-input-operation
                         :shape "UpdateDataRetentionOperation" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (data-retention-change-in-hours :initarg
                         :data-retention-change-in-hours :initform
                         (common-lisp:error
                          ":data-retention-change-in-hours is required")
                         :type
                         (common-lisp:or data-retention-change-in-hours
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-data-retention-input-data-retention-change-in-hours
                         :shape "DataRetentionChangeInHours" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-data-retention-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-data-retention-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-data-retention-input
                    'make-update-data-retention-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-retention-change-in-hours))
      (common-lisp:list
       (common-lisp:cons "DataRetentionChangeInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-input))
   common-lisp:nil))
(common-lisp:deftype update-data-retention-operation () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass update-data-retention-output common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-data-retention-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-data-retention-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-data-retention-output
                    'make-update-data-retention-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-retention-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-image-generation-configuration-input
                       common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-update-image-generation-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-image-generation-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (image-generation-configuration :initarg
                         :image-generation-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or image-generation-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-image-generation-configuration-input-image-generation-configuration
                         :shape "ImageGenerationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-image-generation-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-image-generation-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-image-generation-configuration-input
                    'make-update-image-generation-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-generation-configuration))
      (common-lisp:list
       (common-lisp:cons "ImageGenerationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-image-generation-configuration-output
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-image-generation-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-image-generation-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-image-generation-configuration-output
                    'make-update-image-generation-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-image-generation-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-media-storage-configuration-input common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-media-storage-configuration-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-storage-configuration :initarg
                         :media-storage-configuration :initform
                         (common-lisp:error
                          ":media-storage-configuration is required")
                         :type
                         (common-lisp:or media-storage-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-media-storage-configuration-input-media-storage-configuration
                         :shape "MediaStorageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-media-storage-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-media-storage-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-media-storage-configuration-input
                    'make-update-media-storage-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'media-storage-configuration))
      (common-lisp:list
       (common-lisp:cons "MediaStorageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-media-storage-configuration-output
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-media-storage-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-media-storage-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-media-storage-configuration-output
                    'make-update-media-storage-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-media-storage-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-notification-configuration-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor
                         struct-shape-update-notification-configuration-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-notification-configuration-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-configuration :initarg
                         :notification-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-notification-configuration-input-notification-configuration
                         :shape "NotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-notification-configuration-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-notification-configuration-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-notification-configuration-input
                    'make-update-notification-configuration-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-configuration))
      (common-lisp:list
       (common-lisp:cons "NotificationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-notification-configuration-output common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-notification-configuration-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-notification-configuration-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-notification-configuration-output
                    'make-update-notification-configuration-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-notification-configuration-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-signaling-channel-input common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-signaling-channel-input-channel-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-version :initarg :current-version :initform
                         (common-lisp:error ":current-version is required")
                         :type (common-lisp:or version common-lisp:null)
                         :accessor
                         struct-shape-update-signaling-channel-input-current-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (single-master-configuration :initarg
                         :single-master-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or single-master-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-signaling-channel-input-single-master-configuration
                         :shape "SingleMasterConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-signaling-channel-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-signaling-channel-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-signaling-channel-input
                    'make-update-signaling-channel-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'single-master-configuration))
      (common-lisp:list
       (common-lisp:cons "SingleMasterConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-signaling-channel-output common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-signaling-channel-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-signaling-channel-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-signaling-channel-output
                    'make-update-signaling-channel-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-signaling-channel-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stream-input common-lisp:nil
                       ((stream-name :initarg :stream-name :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-name common-lisp:null)
                         :accessor struct-shape-update-stream-input-stream-name
                         :shape "StreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stream-arn :initarg :stream-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-update-stream-input-stream-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-version :initarg :current-version :initform
                         (common-lisp:error ":current-version is required")
                         :type (common-lisp:or version common-lisp:null)
                         :accessor
                         struct-shape-update-stream-input-current-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-name :initarg :device-name :initform
                         common-lisp:nil :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor struct-shape-update-stream-input-device-name
                         :shape "DeviceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-type :initarg :media-type :initform
                         common-lisp:nil :type
                         (common-lisp:or media-type common-lisp:null) :accessor
                         struct-shape-update-stream-input-media-type :shape
                         "MediaType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stream-input 'make-update-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stream-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-name))
      (common-lisp:list
       (common-lisp:cons "StreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-arn))
      (common-lisp:list
       (common-lisp:cons "StreamARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-version))
      (common-lisp:list
       (common-lisp:cons "CurrentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-type))
      (common-lisp:list
       (common-lisp:cons "MediaType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stream-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stream-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stream-output 'make-update-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stream-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stream-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass uploader-config common-lisp:nil
                       ((schedule-config :initarg :schedule-config :initform
                         (common-lisp:error ":schedule-config is required")
                         :type
                         (common-lisp:or schedule-config common-lisp:null)
                         :accessor struct-shape-uploader-config-schedule-config
                         :shape "ScheduleConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-uploader-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'uploader-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'uploader-config 'make-uploader-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input uploader-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input uploader-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-config))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input uploader-config))
   common-lisp:nil))
(common-lisp:deftype uploader-status () 'common-lisp:string)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition version-mismatch-exception
     (kinesisvideo-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       version-mismatch-exception-message)))
 (common-lisp:export
  (common-lisp:list 'version-mismatch-exception
                    'version-mismatch-exception-message)))
(common-lisp:deftype width-pixels () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defun create-signaling-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name channel-type
                     single-master-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable channel-name channel-type
     single-master-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-signaling-channel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/createSignalingChannel"
                                                        "CreateSignalingChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-signaling-channel))
(common-lisp:progn
 (common-lisp:defun create-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-name stream-name media-type
                     kms-key-id data-retention-in-hours tags)
   (common-lisp:declare
    (common-lisp:ignorable device-name stream-name media-type kms-key-id
     data-retention-in-hours tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/createStream"
                                                        "CreateStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-stream))
(common-lisp:progn
 (common-lisp:defun delete-edge-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-edge-configuration-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteEdgeConfiguration"
                                                        "DeleteEdgeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-edge-configuration))
(common-lisp:progn
 (common-lisp:defun delete-signaling-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn current-version)
   (common-lisp:declare (common-lisp:ignorable channel-arn current-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-signaling-channel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/deleteSignalingChannel"
                                                        "DeleteSignalingChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-signaling-channel))
(common-lisp:progn
 (common-lisp:defun delete-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-arn current-version)
   (common-lisp:declare (common-lisp:ignorable stream-arn current-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/deleteStream"
                                                        "DeleteStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-stream))
(common-lisp:progn
 (common-lisp:defun describe-edge-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-edge-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeEdgeConfiguration"
                                                        "DescribeEdgeConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-edge-configuration))
(common-lisp:progn
 (common-lisp:defun describe-image-generation-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-image-generation-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeImageGenerationConfiguration"
                                                        "DescribeImageGenerationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-image-generation-configuration))
(common-lisp:progn
 (common-lisp:defun describe-mapped-resource-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-mapped-resource-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeMappedResourceConfiguration"
                                                        "DescribeMappedResourceConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-mapped-resource-configuration))
(common-lisp:progn
 (common-lisp:defun describe-media-storage-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name channel-arn)
   (common-lisp:declare (common-lisp:ignorable channel-name channel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-media-storage-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeMediaStorageConfiguration"
                                                        "DescribeMediaStorageConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-media-storage-configuration))
(common-lisp:progn
 (common-lisp:defun describe-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-notification-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeNotificationConfiguration"
                                                        "DescribeNotificationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-notification-configuration))
(common-lisp:progn
 (common-lisp:defun describe-signaling-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-name channel-arn)
   (common-lisp:declare (common-lisp:ignorable channel-name channel-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-signaling-channel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeSignalingChannel"
                                                        "DescribeSignalingChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-signaling-channel))
(common-lisp:progn
 (common-lisp:defun describe-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describeStream"
                                                        "DescribeStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-stream))
(common-lisp:progn
 (common-lisp:defun get-data-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn apiname)
   (common-lisp:declare (common-lisp:ignorable stream-name stream-arn apiname))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getDataEndpoint"
                                                        "GetDataEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-data-endpoint))
(common-lisp:progn
 (common-lisp:defun get-signaling-channel-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn
                     single-master-channel-endpoint-configuration)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn
     single-master-channel-endpoint-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-signaling-channel-endpoint-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/getSignalingChannelEndpoint"
                                                        "GetSignalingChannelEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-signaling-channel-endpoint))
(common-lisp:progn
 (common-lisp:defun list-edge-agent-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key hub-device-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable hub-device-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-edge-agent-configurations-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listEdgeAgentConfigurations"
                                                        "ListEdgeAgentConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-edge-agent-configurations))
(common-lisp:progn
 (common-lisp:defun list-signaling-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     channel-name-condition)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token channel-name-condition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-signaling-channels-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listSignalingChannels"
                                                        "ListSignalingChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-signaling-channels))
(common-lisp:progn
 (common-lisp:defun list-streams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     stream-name-condition)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token stream-name-condition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-streams-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/listStreams"
                                                        "ListStreams"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-streams))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token resource-arn)
   (common-lisp:declare (common-lisp:ignorable next-token resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/ListTagsForResource"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-tags-for-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token stream-arn stream-name)
   (common-lisp:declare
    (common-lisp:ignorable next-token stream-arn stream-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/listTagsForStream"
                                                        "ListTagsForStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-stream))
(common-lisp:progn
 (common-lisp:defun start-edge-configuration-update
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn edge-config)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn edge-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-edge-configuration-update-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/startEdgeConfigurationUpdate"
                                                        "StartEdgeConfigurationUpdate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-edge-configuration-update))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/TagResource"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun tag-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-arn stream-name tags)
   (common-lisp:declare (common-lisp:ignorable stream-arn stream-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/tagStream"
                                                        "TagStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-stream))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-key-list)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-key-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/UntagResource"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun untag-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-arn stream-name tag-key-list)
   (common-lisp:declare
    (common-lisp:ignorable stream-arn stream-name tag-key-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/untagStream"
                                                        "UntagStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-stream))
(common-lisp:progn
 (common-lisp:defun update-data-retention
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn current-version
                     operation data-retention-change-in-hours)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn current-version operation
     data-retention-change-in-hours))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-data-retention-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateDataRetention"
                                                        "UpdateDataRetention"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-data-retention))
(common-lisp:progn
 (common-lisp:defun update-image-generation-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn
                     image-generation-configuration)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn
     image-generation-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-image-generation-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateImageGenerationConfiguration"
                                                        "UpdateImageGenerationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-image-generation-configuration))
(common-lisp:progn
 (common-lisp:defun update-media-storage-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn media-storage-configuration)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn media-storage-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-media-storage-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateMediaStorageConfiguration"
                                                        "UpdateMediaStorageConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-media-storage-configuration))
(common-lisp:progn
 (common-lisp:defun update-notification-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn
                     notification-configuration)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn notification-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-notification-configuration-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateNotificationConfiguration"
                                                        "UpdateNotificationConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-notification-configuration))
(common-lisp:progn
 (common-lisp:defun update-signaling-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn current-version
                     single-master-configuration)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn current-version
     single-master-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-signaling-channel-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/updateSignalingChannel"
                                                        "UpdateSignalingChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-signaling-channel))
(common-lisp:progn
 (common-lisp:defun update-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key stream-name stream-arn current-version
                     device-name media-type)
   (common-lisp:declare
    (common-lisp:ignorable stream-name stream-arn current-version device-name
     media-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stream-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'kinesisvideo-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/updateStream"
                                                        "UpdateStream"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-stream))
