;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/chime-sdk-messaging/api (:use)
                             (:nicknames #:aws/chime-sdk-messaging)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chime-sdk-messaging/api)
(common-lisp:progn
 (common-lisp:define-condition chime-sdk-messaging-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chime-sdk-messaging-error))
(common-lisp:progn
 (common-lisp:defclass chime-sdk-messaging-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "chime-sdk-messaging"
                        :api-version "2021-05-15" :host-prefix
                        "messaging-chime" :signing-name "chime" :global-host
                        common-lisp:nil))
 (common-lisp:export 'chime-sdk-messaging-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("NotFoundException" . not-found-exception)
    ("ResourceLimitExceededException" . resource-limit-exceeded-exception)
    ("ServiceFailureException" . service-failure-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottledClientException" . throttled-client-exception)
    ("UnauthorizedClientException" . unauthorized-client-exception)))
(common-lisp:deftype allow-notifications () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass app-instance-user-membership-summary common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-membership-summary-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (read-marker-timestamp :initarg :read-marker-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-app-instance-user-membership-summary-read-marker-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-app-instance-user-membership-summary-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-app-instance-user-membership-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'app-instance-user-membership-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'app-instance-user-membership-summary
                    'make-app-instance-user-membership-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'read-marker-timestamp))
      (common-lisp:list
       (common-lisp:cons "ReadMarkerTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          app-instance-user-membership-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-channel-flow-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-associate-channel-flow-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-associate-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-associate-channel-flow-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-channel-flow-request
                    'make-associate-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-channel-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-channel-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       bad-request-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-code
                    'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass batch-channel-memberships common-lisp:nil
                       ((invited-by :initarg :invited-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-batch-channel-memberships-invited-by
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor struct-shape-batch-channel-memberships-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (members :initarg :members :initform common-lisp:nil
                         :type (common-lisp:or members common-lisp:null)
                         :accessor
                         struct-shape-batch-channel-memberships-members :shape
                         "Members" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-channel-memberships-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-batch-channel-memberships-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-channel-memberships
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'batch-channel-memberships
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-channel-memberships
                    'make-batch-channel-memberships))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-by))
      (common-lisp:list
       (common-lisp:cons "InvitedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'members))
      (common-lisp:list
       (common-lisp:cons "Members"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-channel-memberships))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-error common-lisp:nil
                       ((member-arn :initarg :member-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-error-code
                         :shape "ErrorCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-error-error-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-error
                    'make-batch-create-channel-membership-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype batch-create-channel-membership-errors ()
   '(trivial-types:proper-list batch-create-channel-membership-error))
 (common-lisp:defun make-batch-create-channel-membership-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            batch-create-channel-membership-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-request-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (member-arns :initarg :member-arns :initform
                         (common-lisp:error ":member-arns is required") :type
                         (common-lisp:or member-arns common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-request-member-arns
                         :shape "MemberArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-batch-create-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-request-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-request
                    'make-batch-create-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arns))
      (common-lisp:list
       (common-lisp:cons "MemberArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-create-channel-membership-response common-lisp:nil
                       ((batch-channel-memberships :initarg
                         :batch-channel-memberships :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-channel-memberships
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-response-batch-channel-memberships
                         :shape "BatchChannelMemberships" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or batch-create-channel-membership-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-create-channel-membership-response-errors
                         :shape "BatchCreateChannelMembershipErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-create-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-create-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-create-channel-membership-response
                    'make-batch-create-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'batch-channel-memberships))
      (common-lisp:list
       (common-lisp:cons "BatchChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "Errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-create-channel-membership-response))
   common-lisp:nil))
(common-lisp:deftype callback-id-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-channel-arn :shape "ChimeArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-channel-mode :shape
                         "ChannelMode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-channel-privacy :shape
                         "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-created-by :shape "Identity"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-message-timestamp :initarg
                         :last-message-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-channel-last-message-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-channel-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-flow-arn :initarg :channel-flow-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-channel-flow-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (elastic-channel-configuration :initarg
                         :elastic-channel-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or elastic-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-elastic-channel-configuration
                         :shape "ElasticChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor struct-shape-channel-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-message-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastMessageTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'elastic-channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ElasticChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-associated-with-flow-summary common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-associated-with-flow-summary-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-associated-with-flow-summary-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor
                         struct-shape-channel-associated-with-flow-summary-mode
                         :shape "ChannelMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor
                         struct-shape-channel-associated-with-flow-summary-privacy
                         :shape "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-channel-associated-with-flow-summary-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-associated-with-flow-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-associated-with-flow-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-associated-with-flow-summary
                    'make-channel-associated-with-flow-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-associated-with-flow-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-associated-with-flow-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-associated-with-flow-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-associated-with-flow-summary-list ()
   '(trivial-types:proper-list channel-associated-with-flow-summary))
 (common-lisp:defun make-channel-associated-with-flow-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-associated-with-flow-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-ban common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-ban-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-ban-channel-arn :shape "ChimeArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-ban-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-ban-created-by :shape "Identity"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-ban
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-ban
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-ban 'make-channel-ban))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-ban))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-ban))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-ban))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-ban-summary common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-ban-summary-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-ban-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-ban-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-ban-summary 'make-channel-ban-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-ban-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-ban-summary-list ()
   '(trivial-types:proper-list channel-ban-summary))
 (common-lisp:defun make-channel-ban-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-ban-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-flow common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-flow-channel-flow-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (processors :initarg :processors :initform
                         common-lisp:nil :type
                         (common-lisp:or processor-list common-lisp:null)
                         :accessor struct-shape-channel-flow-processors :shape
                         "ProcessorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-flow-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-flow-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-flow-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-flow
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-flow
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-flow 'make-channel-flow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-flow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-flow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'processors))
      (common-lisp:list
       (common-lisp:cons "Processors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-flow))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-flow-callback-request common-lisp:nil
                       ((callback-id :initarg :callback-id :initform
                         (common-lisp:error ":callback-id is required") :type
                         (common-lisp:or callback-id-type common-lisp:null)
                         :accessor
                         struct-shape-channel-flow-callback-request-callback-id
                         :shape "CallbackIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-flow-callback-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (delete-resource :initarg :delete-resource :initform
                         common-lisp:nil :type
                         (common-lisp:or non-nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-channel-flow-callback-request-delete-resource
                         :shape "NonNullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-message :initarg :channel-message :initform
                         (common-lisp:error ":channel-message is required")
                         :type
                         (common-lisp:or channel-message-callback
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-flow-callback-request-channel-message
                         :shape "ChannelMessageCallback" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-flow-callback-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-flow-callback-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-flow-callback-request
                    'make-channel-flow-callback-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'callback-id))
      (common-lisp:list
       (common-lisp:cons "CallbackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-resource))
      (common-lisp:list
       (common-lisp:cons "DeleteResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-message))
      (common-lisp:list
       (common-lisp:cons "ChannelMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-flow-callback-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-flow-callback-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (callback-id :initarg :callback-id :initform
                         common-lisp:nil :type
                         (common-lisp:or callback-id-type common-lisp:null)
                         :accessor
                         struct-shape-channel-flow-callback-response-callback-id
                         :shape "CallbackIdType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-flow-callback-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-flow-callback-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-flow-callback-response
                    'make-channel-flow-callback-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'callback-id))
      (common-lisp:list
       (common-lisp:cons "CallbackId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-flow-callback-response))
   common-lisp:nil))
(common-lisp:deftype channel-flow-execution-order () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass channel-flow-summary common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-flow-summary-channel-flow-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-flow-summary-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (processors :initarg :processors :initform
                         common-lisp:nil :type
                         (common-lisp:or processor-list common-lisp:null)
                         :accessor struct-shape-channel-flow-summary-processors
                         :shape "ProcessorList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-flow-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-flow-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-flow-summary 'make-channel-flow-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-flow-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-flow-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'processors))
      (common-lisp:list
       (common-lisp:cons "Processors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-flow-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-flow-summary-list ()
   '(trivial-types:proper-list channel-flow-summary))
 (common-lisp:defun make-channel-flow-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-flow-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype channel-member-arns ()
   '(trivial-types:proper-list chime-arn))
 (common-lisp:defun make-channel-member-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chime-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-membership common-lisp:nil
                       ((invited-by :initarg :invited-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-membership-invited-by :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor struct-shape-channel-membership-type :shape
                         "ChannelMembershipType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-membership-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-membership-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-membership-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-sub-channel-id :shape
                         "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-membership
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership 'make-channel-membership))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-membership))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-membership))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invited-by))
      (common-lisp:list
       (common-lisp:cons "InvitedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-membership))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-membership-for-app-instance-user-summary
                       common-lisp:nil
                       ((channel-summary :initarg :channel-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-summary common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-for-app-instance-user-summary-channel-summary
                         :shape "ChannelSummary" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (app-instance-user-membership-summary :initarg
                         :app-instance-user-membership-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or app-instance-user-membership-summary
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-for-app-instance-user-summary-app-instance-user-membership-summary
                         :shape "AppInstanceUserMembershipSummary" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership-for-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-membership-for-app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership-for-app-instance-user-summary
                    'make-channel-membership-for-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-summary))
      (common-lisp:list
       (common-lisp:cons "ChannelSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'app-instance-user-membership-summary))
      (common-lisp:list
       (common-lisp:cons "AppInstanceUserMembershipSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-for-app-instance-user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-membership-for-app-instance-user-summary-list ()
   '(trivial-types:proper-list
     channel-membership-for-app-instance-user-summary))
 (common-lisp:defun make-channel-membership-for-app-instance-user-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-membership-for-app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-membership-preferences common-lisp:nil
                       ((push-notifications :initarg :push-notifications
                         :initform common-lisp:nil :type
                         (common-lisp:or push-notification-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-preferences-push-notifications
                         :shape "PushNotificationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-membership-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership-preferences
                    'make-channel-membership-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push-notifications))
      (common-lisp:list
       (common-lisp:cons "PushNotifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-membership-summary common-lisp:nil
                       ((member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-channel-membership-summary-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-membership-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-membership-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-membership-summary
                    'make-channel-membership-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-membership-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-membership-summary-list ()
   '(trivial-types:proper-list channel-membership-summary))
 (common-lisp:defun make-channel-membership-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-membership-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-membership-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-message common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-message-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-channel-message-message-id :shape
                         "MessageId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or content common-lisp:null)
                         :accessor struct-shape-channel-message-content :shape
                         "Content" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-message-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor struct-shape-channel-message-type :shape
                         "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-created-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-edited-timestamp :initarg :last-edited-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-last-edited-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-message-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender :initarg :sender :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-message-sender :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (redacted :initarg :redacted :initform common-lisp:nil
                         :type
                         (common-lisp:or non-nullable-boolean common-lisp:null)
                         :accessor struct-shape-channel-message-redacted :shape
                         "NonNullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (persistence :initarg :persistence :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message-persistence-type
                                         common-lisp:null)
                         :accessor struct-shape-channel-message-persistence
                         :shape "ChannelMessagePersistenceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-message-status-structure
                                         common-lisp:null)
                         :accessor struct-shape-channel-message-status :shape
                         "ChannelMessageStatusStructure" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-message-message-attributes :shape
                         "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor struct-shape-channel-message-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor struct-shape-channel-message-content-type
                         :shape "ContentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target :initarg :target :initform common-lisp:nil
                         :type (common-lisp:or target-list common-lisp:null)
                         :accessor struct-shape-channel-message-target :shape
                         "TargetList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-message 'make-channel-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-edited-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastEditedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender))
      (common-lisp:list
       (common-lisp:cons "Sender"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redacted))
      (common-lisp:list
       (common-lisp:cons "Redacted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'persistence))
      (common-lisp:list
       (common-lisp:cons "Persistence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-message-callback common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-channel-message-callback-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-content common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-content :shape
                         "NonEmptyContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (push-notification :initarg :push-notification
                         :initform common-lisp:nil :type
                         (common-lisp:or push-notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-push-notification
                         :shape "PushNotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-message-attributes
                         :shape "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor
                         struct-shape-channel-message-callback-content-type
                         :shape "ContentType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message-callback
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-message-callback
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-message-callback 'make-channel-message-callback))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-callback))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-callback))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push-notification))
      (common-lisp:list
       (common-lisp:cons "PushNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-callback))
   common-lisp:nil))
(common-lisp:deftype channel-message-persistence-type () 'common-lisp:string)
(common-lisp:deftype channel-message-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-message-status-structure common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or channel-message-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-message-status-structure-value
                         :shape "ChannelMessageStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detail :initarg :detail :initform common-lisp:nil
                         :type (common-lisp:or status-detail common-lisp:null)
                         :accessor
                         struct-shape-channel-message-status-structure-detail
                         :shape "StatusDetail" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message-status-structure
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-message-status-structure
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-message-status-structure
                    'make-channel-message-status-structure))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-status-structure))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-status-structure))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detail))
      (common-lisp:list
       (common-lisp:cons "Detail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-status-structure))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-message-summary common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-channel-message-summary-message-id :shape
                         "MessageId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or content common-lisp:null)
                         :accessor struct-shape-channel-message-summary-content
                         :shape "Content" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor struct-shape-channel-message-summary-type
                         :shape "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-summary-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-last-updated-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-edited-timestamp :initarg :last-edited-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-message-summary-last-edited-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender :initarg :sender :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor struct-shape-channel-message-summary-sender
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (redacted :initarg :redacted :initform common-lisp:nil
                         :type
                         (common-lisp:or non-nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-redacted :shape
                         "NonNullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-message-status-structure
                                         common-lisp:null)
                         :accessor struct-shape-channel-message-summary-status
                         :shape "ChannelMessageStatusStructure" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-message-attributes
                         :shape "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor
                         struct-shape-channel-message-summary-content-type
                         :shape "ContentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target :initarg :target :initform common-lisp:nil
                         :type (common-lisp:or target-list common-lisp:null)
                         :accessor struct-shape-channel-message-summary-target
                         :shape "TargetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-message-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-message-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-message-summary 'make-channel-message-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-edited-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastEditedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender))
      (common-lisp:list
       (common-lisp:cons "Sender"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'redacted))
      (common-lisp:list
       (common-lisp:cons "Redacted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-message-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-message-summary-list ()
   '(trivial-types:proper-list channel-message-summary))
 (common-lisp:defun make-channel-message-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-message-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-message-type () 'common-lisp:string)
(common-lisp:deftype channel-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-moderated-by-app-instance-user-summary
                       common-lisp:nil
                       ((channel-summary :initarg :channel-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-summary common-lisp:null)
                         :accessor
                         struct-shape-channel-moderated-by-app-instance-user-summary-channel-summary
                         :shape "ChannelSummary" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderated-by-app-instance-user-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'channel-moderated-by-app-instance-user-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderated-by-app-instance-user-summary
                    'make-channel-moderated-by-app-instance-user-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-summary))
      (common-lisp:list
       (common-lisp:cons "ChannelSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderated-by-app-instance-user-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-moderated-by-app-instance-user-summary-list ()
   '(trivial-types:proper-list channel-moderated-by-app-instance-user-summary))
 (common-lisp:defun make-channel-moderated-by-app-instance-user-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-moderated-by-app-instance-user-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-moderator common-lisp:nil
                       ((moderator :initarg :moderator :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-moderator :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-moderator-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-timestamp :initarg :created-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-channel-moderator-created-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-by :initarg :created-by :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-created-by :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderator
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-moderator
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderator 'make-channel-moderator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-moderator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-moderator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moderator))
      (common-lisp:list
       (common-lisp:cons "Moderator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-timestamp))
      (common-lisp:list
       (common-lisp:cons "CreatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-by))
      (common-lisp:list
       (common-lisp:cons "CreatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-moderator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-moderator-arns ()
   '(trivial-types:proper-list chime-arn))
 (common-lisp:defun make-channel-moderator-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chime-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass channel-moderator-summary common-lisp:nil
                       ((moderator :initarg :moderator :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-channel-moderator-summary-moderator
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-moderator-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-moderator-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-moderator-summary
                    'make-channel-moderator-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moderator))
      (common-lisp:list
       (common-lisp:cons "Moderator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-moderator-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-moderator-summary-list ()
   '(trivial-types:proper-list channel-moderator-summary))
 (common-lisp:defun make-channel-moderator-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            channel-moderator-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype channel-privacy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channel-summary common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-channel-summary-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-channel-summary-channel-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-channel-summary-mode :shape
                         "ChannelMode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-channel-summary-privacy :shape
                         "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-channel-summary-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-message-timestamp :initarg
                         :last-message-timestamp :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-channel-summary-last-message-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-summary 'make-channel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-message-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastMessageTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype channel-summary-list ()
   '(trivial-types:proper-list channel-summary))
 (common-lisp:defun make-channel-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype chime-arn () 'common-lisp:string)
(common-lisp:deftype client-request-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       conflict-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-code
                    'conflict-exception-message)))
(common-lisp:deftype content () 'common-lisp:string)
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-ban-request
                    'make-create-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-ban-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-ban-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-create-channel-ban-response-member :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-ban-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-ban-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-ban-response
                    'make-create-channel-ban-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-ban-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-flow-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-channel-flow-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (processors :initarg :processors :initform
                         (common-lisp:error ":processors is required") :type
                         (common-lisp:or processor-list common-lisp:null)
                         :accessor
                         struct-shape-create-channel-flow-request-processors
                         :shape "ProcessorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-flow-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-channel-flow-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-channel-flow-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-flow-request
                    'make-create-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'processors))
      (common-lisp:list
       (common-lisp:cons "Processors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-flow-response common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-flow-response-channel-flow-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-flow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-flow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-flow-response
                    'make-create-channel-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-member-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-request-type
                         :shape "ChannelMembershipType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-request-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-membership-request
                    'make-create-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-membership-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-membership-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-response-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-create-channel-membership-response-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-membership-response
                    'make-create-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-moderator-request
                    'make-create-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-moderator-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelModeratorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-moderator-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-moderator :initarg :channel-moderator
                         :initform common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-create-channel-moderator-response-channel-moderator
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-moderator-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-channel-moderator-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-moderator-response
                    'make-create-channel-moderator-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderator))
      (common-lisp:list
       (common-lisp:cons "ChannelModerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-moderator-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-app-instance-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-create-channel-request-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-create-channel-request-mode
                         :shape "ChannelMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-create-channel-request-privacy
                         :shape "ChannelPrivacy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-create-channel-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-channel-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-id common-lisp:null) :accessor
                         struct-shape-create-channel-request-channel-id :shape
                         "ChannelId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (member-arns :initarg :member-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-member-arns common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-member-arns :shape
                         "ChannelMemberArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (moderator-arns :initarg :moderator-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-moderator-arns
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-moderator-arns
                         :shape "ChannelModeratorArns" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (elastic-channel-configuration :initarg
                         :elastic-channel-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or elastic-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-elastic-channel-configuration
                         :shape "ElasticChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-create-channel-request-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-instance-arn))
      (common-lisp:list
       (common-lisp:cons "AppInstanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'privacy))
      (common-lisp:list
       (common-lisp:cons "Privacy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arns))
      (common-lisp:list
       (common-lisp:cons "MemberArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'moderator-arns))
      (common-lisp:list
       (common-lisp:cons "ModeratorArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'elastic-channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ElasticChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-create-channel-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-ban-request
                    'make-delete-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-flow-request common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelFlowArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-flow-request
                    'make-delete-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-membership-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-membership-request
                    'make-delete-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-message-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-message-request
                    'make-delete-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelModeratorArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-moderator-request
                    'make-delete-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-request-channel-arn :shape
                         "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-delete-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-messaging-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-messaging-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-messaging-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-messaging-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-messaging-streaming-configurations-request
                    'make-delete-messaging-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-messaging-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-messaging-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-messaging-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-ban-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-ban-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-ban-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-ban-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-ban-request
                    'make-describe-channel-ban-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-ban-response common-lisp:nil
                       ((channel-ban :initarg :channel-ban :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-ban common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-ban-response-channel-ban
                         :shape "ChannelBan" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-ban-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-ban-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-ban-response
                    'make-describe-channel-ban-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-ban))
      (common-lisp:list
       (common-lisp:cons "ChannelBan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-ban-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-flow-request common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelFlowArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-flow-request
                    'make-describe-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-flow-response common-lisp:nil
                       ((channel-flow :initarg :channel-flow :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-flow common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-flow-response-channel-flow
                         :shape "ChannelFlow" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-flow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-flow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-flow-response
                    'make-describe-channel-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow))
      (common-lisp:list
       (common-lisp:cons "ChannelFlow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-channel-membership-for-app-instance-user-request common-lisp:nil
  ((channel-arn :initarg :channel-arn :initform
    (common-lisp:error ":channel-arn is required") :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-channel-arn
    :shape "ChimeArn" :location "uri" :location-name "channelArn")
   (app-instance-user-arn :initarg :app-instance-user-arn :initform
    (common-lisp:error ":app-instance-user-arn is required") :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-app-instance-user-arn
    :shape "ChimeArn" :location "querystring" :location-name
    "app-instance-user-arn")
   (chime-bearer :initarg :chime-bearer :initform
    (common-lisp:error ":chime-bearer is required") :type
    (common-lisp:or chime-arn common-lisp:null) :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-request-chime-bearer
    :shape "ChimeArn" :location "header" :location-name "x-amz-chime-bearer"))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-for-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-for-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-for-app-instance-user-request
                    'make-describe-channel-membership-for-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  describe-channel-membership-for-app-instance-user-response common-lisp:nil
  ((channel-membership :initarg :channel-membership :initform common-lisp:nil
    :type
    (common-lisp:or channel-membership-for-app-instance-user-summary
                    common-lisp:null)
    :accessor
    struct-shape-describe-channel-membership-for-app-instance-user-response-channel-membership
    :shape "ChannelMembershipForAppInstanceUserSummary" :location
    common-lisp:nil :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-for-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-for-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-for-app-instance-user-response
                    'make-describe-channel-membership-for-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-membership))
      (common-lisp:list
       (common-lisp:cons "ChannelMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-for-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-membership-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-membership-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-membership-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-request
                    'make-describe-channel-membership-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-membership-response common-lisp:nil
                       ((channel-membership :initarg :channel-membership
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-membership common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-membership-response-channel-membership
                         :shape "ChannelMembership" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-membership-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-membership-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-membership-response
                    'make-describe-channel-membership-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-membership))
      (common-lisp:list
       (common-lisp:cons "ChannelMembership"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-membership-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderated-by-app-instance-user-request
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (app-instance-user-arn :initarg :app-instance-user-arn
                         :initform
                         (common-lisp:error
                          ":app-instance-user-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderated-by-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderated-by-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderated-by-app-instance-user-request
                    'make-describe-channel-moderated-by-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderated-by-app-instance-user-response
                       common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          channel-moderated-by-app-instance-user-summary
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderated-by-app-instance-user-response-channel
                         :shape "ChannelModeratedByAppInstanceUserSummary"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderated-by-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderated-by-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderated-by-app-instance-user-response
                    'make-describe-channel-moderated-by-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderated-by-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderator-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderator-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-moderator-arn :initarg :channel-moderator-arn
                         :initform
                         (common-lisp:error
                          ":channel-moderator-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderator-request-channel-moderator-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelModeratorArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-moderator-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderator-request
                    'make-describe-channel-moderator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-moderator-response common-lisp:nil
                       ((channel-moderator :initarg :channel-moderator
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-moderator common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-moderator-response-channel-moderator
                         :shape "ChannelModerator" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-moderator-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-channel-moderator-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-moderator-response
                    'make-describe-channel-moderator-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderator))
      (common-lisp:list
       (common-lisp:cons "ChannelModerator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-moderator-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-describe-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-request 'make-describe-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-response common-lisp:nil
                       ((channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or channel common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-channel :shape
                         "Channel" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-response
                    'make-describe-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-channel-flow-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-disassociate-channel-flow-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-disassociate-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelFlowArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-disassociate-channel-flow-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-channel-flow-request
                    'make-disassociate-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-channel-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass elastic-channel-configuration common-lisp:nil
                       ((maximum-sub-channels :initarg :maximum-sub-channels
                         :initform
                         (common-lisp:error
                          ":maximum-sub-channels is required")
                         :type
                         (common-lisp:or maximum-sub-channels common-lisp:null)
                         :accessor
                         struct-shape-elastic-channel-configuration-maximum-sub-channels
                         :shape "MaximumSubChannels" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-memberships-per-sub-channel :initarg
                         :target-memberships-per-sub-channel :initform
                         (common-lisp:error
                          ":target-memberships-per-sub-channel is required")
                         :type
                         (common-lisp:or target-memberships-per-sub-channel
                                         common-lisp:null)
                         :accessor
                         struct-shape-elastic-channel-configuration-target-memberships-per-sub-channel
                         :shape "TargetMembershipsPerSubChannel" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (minimum-membership-percentage :initarg
                         :minimum-membership-percentage :initform
                         (common-lisp:error
                          ":minimum-membership-percentage is required")
                         :type
                         (common-lisp:or minimum-membership-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-elastic-channel-configuration-minimum-membership-percentage
                         :shape "MinimumMembershipPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-elastic-channel-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'elastic-channel-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'elastic-channel-configuration
                    'make-elastic-channel-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          elastic-channel-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          elastic-channel-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'maximum-sub-channels))
      (common-lisp:list
       (common-lisp:cons "MaximumSubChannels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-memberships-per-sub-channel))
      (common-lisp:list
       (common-lisp:cons "TargetMembershipsPerSubChannel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-membership-percentage))
      (common-lisp:list
       (common-lisp:cons "MinimumMembershipPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          elastic-channel-configuration))
   common-lisp:nil))
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype expiration-criterion () 'common-lisp:string)
(common-lisp:deftype expiration-days () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass expiration-settings common-lisp:nil
                       ((expiration-days :initarg :expiration-days :initform
                         (common-lisp:error ":expiration-days is required")
                         :type
                         (common-lisp:or expiration-days common-lisp:null)
                         :accessor
                         struct-shape-expiration-settings-expiration-days
                         :shape "ExpirationDays" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-criterion :initarg :expiration-criterion
                         :initform
                         (common-lisp:error
                          ":expiration-criterion is required")
                         :type
                         (common-lisp:or expiration-criterion common-lisp:null)
                         :accessor
                         struct-shape-expiration-settings-expiration-criterion
                         :shape "ExpirationCriterion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-expiration-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'expiration-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'expiration-settings 'make-expiration-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input expiration-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input expiration-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-days))
      (common-lisp:list
       (common-lisp:cons "ExpirationDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'expiration-criterion))
      (common-lisp:list
       (common-lisp:cons "ExpirationCriterion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input expiration-settings))
   common-lisp:nil))
(common-lisp:deftype fallback-action () 'common-lisp:string)
(common-lisp:deftype filter-rule () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       forbidden-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-code
                    'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-channel-membership-preferences-request
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-membership-preferences-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-membership-preferences-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-membership-preferences-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-membership-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-channel-membership-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-membership-preferences-request
                    'make-get-channel-membership-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-membership-preferences-response
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-membership-preferences-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-get-channel-membership-preferences-response-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (preferences :initarg :preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-membership-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-channel-membership-preferences-response-preferences
                         :shape "ChannelMembershipPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-membership-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-channel-membership-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-membership-preferences-response
                    'make-get-channel-membership-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferences))
      (common-lisp:list
       (common-lisp:cons "Preferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-membership-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-get-channel-message-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-request
                    'make-get-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-response common-lisp:nil
                       ((channel-message :initarg :channel-message :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message common-lisp:null)
                         :accessor
                         struct-shape-get-channel-message-response-channel-message
                         :shape "ChannelMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-response
                    'make-get-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-message))
      (common-lisp:list
       (common-lisp:cons "ChannelMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-status-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-status-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-get-channel-message-status-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-get-channel-message-status-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-get-channel-message-status-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-channel-message-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-status-request
                    'make-get-channel-message-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channel-message-status-response common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-message-status-structure
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-channel-message-status-response-status
                         :shape "ChannelMessageStatusStructure" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channel-message-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-channel-message-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channel-message-status-response
                    'make-get-channel-message-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channel-message-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-session-endpoint-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-session-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-session-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-session-endpoint-request
                    'make-get-messaging-session-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-session-endpoint-response common-lisp:nil
                       ((endpoint :initarg :endpoint :initform common-lisp:nil
                         :type
                         (common-lisp:or messaging-session-endpoint
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-messaging-session-endpoint-response-endpoint
                         :shape "MessagingSessionEndpoint" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-session-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-session-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-session-endpoint-response
                    'make-get-messaging-session-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-session-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-get-messaging-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-streaming-configurations-request
                    'make-get-messaging-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-messaging-streaming-configurations-response
                       common-lisp:nil
                       ((streaming-configurations :initarg
                         :streaming-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-messaging-streaming-configurations-response-streaming-configurations
                         :shape "StreamingConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-messaging-streaming-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-messaging-streaming-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-messaging-streaming-configurations-response
                    'make-get-messaging-streaming-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "StreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-messaging-streaming-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass identity common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-identity-arn :shape "ChimeArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-identity-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'identity 'make-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity))
   common-lisp:nil))
(common-lisp:deftype invocation-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-configuration common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or lambda-function-arn common-lisp:null)
                         :accessor
                         struct-shape-lambda-configuration-resource-arn :shape
                         "LambdaFunctionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invocation-type :initarg :invocation-type :initform
                         (common-lisp:error ":invocation-type is required")
                         :type
                         (common-lisp:or invocation-type common-lisp:null)
                         :accessor
                         struct-shape-lambda-configuration-invocation-type
                         :shape "InvocationType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-configuration 'make-lambda-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invocation-type))
      (common-lisp:list
       (common-lisp:cons "InvocationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-configuration))
   common-lisp:nil))
(common-lisp:deftype lambda-function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-channel-bans-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-bans-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-bans-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-bans-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-bans-request
                    'make-list-channel-bans-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-bans-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-bans-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-bans-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-bans :initarg :channel-bans :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-ban-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-bans-response-channel-bans
                         :shape "ChannelBanSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-bans-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-bans-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-bans-response
                    'make-list-channel-bans-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-bans))
      (common-lisp:list
       (common-lisp:cons "ChannelBans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-bans-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-flows-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-channel-flows-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-flows-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-flows-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-flows-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-flows-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-flows-request
                    'make-list-channel-flows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-flows-response common-lisp:nil
                       ((channel-flows :initarg :channel-flows :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-flow-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-flows-response-channel-flows
                         :shape "ChannelFlowSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-flows-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-flows-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channel-flows-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-flows-response
                    'make-list-channel-flows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flows))
      (common-lisp:list
       (common-lisp:cons "ChannelFlows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-flows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-for-app-instance-user-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-for-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-for-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-for-app-instance-user-request
                    'make-list-channel-memberships-for-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-for-app-instance-user-response
                       common-lisp:nil
                       ((channel-memberships :initarg :channel-memberships
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          channel-membership-for-app-instance-user-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-response-channel-memberships
                         :shape
                         "ChannelMembershipForAppInstanceUserSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-for-app-instance-user-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-for-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-for-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-for-app-instance-user-response
                    'make-list-channel-memberships-for-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-memberships))
      (common-lisp:list
       (common-lisp:cons "ChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-for-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-request-type
                         :shape "ChannelMembershipType" :location "querystring"
                         :location-name "type")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-request
                    'make-list-channel-memberships-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-memberships-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-memberships :initarg :channel-memberships
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-membership-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-memberships-response-channel-memberships
                         :shape "ChannelMembershipSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-memberships-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-memberships-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-memberships-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-memberships-response
                    'make-list-channel-memberships-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-memberships))
      (common-lisp:list
       (common-lisp:cons "ChannelMemberships"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-memberships-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-messages-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (sort-order :initarg :sort-order :initform
                         common-lisp:nil :type
                         (common-lisp:or sort-order common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-sort-order
                         :shape "SortOrder" :location "querystring"
                         :location-name "sort-order")
                        (not-before :initarg :not-before :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-not-before
                         :shape "Timestamp" :location "querystring"
                         :location-name "not-before")
                        (not-after :initarg :not-after :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-not-after
                         :shape "Timestamp" :location "querystring"
                         :location-name "not-after")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-request-sub-channel-id
                         :shape "SubChannelId" :location "querystring"
                         :location-name "sub-channel-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-messages-request
                    'make-list-channel-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-messages-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-messages-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-messages-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-messages :initarg :channel-messages :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-message-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-response-channel-messages
                         :shape "ChannelMessageSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-list-channel-messages-response-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-messages-response
                    'make-list-channel-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-messages))
      (common-lisp:list
       (common-lisp:cons "ChannelMessages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-messages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-moderators-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channel-moderators-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-moderators-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-moderators-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-moderators-request
                    'make-list-channel-moderators-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channel-moderators-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channel-moderators-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-moderators :initarg :channel-moderators
                         :initform common-lisp:nil :type
                         (common-lisp:or channel-moderator-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-channel-moderators-response-channel-moderators
                         :shape "ChannelModeratorSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channel-moderators-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channel-moderators-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channel-moderators-response
                    'make-list-channel-moderators-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-moderators))
      (common-lisp:list
       (common-lisp:cons "ChannelModerators"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channel-moderators-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-associated-with-channel-flow-request
                       common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-channels-associated-with-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "channel-flow-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-associated-with-channel-flow-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-associated-with-channel-flow-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-associated-with-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-associated-with-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-associated-with-channel-flow-request
                    'make-list-channels-associated-with-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-associated-with-channel-flow-response
                       common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          channel-associated-with-flow-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channels-associated-with-channel-flow-response-channels
                         :shape "ChannelAssociatedWithFlowSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-associated-with-channel-flow-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-associated-with-channel-flow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-associated-with-channel-flow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-associated-with-channel-flow-response
                    'make-list-channels-associated-with-channel-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-associated-with-channel-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-moderated-by-app-instance-user-request
                       common-lisp:nil
                       ((app-instance-user-arn :initarg :app-instance-user-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-app-instance-user-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-user-arn")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-moderated-by-app-instance-user-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-moderated-by-app-instance-user-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-moderated-by-app-instance-user-request
                    'make-list-channels-moderated-by-app-instance-user-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-moderated-by-app-instance-user-response
                       common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          channel-moderated-by-app-instance-user-summary-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-response-channels
                         :shape "ChannelModeratedByAppInstanceUserSummaryList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-moderated-by-app-instance-user-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-moderated-by-app-instance-user-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-channels-moderated-by-app-instance-user-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-moderated-by-app-instance-user-response
                    'make-list-channels-moderated-by-app-instance-user-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-moderated-by-app-instance-user-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-app-instance-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "app-instance-arn")
                        (privacy :initarg :privacy :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-privacy common-lisp:null)
                         :accessor struct-shape-list-channels-request-privacy
                         :shape "ChannelPrivacy" :location "querystring"
                         :location-name "privacy")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "NextToken" :location "querystring" :location-name
                         "next-token")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-channels-request-chime-bearer :shape
                         "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-summary-list common-lisp:null)
                         :accessor struct-shape-list-channels-response-channels
                         :shape "ChannelSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sub-channels-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-sub-channels-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-sub-channels-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-sub-channels-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-sub-channels-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sub-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sub-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sub-channels-request
                    'make-list-sub-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-sub-channels-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-sub-channels-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channels :initarg :sub-channels :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-sub-channels-response-sub-channels
                         :shape "SubChannelSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-sub-channels-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-sub-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-sub-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-sub-channels-response
                    'make-list-sub-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channels))
      (common-lisp:list
       (common-lisp:cons "SubChannels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-sub-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "ChimeArn" :location "querystring"
                         :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype maximum-sub-channels () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype member-arns () '(trivial-types:proper-list chime-arn))
 (common-lisp:defun make-member-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chime-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype members () '(trivial-types:proper-list identity))
 (common-lisp:defun make-members
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity))
   aws-sdk/generator/shape::members))
(common-lisp:deftype membership-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype message-attribute-map () 'common-lisp:hash-table)
 (common-lisp:defun make-message-attribute-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype message-attribute-name () 'common-lisp:string)
(common-lisp:deftype message-attribute-string-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype message-attribute-string-values ()
   '(trivial-types:proper-list message-attribute-string-value))
 (common-lisp:defun make-message-attribute-string-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            message-attribute-string-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass message-attribute-value common-lisp:nil
                       ((string-values :initarg :string-values :initform
                         common-lisp:nil :type
                         (common-lisp:or message-attribute-string-values
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-attribute-value-string-values
                         :shape "MessageAttributeStringValues" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-attribute-value
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-attribute-value
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'message-attribute-value 'make-message-attribute-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-values))
      (common-lisp:list
       (common-lisp:cons "StringValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-attribute-value))
   common-lisp:nil))
(common-lisp:deftype message-id () 'common-lisp:string)
(common-lisp:deftype messaging-data-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass messaging-session-endpoint common-lisp:nil
                       ((url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or url-type common-lisp:null) :accessor
                         struct-shape-messaging-session-endpoint-url :shape
                         "UrlType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-messaging-session-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'messaging-session-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'messaging-session-endpoint
                    'make-messaging-session-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          messaging-session-endpoint))
   common-lisp:nil))
(common-lisp:deftype metadata () 'common-lisp:string)
(common-lisp:deftype minimum-membership-percentage () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-empty-content () 'common-lisp:string)
(common-lisp:deftype non-empty-resource-name () 'common-lisp:string)
(common-lisp:deftype non-nullable-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-code
                    'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass processor common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-processor-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration :initarg :configuration :initform
                         (common-lisp:error ":configuration is required") :type
                         (common-lisp:or processor-configuration
                                         common-lisp:null)
                         :accessor struct-shape-processor-configuration :shape
                         "ProcessorConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (execution-order :initarg :execution-order :initform
                         (common-lisp:error ":execution-order is required")
                         :type
                         (common-lisp:or channel-flow-execution-order
                                         common-lisp:null)
                         :accessor struct-shape-processor-execution-order
                         :shape "ChannelFlowExecutionOrder" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fallback-action :initarg :fallback-action :initform
                         (common-lisp:error ":fallback-action is required")
                         :type
                         (common-lisp:or fallback-action common-lisp:null)
                         :accessor struct-shape-processor-fallback-action
                         :shape "FallbackAction" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-processor
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'processor
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'processor 'make-processor))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input processor))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input processor))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "Configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-order))
      (common-lisp:list
       (common-lisp:cons "ExecutionOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fallback-action))
      (common-lisp:list
       (common-lisp:cons "FallbackAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input processor))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass processor-configuration common-lisp:nil
                       ((lambda :initarg :lambda :initform
                         (common-lisp:error ":lambda is required") :type
                         (common-lisp:or lambda-configuration common-lisp:null)
                         :accessor struct-shape-processor-configuration-lambda
                         :shape "LambdaConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-processor-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'processor-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'processor-configuration 'make-processor-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          processor-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          processor-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda))
      (common-lisp:list
       (common-lisp:cons "Lambda"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          processor-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype processor-list () '(trivial-types:proper-list processor))
 (common-lisp:defun make-processor-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list processor))
   aws-sdk/generator/shape::members))
(common-lisp:deftype push-notification-body () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass push-notification-configuration common-lisp:nil
                       ((title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or push-notification-title
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-configuration-title
                         :shape "PushNotificationTitle" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or push-notification-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-configuration-body
                         :shape "PushNotificationBody" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or push-notification-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-configuration-type
                         :shape "PushNotificationType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-push-notification-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'push-notification-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'push-notification-configuration
                    'make-push-notification-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass push-notification-preferences common-lisp:nil
                       ((allow-notifications :initarg :allow-notifications
                         :initform
                         (common-lisp:error ":allow-notifications is required")
                         :type
                         (common-lisp:or allow-notifications common-lisp:null)
                         :accessor
                         struct-shape-push-notification-preferences-allow-notifications
                         :shape "AllowNotifications" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-rule :initarg :filter-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-rule common-lisp:null)
                         :accessor
                         struct-shape-push-notification-preferences-filter-rule
                         :shape "FilterRule" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-push-notification-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'push-notification-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'push-notification-preferences
                    'make-push-notification-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allow-notifications))
      (common-lisp:list
       (common-lisp:cons "AllowNotifications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-rule))
      (common-lisp:list
       (common-lisp:cons "FilterRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-preferences))
   common-lisp:nil))
(common-lisp:deftype push-notification-title () 'common-lisp:string)
(common-lisp:deftype push-notification-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-channel-expiration-settings-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-expiration-settings-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-expiration-settings-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-put-channel-expiration-settings-request-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-expiration-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-channel-expiration-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-expiration-settings-request
                    'make-put-channel-expiration-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-expiration-settings-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-expiration-settings-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiration-settings :initarg :expiration-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or expiration-settings common-lisp:null)
                         :accessor
                         struct-shape-put-channel-expiration-settings-response-expiration-settings
                         :shape "ExpirationSettings" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-expiration-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-channel-expiration-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-expiration-settings-response
                    'make-put-channel-expiration-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-settings))
      (common-lisp:list
       (common-lisp:cons "ExpirationSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-expiration-settings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-membership-preferences-request
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-membership-preferences-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (member-arn :initarg :member-arn :initform
                         (common-lisp:error ":member-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-membership-preferences-request-member-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "memberArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-membership-preferences-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (preferences :initarg :preferences :initform
                         (common-lisp:error ":preferences is required") :type
                         (common-lisp:or channel-membership-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-channel-membership-preferences-request-preferences
                         :shape "ChannelMembershipPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-membership-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-channel-membership-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-membership-preferences-request
                    'make-put-channel-membership-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferences))
      (common-lisp:list
       (common-lisp:cons "Preferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-channel-membership-preferences-response
                       common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-put-channel-membership-preferences-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member :initarg :member :initform common-lisp:nil
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-put-channel-membership-preferences-response-member
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (preferences :initarg :preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-membership-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-channel-membership-preferences-response-preferences
                         :shape "ChannelMembershipPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-channel-membership-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-channel-membership-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-channel-membership-preferences-response
                    'make-put-channel-membership-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member))
      (common-lisp:list
       (common-lisp:cons "Member"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferences))
      (common-lisp:list
       (common-lisp:cons "Preferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-channel-membership-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-messaging-streaming-configurations-request
                       common-lisp:nil
                       ((app-instance-arn :initarg :app-instance-arn :initform
                         (common-lisp:error ":app-instance-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-put-messaging-streaming-configurations-request-app-instance-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "appInstanceArn")
                        (streaming-configurations :initarg
                         :streaming-configurations :initform
                         (common-lisp:error
                          ":streaming-configurations is required")
                         :type
                         (common-lisp:or streaming-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-messaging-streaming-configurations-request-streaming-configurations
                         :shape "StreamingConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-messaging-streaming-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-messaging-streaming-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-messaging-streaming-configurations-request
                    'make-put-messaging-streaming-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "StreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-messaging-streaming-configurations-response
                       common-lisp:nil
                       ((streaming-configurations :initarg
                         :streaming-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or streaming-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-messaging-streaming-configurations-response-streaming-configurations
                         :shape "StreamingConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-messaging-streaming-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-messaging-streaming-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-messaging-streaming-configurations-response
                    'make-put-messaging-streaming-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'streaming-configurations))
      (common-lisp:list
       (common-lisp:cons "StreamingConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-messaging-streaming-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-redact-channel-message-request-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-channel-message-request
                    'make-redact-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass redact-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-redact-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-redact-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-redact-channel-message-response-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-redact-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'redact-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'redact-channel-message-response
                    'make-redact-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          redact-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-limit-exceeded-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-limit-exceeded-exception
                    'resource-limit-exceeded-exception-code
                    'resource-limit-exceeded-exception-message)))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass search-channels-request common-lisp:nil
                       ((chime-bearer :initarg :chime-bearer :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-search-channels-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (fields :initarg :fields :initform
                         (common-lisp:error ":fields is required") :type
                         (common-lisp:or search-fields common-lisp:null)
                         :accessor struct-shape-search-channels-request-fields
                         :shape "SearchFields" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-search-channels-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "max-results")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-search-channels-request-next-token :shape
                         "NextToken" :location "querystring" :location-name
                         "next-token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-channels-request 'make-search-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields))
      (common-lisp:list
       (common-lisp:cons "Fields"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-channels-response common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-summary-list common-lisp:null)
                         :accessor
                         struct-shape-search-channels-response-channels :shape
                         "ChannelSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-search-channels-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'search-channels-response 'make-search-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          search-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass search-field common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or search-field-key common-lisp:null)
                         :accessor struct-shape-search-field-key :shape
                         "SearchFieldKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or search-field-values common-lisp:null)
                         :accessor struct-shape-search-field-values :shape
                         "SearchFieldValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operator :initarg :operator :initform
                         (common-lisp:error ":operator is required") :type
                         (common-lisp:or search-field-operator
                                         common-lisp:null)
                         :accessor struct-shape-search-field-operator :shape
                         "SearchFieldOperator" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-search-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'search-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'search-field 'make-search-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input search-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input search-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input search-field))
   common-lisp:nil))
(common-lisp:deftype search-field-key () 'common-lisp:string)
(common-lisp:deftype search-field-operator () 'common-lisp:string)
(common-lisp:deftype search-field-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype search-field-values ()
   '(trivial-types:proper-list search-field-value))
 (common-lisp:defun make-search-field-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list search-field-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype search-fields ()
   '(trivial-types:proper-list search-field))
 (common-lisp:defun make-search-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list search-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass send-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or non-empty-content common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-content
                         :shape "NonEmptyContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or channel-message-type common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-type :shape
                         "ChannelMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (persistence :initarg :persistence :initform
                         (common-lisp:error ":persistence is required") :type
                         (common-lisp:or channel-message-persistence-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-persistence
                         :shape "ChannelMessagePersistenceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-request-token :initarg :client-request-token
                         :initform
                         (common-lisp:error
                          ":client-request-token is required")
                         :type
                         (common-lisp:or client-request-token common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-client-request-token
                         :shape "ClientRequestToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (push-notification :initarg :push-notification
                         :initform common-lisp:nil :type
                         (common-lisp:or push-notification-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-push-notification
                         :shape "PushNotificationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-attributes :initarg :message-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or message-attribute-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-message-attributes
                         :shape "MessageAttributeMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-content-type
                         :shape "ContentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target :initarg :target :initform common-lisp:nil
                         :type (common-lisp:or target-list common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-request-target
                         :shape "TargetList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-channel-message-request
                    'make-send-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'persistence))
      (common-lisp:list
       (common-lisp:cons "Persistence"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-request-token))
      (common-lisp:list
       (common-lisp:cons "ClientRequestToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push-notification))
      (common-lisp:list
       (common-lisp:cons "PushNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-attributes))
      (common-lisp:list
       (common-lisp:cons "MessageAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target))
      (common-lisp:list
       (common-lisp:cons "Target"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-send-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-send-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-message-status-structure
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-response-status
                         :shape "ChannelMessageStatusStructure" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-send-channel-message-response-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'send-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-channel-message-response
                    'make-send-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-failure-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-failure-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-failure-exception 'service-failure-exception-code
                    'service-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       service-unavailable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-code
                    'service-unavailable-exception-message)))
(common-lisp:deftype sort-order () 'common-lisp:string)
(common-lisp:deftype status-detail () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass streaming-configuration common-lisp:nil
                       ((data-type :initarg :data-type :initform
                         (common-lisp:error ":data-type is required") :type
                         (common-lisp:or messaging-data-type common-lisp:null)
                         :accessor
                         struct-shape-streaming-configuration-data-type :shape
                         "MessagingDataType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-streaming-configuration-resource-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-streaming-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'streaming-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'streaming-configuration 'make-streaming-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-type))
      (common-lisp:list
       (common-lisp:cons "DataType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          streaming-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype streaming-configuration-list ()
   '(trivial-types:proper-list streaming-configuration))
 (common-lisp:defun make-streaming-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list streaming-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype sub-channel-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass sub-channel-summary common-lisp:nil
                       ((sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-sub-channel-summary-sub-channel-id :shape
                         "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (membership-count :initarg :membership-count :initform
                         common-lisp:nil :type
                         (common-lisp:or membership-count common-lisp:null)
                         :accessor
                         struct-shape-sub-channel-summary-membership-count
                         :shape "MembershipCount" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sub-channel-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sub-channel-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sub-channel-summary 'make-sub-channel-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sub-channel-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sub-channel-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'membership-count))
      (common-lisp:list
       (common-lisp:cons "MembershipCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sub-channel-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype sub-channel-summary-list ()
   '(trivial-types:proper-list sub-channel-summary))
 (common-lisp:defun make-sub-channel-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sub-channel-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "ChimeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass target common-lisp:nil
                       ((member-arn :initarg :member-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-target-member-arn :shape "ChimeArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-target
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'target
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'target 'make-target))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input target))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input target))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'member-arn))
      (common-lisp:list
       (common-lisp:cons "MemberArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input target))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype target-list () '(trivial-types:proper-list target))
 (common-lisp:defun make-target-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list target))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-memberships-per-sub-channel () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition throttled-client-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       throttled-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       throttled-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttled-client-exception
                    'throttled-client-exception-code
                    'throttled-client-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-client-exception
     (chime-sdk-messaging-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       unauthorized-client-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       unauthorized-client-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-client-exception
                    'unauthorized-client-exception-code
                    'unauthorized-client-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-flow-request common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         (common-lisp:error ":channel-flow-arn is required")
                         :type (common-lisp:or chime-arn common-lisp:null)
                         :accessor
                         struct-shape-update-channel-flow-request-channel-flow-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelFlowArn")
                        (processors :initarg :processors :initform
                         (common-lisp:error ":processors is required") :type
                         (common-lisp:or processor-list common-lisp:null)
                         :accessor
                         struct-shape-update-channel-flow-request-processors
                         :shape "ProcessorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-channel-flow-request-name :shape
                         "NonEmptyResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-flow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-flow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-flow-request
                    'make-update-channel-flow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'processors))
      (common-lisp:list
       (common-lisp:cons "Processors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-flow-response common-lisp:nil
                       ((channel-flow-arn :initarg :channel-flow-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-flow-response-channel-flow-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-flow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-flow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-flow-response
                    'make-update-channel-flow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-flow-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelFlowArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-flow-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-message-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (message-id :initarg :message-id :initform
                         (common-lisp:error ":message-id is required") :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-message-id
                         :shape "MessageId" :location "uri" :location-name
                         "messageId")
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or non-empty-content common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-content
                         :shape "NonEmptyContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer")
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-request-content-type
                         :shape "ContentType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-message-request
                    'make-update-channel-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "ContentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-message-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-message-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or message-id common-lisp:null) :accessor
                         struct-shape-update-channel-message-response-message-id
                         :shape "MessageId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or channel-message-status-structure
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-response-status
                         :shape "ChannelMessageStatusStructure" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sub-channel-id :initarg :sub-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or sub-channel-id common-lisp:null)
                         :accessor
                         struct-shape-update-channel-message-response-sub-channel-id
                         :shape "SubChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-message-response
                    'make-update-channel-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sub-channel-id))
      (common-lisp:list
       (common-lisp:cons "SubChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-read-marker-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-request-channel-arn
                         :shape "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-read-marker-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-read-marker-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-read-marker-request
                    'make-update-channel-read-marker-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-read-marker-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-read-marker-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-read-marker-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-channel-read-marker-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-read-marker-response
                    'make-update-channel-read-marker-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-read-marker-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         (common-lisp:error ":channel-arn is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-request-channel-arn :shape
                         "ChimeArn" :location "uri" :location-name
                         "channelArn")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or non-empty-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-update-channel-request-name
                         :shape "NonEmptyResourceName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or channel-mode common-lisp:null)
                         :accessor struct-shape-update-channel-request-mode
                         :shape "ChannelMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-update-channel-request-metadata
                         :shape "Metadata" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chime-bearer :initarg :chime-bearer :initform
                         (common-lisp:error ":chime-bearer is required") :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-request-chime-bearer
                         :shape "ChimeArn" :location "header" :location-name
                         "x-amz-chime-bearer"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chime-bearer))
      (common-lisp:cons "x-amz-chime-bearer" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "Metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((channel-arn :initarg :channel-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-arn common-lisp:null) :accessor
                         struct-shape-update-channel-response-channel-arn
                         :shape "ChimeArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-arn))
      (common-lisp:list
       (common-lisp:cons "ChannelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:deftype url-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-flow-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-flow-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-channel-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/channel-flow"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "AssociateChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-channel-flow))
(common-lisp:progn
 (common-lisp:defun batch-create-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn type member-arns chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn type member-arns chime-bearer
     sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-create-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/memberships?operation=batch-create"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "BatchCreateChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-create-channel-membership))
(common-lisp:progn
 (common-lisp:defun channel-flow-callback
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key callback-id channel-arn delete-resource
                     channel-message)
   (common-lisp:declare
    (common-lisp:ignorable callback-id channel-arn delete-resource
     channel-message))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-channel-flow-callback-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A?operation=channel-flow-callback"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ChannelFlowCallback"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'channel-flow-callback))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn name mode privacy
                     metadata client-request-token tags chime-bearer channel-id
                     member-arns moderator-arns elastic-channel-configuration
                     expiration-settings)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn name mode privacy metadata
     client-request-token tags chime-bearer channel-id member-arns
     moderator-arns elastic-channel-configuration expiration-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        "/channels" "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/bans"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "CreateChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-ban))
(common-lisp:progn
 (common-lisp:defun create-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn processors name tags
                     client-request-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn processors name tags
     client-request-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        "/channel-flows" "CreateChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-flow))
(common-lisp:progn
 (common-lisp:defun create-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn type chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn type chime-bearer
     sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/memberships"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "CreateChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-membership))
(common-lisp:progn
 (common-lisp:defun create-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-moderator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/moderators"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "CreateChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel-moderator))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/bans/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "DeleteChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-ban))
(common-lisp:progn
 (common-lisp:defun delete-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-flow-arn)
   (common-lisp:declare (common-lisp:ignorable channel-flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channel-flows/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-flow-arn))))
        "DeleteChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-flow))
(common-lisp:progn
 (common-lisp:defun delete-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/memberships/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "DeleteChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-membership))
(common-lisp:progn
 (common-lisp:defun delete-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/messages/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "DeleteChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-message))
(common-lisp:progn
 (common-lisp:defun delete-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-moderator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/moderators/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-moderator-arn))))
        "DeleteChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel-moderator))
(common-lisp:progn
 (common-lisp:defun delete-messaging-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-messaging-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instances/~A/streaming-configurations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "DeleteMessagingStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-messaging-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun describe-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "DescribeChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel))
(common-lisp:progn
 (common-lisp:defun describe-channel-ban
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-ban-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/bans/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "DescribeChannelBan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-ban))
(common-lisp:progn
 (common-lisp:defun describe-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-flow-arn)
   (common-lisp:declare (common-lisp:ignorable channel-flow-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channel-flows/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-flow-arn))))
        "DescribeChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-flow))
(common-lisp:progn
 (common-lisp:defun describe-channel-membership
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-membership-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/memberships/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "DescribeChannelMembership"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-membership))
(common-lisp:progn
 (common-lisp:defun describe-channel-membership-for-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn app-instance-user-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn app-instance-user-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-membership-for-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A?scope=app-instance-user-membership"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "DescribeChannelMembershipForAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-membership-for-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-channel-moderated-by-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn app-instance-user-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn app-instance-user-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-moderated-by-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A?scope=app-instance-user-moderated-channel"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "DescribeChannelModeratedByAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-moderated-by-app-instance-user))
(common-lisp:progn
 (common-lisp:defun describe-channel-moderator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-moderator-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-moderator-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-channel-moderator-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/moderators/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-moderator-arn))))
        "DescribeChannelModerator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel-moderator))
(common-lisp:progn
 (common-lisp:defun disassociate-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn channel-flow-arn
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn channel-flow-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-disassociate-channel-flow-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/channel-flow/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-flow-arn))))
        "DisassociateChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-channel-flow))
(common-lisp:progn
 (common-lisp:defun get-channel-membership-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-channel-membership-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/memberships/~A/preferences"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "GetChannelMembershipPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-membership-preferences))
(common-lisp:progn
 (common-lisp:defun get-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/messages/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "GetChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-message))
(common-lisp:progn
 (common-lisp:defun get-channel-message-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-channel-message-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/messages/~A?scope=message-status"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "GetChannelMessageStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channel-message-status))
(common-lisp:progn
 (common-lisp:defun get-messaging-session-endpoint ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chime-sdk-messaging-request :method "GET"
                                :path "/endpoints/messaging-session" :operation
                                "GetMessagingSessionEndpoint"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-messaging-session-endpoint))
(common-lisp:progn
 (common-lisp:defun get-messaging-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn)
   (common-lisp:declare (common-lisp:ignorable app-instance-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-messaging-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instances/~A/streaming-configurations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "GetMessagingStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-messaging-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun list-channel-bans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-bans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/bans"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ListChannelBans"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-bans))
(common-lisp:progn
 (common-lisp:defun list-channel-flows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-flows-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/channel-flows" "ListChannelFlows"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-flows))
(common-lisp:progn
 (common-lisp:defun list-channel-memberships
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn type max-results next-token
                     chime-bearer sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn type max-results next-token chime-bearer
     sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-memberships-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/memberships"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ListChannelMemberships"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-memberships))
(common-lisp:progn
 (common-lisp:defun list-channel-memberships-for-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-channel-memberships-for-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/channels?scope=app-instance-user-memberships"
        "ListChannelMembershipsForAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-memberships-for-app-instance-user))
(common-lisp:progn
 (common-lisp:defun list-channel-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn sort-order not-before
                     not-after max-results next-token chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn sort-order not-before not-after
     max-results next-token chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/messages"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ListChannelMessages"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-messages))
(common-lisp:progn
 (common-lisp:defun list-channel-moderators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn max-results next-token
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn max-results next-token chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channel-moderators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/moderators"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ListChannelModerators"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channel-moderators))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn privacy max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn privacy max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/channels" "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-channels-associated-with-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-flow-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-flow-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-channels-associated-with-channel-flow-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/channels?scope=channel-flow-associations"
        "ListChannelsAssociatedWithChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels-associated-with-channel-flow))
(common-lisp:progn
 (common-lisp:defun list-channels-moderated-by-app-instance-user
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-user-arn max-results
                     next-token chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-user-arn max-results next-token
     chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-channels-moderated-by-app-instance-user-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/channels?scope=app-instance-user-moderated-channels"
        "ListChannelsModeratedByAppInstanceUser"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels-moderated-by-app-instance-user))
(common-lisp:progn
 (common-lisp:defun list-sub-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn chime-bearer max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-sub-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/subchannels"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "ListSubChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-sub-channels))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "GET"
        "/tags" "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-channel-expiration-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer
                     expiration-settings)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn chime-bearer expiration-settings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-channel-expiration-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/expiration-settings"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "PutChannelExpirationSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-channel-expiration-settings))
(common-lisp:progn
 (common-lisp:defun put-channel-membership-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn member-arn chime-bearer
                     preferences)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn member-arn chime-bearer preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-channel-membership-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/memberships/~A/preferences"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'member-arn))))
        "PutChannelMembershipPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-channel-membership-preferences))
(common-lisp:progn
 (common-lisp:defun put-messaging-streaming-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key app-instance-arn
                     streaming-configurations)
   (common-lisp:declare
    (common-lisp:ignorable app-instance-arn streaming-configurations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-messaging-streaming-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/app-instances/~A/streaming-configurations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'app-instance-arn))))
        "PutMessagingStreamingConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-messaging-streaming-configurations))
(common-lisp:progn
 (common-lisp:defun redact-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id chime-bearer
                     sub-channel-id)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id chime-bearer sub-channel-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-redact-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/channels/~A/messages/~A?operation=redact"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "RedactChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'redact-channel-message))
(common-lisp:progn
 (common-lisp:defun search-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chime-bearer fields max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable chime-bearer fields max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-search-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        "/channels?operation=search" "SearchChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'search-channels))
(common-lisp:progn
 (common-lisp:defun send-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn content type persistence
                     metadata client-request-token chime-bearer
                     push-notification message-attributes sub-channel-id
                     content-type target)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn content type persistence metadata
     client-request-token chime-bearer push-notification message-attributes
     sub-channel-id content-type target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/messages"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "SendChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-channel-message))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=tag-resource" "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "POST"
        "/tags?operation=untag-resource" "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn name mode metadata
                     chime-bearer)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn name mode metadata chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-channel-flow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-flow-arn processors name)
   (common-lisp:declare
    (common-lisp:ignorable channel-flow-arn processors name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-flow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channel-flows/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-flow-arn))))
        "UpdateChannelFlow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-flow))
(common-lisp:progn
 (common-lisp:defun update-channel-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn message-id content metadata
                     chime-bearer sub-channel-id content-type)
   (common-lisp:declare
    (common-lisp:ignorable channel-arn message-id content metadata chime-bearer
     sub-channel-id content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/messages/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "UpdateChannelMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-message))
(common-lisp:progn
 (common-lisp:defun update-channel-read-marker
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-arn chime-bearer)
   (common-lisp:declare (common-lisp:ignorable channel-arn chime-bearer))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-channel-read-marker-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'chime-sdk-messaging-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/channels/~A/readMarker"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'channel-arn))))
        "UpdateChannelReadMarker"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel-read-marker))
