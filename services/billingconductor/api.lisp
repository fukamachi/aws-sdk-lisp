;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/billingconductor/api (:use)
                             (:nicknames #:aws/billingconductor)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/billingconductor/api)
(common-lisp:progn
 (common-lisp:define-condition billingconductor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'billingconductor-error))
(common-lisp:progn
 (common-lisp:defclass billingconductor-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "billingconductor"
                        :api-version "2021-07-30" :host-prefix
                        "billingconductor" :signing-name "billingconductor"
                        :global-host common-lisp:nil))
 (common-lisp:export 'billingconductor-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype awscost () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:deftype account-associations-list ()
   '(trivial-types:proper-list account-associations-list-element))
 (common-lisp:defun make-account-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-associations-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass account-associations-list-element common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-account-associations-list-element-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-group-arn :initarg :billing-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-account-associations-list-element-billing-group-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-name :initarg :account-name :initform
                         common-lisp:nil :type
                         (common-lisp:or account-name common-lisp:null)
                         :accessor
                         struct-shape-account-associations-list-element-account-name
                         :shape "AccountName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-email :initarg :account-email :initform
                         common-lisp:nil :type
                         (common-lisp:or account-email common-lisp:null)
                         :accessor
                         struct-shape-account-associations-list-element-account-email
                         :shape "AccountEmail" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-associations-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'account-associations-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-associations-list-element
                    'make-account-associations-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-name))
      (common-lisp:list
       (common-lisp:cons "AccountName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-email))
      (common-lisp:list
       (common-lisp:cons "AccountEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-associations-list-element))
   common-lisp:nil))
(common-lisp:deftype account-email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass account-grouping common-lisp:nil
                       ((linked-account-ids :initarg :linked-account-ids
                         :initform
                         (common-lisp:error ":linked-account-ids is required")
                         :type
                         (common-lisp:or account-id-list common-lisp:null)
                         :accessor
                         struct-shape-account-grouping-linked-account-ids
                         :shape "AccountIdList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-associate :initarg :auto-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-account-grouping-auto-associate :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-grouping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-grouping
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-grouping 'make-account-grouping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-grouping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-grouping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'linked-account-ids))
      (common-lisp:list
       (common-lisp:cons "LinkedAccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-associate))
      (common-lisp:list
       (common-lisp:cons "AutoAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-grouping))
   common-lisp:nil))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-id-filter-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun make-account-id-filter-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype account-id-list ()
   '(trivial-types:proper-list account-id))
 (common-lisp:defun make-account-id-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-name () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-accounts-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-associate-accounts-input-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         (common-lisp:error ":account-ids is required") :type
                         (common-lisp:or account-id-list common-lisp:null)
                         :accessor
                         struct-shape-associate-accounts-input-account-ids
                         :shape "AccountIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-accounts-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-accounts-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-accounts-input 'make-associate-accounts-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-accounts-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-associate-accounts-output-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-accounts-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-accounts-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-accounts-output
                    'make-associate-accounts-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-accounts-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-pricing-rules-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-associate-pricing-rules-input-arn :shape
                         "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rule-arns :initarg :pricing-rule-arns
                         :initform
                         (common-lisp:error ":pricing-rule-arns is required")
                         :type
                         (common-lisp:or pricing-rule-arns-non-empty-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-pricing-rules-input-pricing-rule-arns
                         :shape "PricingRuleArnsNonEmptyInput" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-pricing-rules-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-pricing-rules-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-pricing-rules-input
                    'make-associate-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-pricing-rules-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-associate-pricing-rules-output-arn :shape
                         "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-pricing-rules-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-pricing-rules-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-pricing-rules-output
                    'make-associate-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-resource-error common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-associate-resource-error-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (reason :initarg :reason :initform common-lisp:nil
                         :type
                         (common-lisp:or associate-resource-error-reason
                                         common-lisp:null)
                         :accessor struct-shape-associate-resource-error-reason
                         :shape "AssociateResourceErrorReason" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-resource-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-resource-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-resource-error 'make-associate-resource-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reason))
      (common-lisp:list
       (common-lisp:cons "Reason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-error))
   common-lisp:nil))
(common-lisp:deftype associate-resource-error-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass associate-resource-response-element common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-association-element
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-resource-response-element-arn
                         :shape "CustomLineItemAssociationElement" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error :initarg :error :initform common-lisp:nil :type
                         (common-lisp:or associate-resource-error
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-resource-response-element-error
                         :shape "AssociateResourceError" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-resource-response-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'associate-resource-response-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-resource-response-element
                    'make-associate-resource-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-resource-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype associate-resources-response-list ()
   '(trivial-types:proper-list associate-resource-response-element))
 (common-lisp:defun make-associate-resources-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            associate-resource-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype association () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attribute common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-attribute-key :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-attribute-value :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype attributes-list ()
   '(trivial-types:proper-list attribute))
 (common-lisp:defun make-attributes-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass batch-associate-resources-to-custom-line-item-input
                       common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-resources-to-custom-line-item-input-target-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arns :initarg :resource-arns :initform
                         (common-lisp:error ":resource-arns is required") :type
                         (common-lisp:or
                          custom-line-item-batch-associations-list
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-resources-to-custom-line-item-input-resource-arns
                         :shape "CustomLineItemBatchAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-billing-period-range
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-resources-to-custom-line-item-input-billing-period-range
                         :shape "CustomLineItemBillingPeriodRange" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-associate-resources-to-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-associate-resources-to-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-associate-resources-to-custom-line-item-input
                    'make-batch-associate-resources-to-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-associate-resources-to-custom-line-item-output
                       common-lisp:nil
                       ((successfully-associated-resources :initarg
                         :successfully-associated-resources :initform
                         common-lisp:nil :type
                         (common-lisp:or associate-resources-response-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-resources-to-custom-line-item-output-successfully-associated-resources
                         :shape "AssociateResourcesResponseList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (failed-associated-resources :initarg
                         :failed-associated-resources :initform common-lisp:nil
                         :type
                         (common-lisp:or associate-resources-response-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-associate-resources-to-custom-line-item-output-failed-associated-resources
                         :shape "AssociateResourcesResponseList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-associate-resources-to-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-associate-resources-to-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-associate-resources-to-custom-line-item-output
                    'make-batch-associate-resources-to-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successfully-associated-resources))
      (common-lisp:list
       (common-lisp:cons "SuccessfullyAssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-associated-resources))
      (common-lisp:list
       (common-lisp:cons "FailedAssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-associate-resources-to-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass batch-disassociate-resources-from-custom-line-item-input
                       common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-batch-disassociate-resources-from-custom-line-item-input-target-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-arns :initarg :resource-arns :initform
                         (common-lisp:error ":resource-arns is required") :type
                         (common-lisp:or
                          custom-line-item-batch-disassociations-list
                          common-lisp:null)
                         :accessor
                         struct-shape-batch-disassociate-resources-from-custom-line-item-input-resource-arns
                         :shape "CustomLineItemBatchDisassociationsList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-billing-period-range
                                         common-lisp:null)
                         :accessor
                         struct-shape-batch-disassociate-resources-from-custom-line-item-input-billing-period-range
                         :shape "CustomLineItemBillingPeriodRange" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-disassociate-resources-from-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-disassociate-resources-from-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-resources-from-custom-line-item-input
                    'make-batch-disassociate-resources-from-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "ResourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  batch-disassociate-resources-from-custom-line-item-output common-lisp:nil
  ((successfully-disassociated-resources :initarg
    :successfully-disassociated-resources :initform common-lisp:nil :type
    (common-lisp:or disassociate-resources-response-list common-lisp:null)
    :accessor
    struct-shape-batch-disassociate-resources-from-custom-line-item-output-successfully-disassociated-resources
    :shape "DisassociateResourcesResponseList" :location common-lisp:nil
    :location-name common-lisp:nil)
   (failed-disassociated-resources :initarg :failed-disassociated-resources
    :initform common-lisp:nil :type
    (common-lisp:or disassociate-resources-response-list common-lisp:null)
    :accessor
    struct-shape-batch-disassociate-resources-from-custom-line-item-output-failed-disassociated-resources
    :shape "DisassociateResourcesResponseList" :location common-lisp:nil
    :location-name common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-batch-disassociate-resources-from-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'batch-disassociate-resources-from-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'batch-disassociate-resources-from-custom-line-item-output
                    'make-batch-disassociate-resources-from-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successfully-disassociated-resources))
      (common-lisp:list
       (common-lisp:cons "SuccessfullyDisassociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failed-disassociated-resources))
      (common-lisp:list
       (common-lisp:cons "FailedDisassociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          batch-disassociate-resources-from-custom-line-item-output))
   common-lisp:nil))
(common-lisp:deftype billing-entity () 'common-lisp:string)
(common-lisp:deftype billing-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-arn-list ()
   '(trivial-types:proper-list billing-group-arn))
 (common-lisp:defun make-billing-group-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list billing-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass billing-group-cost-report-element common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (awscost :initarg :awscost :initform common-lisp:nil
                         :type (common-lisp:or awscost common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-awscost
                         :shape "AWSCost" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proforma-cost :initarg :proforma-cost :initform
                         common-lisp:nil :type
                         (common-lisp:or proforma-cost common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-proforma-cost
                         :shape "ProformaCost" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (margin :initarg :margin :initform common-lisp:nil
                         :type (common-lisp:or margin common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-margin
                         :shape "Margin" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (margin-percentage :initarg :margin-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or margin-percentage common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-margin-percentage
                         :shape "MarginPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-element-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-billing-group-cost-report-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'billing-group-cost-report-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'billing-group-cost-report-element
                    'make-billing-group-cost-report-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awscost))
      (common-lisp:list
       (common-lisp:cons "AWSCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proforma-cost))
      (common-lisp:list
       (common-lisp:cons "ProformaCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin))
      (common-lisp:list
       (common-lisp:cons "Margin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin-percentage))
      (common-lisp:list
       (common-lisp:cons "MarginPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "Currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype billing-group-cost-report-list ()
   '(trivial-types:proper-list billing-group-cost-report-element))
 (common-lisp:defun make-billing-group-cost-report-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            billing-group-cost-report-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass billing-group-cost-report-result-element common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (awscost :initarg :awscost :initform common-lisp:nil
                         :type (common-lisp:or awscost common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-awscost
                         :shape "AWSCost" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (proforma-cost :initarg :proforma-cost :initform
                         common-lisp:nil :type
                         (common-lisp:or proforma-cost common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-proforma-cost
                         :shape "ProformaCost" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (margin :initarg :margin :initform common-lisp:nil
                         :type (common-lisp:or margin common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-margin
                         :shape "Margin" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (margin-percentage :initarg :margin-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or margin-percentage common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-margin-percentage
                         :shape "MarginPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or attributes-list common-lisp:null)
                         :accessor
                         struct-shape-billing-group-cost-report-result-element-attributes
                         :shape "AttributesList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-billing-group-cost-report-result-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'billing-group-cost-report-result-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'billing-group-cost-report-result-element
                    'make-billing-group-cost-report-result-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-result-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-result-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'awscost))
      (common-lisp:list
       (common-lisp:cons "AWSCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'proforma-cost))
      (common-lisp:list
       (common-lisp:cons "ProformaCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin))
      (common-lisp:list
       (common-lisp:cons "Margin"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'margin-percentage))
      (common-lisp:list
       (common-lisp:cons "MarginPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "Currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-cost-report-result-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype billing-group-cost-report-results-list ()
   '(trivial-types:proper-list billing-group-cost-report-result-element))
 (common-lisp:defun make-billing-group-cost-report-results-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            billing-group-cost-report-result-element))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-group-description () 'common-lisp:string)
(common-lisp:deftype billing-group-full-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-list ()
   '(trivial-types:proper-list billing-group-list-element))
 (common-lisp:defun make-billing-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            billing-group-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass billing-group-list-element common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or billing-group-name common-lisp:null)
                         :accessor struct-shape-billing-group-list-element-name
                         :shape "BillingGroupName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-billing-group-list-element-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-billing-group-list-element-description
                         :shape "BillingGroupDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (primary-account-id :initarg :primary-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-billing-group-list-element-primary-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (computation-preference :initarg
                         :computation-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or computation-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-billing-group-list-element-computation-preference
                         :shape "ComputationPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or number-of-accounts common-lisp:null)
                         :accessor struct-shape-billing-group-list-element-size
                         :shape "NumberOfAccounts" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-billing-group-list-element-creation-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-billing-group-list-element-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or billing-group-status common-lisp:null)
                         :accessor
                         struct-shape-billing-group-list-element-status :shape
                         "BillingGroupStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-status-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-billing-group-list-element-status-reason
                         :shape "BillingGroupStatusReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-grouping :initarg :account-grouping :initform
                         common-lisp:nil :type
                         (common-lisp:or list-billing-group-account-grouping
                                         common-lisp:null)
                         :accessor
                         struct-shape-billing-group-list-element-account-grouping
                         :shape "ListBillingGroupAccountGrouping" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-billing-group-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'billing-group-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'billing-group-list-element
                    'make-billing-group-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-grouping))
      (common-lisp:list
       (common-lisp:cons "AccountGrouping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          billing-group-list-element))
   common-lisp:nil))
(common-lisp:deftype billing-group-name () 'common-lisp:string)
(common-lisp:deftype billing-group-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype billing-group-status-list ()
   '(trivial-types:proper-list billing-group-status))
 (common-lisp:defun make-billing-group-status-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list billing-group-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype billing-group-status-reason () 'common-lisp:string)
(common-lisp:deftype billing-period () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass billing-period-range common-lisp:nil
                       ((inclusive-start-billing-period :initarg
                         :inclusive-start-billing-period :initform
                         (common-lisp:error
                          ":inclusive-start-billing-period is required")
                         :type (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-billing-period-range-inclusive-start-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (exclusive-end-billing-period :initarg
                         :exclusive-end-billing-period :initform
                         (common-lisp:error
                          ":exclusive-end-billing-period is required")
                         :type (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-billing-period-range-exclusive-end-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-billing-period-range
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'billing-period-range
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'billing-period-range 'make-billing-period-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input billing-period-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input billing-period-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inclusive-start-billing-period))
      (common-lisp:list
       (common-lisp:cons "InclusiveStartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'exclusive-end-billing-period))
      (common-lisp:list
       (common-lisp:cons "ExclusiveEndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input billing-period-range))
   common-lisp:nil))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass computation-preference common-lisp:nil
                       ((pricing-plan-arn :initarg :pricing-plan-arn :initform
                         (common-lisp:error ":pricing-plan-arn is required")
                         :type
                         (common-lisp:or pricing-plan-full-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-computation-preference-pricing-plan-arn
                         :shape "PricingPlanFullArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-computation-preference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'computation-preference
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'computation-preference 'make-computation-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          computation-preference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)
      (reason :initarg :reason :initform common-lisp:nil :reader
       conflict-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type
                    'conflict-exception-reason)))
(common-lisp:deftype conflict-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-billing-group-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-billing-group-input-client-token
                         :shape "ClientToken" :location "header" :location-name
                         "X-Amzn-Client-Token")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or billing-group-name common-lisp:null)
                         :accessor struct-shape-create-billing-group-input-name
                         :shape "BillingGroupName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-grouping :initarg :account-grouping :initform
                         (common-lisp:error ":account-grouping is required")
                         :type
                         (common-lisp:or account-grouping common-lisp:null)
                         :accessor
                         struct-shape-create-billing-group-input-account-grouping
                         :shape "AccountGrouping" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (computation-preference :initarg
                         :computation-preference :initform
                         (common-lisp:error
                          ":computation-preference is required")
                         :type
                         (common-lisp:or computation-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-billing-group-input-computation-preference
                         :shape "ComputationPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (primary-account-id :initarg :primary-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-billing-group-input-primary-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-billing-group-input-description
                         :shape "BillingGroupDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-billing-group-input-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-billing-group-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-billing-group-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-billing-group-input
                    'make-create-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-grouping))
      (common-lisp:list
       (common-lisp:cons "AccountGrouping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-billing-group-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-create-billing-group-output-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-billing-group-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-billing-group-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-billing-group-output
                    'make-create-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-custom-line-item-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-client-token
                         :shape "ClientToken" :location "header" :location-name
                         "X-Amzn-Client-Token")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or custom-line-item-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-name :shape
                         "CustomLineItemName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         (common-lisp:error ":description is required") :type
                         (common-lisp:or custom-line-item-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-description
                         :shape "CustomLineItemDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-group-arn :initarg :billing-group-arn
                         :initform
                         (common-lisp:error ":billing-group-arn is required")
                         :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-billing-group-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-billing-period-range
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-billing-period-range
                         :shape "CustomLineItemBillingPeriodRange" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-custom-line-item-input-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (charge-details :initarg :charge-details :initform
                         (common-lisp:error ":charge-details is required")
                         :type
                         (common-lisp:or custom-line-item-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-input-charge-details
                         :shape "CustomLineItemChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-create-custom-line-item-input-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-custom-line-item-input
                    'make-create-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-custom-line-item-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-create-custom-line-item-output-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-custom-line-item-output
                    'make-create-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-free-tier-config common-lisp:nil
                       ((activated :initarg :activated :initform
                         (common-lisp:error ":activated is required") :type
                         (common-lisp:or tiering-activated common-lisp:null)
                         :accessor
                         struct-shape-create-free-tier-config-activated :shape
                         "TieringActivated" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-free-tier-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-free-tier-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-free-tier-config 'make-create-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-free-tier-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-pricing-plan-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-plan-input-client-token
                         :shape "ClientToken" :location "header" :location-name
                         "X-Amzn-Client-Token")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or pricing-plan-name common-lisp:null)
                         :accessor struct-shape-create-pricing-plan-input-name
                         :shape "PricingPlanName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-plan-input-description
                         :shape "PricingPlanDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (pricing-rule-arns :initarg :pricing-rule-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arns-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-plan-input-pricing-rule-arns
                         :shape "PricingRuleArnsInput" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-pricing-plan-input-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-pricing-plan-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-pricing-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-pricing-plan-input
                    'make-create-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-pricing-plan-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-create-pricing-plan-output-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-pricing-plan-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-pricing-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-pricing-plan-output
                    'make-create-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-pricing-rule-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-client-token
                         :shape "ClientToken" :location "header" :location-name
                         "X-Amzn-Client-Token")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or pricing-rule-name common-lisp:null)
                         :accessor struct-shape-create-pricing-rule-input-name
                         :shape "PricingRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-description
                         :shape "PricingRuleDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (scope :initarg :scope :initform
                         (common-lisp:error ":scope is required") :type
                         (common-lisp:or pricing-rule-scope common-lisp:null)
                         :accessor struct-shape-create-pricing-rule-input-scope
                         :shape "PricingRuleScope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or pricing-rule-type common-lisp:null)
                         :accessor struct-shape-create-pricing-rule-input-type
                         :shape "PricingRuleType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modifier-percentage :initarg :modifier-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or modifier-percentage common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-modifier-percentage
                         :shape "ModifierPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or service common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-service :shape
                         "Service" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-pricing-rule-input-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (billing-entity :initarg :billing-entity :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-entity common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-billing-entity
                         :shape "BillingEntity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tiering :initarg :tiering :initform common-lisp:nil
                         :type
                         (common-lisp:or create-tiering-input common-lisp:null)
                         :accessor
                         struct-shape-create-pricing-rule-input-tiering :shape
                         "CreateTieringInput" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (usage-type :initarg :usage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or usage-type common-lisp:null) :accessor
                         struct-shape-create-pricing-rule-input-usage-type
                         :shape "UsageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation :initarg :operation :initform
                         common-lisp:nil :type
                         (common-lisp:or operation common-lisp:null) :accessor
                         struct-shape-create-pricing-rule-input-operation
                         :shape "Operation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-pricing-rule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-pricing-rule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-pricing-rule-input
                    'make-create-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:cons "X-Amzn-Client-Token"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-pricing-rule-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-create-pricing-rule-output-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-pricing-rule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-pricing-rule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-pricing-rule-output
                    'make-create-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tiering-input common-lisp:nil
                       ((free-tier :initarg :free-tier :initform
                         (common-lisp:error ":free-tier is required") :type
                         (common-lisp:or create-free-tier-config
                                         common-lisp:null)
                         :accessor struct-shape-create-tiering-input-free-tier
                         :shape "CreateFreeTierConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tiering-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tiering-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tiering-input 'make-create-tiering-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tiering-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tiering-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tiering-input))
   common-lisp:nil))
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:deftype currency-code () 'common-lisp:string)
(common-lisp:deftype custom-line-item-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-arns ()
   '(trivial-types:proper-list custom-line-item-arn))
 (common-lisp:defun make-custom-line-item-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-line-item-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype custom-line-item-association-element ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-associations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun make-custom-line-item-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-batch-associations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun make-custom-line-item-batch-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-batch-disassociations-list ()
   '(trivial-types:proper-list custom-line-item-association-element))
 (common-lisp:defun make-custom-line-item-batch-disassociations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-association-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass custom-line-item-billing-period-range common-lisp:nil
                       ((inclusive-start-billing-period :initarg
                         :inclusive-start-billing-period :initform
                         (common-lisp:error
                          ":inclusive-start-billing-period is required")
                         :type (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-billing-period-range-inclusive-start-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (exclusive-end-billing-period :initarg
                         :exclusive-end-billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-billing-period-range-exclusive-end-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-billing-period-range
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-billing-period-range
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-billing-period-range
                    'make-custom-line-item-billing-period-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inclusive-start-billing-period))
      (common-lisp:list
       (common-lisp:cons "InclusiveStartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'exclusive-end-billing-period))
      (common-lisp:list
       (common-lisp:cons "ExclusiveEndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-billing-period-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass custom-line-item-charge-details common-lisp:nil
                       ((flat :initarg :flat :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-flat-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-charge-details-flat
                         :shape "CustomLineItemFlatChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (percentage :initarg :percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          custom-line-item-percentage-charge-details
                          common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-charge-details-percentage
                         :shape "CustomLineItemPercentageChargeDetails"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or custom-line-item-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-charge-details-type
                         :shape "CustomLineItemType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (line-item-filters :initarg :line-item-filters
                         :initform common-lisp:nil :type
                         (common-lisp:or line-item-filters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-charge-details-line-item-filters
                         :shape "LineItemFiltersList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-charge-details
                    'make-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'line-item-filters))
      (common-lisp:list
       (common-lisp:cons "LineItemFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-charge-value () 'common-lisp:double-float)
(common-lisp:deftype custom-line-item-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass custom-line-item-flat-charge-details common-lisp:nil
                       ((charge-value :initarg :charge-value :initform
                         (common-lisp:error ":charge-value is required") :type
                         (common-lisp:or custom-line-item-charge-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-flat-charge-details-charge-value
                         :shape "CustomLineItemChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-flat-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-flat-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-flat-charge-details
                    'make-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype custom-line-item-list ()
   '(trivial-types:proper-list custom-line-item-list-element))
 (common-lisp:defun make-custom-line-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass custom-line-item-list-element common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-name :shape
                         "CustomLineItemName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (charge-details :initarg :charge-details :initform
                         common-lisp:nil :type
                         (common-lisp:or list-custom-line-item-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-charge-details
                         :shape "ListCustomLineItemChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (currency-code :initarg :currency-code :initform
                         common-lisp:nil :type
                         (common-lisp:or currency-code common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-currency-code
                         :shape "CurrencyCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-description
                         :shape "CustomLineItemDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (product-code :initarg :product-code :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-product-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-product-code
                         :shape "CustomLineItemProductCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-group-arn :initarg :billing-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-billing-group-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-custom-line-item-list-element-creation-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-custom-line-item-list-element-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (association-size :initarg :association-size :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-associations
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-list-element-association-size
                         :shape "NumberOfAssociations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-custom-line-item-list-element-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-list-element
                    'make-custom-line-item-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "ProductCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-list-element))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-name-list ()
   '(trivial-types:proper-list custom-line-item-name))
 (common-lisp:defun make-custom-line-item-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list custom-line-item-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass custom-line-item-percentage-charge-details
                       common-lisp:nil
                       ((percentage-value :initarg :percentage-value :initform
                         (common-lisp:error ":percentage-value is required")
                         :type
                         (common-lisp:or
                          custom-line-item-percentage-charge-value
                          common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-percentage-charge-details-percentage-value
                         :shape "CustomLineItemPercentageChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (associated-values :initarg :associated-values
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-associations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-percentage-charge-details-associated-values
                         :shape "CustomLineItemAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-percentage-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-percentage-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-percentage-charge-details
                    'make-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'associated-values))
      (common-lisp:list
       (common-lisp:cons "AssociatedValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:deftype custom-line-item-percentage-charge-value ()
  'common-lisp:double-float)
(common-lisp:deftype custom-line-item-product-code () 'common-lisp:string)
(common-lisp:deftype custom-line-item-relationship () 'common-lisp:string)
(common-lisp:deftype custom-line-item-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype custom-line-item-version-list ()
   '(trivial-types:proper-list custom-line-item-version-list-element))
 (common-lisp:defun make-custom-line-item-version-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            custom-line-item-version-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass custom-line-item-version-list-element common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-name
                         :shape "CustomLineItemName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (charge-details :initarg :charge-details :initform
                         common-lisp:nil :type
                         (common-lisp:or list-custom-line-item-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-charge-details
                         :shape "ListCustomLineItemChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (currency-code :initarg :currency-code :initform
                         common-lisp:nil :type
                         (common-lisp:or currency-code common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-currency-code
                         :shape "CurrencyCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-description
                         :shape "CustomLineItemDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (product-code :initarg :product-code :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-product-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-product-code
                         :shape "CustomLineItemProductCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-group-arn :initarg :billing-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-billing-group-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-custom-line-item-version-list-element-creation-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-custom-line-item-version-list-element-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (association-size :initarg :association-size :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-associations
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-association-size
                         :shape "NumberOfAssociations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (start-billing-period :initarg :start-billing-period
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-start-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-billing-period :initarg :end-billing-period
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-end-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-custom-line-item-version-list-element-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-custom-line-item-version-list-element-start-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-custom-line-item-version-list-element-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-line-item-version-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-line-item-version-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-line-item-version-list-element
                    'make-custom-line-item-version-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency-code))
      (common-lisp:list
       (common-lisp:cons "CurrencyCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "ProductCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-billing-period))
      (common-lisp:list
       (common-lisp:cons "StartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-line-item-version-list-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-billing-group-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-delete-billing-group-input-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-billing-group-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-billing-group-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-billing-group-input
                    'make-delete-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-billing-group-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-delete-billing-group-output-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-billing-group-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-billing-group-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-billing-group-output
                    'make-delete-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-custom-line-item-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-custom-line-item-input-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-billing-period-range
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-custom-line-item-input-billing-period-range
                         :shape "CustomLineItemBillingPeriodRange" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-custom-line-item-input
                    'make-delete-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-custom-line-item-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-custom-line-item-output-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-custom-line-item-output
                    'make-delete-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-pricing-plan-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-delete-pricing-plan-input-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-pricing-plan-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-pricing-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-plan-input
                    'make-delete-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-pricing-plan-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-delete-pricing-plan-output-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-pricing-plan-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-pricing-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-plan-output
                    'make-delete-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-pricing-rule-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-delete-pricing-rule-input-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-pricing-rule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-pricing-rule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-rule-input
                    'make-delete-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-pricing-rule-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-delete-pricing-rule-output-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-pricing-rule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-pricing-rule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-pricing-rule-output
                    'make-delete-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-accounts-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-disassociate-accounts-input-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         (common-lisp:error ":account-ids is required") :type
                         (common-lisp:or account-id-list common-lisp:null)
                         :accessor
                         struct-shape-disassociate-accounts-input-account-ids
                         :shape "AccountIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-accounts-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disassociate-accounts-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-accounts-input
                    'make-disassociate-accounts-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-accounts-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-disassociate-accounts-output-arn :shape
                         "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-accounts-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disassociate-accounts-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-accounts-output
                    'make-disassociate-accounts-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-accounts-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-pricing-rules-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-disassociate-pricing-rules-input-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rule-arns :initarg :pricing-rule-arns
                         :initform
                         (common-lisp:error ":pricing-rule-arns is required")
                         :type
                         (common-lisp:or pricing-rule-arns-non-empty-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-pricing-rules-input-pricing-rule-arns
                         :shape "PricingRuleArnsNonEmptyInput" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-pricing-rules-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-pricing-rules-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-pricing-rules-input
                    'make-disassociate-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-pricing-rules-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-disassociate-pricing-rules-output-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-pricing-rules-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-pricing-rules-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-pricing-rules-output
                    'make-disassociate-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-resource-response-element common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-association-element
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-resource-response-element-arn
                         :shape "CustomLineItemAssociationElement" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (error :initarg :error :initform common-lisp:nil :type
                         (common-lisp:or associate-resource-error
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-resource-response-element-error
                         :shape "AssociateResourceError" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-resource-response-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-resource-response-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-resource-response-element
                    'make-disassociate-resource-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error))
      (common-lisp:list
       (common-lisp:cons "Error"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-resource-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype disassociate-resources-response-list ()
   '(trivial-types:proper-list disassociate-resource-response-element))
 (common-lisp:defun make-disassociate-resources-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            disassociate-resource-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass free-tier-config common-lisp:nil
                       ((activated :initarg :activated :initform
                         (common-lisp:error ":activated is required") :type
                         (common-lisp:or tiering-activated common-lisp:null)
                         :accessor struct-shape-free-tier-config-activated
                         :shape "TieringActivated" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-free-tier-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'free-tier-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'free-tier-config 'make-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input free-tier-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-billing-group-cost-report-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor
                         struct-shape-get-billing-group-cost-report-input-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-period-range common-lisp:null)
                         :accessor
                         struct-shape-get-billing-group-cost-report-input-billing-period-range
                         :shape "BillingPeriodRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group-by :initarg :group-by :initform common-lisp:nil
                         :type
                         (common-lisp:or group-by-attributes-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-billing-group-cost-report-input-group-by
                         :shape "GroupByAttributesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-billing-group-cost-report-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-billing-group-cost-report-input-max-results
                         :shape "MaxBillingGroupCostReportResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-get-billing-group-cost-report-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-billing-group-cost-report-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-billing-group-cost-report-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-billing-group-cost-report-input
                    'make-get-billing-group-cost-report-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-by))
      (common-lisp:list
       (common-lisp:cons "GroupBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-billing-group-cost-report-output common-lisp:nil
                       ((billing-group-cost-report-results :initarg
                         :billing-group-cost-report-results :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-cost-report-results-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-billing-group-cost-report-output-billing-group-cost-report-results
                         :shape "BillingGroupCostReportResultsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-get-billing-group-cost-report-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-billing-group-cost-report-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-billing-group-cost-report-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-billing-group-cost-report-output
                    'make-get-billing-group-cost-report-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-group-cost-report-results))
      (common-lisp:list
       (common-lisp:cons "BillingGroupCostReportResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-billing-group-cost-report-output))
   common-lisp:nil))
(common-lisp:deftype group-by-attribute-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype group-by-attributes-list ()
   '(trivial-types:proper-list group-by-attribute-name))
 (common-lisp:defun make-group-by-attributes-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-by-attribute-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype instant () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defclass line-item-filter common-lisp:nil
                       ((attribute :initarg :attribute :initform
                         (common-lisp:error ":attribute is required") :type
                         (common-lisp:or line-item-filter-attribute-name
                                         common-lisp:null)
                         :accessor struct-shape-line-item-filter-attribute
                         :shape "LineItemFilterAttributeName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (match-option :initarg :match-option :initform
                         (common-lisp:error ":match-option is required") :type
                         (common-lisp:or match-option common-lisp:null)
                         :accessor struct-shape-line-item-filter-match-option
                         :shape "MatchOption" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or line-item-filter-values-list
                                         common-lisp:null)
                         :accessor struct-shape-line-item-filter-values :shape
                         "LineItemFilterValuesList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-line-item-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'line-item-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'line-item-filter 'make-line-item-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input line-item-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input line-item-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute))
      (common-lisp:list
       (common-lisp:cons "Attribute"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'match-option))
      (common-lisp:list
       (common-lisp:cons "MatchOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input line-item-filter))
   common-lisp:nil))
(common-lisp:deftype line-item-filter-attribute-name () 'common-lisp:string)
(common-lisp:deftype line-item-filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype line-item-filter-values-list ()
   '(trivial-types:proper-list line-item-filter-value))
 (common-lisp:defun make-line-item-filter-values-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list line-item-filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype line-item-filters-list ()
   '(trivial-types:proper-list line-item-filter))
 (common-lisp:defun make-line-item-filters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list line-item-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-account-associations-filter common-lisp:nil
                       ((association :initarg :association :initform
                         common-lisp:nil :type
                         (common-lisp:or association common-lisp:null)
                         :accessor
                         struct-shape-list-account-associations-filter-association
                         :shape "Association" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-list-account-associations-filter-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id-filter-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-associations-filter-account-ids
                         :shape "AccountIdFilterList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-associations-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-associations-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-filter
                    'make-list-account-associations-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association))
      (common-lisp:list
       (common-lisp:cons "Association"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "AccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-associations-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-account-associations-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-account-associations-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-associations-input-filters
                         :shape "ListAccountAssociationsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-associations-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-associations-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-associations-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-input
                    'make-list-account-associations-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-account-associations-output common-lisp:nil
                       ((linked-accounts :initarg :linked-accounts :initform
                         common-lisp:nil :type
                         (common-lisp:or account-associations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-account-associations-output-linked-accounts
                         :shape "AccountAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-account-associations-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-account-associations-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-account-associations-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-account-associations-output
                    'make-list-account-associations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'linked-accounts))
      (common-lisp:list
       (common-lisp:cons "LinkedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-account-associations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-group-account-grouping common-lisp:nil
                       ((auto-associate :initarg :auto-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-list-billing-group-account-grouping-auto-associate
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-group-account-grouping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-billing-group-account-grouping
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-account-grouping
                    'make-list-billing-group-account-grouping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-account-grouping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-account-grouping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-associate))
      (common-lisp:list
       (common-lisp:cons "AutoAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-account-grouping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-group-cost-reports-filter common-lisp:nil
                       ((billing-group-arns :initarg :billing-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-group-cost-reports-filter-billing-group-arns
                         :shape "BillingGroupArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-group-cost-reports-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-billing-group-cost-reports-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-filter
                    'make-list-billing-group-cost-reports-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arns))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-group-cost-reports-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-billing-group-cost-reports-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-billing-group-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-group-cost-reports-input-max-results
                         :shape "MaxBillingGroupResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-billing-group-cost-reports-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-billing-group-cost-reports-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-group-cost-reports-input-filters
                         :shape "ListBillingGroupCostReportsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-group-cost-reports-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-billing-group-cost-reports-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-input
                    'make-list-billing-group-cost-reports-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-group-cost-reports-output common-lisp:nil
                       ((billing-group-cost-reports :initarg
                         :billing-group-cost-reports :initform common-lisp:nil
                         :type
                         (common-lisp:or billing-group-cost-report-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-group-cost-reports-output-billing-group-cost-reports
                         :shape "BillingGroupCostReportList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-billing-group-cost-reports-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-group-cost-reports-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-billing-group-cost-reports-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-group-cost-reports-output
                    'make-list-billing-group-cost-reports-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-group-cost-reports))
      (common-lisp:list
       (common-lisp:cons "BillingGroupCostReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-group-cost-reports-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-groups-filter common-lisp:nil
                       ((arns :initarg :arns :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn-list
                                         common-lisp:null)
                         :accessor struct-shape-list-billing-groups-filter-arns
                         :shape "BillingGroupArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plan :initarg :pricing-plan :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-full-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-filter-pricing-plan
                         :shape "PricingPlanFullArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (statuses :initarg :statuses :initform common-lisp:nil
                         :type
                         (common-lisp:or billing-group-status-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-filter-statuses
                         :shape "BillingGroupStatusList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (auto-associate :initarg :auto-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-list-billing-groups-filter-auto-associate
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-groups-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-billing-groups-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-filter
                    'make-list-billing-groups-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan))
      (common-lisp:list
       (common-lisp:cons "PricingPlan"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statuses))
      (common-lisp:list
       (common-lisp:cons "Statuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-associate))
      (common-lisp:list
       (common-lisp:cons "AutoAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-groups-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-billing-group-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-input-max-results
                         :shape "MaxBillingGroupResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-billing-groups-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-billing-groups-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-input-filters :shape
                         "ListBillingGroupsFilter" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-groups-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-billing-groups-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-input
                    'make-list-billing-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-billing-groups-output common-lisp:nil
                       ((billing-groups :initarg :billing-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-list common-lisp:null)
                         :accessor
                         struct-shape-list-billing-groups-output-billing-groups
                         :shape "BillingGroupList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-billing-groups-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-billing-groups-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-billing-groups-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-billing-groups-output
                    'make-list-billing-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-groups))
      (common-lisp:list
       (common-lisp:cons "BillingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-billing-groups-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-charge-details common-lisp:nil
                       ((flat :initarg :flat :initform common-lisp:nil :type
                         (common-lisp:or
                          list-custom-line-item-flat-charge-details
                          common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-charge-details-flat
                         :shape "ListCustomLineItemFlatChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (percentage :initarg :percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          list-custom-line-item-percentage-charge-details
                          common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-charge-details-percentage
                         :shape "ListCustomLineItemPercentageChargeDetails"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or custom-line-item-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-charge-details-type
                         :shape "CustomLineItemType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (line-item-filters :initarg :line-item-filters
                         :initform common-lisp:nil :type
                         (common-lisp:or line-item-filters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-charge-details-line-item-filters
                         :shape "LineItemFiltersList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-charge-details
                    'make-list-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'line-item-filters))
      (common-lisp:list
       (common-lisp:cons "LineItemFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-flat-charge-details
                       common-lisp:nil
                       ((charge-value :initarg :charge-value :initform
                         (common-lisp:error ":charge-value is required") :type
                         (common-lisp:or custom-line-item-charge-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-flat-charge-details-charge-value
                         :shape "CustomLineItemChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-flat-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-flat-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-flat-charge-details
                    'make-list-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-percentage-charge-details
                       common-lisp:nil
                       ((percentage-value :initarg :percentage-value :initform
                         (common-lisp:error ":percentage-value is required")
                         :type
                         (common-lisp:or
                          custom-line-item-percentage-charge-value
                          common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-percentage-charge-details-percentage-value
                         :shape "CustomLineItemPercentageChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-percentage-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-percentage-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-percentage-charge-details
                    'make-list-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  list-custom-line-item-versions-billing-period-range-filter common-lisp:nil
  ((start-billing-period :initarg :start-billing-period :initform
    common-lisp:nil :type (common-lisp:or billing-period common-lisp:null)
    :accessor
    struct-shape-list-custom-line-item-versions-billing-period-range-filter-start-billing-period
    :shape "BillingPeriod" :location common-lisp:nil :location-name
    common-lisp:nil)
   (end-billing-period :initarg :end-billing-period :initform common-lisp:nil
    :type (common-lisp:or billing-period common-lisp:null) :accessor
    struct-shape-list-custom-line-item-versions-billing-period-range-filter-end-billing-period
    :shape "BillingPeriod" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-versions-billing-period-range-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-versions-billing-period-range-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-billing-period-range-filter
                    'make-list-custom-line-item-versions-billing-period-range-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-billing-period))
      (common-lisp:list
       (common-lisp:cons "StartBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-billing-period-range-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-versions-filter common-lisp:nil
                       ((billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          list-custom-line-item-versions-billing-period-range-filter
                          common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-versions-filter-billing-period-range
                         :shape
                         "ListCustomLineItemVersionsBillingPeriodRangeFilter"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-versions-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-versions-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-filter
                    'make-list-custom-line-item-versions-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-versions-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-versions-input-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-custom-line-item-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-versions-input-max-results
                         :shape "MaxCustomLineItemResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-custom-line-item-versions-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-custom-line-item-versions-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-versions-input-filters
                         :shape "ListCustomLineItemVersionsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-versions-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-versions-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-input
                    'make-list-custom-line-item-versions-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-item-versions-output common-lisp:nil
                       ((custom-line-item-versions :initarg
                         :custom-line-item-versions :initform common-lisp:nil
                         :type
                         (common-lisp:or custom-line-item-version-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-item-versions-output-custom-line-item-versions
                         :shape "CustomLineItemVersionList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-custom-line-item-versions-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-item-versions-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-item-versions-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-item-versions-output
                    'make-list-custom-line-item-versions-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-line-item-versions))
      (common-lisp:list
       (common-lisp:cons "CustomLineItemVersions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-item-versions-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-items-filter common-lisp:nil
                       ((names :initarg :names :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-name-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-filter-names
                         :shape "CustomLineItemNameList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-groups :initarg :billing-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-filter-billing-groups
                         :shape "BillingGroupArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arns :initarg :arns :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arns
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-filter-arns :shape
                         "CustomLineItemArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id-list common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-filter-account-ids
                         :shape "AccountIdList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-items-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-items-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-filter
                    'make-list-custom-line-items-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'names))
      (common-lisp:list
       (common-lisp:cons "Names"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-groups))
      (common-lisp:list
       (common-lisp:cons "BillingGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "AccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-items-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-custom-line-item-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-input-max-results
                         :shape "MaxCustomLineItemResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-custom-line-items-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-custom-line-items-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-input-filters
                         :shape "ListCustomLineItemsFilter" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-items-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-custom-line-items-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-input
                    'make-list-custom-line-items-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-custom-line-items-output common-lisp:nil
                       ((custom-line-items :initarg :custom-line-items
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-custom-line-items-output-custom-line-items
                         :shape "CustomLineItemList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-custom-line-items-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-custom-line-items-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-custom-line-items-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-custom-line-items-output
                    'make-list-custom-line-items-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-line-items))
      (common-lisp:list
       (common-lisp:cons "CustomLineItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-custom-line-items-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-plans-associated-with-pricing-rule-input
                       common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rule-arn :initarg :pricing-rule-arn :initform
                         (common-lisp:error ":pricing-rule-arn is required")
                         :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-input-pricing-rule-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-pricing-rule-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-input-max-results
                         :shape "MaxPricingRuleResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-plans-associated-with-pricing-rule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pricing-plans-associated-with-pricing-rule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-associated-with-pricing-rule-input
                    'make-list-pricing-plans-associated-with-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arn))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-plans-associated-with-pricing-rule-output
                       common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-output-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rule-arn :initarg :pricing-rule-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-output-pricing-rule-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plan-arns :initarg :pricing-plan-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arns common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-output-pricing-plan-arns
                         :shape "PricingPlanArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-plans-associated-with-pricing-rule-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-plans-associated-with-pricing-rule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pricing-plans-associated-with-pricing-rule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-associated-with-pricing-rule-output
                    'make-list-pricing-plans-associated-with-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arn))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arns))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-associated-with-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-plans-filter common-lisp:nil
                       ((arns :initarg :arns :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arns common-lisp:null)
                         :accessor struct-shape-list-pricing-plans-filter-arns
                         :shape "PricingPlanArns" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-plans-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-plans-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-filter
                    'make-list-pricing-plans-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-plans-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-pricing-plans-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-input-filters :shape
                         "ListPricingPlansFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-pricing-plan-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-input-max-results
                         :shape "MaxPricingPlanResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-plans-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-plans-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-plans-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-input 'make-list-pricing-plans-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-plans-output common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-output-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plans :initarg :pricing-plans :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-list common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-plans-output-pricing-plans
                         :shape "PricingPlanList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-plans-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-plans-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-plans-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-plans-output
                    'make-list-pricing-plans-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plans))
      (common-lisp:list
       (common-lisp:cons "PricingPlans"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-plans-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-rules-associated-to-pricing-plan-input
                       common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plan-arn :initarg :pricing-plan-arn :initform
                         (common-lisp:error ":pricing-plan-arn is required")
                         :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-input-pricing-plan-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-pricing-plan-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-input-max-results
                         :shape "MaxPricingPlanResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-rules-associated-to-pricing-plan-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pricing-rules-associated-to-pricing-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-associated-to-pricing-plan-input
                    'make-list-pricing-rules-associated-to-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-rules-associated-to-pricing-plan-output
                       common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-output-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plan-arn :initarg :pricing-plan-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-output-pricing-plan-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rule-arns :initarg :pricing-rule-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arns common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-output-pricing-rule-arns
                         :shape "PricingRuleArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-rules-associated-to-pricing-plan-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-rules-associated-to-pricing-plan-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-pricing-rules-associated-to-pricing-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-associated-to-pricing-plan-output
                    'make-list-pricing-rules-associated-to-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rule-arns))
      (common-lisp:list
       (common-lisp:cons "PricingRuleArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-associated-to-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-rules-filter common-lisp:nil
                       ((arns :initarg :arns :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arns common-lisp:null)
                         :accessor struct-shape-list-pricing-rules-filter-arns
                         :shape "PricingRuleArns" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-rules-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-rules-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-filter
                    'make-list-pricing-rules-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arns))
      (common-lisp:list
       (common-lisp:cons "Arns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-rules-input common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or list-pricing-rules-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-input-filters :shape
                         "ListPricingRulesFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-pricing-rule-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-input-max-results
                         :shape "MaxPricingRuleResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-rules-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-rules-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-rules-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-input 'make-list-pricing-rules-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-pricing-rules-output common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-output-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-rules :initarg :pricing-rules :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-list common-lisp:null)
                         :accessor
                         struct-shape-list-pricing-rules-output-pricing-rules
                         :shape "PricingRuleList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-pricing-rules-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-pricing-rules-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-pricing-rules-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-pricing-rules-output
                    'make-list-pricing-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-rules))
      (common-lisp:list
       (common-lisp:cons "PricingRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-pricing-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-associated-to-custom-line-item-filter
                       common-lisp:nil
                       ((relationship :initarg :relationship :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-relationship
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-filter-relationship
                         :shape "CustomLineItemRelationship" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resources-associated-to-custom-line-item-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-associated-to-custom-line-item-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-filter
                    'make-list-resources-associated-to-custom-line-item-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship))
      (common-lisp:list
       (common-lisp:cons "Relationship"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-associated-to-custom-line-item-input
                       common-lisp:nil
                       ((billing-period :initarg :billing-period :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-period common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-input-billing-period
                         :shape "BillingPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-input-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-custom-line-item-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-input-max-results
                         :shape "MaxCustomLineItemResults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-input-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          list-resources-associated-to-custom-line-item-filter
                          common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-input-filters
                         :shape "ListResourcesAssociatedToCustomLineItemFilter"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resources-associated-to-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-associated-to-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-input
                    'make-list-resources-associated-to-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-period))
      (common-lisp:list
       (common-lisp:cons "BillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resources-associated-to-custom-line-item-output
                       common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-output-arn
                         :shape "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (associated-resources :initarg :associated-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          list-resources-associated-to-custom-line-item-response-list
                          common-lisp:null)
                         :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-output-associated-resources
                         :shape
                         "ListResourcesAssociatedToCustomLineItemResponseList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-resources-associated-to-custom-line-item-output-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resources-associated-to-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-associated-to-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resources-associated-to-custom-line-item-output
                    'make-list-resources-associated-to-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-resources))
      (common-lisp:list
       (common-lisp:cons "AssociatedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass
  list-resources-associated-to-custom-line-item-response-element
  common-lisp:nil
  ((arn :initarg :arn :initform common-lisp:nil :type
    (common-lisp:or custom-line-item-association-element common-lisp:null)
    :accessor
    struct-shape-list-resources-associated-to-custom-line-item-response-element-arn
    :shape "CustomLineItemAssociationElement" :location common-lisp:nil
    :location-name common-lisp:nil)
   (relationship :initarg :relationship :initform common-lisp:nil :type
    (common-lisp:or custom-line-item-relationship common-lisp:null) :accessor
    struct-shape-list-resources-associated-to-custom-line-item-response-element-relationship
    :shape "CustomLineItemRelationship" :location common-lisp:nil
    :location-name common-lisp:nil)
   (end-billing-period :initarg :end-billing-period :initform common-lisp:nil
    :type (common-lisp:or billing-period common-lisp:null) :accessor
    struct-shape-list-resources-associated-to-custom-line-item-response-element-end-billing-period
    :shape "BillingPeriod" :location common-lisp:nil :location-name
    common-lisp:nil))
  (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resources-associated-to-custom-line-item-response-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-resources-associated-to-custom-line-item-response-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list
   'list-resources-associated-to-custom-line-item-response-element
   'make-list-resources-associated-to-custom-line-item-response-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'relationship))
      (common-lisp:list
       (common-lisp:cons "Relationship"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-billing-period))
      (common-lisp:list
       (common-lisp:cons "EndBillingPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resources-associated-to-custom-line-item-response-element))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-resources-associated-to-custom-line-item-response-list
                      ()
   '(trivial-types:proper-list
     list-resources-associated-to-custom-line-item-response-element))
 (common-lisp:defun make-list-resources-associated-to-custom-line-item-response-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            list-resources-associated-to-custom-line-item-response-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype margin () 'common-lisp:string)
(common-lisp:deftype margin-percentage () 'common-lisp:string)
(common-lisp:deftype match-option () 'common-lisp:string)
(common-lisp:deftype max-billing-group-cost-report-results ()
  'common-lisp:integer)
(common-lisp:deftype max-billing-group-results () 'common-lisp:integer)
(common-lisp:deftype max-custom-line-item-results () 'common-lisp:integer)
(common-lisp:deftype max-pricing-plan-results () 'common-lisp:integer)
(common-lisp:deftype max-pricing-rule-results () 'common-lisp:integer)
(common-lisp:deftype modifier-percentage () 'common-lisp:double-float)
(common-lisp:deftype number-of-accounts () 'common-lisp:integer)
(common-lisp:deftype number-of-associated-pricing-rules () 'common-lisp:integer)
(common-lisp:deftype number-of-associations () 'common-lisp:integer)
(common-lisp:deftype number-of-pricing-plans-associated-with ()
  'common-lisp:integer)
(common-lisp:deftype operation () 'common-lisp:string)
(common-lisp:deftype pricing-plan-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-plan-arns ()
   '(trivial-types:proper-list pricing-plan-arn))
 (common-lisp:defun make-pricing-plan-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-plan-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pricing-plan-description () 'common-lisp:string)
(common-lisp:deftype pricing-plan-full-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-plan-list ()
   '(trivial-types:proper-list pricing-plan-list-element))
 (common-lisp:defun make-pricing-plan-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pricing-plan-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass pricing-plan-list-element common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-name common-lisp:null)
                         :accessor struct-shape-pricing-plan-list-element-name
                         :shape "PricingPlanName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-pricing-plan-list-element-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-pricing-plan-list-element-description
                         :shape "PricingPlanDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or number-of-associated-pricing-rules
                                         common-lisp:null)
                         :accessor struct-shape-pricing-plan-list-element-size
                         :shape "NumberOfAssociatedPricingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-pricing-plan-list-element-creation-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-pricing-plan-list-element-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pricing-plan-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pricing-plan-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pricing-plan-list-element
                    'make-pricing-plan-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pricing-plan-list-element))
   common-lisp:nil))
(common-lisp:deftype pricing-plan-name () 'common-lisp:string)
(common-lisp:deftype pricing-rule-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun make-pricing-rule-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns-input ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun make-pricing-rule-arns-input
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype pricing-rule-arns-non-empty-input ()
   '(trivial-types:proper-list pricing-rule-arn))
 (common-lisp:defun make-pricing-rule-arns-non-empty-input
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pricing-rule-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pricing-rule-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pricing-rule-list ()
   '(trivial-types:proper-list pricing-rule-list-element))
 (common-lisp:defun make-pricing-rule-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            pricing-rule-list-element))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass pricing-rule-list-element common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-name common-lisp:null)
                         :accessor struct-shape-pricing-rule-list-element-name
                         :shape "PricingRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-pricing-rule-list-element-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-description
                         :shape "PricingRuleDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-scope common-lisp:null)
                         :accessor struct-shape-pricing-rule-list-element-scope
                         :shape "PricingRuleScope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-type common-lisp:null)
                         :accessor struct-shape-pricing-rule-list-element-type
                         :shape "PricingRuleType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modifier-percentage :initarg :modifier-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or modifier-percentage common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-modifier-percentage
                         :shape "ModifierPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or service common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-service :shape
                         "Service" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (associated-pricing-plan-count :initarg
                         :associated-pricing-plan-count :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          number-of-pricing-plans-associated-with
                          common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-associated-pricing-plan-count
                         :shape "NumberOfPricingPlansAssociatedWith" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-pricing-rule-list-element-creation-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-pricing-rule-list-element-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-entity :initarg :billing-entity :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-entity common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-billing-entity
                         :shape "BillingEntity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tiering :initarg :tiering :initform common-lisp:nil
                         :type (common-lisp:or tiering common-lisp:null)
                         :accessor
                         struct-shape-pricing-rule-list-element-tiering :shape
                         "Tiering" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (usage-type :initarg :usage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or usage-type common-lisp:null) :accessor
                         struct-shape-pricing-rule-list-element-usage-type
                         :shape "UsageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation :initarg :operation :initform
                         common-lisp:nil :type
                         (common-lisp:or operation common-lisp:null) :accessor
                         struct-shape-pricing-rule-list-element-operation
                         :shape "Operation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pricing-rule-list-element
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pricing-rule-list-element
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pricing-rule-list-element
                    'make-pricing-rule-list-element))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-pricing-plan-count))
      (common-lisp:list
       (common-lisp:cons "AssociatedPricingPlanCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          pricing-rule-list-element))
   common-lisp:nil))
(common-lisp:deftype pricing-rule-name () 'common-lisp:string)
(common-lisp:deftype pricing-rule-scope () 'common-lisp:string)
(common-lisp:deftype pricing-rule-type () 'common-lisp:string)
(common-lisp:deftype proforma-cost () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:deftype service () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-type)
      (limit-code :initarg :limit-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-limit-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-message
                    'service-limit-exceeded-exception-resource-id
                    'service-limit-exceeded-exception-resource-type
                    'service-limit-exceeded-exception-limit-code
                    'service-limit-exceeded-exception-service-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location "uri" :location-name "ResourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defclass tiering common-lisp:nil
                       ((free-tier :initarg :free-tier :initform
                         (common-lisp:error ":free-tier is required") :type
                         (common-lisp:or free-tier-config common-lisp:null)
                         :accessor struct-shape-tiering-free-tier :shape
                         "FreeTierConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tiering
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tiering
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tiering 'make-tiering))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tiering))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tiering))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tiering))
   common-lisp:nil))
(common-lisp:deftype tiering-activated () 'common-lisp:boolean)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "ResourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-billing-group-account-grouping common-lisp:nil
                       ((auto-associate :initarg :auto-associate :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-billing-group-account-grouping-auto-associate
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-billing-group-account-grouping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-billing-group-account-grouping
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-billing-group-account-grouping
                    'make-update-billing-group-account-grouping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-account-grouping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-account-grouping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-associate))
      (common-lisp:list
       (common-lisp:cons "AutoAssociate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-account-grouping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-billing-group-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-update-billing-group-input-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or billing-group-name common-lisp:null)
                         :accessor struct-shape-update-billing-group-input-name
                         :shape "BillingGroupName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or billing-group-status common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-input-status :shape
                         "BillingGroupStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (computation-preference :initarg
                         :computation-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or computation-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-input-computation-preference
                         :shape "ComputationPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-input-description
                         :shape "BillingGroupDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-grouping :initarg :account-grouping :initform
                         common-lisp:nil :type
                         (common-lisp:or update-billing-group-account-grouping
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-input-account-grouping
                         :shape "UpdateBillingGroupAccountGrouping" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-billing-group-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-billing-group-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-billing-group-input
                    'make-update-billing-group-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'computation-preference))
      (common-lisp:list
       (common-lisp:cons "ComputationPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-grouping))
      (common-lisp:list
       (common-lisp:cons "AccountGrouping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-billing-group-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or billing-group-arn common-lisp:null)
                         :accessor struct-shape-update-billing-group-output-arn
                         :shape "BillingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or billing-group-name common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-name :shape
                         "BillingGroupName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-description
                         :shape "BillingGroupDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (primary-account-id :initarg :primary-account-id
                         :initform common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-update-billing-group-output-primary-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pricing-plan-arn :initarg :pricing-plan-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-pricing-plan-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or number-of-accounts common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-size :shape
                         "NumberOfAccounts" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-update-billing-group-output-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or billing-group-status common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-status :shape
                         "BillingGroupStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-group-status-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-status-reason
                         :shape "BillingGroupStatusReason" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-grouping :initarg :account-grouping :initform
                         common-lisp:nil :type
                         (common-lisp:or update-billing-group-account-grouping
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-billing-group-output-account-grouping
                         :shape "UpdateBillingGroupAccountGrouping" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-billing-group-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-billing-group-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-billing-group-output
                    'make-update-billing-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-account-id))
      (common-lisp:list
       (common-lisp:cons "PrimaryAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pricing-plan-arn))
      (common-lisp:list
       (common-lisp:cons "PricingPlanArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-grouping))
      (common-lisp:list
       (common-lisp:cons "AccountGrouping"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-billing-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-custom-line-item-charge-details common-lisp:nil
                       ((flat :initarg :flat :initform common-lisp:nil :type
                         (common-lisp:or
                          update-custom-line-item-flat-charge-details
                          common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-charge-details-flat
                         :shape "UpdateCustomLineItemFlatChargeDetails"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (percentage :initarg :percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          update-custom-line-item-percentage-charge-details
                          common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-charge-details-percentage
                         :shape "UpdateCustomLineItemPercentageChargeDetails"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (line-item-filters :initarg :line-item-filters
                         :initform common-lisp:nil :type
                         (common-lisp:or line-item-filters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-charge-details-line-item-filters
                         :shape "LineItemFiltersList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-custom-line-item-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-custom-line-item-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-charge-details
                    'make-update-custom-line-item-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'flat))
      (common-lisp:list
       (common-lisp:cons "Flat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'line-item-filters))
      (common-lisp:list
       (common-lisp:cons "LineItemFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-custom-line-item-flat-charge-details
                       common-lisp:nil
                       ((charge-value :initarg :charge-value :initform
                         (common-lisp:error ":charge-value is required") :type
                         (common-lisp:or custom-line-item-charge-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-flat-charge-details-charge-value
                         :shape "CustomLineItemChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-custom-line-item-flat-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-custom-line-item-flat-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-flat-charge-details
                    'make-update-custom-line-item-flat-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-value))
      (common-lisp:list
       (common-lisp:cons "ChargeValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-flat-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-custom-line-item-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-input-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-input-name :shape
                         "CustomLineItemName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-input-description
                         :shape "CustomLineItemDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (charge-details :initarg :charge-details :initform
                         common-lisp:nil :type
                         (common-lisp:or update-custom-line-item-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-input-charge-details
                         :shape "UpdateCustomLineItemChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (billing-period-range :initarg :billing-period-range
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-billing-period-range
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-input-billing-period-range
                         :shape "CustomLineItemBillingPeriodRange" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-custom-line-item-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-custom-line-item-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-input
                    'make-update-custom-line-item-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'billing-period-range))
      (common-lisp:list
       (common-lisp:cons "BillingPeriodRange"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-custom-line-item-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-arn common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-arn :shape
                         "CustomLineItemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-group-arn :initarg :billing-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or billing-group-full-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-billing-group-arn
                         :shape "BillingGroupFullArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or custom-line-item-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-name
                         :shape "CustomLineItemName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-line-item-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-description
                         :shape "CustomLineItemDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (charge-details :initarg :charge-details :initform
                         common-lisp:nil :type
                         (common-lisp:or list-custom-line-item-charge-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-charge-details
                         :shape "ListCustomLineItemChargeDetails" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-update-custom-line-item-output-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (association-size :initarg :association-size :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-associations
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-output-association-size
                         :shape "NumberOfAssociations" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-custom-line-item-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-custom-line-item-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-output
                    'make-update-custom-line-item-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-group-arn))
      (common-lisp:list
       (common-lisp:cons "BillingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charge-details))
      (common-lisp:list
       (common-lisp:cons "ChargeDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'association-size))
      (common-lisp:list
       (common-lisp:cons "AssociationSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-custom-line-item-percentage-charge-details
                       common-lisp:nil
                       ((percentage-value :initarg :percentage-value :initform
                         (common-lisp:error ":percentage-value is required")
                         :type
                         (common-lisp:or
                          custom-line-item-percentage-charge-value
                          common-lisp:null)
                         :accessor
                         struct-shape-update-custom-line-item-percentage-charge-details-percentage-value
                         :shape "CustomLineItemPercentageChargeValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-custom-line-item-percentage-charge-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-custom-line-item-percentage-charge-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-custom-line-item-percentage-charge-details
                    'make-update-custom-line-item-percentage-charge-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage-value))
      (common-lisp:list
       (common-lisp:cons "PercentageValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-custom-line-item-percentage-charge-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-free-tier-config common-lisp:nil
                       ((activated :initarg :activated :initform
                         (common-lisp:error ":activated is required") :type
                         (common-lisp:or tiering-activated common-lisp:null)
                         :accessor
                         struct-shape-update-free-tier-config-activated :shape
                         "TieringActivated" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-free-tier-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-free-tier-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-free-tier-config 'make-update-free-tier-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activated))
      (common-lisp:list
       (common-lisp:cons "Activated"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-free-tier-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-pricing-plan-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-update-pricing-plan-input-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-name common-lisp:null)
                         :accessor struct-shape-update-pricing-plan-input-name
                         :shape "PricingPlanName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-plan-input-description
                         :shape "PricingPlanDescription" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-pricing-plan-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-pricing-plan-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-pricing-plan-input
                    'make-update-pricing-plan-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-pricing-plan-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-arn common-lisp:null)
                         :accessor struct-shape-update-pricing-plan-output-arn
                         :shape "PricingPlanArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-plan-name common-lisp:null)
                         :accessor struct-shape-update-pricing-plan-output-name
                         :shape "PricingPlanName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-plan-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-plan-output-description
                         :shape "PricingPlanDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (size :initarg :size :initform common-lisp:nil :type
                         (common-lisp:or number-of-associated-pricing-rules
                                         common-lisp:null)
                         :accessor struct-shape-update-pricing-plan-output-size
                         :shape "NumberOfAssociatedPricingRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-update-pricing-plan-output-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-pricing-plan-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-pricing-plan-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-pricing-plan-output
                    'make-update-pricing-plan-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-plan-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-pricing-rule-input common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-input-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-name common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-input-name
                         :shape "PricingRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-input-description
                         :shape "PricingRuleDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-type common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-input-type
                         :shape "PricingRuleType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modifier-percentage :initarg :modifier-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or modifier-percentage common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-input-modifier-percentage
                         :shape "ModifierPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tiering :initarg :tiering :initform common-lisp:nil
                         :type
                         (common-lisp:or update-tiering-input common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-input-tiering :shape
                         "UpdateTieringInput" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-pricing-rule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-pricing-rule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-pricing-rule-input
                    'make-update-pricing-rule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-pricing-rule-output common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-arn common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-output-arn
                         :shape "PricingRuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-name common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-output-name
                         :shape "PricingRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or pricing-rule-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-description
                         :shape "PricingRuleDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-scope common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-scope :shape
                         "PricingRuleScope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or pricing-rule-type common-lisp:null)
                         :accessor struct-shape-update-pricing-rule-output-type
                         :shape "PricingRuleType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modifier-percentage :initarg :modifier-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or modifier-percentage common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-modifier-percentage
                         :shape "ModifierPercentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or service common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-service :shape
                         "Service" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (associated-pricing-plan-count :initarg
                         :associated-pricing-plan-count :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          number-of-pricing-plans-associated-with
                          common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-associated-pricing-plan-count
                         :shape "NumberOfPricingPlansAssociatedWith" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or instant common-lisp:null) :accessor
                         struct-shape-update-pricing-rule-output-last-modified-time
                         :shape "Instant" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (billing-entity :initarg :billing-entity :initform
                         common-lisp:nil :type
                         (common-lisp:or billing-entity common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-billing-entity
                         :shape "BillingEntity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tiering :initarg :tiering :initform common-lisp:nil
                         :type
                         (common-lisp:or update-tiering-input common-lisp:null)
                         :accessor
                         struct-shape-update-pricing-rule-output-tiering :shape
                         "UpdateTieringInput" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (usage-type :initarg :usage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or usage-type common-lisp:null) :accessor
                         struct-shape-update-pricing-rule-output-usage-type
                         :shape "UsageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation :initarg :operation :initform
                         common-lisp:nil :type
                         (common-lisp:or operation common-lisp:null) :accessor
                         struct-shape-update-pricing-rule-output-operation
                         :shape "Operation" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-pricing-rule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-pricing-rule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-pricing-rule-output
                    'make-update-pricing-rule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "Scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modifier-percentage))
      (common-lisp:list
       (common-lisp:cons "ModifierPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "Service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'associated-pricing-plan-count))
      (common-lisp:list
       (common-lisp:cons "AssociatedPricingPlanCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'billing-entity))
      (common-lisp:list
       (common-lisp:cons "BillingEntity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tiering))
      (common-lisp:list
       (common-lisp:cons "Tiering"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-type))
      (common-lisp:list
       (common-lisp:cons "UsageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "Operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-pricing-rule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-tiering-input common-lisp:nil
                       ((free-tier :initarg :free-tier :initform
                         (common-lisp:error ":free-tier is required") :type
                         (common-lisp:or update-free-tier-config
                                         common-lisp:null)
                         :accessor struct-shape-update-tiering-input-free-tier
                         :shape "UpdateFreeTierConfig" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-tiering-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-tiering-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-tiering-input 'make-update-tiering-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-tiering-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-tiering-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'free-tier))
      (common-lisp:list
       (common-lisp:cons "FreeTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-tiering-input))
   common-lisp:nil))
(common-lisp:deftype usage-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (billingconductor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (fields :initarg :fields :initform common-lisp:nil :reader
       validation-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason 'validation-exception-fields)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun associate-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn account-ids)
   (common-lisp:declare (common-lisp:ignorable arn account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-accounts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/associate-accounts" "AssociateAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-accounts))
(common-lisp:progn
 (common-lisp:defun associate-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn pricing-rule-arns)
   (common-lisp:declare (common-lisp:ignorable arn pricing-rule-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/associate-pricing-rules" "AssociatePricingRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-pricing-rules))
(common-lisp:progn
 (common-lisp:defun batch-associate-resources-to-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn resource-arns
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable target-arn resource-arns billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-associate-resources-to-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/batch-associate-resources-to-custom-line-item"
        "BatchAssociateResourcesToCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-associate-resources-to-custom-line-item))
(common-lisp:progn
 (common-lisp:defun batch-disassociate-resources-from-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn resource-arns
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable target-arn resource-arns billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-batch-disassociate-resources-from-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/batch-disassociate-resources-from-custom-line-item"
        "BatchDisassociateResourcesFromCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'batch-disassociate-resources-from-custom-line-item))
(common-lisp:progn
 (common-lisp:defun create-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name account-grouping
                     computation-preference primary-account-id description
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token name account-grouping
     computation-preference primary-account-id description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/create-billing-group" "CreateBillingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-billing-group))
(common-lisp:progn
 (common-lisp:defun create-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description
                     billing-group-arn billing-period-range tags charge-details
                     account-id)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description billing-group-arn
     billing-period-range tags charge-details account-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/create-custom-line-item" "CreateCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-custom-line-item))
(common-lisp:progn
 (common-lisp:defun create-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description
                     pricing-rule-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description pricing-rule-arns
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/create-pricing-plan" "CreatePricingPlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-pricing-plan))
(common-lisp:progn
 (common-lisp:defun create-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token name description scope type
                     modifier-percentage service tags billing-entity tiering
                     usage-type operation)
   (common-lisp:declare
    (common-lisp:ignorable client-token name description scope type
     modifier-percentage service tags billing-entity tiering usage-type
     operation))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/create-pricing-rule" "CreatePricingRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-pricing-rule))
(common-lisp:progn
 (common-lisp:defun delete-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/delete-billing-group" "DeleteBillingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-billing-group))
(common-lisp:progn
 (common-lisp:defun delete-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn billing-period-range)
   (common-lisp:declare (common-lisp:ignorable arn billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/delete-custom-line-item" "DeleteCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-custom-line-item))
(common-lisp:progn
 (common-lisp:defun delete-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/delete-pricing-plan" "DeletePricingPlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-pricing-plan))
(common-lisp:progn
 (common-lisp:defun delete-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/delete-pricing-rule" "DeletePricingRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-pricing-rule))
(common-lisp:progn
 (common-lisp:defun disassociate-accounts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn account-ids)
   (common-lisp:declare (common-lisp:ignorable arn account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-accounts-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/disassociate-accounts" "DisassociateAccounts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-accounts))
(common-lisp:progn
 (common-lisp:defun disassociate-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn pricing-rule-arns)
   (common-lisp:declare (common-lisp:ignorable arn pricing-rule-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/disassociate-pricing-rules" "DisassociatePricingRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-pricing-rules))
(common-lisp:progn
 (common-lisp:defun get-billing-group-cost-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn billing-period-range group-by
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable arn billing-period-range group-by max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-billing-group-cost-report-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/get-billing-group-cost-report" "GetBillingGroupCostReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-billing-group-cost-report))
(common-lisp:progn
 (common-lisp:defun list-account-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-account-associations-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-account-associations" "ListAccountAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-account-associations))
(common-lisp:progn
 (common-lisp:defun list-billing-group-cost-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-billing-group-cost-reports-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-billing-group-cost-reports" "ListBillingGroupCostReports"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-billing-group-cost-reports))
(common-lisp:progn
 (common-lisp:defun list-billing-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-billing-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-billing-groups" "ListBillingGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-billing-groups))
(common-lisp:progn
 (common-lisp:defun list-custom-line-item-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn max-results next-token filters)
   (common-lisp:declare
    (common-lisp:ignorable arn max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-custom-line-item-versions-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-custom-line-item-versions" "ListCustomLineItemVersions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-custom-line-item-versions))
(common-lisp:progn
 (common-lisp:defun list-custom-line-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-custom-line-items-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-custom-line-items" "ListCustomLineItems"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-custom-line-items))
(common-lisp:progn
 (common-lisp:defun list-pricing-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pricing-plans-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-pricing-plans" "ListPricingPlans"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-pricing-plans))
(common-lisp:progn
 (common-lisp:defun list-pricing-plans-associated-with-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period pricing-rule-arn
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period pricing-rule-arn max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pricing-plans-associated-with-pricing-rule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-pricing-plans-associated-with-pricing-rule"
        "ListPricingPlansAssociatedWithPricingRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-pricing-plans-associated-with-pricing-rule))
(common-lisp:progn
 (common-lisp:defun list-pricing-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period filters max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period filters max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-pricing-rules-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-pricing-rules" "ListPricingRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-pricing-rules))
(common-lisp:progn
 (common-lisp:defun list-pricing-rules-associated-to-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period pricing-plan-arn
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable billing-period pricing-plan-arn max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-pricing-rules-associated-to-pricing-plan-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-pricing-rules-associated-to-pricing-plan"
        "ListPricingRulesAssociatedToPricingPlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-pricing-rules-associated-to-pricing-plan))
(common-lisp:progn
 (common-lisp:defun list-resources-associated-to-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key billing-period arn max-results next-token
                     filters)
   (common-lisp:declare
    (common-lisp:ignorable billing-period arn max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-resources-associated-to-custom-line-item-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/list-resources-associated-to-custom-line-item"
        "ListResourcesAssociatedToCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-resources-associated-to-custom-line-item))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-billing-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name status computation-preference
                     description account-grouping)
   (common-lisp:declare
    (common-lisp:ignorable arn name status computation-preference description
     account-grouping))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-billing-group-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/update-billing-group" "UpdateBillingGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-billing-group))
(common-lisp:progn
 (common-lisp:defun update-custom-line-item
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description charge-details
                     billing-period-range)
   (common-lisp:declare
    (common-lisp:ignorable arn name description charge-details
     billing-period-range))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-custom-line-item-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "POST"
        "/update-custom-line-item" "UpdateCustomLineItem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-custom-line-item))
(common-lisp:progn
 (common-lisp:defun update-pricing-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description)
   (common-lisp:declare (common-lisp:ignorable arn name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pricing-plan-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/update-pricing-plan" "UpdatePricingPlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-pricing-plan))
(common-lisp:progn
 (common-lisp:defun update-pricing-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description type
                     modifier-percentage tiering)
   (common-lisp:declare
    (common-lisp:ignorable arn name description type modifier-percentage
     tiering))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-pricing-rule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'billingconductor-request aws-sdk/generator/operation::input "PUT"
        "/update-pricing-rule" "UpdatePricingRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-pricing-rule))
