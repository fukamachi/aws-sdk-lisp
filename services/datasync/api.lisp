;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/datasync/api
  (:use)
  (:nicknames #:aws/datasync)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/datasync/api)
(common-lisp:progn
 (common-lisp:define-condition datasync-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'datasync-error))
(common-lisp:progn
 (common-lisp:defclass datasync-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "datasync" :api-version
                        "2018-11-09" :host-prefix "datasync" :signing-name
                        "datasync" :global-host common-lisp:nil :target-prefix
                        "FmrsService" :json-version "1.1"))
 (common-lisp:export 'datasync-request))
(common-lisp:defvar *error-map*
  '(("InternalException" . internal-exception)
    ("InvalidRequestException" . invalid-request-exception)))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass add-storage-system-request common-lisp:nil
                       ((server-configuration :initarg :server-configuration
                         :initform
                         (common-lisp:error
                          ":server-configuration is required")
                         :type
                         (common-lisp:or discovery-server-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-server-configuration
                         :shape "DiscoveryServerConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (system-type :initarg :system-type :initform
                         (common-lisp:error ":system-type is required") :type
                         (common-lisp:or discovery-system-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-system-type
                         :shape "DiscoverySystemType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or discovery-agent-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-agent-arns
                         :shape "DiscoveryAgentArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor struct-shape-add-storage-system-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-add-storage-system-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-client-token
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (credentials :initarg :credentials :initform
                         (common-lisp:error ":credentials is required") :type
                         (common-lisp:or credentials common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-request-credentials
                         :shape "Credentials" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-storage-system-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-storage-system-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-storage-system-request
                    'make-add-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-type))
      (common-lisp:list
       (common-lisp:cons "SystemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-storage-system-response common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform
                         (common-lisp:error ":storage-system-arn is required")
                         :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-add-storage-system-response-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-storage-system-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-storage-system-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-storage-system-response
                    'make-add-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-storage-system-response))
   common-lisp:nil))
(common-lisp:deftype agent-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype agent-arn-list () '(trivial-types:proper-list agent-arn))
 (common-lisp:defun make-agent-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype agent-list ()
   '(trivial-types:proper-list agent-list-entry))
 (common-lisp:defun make-agent-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass agent-list-entry common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-agent-list-entry-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-agent-list-entry-name :shape "TagValue"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or agent-status common-lisp:null)
                         :accessor struct-shape-agent-list-entry-status :shape
                         "AgentStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (platform :initarg :platform :initform common-lisp:nil
                         :type (common-lisp:or platform common-lisp:null)
                         :accessor struct-shape-agent-list-entry-platform
                         :shape "Platform" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-agent-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'agent-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'agent-list-entry 'make-agent-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input agent-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input agent-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input agent-list-entry))
   common-lisp:nil))
(common-lisp:deftype agent-status () 'common-lisp:string)
(common-lisp:deftype agent-version () 'common-lisp:string)
(common-lisp:deftype atime () 'common-lisp:string)
(common-lisp:deftype azure-access-tier () 'common-lisp:string)
(common-lisp:deftype azure-blob-authentication-type () 'common-lisp:string)
(common-lisp:deftype azure-blob-container-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass azure-blob-sas-configuration common-lisp:nil
                       ((token :initarg :token :initform
                         (common-lisp:error ":token is required") :type
                         (common-lisp:or azure-blob-sas-token common-lisp:null)
                         :accessor
                         struct-shape-azure-blob-sas-configuration-token :shape
                         "AzureBlobSasToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-azure-blob-sas-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'azure-blob-sas-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'azure-blob-sas-configuration
                    'make-azure-blob-sas-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          azure-blob-sas-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          azure-blob-sas-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token))
      (common-lisp:list
       (common-lisp:cons "Token"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          azure-blob-sas-configuration))
   common-lisp:nil))
(common-lisp:deftype azure-blob-sas-token () 'common-lisp:string)
(common-lisp:deftype azure-blob-subdirectory () 'common-lisp:string)
(common-lisp:deftype azure-blob-type () 'common-lisp:string)
(common-lisp:deftype bytes-per-second () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass cancel-task-execution-request common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform
                         (common-lisp:error ":task-execution-arn is required")
                         :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-cancel-task-execution-request-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-task-execution-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'cancel-task-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-task-execution-request
                    'make-cancel-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-task-execution-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-task-execution-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'cancel-task-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-task-execution-response
                    'make-cancel-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass capacity common-lisp:nil
                       ((used :initarg :used :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-capacity-used :shape
                         "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provisioned :initarg :provisioned :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-capacity-provisioned :shape
                         "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logical-used :initarg :logical-used :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-capacity-logical-used :shape
                         "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cluster-cloud-storage-used :initarg
                         :cluster-cloud-storage-used :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-capacity-cluster-cloud-storage-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-capacity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'capacity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'capacity 'make-capacity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input capacity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input capacity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'used))
      (common-lisp:list
       (common-lisp:cons "Used"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provisioned))
      (common-lisp:list
       (common-lisp:cons "Provisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logical-used))
      (common-lisp:list
       (common-lisp:cons "LogicalUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-cloud-storage-used))
      (common-lisp:list
       (common-lisp:cons "ClusterCloudStorageUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input capacity))
   common-lisp:nil))
(common-lisp:deftype collection-duration-minutes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass create-agent-request common-lisp:nil
                       ((activation-key :initarg :activation-key :initform
                         (common-lisp:error ":activation-key is required")
                         :type (common-lisp:or activation-key common-lisp:null)
                         :accessor
                         struct-shape-create-agent-request-activation-key
                         :shape "ActivationKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-name :initarg :agent-name :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-create-agent-request-agent-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor struct-shape-create-agent-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-endpoint-id :initarg :vpc-endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor
                         struct-shape-create-agent-request-vpc-endpoint-id
                         :shape "VpcEndpointId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subnet-arns :initarg :subnet-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or plsubnet-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-agent-request-subnet-arns :shape
                         "PLSubnetArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or plsecurity-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-agent-request-security-group-arns
                         :shape "PLSecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-agent-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-agent-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-agent-request 'make-create-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-name))
      (common-lisp:list
       (common-lisp:cons "AgentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "VpcEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arns))
      (common-lisp:list
       (common-lisp:cons "SubnetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-agent-response common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-create-agent-response-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-agent-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-agent-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-agent-response 'make-create-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-azure-blob-request common-lisp:nil
                       ((container-url :initarg :container-url :initform
                         (common-lisp:error ":container-url is required") :type
                         (common-lisp:or azure-blob-container-url
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-container-url
                         :shape "AzureBlobContainerUrl" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform
                         (common-lisp:error ":authentication-type is required")
                         :type
                         (common-lisp:or azure-blob-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-authentication-type
                         :shape "AzureBlobAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sas-configuration :initarg :sas-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or azure-blob-sas-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-sas-configuration
                         :shape "AzureBlobSasConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (blob-type :initarg :blob-type :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-blob-type common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-blob-type
                         :shape "AzureBlobType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-tier :initarg :access-tier :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-access-tier common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-access-tier
                         :shape "AzureAccessTier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-blob-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-subdirectory
                         :shape "AzureBlobSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-azure-blob-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-azure-blob-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-azure-blob-request
                    'make-create-location-azure-blob-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-url))
      (common-lisp:list
       (common-lisp:cons "ContainerUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sas-configuration))
      (common-lisp:list
       (common-lisp:cons "SasConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blob-type))
      (common-lisp:list
       (common-lisp:cons "BlobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-tier))
      (common-lisp:list
       (common-lisp:cons "AccessTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-azure-blob-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-azure-blob-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-azure-blob-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-azure-blob-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-azure-blob-response
                    'make-create-location-azure-blob-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-azure-blob-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-efs-request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or efs-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-subdirectory
                         :shape "EfsSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (efs-filesystem-arn :initarg :efs-filesystem-arn
                         :initform
                         (common-lisp:error ":efs-filesystem-arn is required")
                         :type
                         (common-lisp:or efs-filesystem-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-efs-filesystem-arn
                         :shape "EfsFilesystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2config :initarg :ec2config :initform
                         (common-lisp:error ":ec2config is required") :type
                         (common-lisp:or ec2config common-lisp:null) :accessor
                         struct-shape-create-location-efs-request-ec2config
                         :shape "Ec2Config" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-point-arn :initarg :access-point-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or efs-access-point-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-access-point-arn
                         :shape "EfsAccessPointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-system-access-role-arn :initarg
                         :file-system-access-role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-file-system-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (in-transit-encryption :initarg :in-transit-encryption
                         :initform common-lisp:nil :type
                         (common-lisp:or efs-in-transit-encryption
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-request-in-transit-encryption
                         :shape "EfsInTransitEncryption" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-efs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-efs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-efs-request
                    'make-create-location-efs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'efs-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "EfsFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2config))
      (common-lisp:list
       (common-lisp:cons "Ec2Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-point-arn))
      (common-lisp:list
       (common-lisp:cons "AccessPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-transit-encryption))
      (common-lisp:list
       (common-lisp:cons "InTransitEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-efs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-efs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-efs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-efs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-efs-response
                    'make-create-location-efs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-efs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-lustre-request common-lisp:nil
                       ((fsx-filesystem-arn :initarg :fsx-filesystem-arn
                         :initform
                         (common-lisp:error ":fsx-filesystem-arn is required")
                         :type
                         (common-lisp:or fsx-filesystem-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-lustre-request-fsx-filesystem-arn
                         :shape "FsxFilesystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform
                         (common-lisp:error ":security-group-arns is required")
                         :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-lustre-request-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or fsx-lustre-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-lustre-request-subdirectory
                         :shape "FsxLustreSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-lustre-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-lustre-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-lustre-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-lustre-request
                    'make-create-location-fsx-lustre-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-lustre-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-lustre-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-lustre-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-lustre-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-lustre-response
                    'make-create-location-fsx-lustre-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-lustre-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-ontap-request common-lisp:nil
                       ((protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or fsx-protocol common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-request-protocol
                         :shape "FsxProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform
                         (common-lisp:error ":security-group-arns is required")
                         :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-request-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (storage-virtual-machine-arn :initarg
                         :storage-virtual-machine-arn :initform
                         (common-lisp:error
                          ":storage-virtual-machine-arn is required")
                         :type
                         (common-lisp:or storage-virtual-machine-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-request-storage-virtual-machine-arn
                         :shape "StorageVirtualMachineArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or fsx-ontap-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-request-subdirectory
                         :shape "FsxOntapSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-ontap-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-ontap-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-ontap-request
                    'make-create-location-fsx-ontap-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-virtual-machine-arn))
      (common-lisp:list
       (common-lisp:cons "StorageVirtualMachineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-ontap-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-ontap-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-ontap-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-ontap-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-ontap-response
                    'make-create-location-fsx-ontap-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-ontap-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-open-zfs-request common-lisp:nil
                       ((fsx-filesystem-arn :initarg :fsx-filesystem-arn
                         :initform
                         (common-lisp:error ":fsx-filesystem-arn is required")
                         :type
                         (common-lisp:or fsx-filesystem-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-request-fsx-filesystem-arn
                         :shape "FsxFilesystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or fsx-protocol common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-request-protocol
                         :shape "FsxProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform
                         (common-lisp:error ":security-group-arns is required")
                         :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-request-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or fsx-open-zfs-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-request-subdirectory
                         :shape "FsxOpenZfsSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-open-zfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-open-zfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-open-zfs-request
                    'make-create-location-fsx-open-zfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-open-zfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-open-zfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-open-zfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-open-zfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-open-zfs-response
                    'make-create-location-fsx-open-zfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-open-zfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-windows-request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or fsx-windows-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-subdirectory
                         :shape "FsxWindowsSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fsx-filesystem-arn :initarg :fsx-filesystem-arn
                         :initform
                         (common-lisp:error ":fsx-filesystem-arn is required")
                         :type
                         (common-lisp:or fsx-filesystem-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-fsx-filesystem-arn
                         :shape "FsxFilesystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform
                         (common-lisp:error ":security-group-arns is required")
                         :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user :initarg :user :initform
                         (common-lisp:error ":user is required") :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-create-location-fsx-windows-request-user
                         :shape "SmbUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-domain
                         :shape "SmbDomain" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or smb-password common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-request-password
                         :shape "SmbPassword" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-windows-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-windows-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-windows-request
                    'make-create-location-fsx-windows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-fsx-windows-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-fsx-windows-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-fsx-windows-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-fsx-windows-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-fsx-windows-response
                    'make-create-location-fsx-windows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-fsx-windows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-hdfs-request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-subdirectory
                         :shape "HdfsSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name-nodes :initarg :name-nodes :initform
                         (common-lisp:error ":name-nodes is required") :type
                         (common-lisp:or hdfs-name-node-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-name-nodes
                         :shape "HdfsNameNodeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (block-size :initarg :block-size :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-block-size common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-block-size
                         :shape "HdfsBlockSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-factor :initarg :replication-factor
                         :initform common-lisp:nil :type
                         (common-lisp:or hdfs-replication-factor
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-replication-factor
                         :shape "HdfsReplicationFactor" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (kms-key-provider-uri :initarg :kms-key-provider-uri
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-provider-uri common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-kms-key-provider-uri
                         :shape "KmsKeyProviderUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (qop-configuration :initarg :qop-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or qop-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-qop-configuration
                         :shape "QopConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform
                         (common-lisp:error ":authentication-type is required")
                         :type
                         (common-lisp:or hdfs-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-authentication-type
                         :shape "HdfsAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (simple-user :initarg :simple-user :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-user common-lisp:null) :accessor
                         struct-shape-create-location-hdfs-request-simple-user
                         :shape "HdfsUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-principal :initarg :kerberos-principal
                         :initform common-lisp:nil :type
                         (common-lisp:or kerberos-principal common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-kerberos-principal
                         :shape "KerberosPrincipal" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-keytab :initarg :kerberos-keytab :initform
                         common-lisp:nil :type
                         (common-lisp:or kerberos-keytab-file common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-kerberos-keytab
                         :shape "KerberosKeytabFile" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-krb5conf :initarg :kerberos-krb5conf
                         :initform common-lisp:nil :type
                         (common-lisp:or kerberos-krb5conf-file
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-kerberos-krb5conf
                         :shape "KerberosKrb5ConfFile" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-hdfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-hdfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-hdfs-request
                    'make-create-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-keytab))
      (common-lisp:list
       (common-lisp:cons "KerberosKeytab"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-krb5conf))
      (common-lisp:list
       (common-lisp:cons "KerberosKrb5Conf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-hdfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-hdfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-hdfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-hdfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-hdfs-response
                    'make-create-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-nfs-request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         (common-lisp:error ":subdirectory is required") :type
                         (common-lisp:or nfs-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-request-subdirectory
                         :shape "NfsSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-hostname :initarg :server-hostname :initform
                         (common-lisp:error ":server-hostname is required")
                         :type
                         (common-lisp:or server-hostname common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-request-server-hostname
                         :shape "ServerHostname" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (on-prem-config :initarg :on-prem-config :initform
                         (common-lisp:error ":on-prem-config is required")
                         :type (common-lisp:or on-prem-config common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-request-on-prem-config
                         :shape "OnPremConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or nfs-mount-options common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-request-mount-options
                         :shape "NfsMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-nfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-nfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-nfs-request
                    'make-create-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-nfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-nfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-nfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-nfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-nfs-response
                    'make-create-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-object-storage-request common-lisp:nil
                       ((server-hostname :initarg :server-hostname :initform
                         (common-lisp:error ":server-hostname is required")
                         :type
                         (common-lisp:or server-hostname common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-server-hostname
                         :shape "ServerHostname" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-port :initarg :server-port :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-port
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-server-port
                         :shape "ObjectStorageServerPort" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-protocol :initarg :server-protocol :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-protocol
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-server-protocol
                         :shape "ObjectStorageServerProtocol" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or s3subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-subdirectory
                         :shape "S3Subdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucket-name is required") :type
                         (common-lisp:or object-storage-bucket-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-bucket-name
                         :shape "ObjectStorageBucketName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (access-key :initarg :access-key :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-access-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-access-key
                         :shape "ObjectStorageAccessKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (secret-key :initarg :secret-key :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-secret-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-secret-key
                         :shape "ObjectStorageSecretKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-certificate :initarg :server-certificate
                         :initform common-lisp:nil :type
                         (common-lisp:or object-storage-certificate
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-request-server-certificate
                         :shape "ObjectStorageCertificate" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-object-storage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-object-storage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-object-storage-request
                    'make-create-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-key))
      (common-lisp:list
       (common-lisp:cons "SecretKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-object-storage-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-object-storage-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-object-storage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-location-object-storage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-object-storage-response
                    'make-create-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-s3request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or s3subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-s3request-subdirectory
                         :shape "S3Subdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3bucket-arn :initarg :s3bucket-arn :initform
                         (common-lisp:error ":s3bucket-arn is required") :type
                         (common-lisp:or s3bucket-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-s3request-s3bucket-arn
                         :shape "S3BucketArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3storage-class :initarg :s3storage-class :initform
                         common-lisp:nil :type
                         (common-lisp:or s3storage-class common-lisp:null)
                         :accessor
                         struct-shape-create-location-s3request-s3storage-class
                         :shape "S3StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3config :initarg :s3config :initform
                         (common-lisp:error ":s3config is required") :type
                         (common-lisp:or s3config common-lisp:null) :accessor
                         struct-shape-create-location-s3request-s3config :shape
                         "S3Config" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-s3request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor struct-shape-create-location-s3request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-s3request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-s3request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-s3request
                    'make-create-location-s3request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-arn))
      (common-lisp:list
       (common-lisp:cons "S3BucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3storage-class))
      (common-lisp:list
       (common-lisp:cons "S3StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3config))
      (common-lisp:list
       (common-lisp:cons "S3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-s3response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-s3response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-s3response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-s3response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-s3response
                    'make-create-location-s3response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-s3response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-smb-request common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         (common-lisp:error ":subdirectory is required") :type
                         (common-lisp:or smb-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-subdirectory
                         :shape "SmbSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-hostname :initarg :server-hostname :initform
                         (common-lisp:error ":server-hostname is required")
                         :type
                         (common-lisp:or server-hostname common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-server-hostname
                         :shape "ServerHostname" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user :initarg :user :initform
                         (common-lisp:error ":user is required") :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-create-location-smb-request-user :shape
                         "SmbUser" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-domain :shape
                         "SmbDomain" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or smb-password common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-password
                         :shape "SmbPassword" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-mount-options common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-mount-options
                         :shape "SmbMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-smb-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-smb-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-smb-request
                    'make-create-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-location-smb-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-location-smb-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-location-smb-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-location-smb-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-location-smb-response
                    'make-create-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-task-request common-lisp:nil
                       ((source-location-arn :initarg :source-location-arn
                         :initform
                         (common-lisp:error ":source-location-arn is required")
                         :type (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-task-request-source-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-location-arn :initarg
                         :destination-location-arn :initform
                         (common-lisp:error
                          ":destination-location-arn is required")
                         :type (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-task-request-destination-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-create-task-request-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-create-task-request-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (options :initarg :options :initform common-lisp:nil
                         :type (common-lisp:or options common-lisp:null)
                         :accessor struct-shape-create-task-request-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-create-task-request-excludes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or task-schedule common-lisp:null)
                         :accessor struct-shape-create-task-request-schedule
                         :shape "TaskSchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor struct-shape-create-task-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (includes :initarg :includes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-create-task-request-includes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-config :initarg :manifest-config :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-config common-lisp:null)
                         :accessor
                         struct-shape-create-task-request-manifest-config
                         :shape "ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-report-config :initarg :task-report-config
                         :initform common-lisp:nil :type
                         (common-lisp:or task-report-config common-lisp:null)
                         :accessor
                         struct-shape-create-task-request-task-report-config
                         :shape "TaskReportConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-task-request 'make-create-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-location-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-config))
      (common-lisp:list
       (common-lisp:cons "ManifestConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-report-config))
      (common-lisp:list
       (common-lisp:cons "TaskReportConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-task-response common-lisp:nil
                       ((task-arn :initarg :task-arn :initform common-lisp:nil
                         :type (common-lisp:or task-arn common-lisp:null)
                         :accessor struct-shape-create-task-response-task-arn
                         :shape "TaskArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-task-response 'make-create-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass credentials common-lisp:nil
                       ((username :initarg :username :initform
                         (common-lisp:error ":username is required") :type
                         (common-lisp:or ptolemy-username common-lisp:null)
                         :accessor struct-shape-credentials-username :shape
                         "PtolemyUsername" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or ptolemy-password common-lisp:null)
                         :accessor struct-shape-credentials-password :shape
                         "PtolemyPassword" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-credentials
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'credentials
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'credentials 'make-credentials))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input credentials))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input credentials))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input credentials))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-agent-request common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         (common-lisp:error ":agent-arn is required") :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-delete-agent-request-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-agent-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-agent-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-agent-request 'make-delete-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-agent-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-agent-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-agent-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-agent-response 'make-delete-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-location-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-location-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-location-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-location-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-location-request 'make-delete-location-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-location-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-location-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-location-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-location-response 'make-delete-location-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-location-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-task-request common-lisp:nil
                       ((task-arn :initarg :task-arn :initform
                         (common-lisp:error ":task-arn is required") :type
                         (common-lisp:or task-arn common-lisp:null) :accessor
                         struct-shape-delete-task-request-task-arn :shape
                         "TaskArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-task-request 'make-delete-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-task-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-task-response 'make-delete-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-agent-request common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         (common-lisp:error ":agent-arn is required") :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-describe-agent-request-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-agent-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-agent-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-agent-request 'make-describe-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-agent-response common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-describe-agent-response-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-describe-agent-response-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or agent-status common-lisp:null)
                         :accessor struct-shape-describe-agent-response-status
                         :shape "AgentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-connection-time :initarg :last-connection-time
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-agent-response-last-connection-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-agent-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-type common-lisp:null)
                         :accessor
                         struct-shape-describe-agent-response-endpoint-type
                         :shape "EndpointType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (private-link-config :initarg :private-link-config
                         :initform common-lisp:nil :type
                         (common-lisp:or private-link-config common-lisp:null)
                         :accessor
                         struct-shape-describe-agent-response-private-link-config
                         :shape "PrivateLinkConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform common-lisp:nil
                         :type (common-lisp:or platform common-lisp:null)
                         :accessor
                         struct-shape-describe-agent-response-platform :shape
                         "Platform" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-agent-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-agent-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-agent-response 'make-describe-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-connection-time))
      (common-lisp:list
       (common-lisp:cons "LastConnectionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-link-config))
      (common-lisp:list
       (common-lisp:cons "PrivateLinkConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-discovery-job-request common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-discovery-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-discovery-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-discovery-job-request
                    'make-describe-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-discovery-job-response common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (discovery-job-arn :initarg :discovery-job-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (collection-duration-minutes :initarg
                         :collection-duration-minutes :initform common-lisp:nil
                         :type
                         (common-lisp:or collection-duration-minutes
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-collection-duration-minutes
                         :shape "CollectionDurationMinutes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or discovery-job-status common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-status
                         :shape "DiscoveryJobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-start-time :initarg :job-start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-time common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-job-start-time
                         :shape "DiscoveryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (job-end-time :initarg :job-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-time common-lisp:null)
                         :accessor
                         struct-shape-describe-discovery-job-response-job-end-time
                         :shape "DiscoveryTime" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-discovery-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-discovery-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-discovery-job-response
                    'make-describe-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-start-time))
      (common-lisp:list
       (common-lisp:cons "JobStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-end-time))
      (common-lisp:list
       (common-lisp:cons "JobEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-azure-blob-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-azure-blob-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-azure-blob-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-azure-blob-request
                    'make-describe-location-azure-blob-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-azure-blob-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform common-lisp:nil :type
                         (common-lisp:or azure-blob-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-authentication-type
                         :shape "AzureBlobAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (blob-type :initarg :blob-type :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-blob-type common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-blob-type
                         :shape "AzureBlobType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-tier :initarg :access-tier :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-access-tier common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-access-tier
                         :shape "AzureAccessTier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-azure-blob-response-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-azure-blob-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-azure-blob-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-azure-blob-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-azure-blob-response
                    'make-describe-location-azure-blob-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blob-type))
      (common-lisp:list
       (common-lisp:cons "BlobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-tier))
      (common-lisp:list
       (common-lisp:cons "AccessTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-azure-blob-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-efs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-efs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-efs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-efs-request
                    'make-describe-location-efs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-efs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2config :initarg :ec2config :initform
                         common-lisp:nil :type
                         (common-lisp:or ec2config common-lisp:null) :accessor
                         struct-shape-describe-location-efs-response-ec2config
                         :shape "Ec2Config" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-efs-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (access-point-arn :initarg :access-point-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or efs-access-point-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-response-access-point-arn
                         :shape "EfsAccessPointArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-system-access-role-arn :initarg
                         :file-system-access-role-arn :initform common-lisp:nil
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-response-file-system-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (in-transit-encryption :initarg :in-transit-encryption
                         :initform common-lisp:nil :type
                         (common-lisp:or efs-in-transit-encryption
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-efs-response-in-transit-encryption
                         :shape "EfsInTransitEncryption" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-efs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-efs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-efs-response
                    'make-describe-location-efs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2config))
      (common-lisp:list
       (common-lisp:cons "Ec2Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-point-arn))
      (common-lisp:list
       (common-lisp:cons "AccessPointArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-transit-encryption))
      (common-lisp:list
       (common-lisp:cons "InTransitEncryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-efs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-lustre-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-lustre-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-lustre-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-lustre-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-lustre-request
                    'make-describe-location-fsx-lustre-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-lustre-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-lustre-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-lustre-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-lustre-response-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-fsx-lustre-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-lustre-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-lustre-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-lustre-response
                    'make-describe-location-fsx-lustre-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-lustre-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-ontap-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-ontap-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-ontap-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-ontap-request
                    'make-describe-location-fsx-ontap-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-ontap-response common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-fsx-ontap-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or fsx-protocol common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-protocol
                         :shape "FsxProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (storage-virtual-machine-arn :initarg
                         :storage-virtual-machine-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or storage-virtual-machine-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-storage-virtual-machine-arn
                         :shape "StorageVirtualMachineArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fsx-filesystem-arn :initarg :fsx-filesystem-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or fsx-filesystem-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-ontap-response-fsx-filesystem-arn
                         :shape "FsxFilesystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-ontap-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-ontap-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-ontap-response
                    'make-describe-location-fsx-ontap-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-virtual-machine-arn))
      (common-lisp:list
       (common-lisp:cons "StorageVirtualMachineArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fsx-filesystem-arn))
      (common-lisp:list
       (common-lisp:cons "FsxFilesystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-ontap-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-open-zfs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-open-zfs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-open-zfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-open-zfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-open-zfs-request
                    'make-describe-location-fsx-open-zfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-open-zfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-open-zfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-open-zfs-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-open-zfs-response-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or fsx-protocol common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-open-zfs-response-protocol
                         :shape "FsxProtocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-fsx-open-zfs-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-open-zfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-open-zfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-open-zfs-response
                    'make-describe-location-fsx-open-zfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "Protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-open-zfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-windows-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-windows-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-windows-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-windows-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-windows-request
                    'make-describe-location-fsx-windows-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-fsx-windows-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-windows-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-windows-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-windows-response-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-fsx-windows-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-describe-location-fsx-windows-response-user
                         :shape "SmbUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor
                         struct-shape-describe-location-fsx-windows-response-domain
                         :shape "SmbDomain" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-fsx-windows-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-fsx-windows-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-fsx-windows-response
                    'make-describe-location-fsx-windows-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-fsx-windows-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-hdfs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-hdfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-hdfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-hdfs-request
                    'make-describe-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-hdfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name-nodes :initarg :name-nodes :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-name-node-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-name-nodes
                         :shape "HdfsNameNodeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (block-size :initarg :block-size :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-block-size common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-block-size
                         :shape "HdfsBlockSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-factor :initarg :replication-factor
                         :initform common-lisp:nil :type
                         (common-lisp:or hdfs-replication-factor
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-replication-factor
                         :shape "HdfsReplicationFactor" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (kms-key-provider-uri :initarg :kms-key-provider-uri
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-provider-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-kms-key-provider-uri
                         :shape "KmsKeyProviderUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (qop-configuration :initarg :qop-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or qop-configuration common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-qop-configuration
                         :shape "QopConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform common-lisp:nil :type
                         (common-lisp:or hdfs-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-authentication-type
                         :shape "HdfsAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (simple-user :initarg :simple-user :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-user common-lisp:null) :accessor
                         struct-shape-describe-location-hdfs-response-simple-user
                         :shape "HdfsUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-principal :initarg :kerberos-principal
                         :initform common-lisp:nil :type
                         (common-lisp:or kerberos-principal common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-kerberos-principal
                         :shape "KerberosPrincipal" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-hdfs-response-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-hdfs-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-hdfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-hdfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-hdfs-response
                    'make-describe-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-nfs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-nfs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-nfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-nfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-nfs-request
                    'make-describe-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-nfs-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-nfs-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-nfs-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (on-prem-config :initarg :on-prem-config :initform
                         common-lisp:nil :type
                         (common-lisp:or on-prem-config common-lisp:null)
                         :accessor
                         struct-shape-describe-location-nfs-response-on-prem-config
                         :shape "OnPremConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or nfs-mount-options common-lisp:null)
                         :accessor
                         struct-shape-describe-location-nfs-response-mount-options
                         :shape "NfsMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-nfs-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-nfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-nfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-nfs-response
                    'make-describe-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-object-storage-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-object-storage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-object-storage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-object-storage-request
                    'make-describe-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-object-storage-response
                       common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-key :initarg :access-key :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-access-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-access-key
                         :shape "ObjectStorageAccessKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-port :initarg :server-port :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-port
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-server-port
                         :shape "ObjectStorageServerPort" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-protocol :initarg :server-protocol :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-protocol
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-server-protocol
                         :shape "ObjectStorageServerProtocol" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-object-storage-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (server-certificate :initarg :server-certificate
                         :initform common-lisp:nil :type
                         (common-lisp:or object-storage-certificate
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-location-object-storage-response-server-certificate
                         :shape "ObjectStorageCertificate" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-object-storage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-object-storage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-object-storage-response
                    'make-describe-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-s3request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-s3request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-location-s3request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-s3request
                    'make-describe-location-s3request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-s3response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3storage-class :initarg :s3storage-class :initform
                         common-lisp:nil :type
                         (common-lisp:or s3storage-class common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3response-s3storage-class
                         :shape "S3StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3config :initarg :s3config :initform common-lisp:nil
                         :type (common-lisp:or s3config common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3response-s3config
                         :shape "S3Config" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-s3response-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-s3response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-s3response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-location-s3response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-s3response
                    'make-describe-location-s3response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3storage-class))
      (common-lisp:list
       (common-lisp:cons "S3StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3config))
      (common-lisp:list
       (common-lisp:cons "S3Config"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-s3response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-smb-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-smb-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-smb-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-smb-request
                    'make-describe-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-location-smb-response common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-response-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-response-location-uri
                         :shape "LocationUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-response-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-describe-location-smb-response-user
                         :shape "SmbUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-response-domain
                         :shape "SmbDomain" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-mount-options common-lisp:null)
                         :accessor
                         struct-shape-describe-location-smb-response-mount-options
                         :shape "SmbMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-location-smb-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-location-smb-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-location-smb-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-location-smb-response
                    'make-describe-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-request common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform
                         (common-lisp:error ":storage-system-arn is required")
                         :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-request-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-request
                    'make-describe-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-resource-metrics-request
                       common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or discovery-resource-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-resource-type
                         :shape "DiscoveryResourceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resource-id is required") :type
                         (common-lisp:or resource-id common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-resource-id
                         :shape "ResourceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-time common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-start-time
                         :shape "DiscoveryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or discovery-time common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-end-time
                         :shape "DiscoveryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-max-results
                         :shape "DiscoveryMaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-request-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-resource-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-resource-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resource-metrics-request
                    'make-describe-storage-system-resource-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-resource-metrics-response
                       common-lisp:nil
                       ((metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or metrics common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-response-metrics
                         :shape "Metrics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resource-metrics-response-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-resource-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-resource-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resource-metrics-response
                    'make-describe-storage-system-resource-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resource-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-resources-request
                       common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or discovery-resource-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-resource-type
                         :shape "DiscoveryResourceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-ids :initarg :resource-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-ids common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-resource-ids
                         :shape "ResourceIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or resource-filters common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-filter
                         :shape "ResourceFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-max-results
                         :shape "DiscoveryMaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-request-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resources-request
                    'make-describe-storage-system-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-ids))
      (common-lisp:list
       (common-lisp:cons "ResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "Filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-resources-response
                       common-lisp:nil
                       ((resource-details :initarg :resource-details :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-details common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-response-resource-details
                         :shape "ResourceDetails" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-resources-response-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-resources-response
                    'make-describe-storage-system-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-details))
      (common-lisp:list
       (common-lisp:cons "ResourceDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storage-system-response common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-configuration :initarg :server-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or discovery-server-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-server-configuration
                         :shape "DiscoveryServerConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (system-type :initarg :system-type :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-system-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-system-type
                         :shape "DiscoverySystemType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-agent-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-agent-arns
                         :shape "DiscoveryAgentArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-describe-storage-system-response-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or error-message common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-error-message
                         :shape "ErrorMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connectivity-status :initarg :connectivity-status
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-system-connectivity-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-connectivity-status
                         :shape "StorageSystemConnectivityStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-storage-system-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secrets-manager-arn :initarg :secrets-manager-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or secrets-manager-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-storage-system-response-secrets-manager-arn
                         :shape "SecretsManagerArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storage-system-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storage-system-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storage-system-response
                    'make-describe-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-type))
      (common-lisp:list
       (common-lisp:cons "SystemType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "ErrorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connectivity-status))
      (common-lisp:list
       (common-lisp:cons "ConnectivityStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secrets-manager-arn))
      (common-lisp:list
       (common-lisp:cons "SecretsManagerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-task-execution-request common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform
                         (common-lisp:error ":task-execution-arn is required")
                         :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-request-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-task-execution-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-task-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-task-execution-request
                    'make-describe-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-task-execution-response common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or task-execution-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-status
                         :shape "TaskExecutionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (options :initarg :options :initform common-lisp:nil
                         :type (common-lisp:or options common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-excludes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (includes :initarg :includes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-includes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-config :initarg :manifest-config :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-config common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-manifest-config
                         :shape "ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-task-execution-response-start-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (estimated-files-to-transfer :initarg
                         :estimated-files-to-transfer :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-estimated-files-to-transfer
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (estimated-bytes-to-transfer :initarg
                         :estimated-bytes-to-transfer :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-estimated-bytes-to-transfer
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (files-transferred :initarg :files-transferred
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-files-transferred
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bytes-written :initarg :bytes-written :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-bytes-written
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bytes-transferred :initarg :bytes-transferred
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-bytes-transferred
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bytes-compressed :initarg :bytes-compressed :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-bytes-compressed
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (result :initarg :result :initform common-lisp:nil
                         :type
                         (common-lisp:or task-execution-result-detail
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-result
                         :shape "TaskExecutionResultDetail" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (task-report-config :initarg :task-report-config
                         :initform common-lisp:nil :type
                         (common-lisp:or task-report-config common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-task-report-config
                         :shape "TaskReportConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (files-deleted :initarg :files-deleted :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-files-deleted
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (files-skipped :initarg :files-skipped :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-files-skipped
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (files-verified :initarg :files-verified :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-files-verified
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (report-result :initarg :report-result :initform
                         common-lisp:nil :type
                         (common-lisp:or report-result common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-report-result
                         :shape "ReportResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (estimated-files-to-delete :initarg
                         :estimated-files-to-delete :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-task-execution-response-estimated-files-to-delete
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-task-execution-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-task-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-task-execution-response
                    'make-describe-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-config))
      (common-lisp:list
       (common-lisp:cons "ManifestConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-files-to-transfer))
      (common-lisp:list
       (common-lisp:cons "EstimatedFilesToTransfer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-bytes-to-transfer))
      (common-lisp:list
       (common-lisp:cons "EstimatedBytesToTransfer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'files-transferred))
      (common-lisp:list
       (common-lisp:cons "FilesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-written))
      (common-lisp:list
       (common-lisp:cons "BytesWritten"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-transferred))
      (common-lisp:list
       (common-lisp:cons "BytesTransferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-compressed))
      (common-lisp:list
       (common-lisp:cons "BytesCompressed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-report-config))
      (common-lisp:list
       (common-lisp:cons "TaskReportConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'files-deleted))
      (common-lisp:list
       (common-lisp:cons "FilesDeleted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'files-skipped))
      (common-lisp:list
       (common-lisp:cons "FilesSkipped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'files-verified))
      (common-lisp:list
       (common-lisp:cons "FilesVerified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-result))
      (common-lisp:list
       (common-lisp:cons "ReportResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-files-to-delete))
      (common-lisp:list
       (common-lisp:cons "EstimatedFilesToDelete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-task-request common-lisp:nil
                       ((task-arn :initarg :task-arn :initform
                         (common-lisp:error ":task-arn is required") :type
                         (common-lisp:or task-arn common-lisp:null) :accessor
                         struct-shape-describe-task-request-task-arn :shape
                         "TaskArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-task-request 'make-describe-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-task-response common-lisp:nil
                       ((task-arn :initarg :task-arn :initform common-lisp:nil
                         :type (common-lisp:or task-arn common-lisp:null)
                         :accessor struct-shape-describe-task-response-task-arn
                         :shape "TaskArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or task-status common-lisp:null)
                         :accessor struct-shape-describe-task-response-status
                         :shape "TaskStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-describe-task-response-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (current-task-execution-arn :initarg
                         :current-task-execution-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-current-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-location-arn :initarg :source-location-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-source-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-location-arn :initarg
                         :destination-location-arn :initform common-lisp:nil
                         :type (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-destination-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-network-interface-arns :initarg
                         :source-network-interface-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or source-network-interface-arns
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-source-network-interface-arns
                         :shape "SourceNetworkInterfaceArns" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination-network-interface-arns :initarg
                         :destination-network-interface-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or destination-network-interface-arns
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-destination-network-interface-arns
                         :shape "DestinationNetworkInterfaceArns" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (options :initarg :options :initform common-lisp:nil
                         :type (common-lisp:or options common-lisp:null)
                         :accessor struct-shape-describe-task-response-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-describe-task-response-excludes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or task-schedule common-lisp:null)
                         :accessor struct-shape-describe-task-response-schedule
                         :shape "TaskSchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-error-code :shape
                         "string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-detail :initarg :error-detail :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-error-detail
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-task-response-creation-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (includes :initarg :includes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-describe-task-response-includes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-config :initarg :manifest-config :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-config common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-manifest-config
                         :shape "ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-report-config :initarg :task-report-config
                         :initform common-lisp:nil :type
                         (common-lisp:or task-report-config common-lisp:null)
                         :accessor
                         struct-shape-describe-task-response-task-report-config
                         :shape "TaskReportConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-task-response 'make-describe-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "CurrentTaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-location-arn))
      (common-lisp:list
       (common-lisp:cons "SourceLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-location-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationLocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'source-network-interface-arns))
      (common-lisp:list
       (common-lisp:cons "SourceNetworkInterfaceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-network-interface-arns))
      (common-lisp:list
       (common-lisp:cons "DestinationNetworkInterfaceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-detail))
      (common-lisp:list
       (common-lisp:cons "ErrorDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-config))
      (common-lisp:list
       (common-lisp:cons "ManifestConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-report-config))
      (common-lisp:list
       (common-lisp:cons "TaskReportConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-task-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype destination-network-interface-arns ()
   '(trivial-types:proper-list network-interface-arn))
 (common-lisp:defun make-destination-network-interface-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype discovery-agent-arn-list ()
   '(trivial-types:proper-list agent-arn))
 (common-lisp:defun make-discovery-agent-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list agent-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype discovery-job-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype discovery-job-list ()
   '(trivial-types:proper-list discovery-job-list-entry))
 (common-lisp:defun make-discovery-job-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            discovery-job-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass discovery-job-list-entry common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-discovery-job-list-entry-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or discovery-job-status common-lisp:null)
                         :accessor struct-shape-discovery-job-list-entry-status
                         :shape "DiscoveryJobStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-discovery-job-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'discovery-job-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'discovery-job-list-entry 'make-discovery-job-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discovery-job-list-entry))
   common-lisp:nil))
(common-lisp:deftype discovery-job-status () 'common-lisp:string)
(common-lisp:deftype discovery-max-results () 'common-lisp:integer)
(common-lisp:deftype discovery-next-token () 'common-lisp:string)
(common-lisp:deftype discovery-resource-filter () 'common-lisp:string)
(common-lisp:deftype discovery-resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass discovery-server-configuration common-lisp:nil
                       ((server-hostname :initarg :server-hostname :initform
                         (common-lisp:error ":server-hostname is required")
                         :type
                         (common-lisp:or discovery-server-hostname
                                         common-lisp:null)
                         :accessor
                         struct-shape-discovery-server-configuration-server-hostname
                         :shape "DiscoveryServerHostname" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-port :initarg :server-port :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-server-port
                                         common-lisp:null)
                         :accessor
                         struct-shape-discovery-server-configuration-server-port
                         :shape "DiscoveryServerPort" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-discovery-server-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'discovery-server-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'discovery-server-configuration
                    'make-discovery-server-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-hostname))
      (common-lisp:list
       (common-lisp:cons "ServerHostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          discovery-server-configuration))
   common-lisp:nil))
(common-lisp:deftype discovery-server-hostname () 'common-lisp:string)
(common-lisp:deftype discovery-server-port () 'common-lisp:integer)
(common-lisp:deftype discovery-system-type () 'common-lisp:string)
(common-lisp:deftype discovery-time () 'common-lisp:string)
(common-lisp:deftype duration () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass ec2config common-lisp:nil
                       ((subnet-arn :initarg :subnet-arn :initform
                         (common-lisp:error ":subnet-arn is required") :type
                         (common-lisp:or ec2subnet-arn common-lisp:null)
                         :accessor struct-shape-ec2config-subnet-arn :shape
                         "Ec2SubnetArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform
                         (common-lisp:error ":security-group-arns is required")
                         :type
                         (common-lisp:or ec2security-group-arn-list
                                         common-lisp:null)
                         :accessor struct-shape-ec2config-security-group-arns
                         :shape "Ec2SecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ec2config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ec2config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ec2config 'make-ec2config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ec2config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ec2config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arn))
      (common-lisp:list
       (common-lisp:cons "SubnetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ec2config))
   common-lisp:nil))
(common-lisp:deftype ec2security-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ec2security-group-arn-list ()
   '(trivial-types:proper-list ec2security-group-arn))
 (common-lisp:defun make-ec2security-group-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2security-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ec2subnet-arn () 'common-lisp:string)
(common-lisp:deftype efs-access-point-arn () 'common-lisp:string)
(common-lisp:deftype efs-filesystem-arn () 'common-lisp:string)
(common-lisp:deftype efs-in-transit-encryption () 'common-lisp:string)
(common-lisp:deftype efs-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype enabled-protocols ()
   '(trivial-types:proper-list ptolemy-string))
 (common-lisp:defun make-enabled-protocols
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ptolemy-string))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint () 'common-lisp:string)
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype filter-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-list () '(trivial-types:proper-list filter-rule))
 (common-lisp:defun make-filter-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filter-members ()
   '(trivial-types:proper-list ptolemy-string))
 (common-lisp:defun make-filter-members
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ptolemy-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass filter-rule common-lisp:nil
                       ((filter-type :initarg :filter-type :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-type common-lisp:null)
                         :accessor struct-shape-filter-rule-filter-type :shape
                         "FilterType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or filter-value common-lisp:null)
                         :accessor struct-shape-filter-rule-value :shape
                         "FilterValue" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-filter-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'filter-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'filter-rule 'make-filter-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-type))
      (common-lisp:list
       (common-lisp:cons "FilterType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter-rule))
   common-lisp:nil))
(common-lisp:deftype filter-type () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-attribute-value))
 (common-lisp:defun make-filter-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-attribute-value))
   aws-sdk/generator/shape::members))
(common-lisp:deftype fsx-filesystem-arn () 'common-lisp:string)
(common-lisp:deftype fsx-lustre-subdirectory () 'common-lisp:string)
(common-lisp:deftype fsx-ontap-subdirectory () 'common-lisp:string)
(common-lisp:deftype fsx-open-zfs-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass fsx-protocol common-lisp:nil
                       ((nfs :initarg :nfs :initform common-lisp:nil :type
                         (common-lisp:or fsx-protocol-nfs common-lisp:null)
                         :accessor struct-shape-fsx-protocol-nfs :shape
                         "FsxProtocolNfs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smb :initarg :smb :initform common-lisp:nil :type
                         (common-lisp:or fsx-protocol-smb common-lisp:null)
                         :accessor struct-shape-fsx-protocol-smb :shape
                         "FsxProtocolSmb" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-fsx-protocol
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'fsx-protocol
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'fsx-protocol 'make-fsx-protocol))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nfs))
      (common-lisp:list
       (common-lisp:cons "NFS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smb))
      (common-lisp:list
       (common-lisp:cons "SMB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass fsx-protocol-nfs common-lisp:nil
                       ((mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or nfs-mount-options common-lisp:null)
                         :accessor struct-shape-fsx-protocol-nfs-mount-options
                         :shape "NfsMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-fsx-protocol-nfs
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'fsx-protocol-nfs
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'fsx-protocol-nfs 'make-fsx-protocol-nfs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol-nfs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass fsx-protocol-smb common-lisp:nil
                       ((domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor struct-shape-fsx-protocol-smb-domain :shape
                         "SmbDomain" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-mount-options common-lisp:null)
                         :accessor struct-shape-fsx-protocol-smb-mount-options
                         :shape "SmbMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or smb-password common-lisp:null)
                         :accessor struct-shape-fsx-protocol-smb-password
                         :shape "SmbPassword" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user :initarg :user :initform
                         (common-lisp:error ":user is required") :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-fsx-protocol-smb-user :shape "SmbUser"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-fsx-protocol-smb
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'fsx-protocol-smb
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'fsx-protocol-smb 'make-fsx-protocol-smb))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input fsx-protocol-smb))
   common-lisp:nil))
(common-lisp:deftype fsx-windows-subdirectory () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass generate-recommendations-request common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-generate-recommendations-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-ids :initarg :resource-ids :initform
                         (common-lisp:error ":resource-ids is required") :type
                         (common-lisp:or resource-ids common-lisp:null)
                         :accessor
                         struct-shape-generate-recommendations-request-resource-ids
                         :shape "ResourceIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or discovery-resource-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-generate-recommendations-request-resource-type
                         :shape "DiscoveryResourceType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-generate-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'generate-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'generate-recommendations-request
                    'make-generate-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-ids))
      (common-lisp:list
       (common-lisp:cons "ResourceIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass generate-recommendations-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-generate-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'generate-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'generate-recommendations-response
                    'make-generate-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype gid () 'common-lisp:string)
(common-lisp:deftype hdfs-authentication-type () 'common-lisp:string)
(common-lisp:deftype hdfs-block-size () 'common-lisp:integer)
(common-lisp:deftype hdfs-data-transfer-protection () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass hdfs-name-node common-lisp:nil
                       ((hostname :initarg :hostname :initform
                         (common-lisp:error ":hostname is required") :type
                         (common-lisp:or hdfs-server-hostname common-lisp:null)
                         :accessor struct-shape-hdfs-name-node-hostname :shape
                         "HdfsServerHostname" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (port :initarg :port :initform
                         (common-lisp:error ":port is required") :type
                         (common-lisp:or hdfs-server-port common-lisp:null)
                         :accessor struct-shape-hdfs-name-node-port :shape
                         "HdfsServerPort" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hdfs-name-node
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hdfs-name-node
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hdfs-name-node 'make-hdfs-name-node))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hostname))
      (common-lisp:list
       (common-lisp:cons "Hostname"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'port))
      (common-lisp:list
       (common-lisp:cons "Port"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hdfs-name-node))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype hdfs-name-node-list ()
   '(trivial-types:proper-list hdfs-name-node))
 (common-lisp:defun make-hdfs-name-node-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hdfs-name-node))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hdfs-replication-factor () 'common-lisp:integer)
(common-lisp:deftype hdfs-rpc-protection () 'common-lisp:string)
(common-lisp:deftype hdfs-server-hostname () 'common-lisp:string)
(common-lisp:deftype hdfs-server-port () 'common-lisp:integer)
(common-lisp:deftype hdfs-subdirectory () 'common-lisp:string)
(common-lisp:deftype hdfs-user () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass iops common-lisp:nil
                       ((read :initarg :read :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-iops-read :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (write :initarg :write :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-iops-write :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (other :initarg :other :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-iops-other :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-iops-total :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iops (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iops
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'iops 'make-iops))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iops))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iops))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iops))
   common-lisp:nil))
(common-lisp:deftype iam-role-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype input-tag-list ()
   '(trivial-types:proper-list tag-list-entry))
 (common-lisp:defun make-input-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-exception
     (datasync-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-exception-message)
      (error-code :initarg :error-code :initform common-lisp:nil :reader
       internal-exception-error-code)))
 (common-lisp:export
  (common-lisp:list 'internal-exception 'internal-exception-message
                    'internal-exception-error-code)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (datasync-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)
      (error-code :initarg :error-code :initform common-lisp:nil :reader
       invalid-request-exception-error-code)
      (datasync-error-code :initarg :datasync-error-code :initform
       common-lisp:nil :reader invalid-request-exception-datasync-error-code)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message
                    'invalid-request-exception-error-code
                    'invalid-request-exception-datasync-error-code)))
(common-lisp:deftype kerberos-keytab-file ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype kerberos-krb5conf-file ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype kerberos-principal () 'common-lisp:string)
(common-lisp:deftype kms-key-provider-uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass latency common-lisp:nil
                       ((read :initarg :read :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-latency-read :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (write :initarg :write :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-latency-write :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (other :initarg :other :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-latency-other :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-latency
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'latency
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'latency 'make-latency))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input latency))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input latency))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input latency))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-agents-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-agents-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-agents-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-agents-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-agents-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-agents-request 'make-list-agents-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-agents-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-agents-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-agents-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-agents-response common-lisp:nil
                       ((agents :initarg :agents :initform common-lisp:nil
                         :type (common-lisp:or agent-list common-lisp:null)
                         :accessor struct-shape-list-agents-response-agents
                         :shape "AgentList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-agents-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-agents-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-agents-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-agents-response 'make-list-agents-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-agents-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-agents-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agents))
      (common-lisp:list
       (common-lisp:cons "Agents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-agents-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-discovery-jobs-request common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-list-discovery-jobs-request-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-discovery-jobs-request-max-results
                         :shape "DiscoveryMaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-list-discovery-jobs-request-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-discovery-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-discovery-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-discovery-jobs-request
                    'make-list-discovery-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-discovery-jobs-response common-lisp:nil
                       ((discovery-jobs :initarg :discovery-jobs :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-job-list common-lisp:null)
                         :accessor
                         struct-shape-list-discovery-jobs-response-discovery-jobs
                         :shape "DiscoveryJobList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-list-discovery-jobs-response-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-discovery-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-discovery-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-discovery-jobs-response
                    'make-list-discovery-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-jobs))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-discovery-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-locations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-locations-request-max-results :shape
                         "MaxResults" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-locations-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or location-filters common-lisp:null)
                         :accessor struct-shape-list-locations-request-filters
                         :shape "LocationFilters" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-locations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-locations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-locations-request 'make-list-locations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-locations-response common-lisp:nil
                       ((locations :initarg :locations :initform
                         common-lisp:nil :type
                         (common-lisp:or location-list common-lisp:null)
                         :accessor
                         struct-shape-list-locations-response-locations :shape
                         "LocationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-locations-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-locations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-locations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-locations-response 'make-list-locations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locations))
      (common-lisp:list
       (common-lisp:cons "Locations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-locations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-storage-systems-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-max-results
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-storage-systems-request-max-results
                         :shape "DiscoveryMaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-list-storage-systems-request-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-storage-systems-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-storage-systems-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-storage-systems-request
                    'make-list-storage-systems-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-storage-systems-response common-lisp:nil
                       ((storage-systems :initarg :storage-systems :initform
                         common-lisp:nil :type
                         (common-lisp:or storage-system-list common-lisp:null)
                         :accessor
                         struct-shape-list-storage-systems-response-storage-systems
                         :shape "StorageSystemList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-next-token common-lisp:null)
                         :accessor
                         struct-shape-list-storage-systems-response-next-token
                         :shape "DiscoveryNextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-storage-systems-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-storage-systems-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-storage-systems-response
                    'make-list-storage-systems-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-systems))
      (common-lisp:list
       (common-lisp:cons "StorageSystems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-storage-systems-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or output-tag-list common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "OutputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-task-executions-request common-lisp:nil
                       ((task-arn :initarg :task-arn :initform common-lisp:nil
                         :type (common-lisp:or task-arn common-lisp:null)
                         :accessor
                         struct-shape-list-task-executions-request-task-arn
                         :shape "TaskArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-task-executions-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-task-executions-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-task-executions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-task-executions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-task-executions-request
                    'make-list-task-executions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-task-executions-response common-lisp:nil
                       ((task-executions :initarg :task-executions :initform
                         common-lisp:nil :type
                         (common-lisp:or task-execution-list common-lisp:null)
                         :accessor
                         struct-shape-list-task-executions-response-task-executions
                         :shape "TaskExecutionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-task-executions-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-task-executions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-task-executions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-task-executions-response
                    'make-list-task-executions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-executions))
      (common-lisp:list
       (common-lisp:cons "TaskExecutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-task-executions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tasks-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-tasks-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tasks-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or task-filters common-lisp:null)
                         :accessor struct-shape-list-tasks-request-filters
                         :shape "TaskFilters" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tasks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tasks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tasks-request 'make-list-tasks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tasks-response common-lisp:nil
                       ((tasks :initarg :tasks :initform common-lisp:nil :type
                         (common-lisp:or task-list common-lisp:null) :accessor
                         struct-shape-list-tasks-response-tasks :shape
                         "TaskList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-tasks-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tasks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tasks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tasks-response 'make-list-tasks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tasks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tasks))
      (common-lisp:list
       (common-lisp:cons "Tasks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tasks-response))
   common-lisp:nil))
(common-lisp:deftype location-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass location-filter common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or location-filter-name common-lisp:null)
                         :accessor struct-shape-location-filter-name :shape
                         "LocationFilterName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-location-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operator :initarg :operator :initform
                         (common-lisp:error ":operator is required") :type
                         (common-lisp:or operator common-lisp:null) :accessor
                         struct-shape-location-filter-operator :shape
                         "Operator" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-location-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'location-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'location-filter 'make-location-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input location-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input location-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input location-filter))
   common-lisp:nil))
(common-lisp:deftype location-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype location-filters ()
   '(trivial-types:proper-list location-filter))
 (common-lisp:defun make-location-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list location-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype location-list ()
   '(trivial-types:proper-list location-list-entry))
 (common-lisp:defun make-location-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list location-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass location-list-entry common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-location-list-entry-location-arn :shape
                         "LocationArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-uri :initarg :location-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or location-uri common-lisp:null)
                         :accessor
                         struct-shape-location-list-entry-location-uri :shape
                         "LocationUri" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-location-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'location-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'location-list-entry 'make-location-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input location-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input location-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-uri))
      (common-lisp:list
       (common-lisp:cons "LocationUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input location-list-entry))
   common-lisp:nil))
(common-lisp:deftype location-uri () 'common-lisp:string)
(common-lisp:deftype log-group-arn () 'common-lisp:string)
(common-lisp:deftype log-level () 'common-lisp:string)
(common-lisp:deftype manifest-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass manifest-config common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-action common-lisp:null)
                         :accessor struct-shape-manifest-config-action :shape
                         "ManifestAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (format :initarg :format :initform common-lisp:nil
                         :type
                         (common-lisp:or manifest-format common-lisp:null)
                         :accessor struct-shape-manifest-config-format :shape
                         "ManifestFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or source-manifest-config
                                         common-lisp:null)
                         :accessor struct-shape-manifest-config-source :shape
                         "SourceManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-manifest-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'manifest-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'manifest-config 'make-manifest-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input manifest-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input manifest-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input manifest-config))
   common-lisp:nil))
(common-lisp:deftype manifest-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass max-p95performance common-lisp:nil
                       ((iops-read :initarg :iops-read :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-max-p95performance-iops-read
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iops-write :initarg :iops-write :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-max-p95performance-iops-write
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iops-other :initarg :iops-other :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-max-p95performance-iops-other
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iops-total :initarg :iops-total :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-max-p95performance-iops-total
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throughput-read :initarg :throughput-read :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-throughput-read :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throughput-write :initarg :throughput-write :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-throughput-write
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throughput-other :initarg :throughput-other :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-throughput-other
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throughput-total :initarg :throughput-total :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-throughput-total
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-read :initarg :latency-read :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-max-p95performance-latency-read
                         :shape "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-write :initarg :latency-write :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-latency-write :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency-other :initarg :latency-other :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor
                         struct-shape-max-p95performance-latency-other :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-max-p95performance
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'max-p95performance
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'max-p95performance 'make-max-p95performance))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input max-p95performance))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input max-p95performance))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-read))
      (common-lisp:list
       (common-lisp:cons "IopsRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-write))
      (common-lisp:list
       (common-lisp:cons "IopsWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-other))
      (common-lisp:list
       (common-lisp:cons "IopsOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops-total))
      (common-lisp:list
       (common-lisp:cons "IopsTotal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-read))
      (common-lisp:list
       (common-lisp:cons "ThroughputRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-write))
      (common-lisp:list
       (common-lisp:cons "ThroughputWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-other))
      (common-lisp:list
       (common-lisp:cons "ThroughputOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput-total))
      (common-lisp:list
       (common-lisp:cons "ThroughputTotal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-read))
      (common-lisp:list
       (common-lisp:cons "LatencyRead"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-write))
      (common-lisp:list
       (common-lisp:cons "LatencyWrite"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency-other))
      (common-lisp:list
       (common-lisp:cons "LatencyOther"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input max-p95performance))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype metrics () '(trivial-types:proper-list resource-metrics))
 (common-lisp:defun make-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-metrics))
   aws-sdk/generator/shape::members))
(common-lisp:deftype mtime () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass net-app-ontapcluster common-lisp:nil
                       ((cifs-share-count :initarg :cifs-share-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cifs-share-count
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (nfs-exported-volumes :initarg :nfs-exported-volumes
                         :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-nfs-exported-volumes
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-resource-id :shape
                         "PtolemyUUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cluster-name :initarg :cluster-name :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cluster-name :shape
                         "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-p95performance :initarg :max-p95performance
                         :initform common-lisp:nil :type
                         (common-lisp:or max-p95performance common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-max-p95performance
                         :shape "MaxP95Performance" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cluster-block-storage-size :initarg
                         :cluster-block-storage-size :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cluster-block-storage-size
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cluster-block-storage-used :initarg
                         :cluster-block-storage-used :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cluster-block-storage-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cluster-block-storage-logical-used :initarg
                         :cluster-block-storage-logical-used :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cluster-block-storage-logical-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations :initarg :recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendations common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-recommendations
                         :shape "Recommendations" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-status :initarg :recommendation-status
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-recommendation-status
                         :shape "RecommendationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lun-count :initarg :lun-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-net-app-ontapcluster-lun-count
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cluster-cloud-storage-used :initarg
                         :cluster-cloud-storage-used :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapcluster-cluster-cloud-storage-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-net-app-ontapcluster
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'net-app-ontapcluster
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapcluster 'make-net-app-ontapcluster))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfs-exported-volumes))
      (common-lisp:list
       (common-lisp:cons "NfsExportedVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-name))
      (common-lisp:list
       (common-lisp:cons "ClusterName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-size))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-used))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-block-storage-logical-used))
      (common-lisp:list
       (common-lisp:cons "ClusterBlockStorageLogicalUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lun-count))
      (common-lisp:list
       (common-lisp:cons "LunCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cluster-cloud-storage-used))
      (common-lisp:list
       (common-lisp:cons "ClusterCloudStorageUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapcluster))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapclusters ()
   '(trivial-types:proper-list net-app-ontapcluster))
 (common-lisp:defun make-net-app-ontapclusters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapcluster))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass net-app-ontapsvm common-lisp:nil
                       ((cluster-uuid :initarg :cluster-uuid :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor struct-shape-net-app-ontapsvm-cluster-uuid
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor struct-shape-net-app-ontapsvm-resource-id
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (svm-name :initarg :svm-name :initform common-lisp:nil
                         :type (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor struct-shape-net-app-ontapsvm-svm-name
                         :shape "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cifs-share-count :initarg :cifs-share-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-cifs-share-count :shape
                         "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled-protocols :initarg :enabled-protocols
                         :initform common-lisp:nil :type
                         (common-lisp:or enabled-protocols common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-enabled-protocols :shape
                         "EnabledProtocols" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-capacity-used :initarg :total-capacity-used
                         :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-total-capacity-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-capacity-provisioned :initarg
                         :total-capacity-provisioned :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-total-capacity-provisioned
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-logical-capacity-used :initarg
                         :total-logical-capacity-used :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-total-logical-capacity-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-p95performance :initarg :max-p95performance
                         :initform common-lisp:nil :type
                         (common-lisp:or max-p95performance common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-max-p95performance
                         :shape "MaxP95Performance" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations :initarg :recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendations common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-recommendations :shape
                         "Recommendations" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (nfs-exported-volumes :initarg :nfs-exported-volumes
                         :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-nfs-exported-volumes
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-status :initarg :recommendation-status
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-recommendation-status
                         :shape "RecommendationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (total-snapshot-capacity-used :initarg
                         :total-snapshot-capacity-used :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapsvm-total-snapshot-capacity-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lun-count :initarg :lun-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-net-app-ontapsvm-lun-count
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-net-app-ontapsvm
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'net-app-ontapsvm
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapsvm 'make-net-app-ontapsvm))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cluster-uuid))
      (common-lisp:list
       (common-lisp:cons "ClusterUuid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-name))
      (common-lisp:list
       (common-lisp:cons "SvmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled-protocols))
      (common-lisp:list
       (common-lisp:cons "EnabledProtocols"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-capacity-provisioned))
      (common-lisp:list
       (common-lisp:cons "TotalCapacityProvisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-logical-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalLogicalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfs-exported-volumes))
      (common-lisp:list
       (common-lisp:cons "NfsExportedVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-snapshot-capacity-used))
      (common-lisp:list
       (common-lisp:cons "TotalSnapshotCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lun-count))
      (common-lisp:list
       (common-lisp:cons "LunCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapsvm))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapsvms ()
   '(trivial-types:proper-list net-app-ontapsvm))
 (common-lisp:defun make-net-app-ontapsvms
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapsvm))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass net-app-ontapvolume common-lisp:nil
                       ((volume-name :initarg :volume-name :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor struct-shape-net-app-ontapvolume-volume-name
                         :shape "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor struct-shape-net-app-ontapvolume-resource-id
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cifs-share-count :initarg :cifs-share-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-cifs-share-count
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-style :initarg :security-style :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-security-style :shape
                         "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (svm-uuid :initarg :svm-uuid :initform common-lisp:nil
                         :type (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor struct-shape-net-app-ontapvolume-svm-uuid
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (svm-name :initarg :svm-name :initform common-lisp:nil
                         :type (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor struct-shape-net-app-ontapvolume-svm-name
                         :shape "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capacity-used :initarg :capacity-used :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-capacity-used :shape
                         "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (capacity-provisioned :initarg :capacity-provisioned
                         :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-capacity-provisioned
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logical-capacity-used :initarg :logical-capacity-used
                         :initform common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-logical-capacity-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (nfs-exported :initarg :nfs-exported :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-boolean common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-nfs-exported :shape
                         "PtolemyBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (snapshot-capacity-used :initarg
                         :snapshot-capacity-used :initform common-lisp:nil
                         :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-snapshot-capacity-used
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-p95performance :initarg :max-p95performance
                         :initform common-lisp:nil :type
                         (common-lisp:or max-p95performance common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-max-p95performance
                         :shape "MaxP95Performance" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations :initarg :recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendations common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-recommendations
                         :shape "Recommendations" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-status :initarg :recommendation-status
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-net-app-ontapvolume-recommendation-status
                         :shape "RecommendationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lun-count :initarg :lun-count :initform
                         common-lisp:nil :type
                         (common-lisp:or non-negative-long common-lisp:null)
                         :accessor struct-shape-net-app-ontapvolume-lun-count
                         :shape "NonNegativeLong" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-net-app-ontapvolume
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'net-app-ontapvolume
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'net-app-ontapvolume 'make-net-app-ontapvolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-name))
      (common-lisp:list
       (common-lisp:cons "VolumeName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cifs-share-count))
      (common-lisp:list
       (common-lisp:cons "CifsShareCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-style))
      (common-lisp:list
       (common-lisp:cons "SecurityStyle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-uuid))
      (common-lisp:list
       (common-lisp:cons "SvmUuid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'svm-name))
      (common-lisp:list
       (common-lisp:cons "SvmName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity-used))
      (common-lisp:list
       (common-lisp:cons "CapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'capacity-provisioned))
      (common-lisp:list
       (common-lisp:cons "CapacityProvisioned"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'logical-capacity-used))
      (common-lisp:list
       (common-lisp:cons "LogicalCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nfs-exported))
      (common-lisp:list
       (common-lisp:cons "NfsExported"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-capacity-used))
      (common-lisp:list
       (common-lisp:cons "SnapshotCapacityUsed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-p95performance))
      (common-lisp:list
       (common-lisp:cons "MaxP95Performance"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-status))
      (common-lisp:list
       (common-lisp:cons "RecommendationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lun-count))
      (common-lisp:list
       (common-lisp:cons "LunCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input net-app-ontapvolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype net-app-ontapvolumes ()
   '(trivial-types:proper-list net-app-ontapvolume))
 (common-lisp:defun make-net-app-ontapvolumes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list net-app-ontapvolume))
   aws-sdk/generator/shape::members))
(common-lisp:deftype network-interface-arn () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass nfs-mount-options common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or nfs-version common-lisp:null)
                         :accessor struct-shape-nfs-mount-options-version
                         :shape "NfsVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-nfs-mount-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'nfs-mount-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'nfs-mount-options 'make-nfs-mount-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nfs-mount-options))
   common-lisp:nil))
(common-lisp:deftype nfs-subdirectory () 'common-lisp:string)
(common-lisp:deftype nfs-version () 'common-lisp:string)
(common-lisp:deftype non-negative-double () 'common-lisp:double-float)
(common-lisp:deftype non-negative-long () 'common-lisp:integer)
(common-lisp:deftype object-storage-access-key () 'common-lisp:string)
(common-lisp:deftype object-storage-bucket-name () 'common-lisp:string)
(common-lisp:deftype object-storage-certificate ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype object-storage-secret-key () 'common-lisp:string)
(common-lisp:deftype object-storage-server-port () 'common-lisp:integer)
(common-lisp:deftype object-storage-server-protocol () 'common-lisp:string)
(common-lisp:deftype object-tags () 'common-lisp:string)
(common-lisp:deftype object-version-ids () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass on-prem-config common-lisp:nil
                       ((agent-arns :initarg :agent-arns :initform
                         (common-lisp:error ":agent-arns is required") :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor struct-shape-on-prem-config-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-on-prem-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'on-prem-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'on-prem-config 'make-on-prem-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-prem-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-prem-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-prem-config))
   common-lisp:nil))
(common-lisp:deftype operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass options common-lisp:nil
                       ((verify-mode :initarg :verify-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or verify-mode common-lisp:null)
                         :accessor struct-shape-options-verify-mode :shape
                         "VerifyMode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (overwrite-mode :initarg :overwrite-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or overwrite-mode common-lisp:null)
                         :accessor struct-shape-options-overwrite-mode :shape
                         "OverwriteMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (atime :initarg :atime :initform common-lisp:nil :type
                         (common-lisp:or atime common-lisp:null) :accessor
                         struct-shape-options-atime :shape "Atime" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (mtime :initarg :mtime :initform common-lisp:nil :type
                         (common-lisp:or mtime common-lisp:null) :accessor
                         struct-shape-options-mtime :shape "Mtime" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (uid :initarg :uid :initform common-lisp:nil :type
                         (common-lisp:or uid common-lisp:null) :accessor
                         struct-shape-options-uid :shape "Uid" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gid :initarg :gid :initform common-lisp:nil :type
                         (common-lisp:or gid common-lisp:null) :accessor
                         struct-shape-options-gid :shape "Gid" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preserve-deleted-files :initarg
                         :preserve-deleted-files :initform common-lisp:nil
                         :type
                         (common-lisp:or preserve-deleted-files
                                         common-lisp:null)
                         :accessor struct-shape-options-preserve-deleted-files
                         :shape "PreserveDeletedFiles" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preserve-devices :initarg :preserve-devices :initform
                         common-lisp:nil :type
                         (common-lisp:or preserve-devices common-lisp:null)
                         :accessor struct-shape-options-preserve-devices :shape
                         "PreserveDevices" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (posix-permissions :initarg :posix-permissions
                         :initform common-lisp:nil :type
                         (common-lisp:or posix-permissions common-lisp:null)
                         :accessor struct-shape-options-posix-permissions
                         :shape "PosixPermissions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bytes-per-second :initarg :bytes-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or bytes-per-second common-lisp:null)
                         :accessor struct-shape-options-bytes-per-second :shape
                         "BytesPerSecond" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-queueing :initarg :task-queueing :initform
                         common-lisp:nil :type
                         (common-lisp:or task-queueing common-lisp:null)
                         :accessor struct-shape-options-task-queueing :shape
                         "TaskQueueing" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-level :initarg :log-level :initform
                         common-lisp:nil :type
                         (common-lisp:or log-level common-lisp:null) :accessor
                         struct-shape-options-log-level :shape "LogLevel"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (transfer-mode :initarg :transfer-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or transfer-mode common-lisp:null)
                         :accessor struct-shape-options-transfer-mode :shape
                         "TransferMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-descriptor-copy-flags :initarg
                         :security-descriptor-copy-flags :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-security-descriptor-copy-flags
                                         common-lisp:null)
                         :accessor
                         struct-shape-options-security-descriptor-copy-flags
                         :shape "SmbSecurityDescriptorCopyFlags" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (object-tags :initarg :object-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or object-tags common-lisp:null)
                         :accessor struct-shape-options-object-tags :shape
                         "ObjectTags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'options
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'options 'make-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-mode))
      (common-lisp:list
       (common-lisp:cons "VerifyMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overwrite-mode))
      (common-lisp:list
       (common-lisp:cons "OverwriteMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'atime))
      (common-lisp:list
       (common-lisp:cons "Atime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mtime))
      (common-lisp:list
       (common-lisp:cons "Mtime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uid))
      (common-lisp:list
       (common-lisp:cons "Uid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gid))
      (common-lisp:list
       (common-lisp:cons "Gid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserve-deleted-files))
      (common-lisp:list
       (common-lisp:cons "PreserveDeletedFiles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preserve-devices))
      (common-lisp:list
       (common-lisp:cons "PreserveDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'posix-permissions))
      (common-lisp:list
       (common-lisp:cons "PosixPermissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes-per-second))
      (common-lisp:list
       (common-lisp:cons "BytesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-queueing))
      (common-lisp:list
       (common-lisp:cons "TaskQueueing"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-level))
      (common-lisp:list
       (common-lisp:cons "LogLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-mode))
      (common-lisp:list
       (common-lisp:cons "TransferMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'security-descriptor-copy-flags))
      (common-lisp:list
       (common-lisp:cons "SecurityDescriptorCopyFlags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-tags))
      (common-lisp:list
       (common-lisp:cons "ObjectTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype output-tag-list ()
   '(trivial-types:proper-list tag-list-entry))
 (common-lisp:defun make-output-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:deftype overwrite-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass p95metrics common-lisp:nil
                       ((iops :initarg :iops :initform common-lisp:nil :type
                         (common-lisp:or iops common-lisp:null) :accessor
                         struct-shape-p95metrics-iops :shape "IOPS" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (throughput :initarg :throughput :initform
                         common-lisp:nil :type
                         (common-lisp:or throughput common-lisp:null) :accessor
                         struct-shape-p95metrics-throughput :shape "Throughput"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (latency :initarg :latency :initform common-lisp:nil
                         :type (common-lisp:or latency common-lisp:null)
                         :accessor struct-shape-p95metrics-latency :shape
                         "Latency" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-p95metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'p95metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'p95metrics 'make-p95metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input p95metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input p95metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iops))
      (common-lisp:list
       (common-lisp:cons "IOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throughput))
      (common-lisp:list
       (common-lisp:cons "Throughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "Latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input p95metrics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype plsecurity-group-arn-list ()
   '(trivial-types:proper-list ec2security-group-arn))
 (common-lisp:defun make-plsecurity-group-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2security-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype plsubnet-arn-list ()
   '(trivial-types:proper-list ec2subnet-arn))
 (common-lisp:defun make-plsubnet-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ec2subnet-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype phase-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass platform common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or agent-version common-lisp:null)
                         :accessor struct-shape-platform-version :shape
                         "AgentVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-platform
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'platform
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'platform 'make-platform))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input platform))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input platform))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input platform))
   common-lisp:nil))
(common-lisp:deftype posix-permissions () 'common-lisp:string)
(common-lisp:deftype preserve-deleted-files () 'common-lisp:string)
(common-lisp:deftype preserve-devices () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass private-link-config common-lisp:nil
                       ((vpc-endpoint-id :initarg :vpc-endpoint-id :initform
                         common-lisp:nil :type
                         (common-lisp:or vpc-endpoint-id common-lisp:null)
                         :accessor
                         struct-shape-private-link-config-vpc-endpoint-id
                         :shape "VpcEndpointId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (private-link-endpoint :initarg :private-link-endpoint
                         :initform common-lisp:nil :type
                         (common-lisp:or endpoint common-lisp:null) :accessor
                         struct-shape-private-link-config-private-link-endpoint
                         :shape "Endpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subnet-arns :initarg :subnet-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or plsubnet-arn-list common-lisp:null)
                         :accessor struct-shape-private-link-config-subnet-arns
                         :shape "PLSubnetArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-group-arns :initarg :security-group-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or plsecurity-group-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-private-link-config-security-group-arns
                         :shape "PLSecurityGroupArnList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-private-link-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'private-link-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'private-link-config 'make-private-link-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input private-link-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input private-link-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "VpcEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'private-link-endpoint))
      (common-lisp:list
       (common-lisp:cons "PrivateLinkEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subnet-arns))
      (common-lisp:list
       (common-lisp:cons "SubnetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-group-arns))
      (common-lisp:list
       (common-lisp:cons "SecurityGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input private-link-config))
   common-lisp:nil))
(common-lisp:deftype ptolemy-boolean () 'common-lisp:boolean)
(common-lisp:deftype ptolemy-password () 'common-lisp:string)
(common-lisp:deftype ptolemy-string () 'common-lisp:string)
(common-lisp:deftype ptolemy-uuid () 'common-lisp:string)
(common-lisp:deftype ptolemy-username () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass qop-configuration common-lisp:nil
                       ((rpc-protection :initarg :rpc-protection :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-rpc-protection common-lisp:null)
                         :accessor
                         struct-shape-qop-configuration-rpc-protection :shape
                         "HdfsRpcProtection" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data-transfer-protection :initarg
                         :data-transfer-protection :initform common-lisp:nil
                         :type
                         (common-lisp:or hdfs-data-transfer-protection
                                         common-lisp:null)
                         :accessor
                         struct-shape-qop-configuration-data-transfer-protection
                         :shape "HdfsDataTransferProtection" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-qop-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'qop-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'qop-configuration 'make-qop-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input qop-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input qop-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rpc-protection))
      (common-lisp:list
       (common-lisp:cons "RpcProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-transfer-protection))
      (common-lisp:list
       (common-lisp:cons "DataTransferProtection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input qop-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recommendation common-lisp:nil
                       ((storage-type :initarg :storage-type :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor struct-shape-recommendation-storage-type
                         :shape "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (storage-configuration :initarg :storage-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendations-config-map
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-storage-configuration
                         :shape "RecommendationsConfigMap" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-storage-cost :initarg
                         :estimated-monthly-storage-cost :initform
                         common-lisp:nil :type
                         (common-lisp:or ptolemy-string common-lisp:null)
                         :accessor
                         struct-shape-recommendation-estimated-monthly-storage-cost
                         :shape "PtolemyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-type))
      (common-lisp:list
       (common-lisp:cons "StorageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'storage-configuration))
      (common-lisp:list
       (common-lisp:cons "StorageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-storage-cost))
      (common-lisp:list
       (common-lisp:cons "EstimatedMonthlyStorageCost"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:deftype recommendation-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendations ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun make-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendations-config-map () 'common-lisp:hash-table)
 (common-lisp:defun make-recommendations-config-map
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass remove-storage-system-request common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform
                         (common-lisp:error ":storage-system-arn is required")
                         :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-remove-storage-system-request-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-storage-system-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-storage-system-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-storage-system-request
                    'make-remove-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-storage-system-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-storage-system-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-storage-system-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-storage-system-response
                    'make-remove-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass report-destination common-lisp:nil
                       ((s3 :initarg :s3 :initform common-lisp:nil :type
                         (common-lisp:or report-destination-s3
                                         common-lisp:null)
                         :accessor struct-shape-report-destination-s3 :shape
                         "ReportDestinationS3" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'report-destination 'make-report-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "S3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass report-destination-s3 common-lisp:nil
                       ((subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or s3subdirectory common-lisp:null)
                         :accessor
                         struct-shape-report-destination-s3-subdirectory :shape
                         "S3Subdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3bucket-arn :initarg :s3bucket-arn :initform
                         (common-lisp:error ":s3bucket-arn is required") :type
                         (common-lisp:or s3bucket-arn common-lisp:null)
                         :accessor
                         struct-shape-report-destination-s3-s3bucket-arn :shape
                         "S3BucketArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bucket-access-role-arn :initarg
                         :bucket-access-role-arn :initform
                         (common-lisp:error
                          ":bucket-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-report-destination-s3-bucket-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-destination-s3
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-destination-s3
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'report-destination-s3 'make-report-destination-s3))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          report-destination-s3))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          report-destination-s3))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-arn))
      (common-lisp:list
       (common-lisp:cons "S3BucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "BucketAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          report-destination-s3))
   common-lisp:nil))
(common-lisp:deftype report-level () 'common-lisp:string)
(common-lisp:deftype report-output-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass report-override common-lisp:nil
                       ((report-level :initarg :report-level :initform
                         common-lisp:nil :type
                         (common-lisp:or report-level common-lisp:null)
                         :accessor struct-shape-report-override-report-level
                         :shape "ReportLevel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-override
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-override
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'report-override 'make-report-override))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-override))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-override))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-level))
      (common-lisp:list
       (common-lisp:cons "ReportLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-override))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass report-overrides common-lisp:nil
                       ((transferred :initarg :transferred :initform
                         common-lisp:nil :type
                         (common-lisp:or report-override common-lisp:null)
                         :accessor struct-shape-report-overrides-transferred
                         :shape "ReportOverride" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (verified :initarg :verified :initform common-lisp:nil
                         :type
                         (common-lisp:or report-override common-lisp:null)
                         :accessor struct-shape-report-overrides-verified
                         :shape "ReportOverride" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deleted :initarg :deleted :initform common-lisp:nil
                         :type
                         (common-lisp:or report-override common-lisp:null)
                         :accessor struct-shape-report-overrides-deleted :shape
                         "ReportOverride" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (skipped :initarg :skipped :initform common-lisp:nil
                         :type
                         (common-lisp:or report-override common-lisp:null)
                         :accessor struct-shape-report-overrides-skipped :shape
                         "ReportOverride" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-overrides
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-overrides
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'report-overrides 'make-report-overrides))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-overrides))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-overrides))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transferred))
      (common-lisp:list
       (common-lisp:cons "Transferred"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verified))
      (common-lisp:list
       (common-lisp:cons "Verified"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deleted))
      (common-lisp:list
       (common-lisp:cons "Deleted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'skipped))
      (common-lisp:list
       (common-lisp:cons "Skipped"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-overrides))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass report-result common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or phase-status common-lisp:null)
                         :accessor struct-shape-report-result-status :shape
                         "PhaseStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-report-result-error-code :shape
                         "string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-detail :initarg :error-detail :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-report-result-error-detail
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-report-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'report-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'report-result 'make-report-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input report-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input report-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-detail))
      (common-lisp:list
       (common-lisp:cons "ErrorDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input report-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-details common-lisp:nil
                       ((net-app-ontapsvms :initarg :net-app-ontapsvms
                         :initform common-lisp:nil :type
                         (common-lisp:or net-app-ontapsvms common-lisp:null)
                         :accessor
                         struct-shape-resource-details-net-app-ontapsvms :shape
                         "NetAppONTAPSVMs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (net-app-ontapvolumes :initarg :net-app-ontapvolumes
                         :initform common-lisp:nil :type
                         (common-lisp:or net-app-ontapvolumes common-lisp:null)
                         :accessor
                         struct-shape-resource-details-net-app-ontapvolumes
                         :shape "NetAppONTAPVolumes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (net-app-ontapclusters :initarg :net-app-ontapclusters
                         :initform common-lisp:nil :type
                         (common-lisp:or net-app-ontapclusters
                                         common-lisp:null)
                         :accessor
                         struct-shape-resource-details-net-app-ontapclusters
                         :shape "NetAppONTAPClusters" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-details 'make-resource-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'net-app-ontapsvms))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPSVMs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'net-app-ontapvolumes))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'net-app-ontapclusters))
      (common-lisp:list
       (common-lisp:cons "NetAppONTAPClusters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype resource-filters () 'common-lisp:hash-table)
 (common-lisp:defun make-resource-filters (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype resource-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-ids () '(trivial-types:proper-list resource-id))
 (common-lisp:defun make-resource-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass resource-metrics common-lisp:nil
                       ((timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-resource-metrics-timestamp :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (p95metrics :initarg :p95metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or p95metrics common-lisp:null) :accessor
                         struct-shape-resource-metrics-p95metrics :shape
                         "P95Metrics" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (capacity :initarg :capacity :initform common-lisp:nil
                         :type (common-lisp:or capacity common-lisp:null)
                         :accessor struct-shape-resource-metrics-capacity
                         :shape "Capacity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-id :initarg :resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-id common-lisp:null)
                         :accessor struct-shape-resource-metrics-resource-id
                         :shape "ResourceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-resource-type
                                         common-lisp:null)
                         :accessor struct-shape-resource-metrics-resource-type
                         :shape "DiscoveryResourceType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-metrics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-metrics 'make-resource-metrics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-metrics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-metrics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'p95metrics))
      (common-lisp:list
       (common-lisp:cons "P95Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'capacity))
      (common-lisp:list
       (common-lisp:cons "Capacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-metrics))
   common-lisp:nil))
(common-lisp:deftype s3bucket-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass s3config common-lisp:nil
                       ((bucket-access-role-arn :initarg
                         :bucket-access-role-arn :initform
                         (common-lisp:error
                          ":bucket-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor struct-shape-s3config-bucket-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3config 'make-s3config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "BucketAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3manifest-config common-lisp:nil
                       ((manifest-object-path :initarg :manifest-object-path
                         :initform
                         (common-lisp:error
                          ":manifest-object-path is required")
                         :type (common-lisp:or s3subdirectory common-lisp:null)
                         :accessor
                         struct-shape-s3manifest-config-manifest-object-path
                         :shape "S3Subdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-access-role-arn :initarg
                         :bucket-access-role-arn :initform
                         (common-lisp:error
                          ":bucket-access-role-arn is required")
                         :type (common-lisp:or iam-role-arn common-lisp:null)
                         :accessor
                         struct-shape-s3manifest-config-bucket-access-role-arn
                         :shape "IamRoleArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3bucket-arn :initarg :s3bucket-arn :initform
                         (common-lisp:error ":s3bucket-arn is required") :type
                         (common-lisp:or s3bucket-arn common-lisp:null)
                         :accessor struct-shape-s3manifest-config-s3bucket-arn
                         :shape "S3BucketArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-object-version-id :initarg
                         :manifest-object-version-id :initform common-lisp:nil
                         :type
                         (common-lisp:or s3object-version-id common-lisp:null)
                         :accessor
                         struct-shape-s3manifest-config-manifest-object-version-id
                         :shape "S3ObjectVersionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3manifest-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3manifest-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3manifest-config 'make-s3manifest-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3manifest-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3manifest-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-object-path))
      (common-lisp:list
       (common-lisp:cons "ManifestObjectPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bucket-access-role-arn))
      (common-lisp:list
       (common-lisp:cons "BucketAccessRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3bucket-arn))
      (common-lisp:list
       (common-lisp:cons "S3BucketArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-object-version-id))
      (common-lisp:list
       (common-lisp:cons "ManifestObjectVersionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3manifest-config))
   common-lisp:nil))
(common-lisp:deftype s3object-version-id () 'common-lisp:string)
(common-lisp:deftype s3storage-class () 'common-lisp:string)
(common-lisp:deftype s3subdirectory () 'common-lisp:string)
(common-lisp:deftype schedule-expression-cron () 'common-lisp:string)
(common-lisp:deftype secrets-manager-arn () 'common-lisp:string)
(common-lisp:deftype server-hostname () 'common-lisp:string)
(common-lisp:deftype smb-domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass smb-mount-options common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or smb-version common-lisp:null)
                         :accessor struct-shape-smb-mount-options-version
                         :shape "SmbVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smb-mount-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smb-mount-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smb-mount-options 'make-smb-mount-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smb-mount-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smb-mount-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smb-mount-options))
   common-lisp:nil))
(common-lisp:deftype smb-password () 'common-lisp:string)
(common-lisp:deftype smb-security-descriptor-copy-flags () 'common-lisp:string)
(common-lisp:deftype smb-subdirectory () 'common-lisp:string)
(common-lisp:deftype smb-user () 'common-lisp:string)
(common-lisp:deftype smb-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass source-manifest-config common-lisp:nil
                       ((s3 :initarg :s3 :initform
                         (common-lisp:error ":s3 is required") :type
                         (common-lisp:or s3manifest-config common-lisp:null)
                         :accessor struct-shape-source-manifest-config-s3
                         :shape "S3ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-source-manifest-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'source-manifest-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'source-manifest-config 'make-source-manifest-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          source-manifest-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          source-manifest-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "S3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          source-manifest-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype source-network-interface-arns ()
   '(trivial-types:proper-list network-interface-arn))
 (common-lisp:defun make-source-network-interface-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass start-discovery-job-request common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform
                         (common-lisp:error ":storage-system-arn is required")
                         :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-start-discovery-job-request-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (collection-duration-minutes :initarg
                         :collection-duration-minutes :initform
                         (common-lisp:error
                          ":collection-duration-minutes is required")
                         :type
                         (common-lisp:or collection-duration-minutes
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-discovery-job-request-collection-duration-minutes
                         :shape "CollectionDurationMinutes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or ptolemy-uuid common-lisp:null)
                         :accessor
                         struct-shape-start-discovery-job-request-client-token
                         :shape "PtolemyUUID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-start-discovery-job-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-discovery-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-discovery-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-discovery-job-request
                    'make-start-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-discovery-job-response common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-start-discovery-job-response-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-discovery-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-discovery-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-discovery-job-response
                    'make-start-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-task-execution-request common-lisp:nil
                       ((task-arn :initarg :task-arn :initform
                         (common-lisp:error ":task-arn is required") :type
                         (common-lisp:or task-arn common-lisp:null) :accessor
                         struct-shape-start-task-execution-request-task-arn
                         :shape "TaskArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (override-options :initarg :override-options :initform
                         common-lisp:nil :type
                         (common-lisp:or options common-lisp:null) :accessor
                         struct-shape-start-task-execution-request-override-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (includes :initarg :includes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-request-includes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-request-excludes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-config :initarg :manifest-config :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-config common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-request-manifest-config
                         :shape "ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-report-config :initarg :task-report-config
                         :initform common-lisp:nil :type
                         (common-lisp:or task-report-config common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-request-task-report-config
                         :shape "TaskReportConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-request-tags :shape
                         "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-task-execution-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-task-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-task-execution-request
                    'make-start-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'override-options))
      (common-lisp:list
       (common-lisp:cons "OverrideOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-config))
      (common-lisp:list
       (common-lisp:cons "ManifestConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-report-config))
      (common-lisp:list
       (common-lisp:cons "TaskReportConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-task-execution-response common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-start-task-execution-response-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-task-execution-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-task-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-task-execution-response
                    'make-start-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-discovery-job-request common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-stop-discovery-job-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-discovery-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-discovery-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-discovery-job-request
                    'make-stop-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-discovery-job-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-discovery-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-discovery-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-discovery-job-response
                    'make-stop-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-discovery-job-response))
   common-lisp:nil))
(common-lisp:deftype storage-system-arn () 'common-lisp:string)
(common-lisp:deftype storage-system-connectivity-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype storage-system-list ()
   '(trivial-types:proper-list storage-system-list-entry))
 (common-lisp:defun make-storage-system-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            storage-system-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass storage-system-list-entry common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-storage-system-list-entry-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-storage-system-list-entry-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-storage-system-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'storage-system-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'storage-system-list-entry
                    'make-storage-system-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          storage-system-list-entry))
   common-lisp:nil))
(common-lisp:deftype storage-virtual-machine-arn () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-list-entry common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-list-entry-key :shape "TagKey"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-list-entry-value :shape "TagValue"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag-list-entry 'make-tag-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-list-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or input-tag-list common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "InputTagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype taggable-resource-arn () 'common-lisp:string)
(common-lisp:deftype task-arn () 'common-lisp:string)
(common-lisp:deftype task-execution-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype task-execution-list ()
   '(trivial-types:proper-list task-execution-list-entry))
 (common-lisp:defun make-task-execution-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            task-execution-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass task-execution-list-entry common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-task-execution-list-entry-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or task-execution-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-task-execution-list-entry-status :shape
                         "TaskExecutionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-execution-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-execution-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'task-execution-list-entry
                    'make-task-execution-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-list-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass task-execution-result-detail common-lisp:nil
                       ((prepare-duration :initarg :prepare-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-task-execution-result-detail-prepare-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (prepare-status :initarg :prepare-status :initform
                         common-lisp:nil :type
                         (common-lisp:or phase-status common-lisp:null)
                         :accessor
                         struct-shape-task-execution-result-detail-prepare-status
                         :shape "PhaseStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-duration :initarg :total-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-task-execution-result-detail-total-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (transfer-duration :initarg :transfer-duration
                         :initform common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-task-execution-result-detail-transfer-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (transfer-status :initarg :transfer-status :initform
                         common-lisp:nil :type
                         (common-lisp:or phase-status common-lisp:null)
                         :accessor
                         struct-shape-task-execution-result-detail-transfer-status
                         :shape "PhaseStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (verify-duration :initarg :verify-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-task-execution-result-detail-verify-duration
                         :shape "Duration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (verify-status :initarg :verify-status :initform
                         common-lisp:nil :type
                         (common-lisp:or phase-status common-lisp:null)
                         :accessor
                         struct-shape-task-execution-result-detail-verify-status
                         :shape "PhaseStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-task-execution-result-detail-error-code
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-detail :initarg :error-detail :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-task-execution-result-detail-error-detail
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-execution-result-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-execution-result-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'task-execution-result-detail
                    'make-task-execution-result-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prepare-duration))
      (common-lisp:list
       (common-lisp:cons "PrepareDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'prepare-status))
      (common-lisp:list
       (common-lisp:cons "PrepareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-duration))
      (common-lisp:list
       (common-lisp:cons "TotalDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-duration))
      (common-lisp:list
       (common-lisp:cons "TransferDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transfer-status))
      (common-lisp:list
       (common-lisp:cons "TransferStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-duration))
      (common-lisp:list
       (common-lisp:cons "VerifyDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'verify-status))
      (common-lisp:list
       (common-lisp:cons "VerifyStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-detail))
      (common-lisp:list
       (common-lisp:cons "ErrorDetail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          task-execution-result-detail))
   common-lisp:nil))
(common-lisp:deftype task-execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass task-filter common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or task-filter-name common-lisp:null)
                         :accessor struct-shape-task-filter-name :shape
                         "TaskFilterName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-task-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operator :initarg :operator :initform
                         (common-lisp:error ":operator is required") :type
                         (common-lisp:or operator common-lisp:null) :accessor
                         struct-shape-task-filter-operator :shape "Operator"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'task-filter 'make-task-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-filter))
   common-lisp:nil))
(common-lisp:deftype task-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype task-filters () '(trivial-types:proper-list task-filter))
 (common-lisp:defun make-task-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list task-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype task-list ()
   '(trivial-types:proper-list task-list-entry))
 (common-lisp:defun make-task-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list task-list-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass task-list-entry common-lisp:nil
                       ((task-arn :initarg :task-arn :initform common-lisp:nil
                         :type (common-lisp:or task-arn common-lisp:null)
                         :accessor struct-shape-task-list-entry-task-arn :shape
                         "TaskArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or task-status common-lisp:null)
                         :accessor struct-shape-task-list-entry-status :shape
                         "TaskStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-task-list-entry-name :shape "TagValue"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-list-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-list-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'task-list-entry 'make-task-list-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-list-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-list-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-list-entry))
   common-lisp:nil))
(common-lisp:deftype task-queueing () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass task-report-config common-lisp:nil
                       ((destination :initarg :destination :initform
                         common-lisp:nil :type
                         (common-lisp:or report-destination common-lisp:null)
                         :accessor struct-shape-task-report-config-destination
                         :shape "ReportDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-type :initarg :output-type :initform
                         common-lisp:nil :type
                         (common-lisp:or report-output-type common-lisp:null)
                         :accessor struct-shape-task-report-config-output-type
                         :shape "ReportOutputType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (report-level :initarg :report-level :initform
                         common-lisp:nil :type
                         (common-lisp:or report-level common-lisp:null)
                         :accessor struct-shape-task-report-config-report-level
                         :shape "ReportLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-version-ids :initarg :object-version-ids
                         :initform common-lisp:nil :type
                         (common-lisp:or object-version-ids common-lisp:null)
                         :accessor
                         struct-shape-task-report-config-object-version-ids
                         :shape "ObjectVersionIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (overrides :initarg :overrides :initform
                         common-lisp:nil :type
                         (common-lisp:or report-overrides common-lisp:null)
                         :accessor struct-shape-task-report-config-overrides
                         :shape "ReportOverrides" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-report-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-report-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'task-report-config 'make-task-report-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-report-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-report-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-type))
      (common-lisp:list
       (common-lisp:cons "OutputType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-level))
      (common-lisp:list
       (common-lisp:cons "ReportLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-version-ids))
      (common-lisp:list
       (common-lisp:cons "ObjectVersionIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overrides))
      (common-lisp:list
       (common-lisp:cons "Overrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-report-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass task-schedule common-lisp:nil
                       ((schedule-expression :initarg :schedule-expression
                         :initform
                         (common-lisp:error ":schedule-expression is required")
                         :type
                         (common-lisp:or schedule-expression-cron
                                         common-lisp:null)
                         :accessor
                         struct-shape-task-schedule-schedule-expression :shape
                         "ScheduleExpressionCron" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-task-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'task-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'task-schedule 'make-task-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input task-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input task-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input task-schedule))
   common-lisp:nil))
(common-lisp:deftype task-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass throughput common-lisp:nil
                       ((read :initarg :read :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-throughput-read :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (write :initarg :write :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-throughput-write :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (other :initarg :other :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-throughput-other :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or non-negative-double common-lisp:null)
                         :accessor struct-shape-throughput-total :shape
                         "NonNegativeDouble" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-throughput
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'throughput
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'throughput 'make-throughput))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throughput))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throughput))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read))
      (common-lisp:list
       (common-lisp:cons "Read"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write))
      (common-lisp:list
       (common-lisp:cons "Write"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'other))
      (common-lisp:list
       (common-lisp:cons "Other"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throughput))
   common-lisp:nil))
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype transfer-mode () 'common-lisp:string)
(common-lisp:deftype uid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or taggable-resource-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "TaggableResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (keys :initarg :keys :initform
                         (common-lisp:error ":keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-keys
                         :shape "TagKeyList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keys))
      (common-lisp:list
       (common-lisp:cons "Keys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-agent-request common-lisp:nil
                       ((agent-arn :initarg :agent-arn :initform
                         (common-lisp:error ":agent-arn is required") :type
                         (common-lisp:or agent-arn common-lisp:null) :accessor
                         struct-shape-update-agent-request-agent-arn :shape
                         "AgentArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-update-agent-request-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-agent-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-agent-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-agent-request 'make-update-agent-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-agent-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-agent-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arn))
      (common-lisp:list
       (common-lisp:cons "AgentArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-agent-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-agent-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-agent-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-agent-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-agent-response 'make-update-agent-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-agent-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-discovery-job-request common-lisp:nil
                       ((discovery-job-arn :initarg :discovery-job-arn
                         :initform
                         (common-lisp:error ":discovery-job-arn is required")
                         :type
                         (common-lisp:or discovery-job-arn common-lisp:null)
                         :accessor
                         struct-shape-update-discovery-job-request-discovery-job-arn
                         :shape "DiscoveryJobArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (collection-duration-minutes :initarg
                         :collection-duration-minutes :initform
                         (common-lisp:error
                          ":collection-duration-minutes is required")
                         :type
                         (common-lisp:or collection-duration-minutes
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-discovery-job-request-collection-duration-minutes
                         :shape "CollectionDurationMinutes" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-discovery-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-discovery-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-discovery-job-request
                    'make-update-discovery-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'discovery-job-arn))
      (common-lisp:list
       (common-lisp:cons "DiscoveryJobArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'collection-duration-minutes))
      (common-lisp:list
       (common-lisp:cons "CollectionDurationMinutes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-discovery-job-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-discovery-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-discovery-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-discovery-job-response
                    'make-update-discovery-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-discovery-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-azure-blob-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-blob-subdirectory
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-subdirectory
                         :shape "AzureBlobSubdirectory" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform common-lisp:nil :type
                         (common-lisp:or azure-blob-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-authentication-type
                         :shape "AzureBlobAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sas-configuration :initarg :sas-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or azure-blob-sas-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-sas-configuration
                         :shape "AzureBlobSasConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (blob-type :initarg :blob-type :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-blob-type common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-blob-type
                         :shape "AzureBlobType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-tier :initarg :access-tier :initform
                         common-lisp:nil :type
                         (common-lisp:or azure-access-tier common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-access-tier
                         :shape "AzureAccessTier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-location-azure-blob-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-azure-blob-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-location-azure-blob-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-azure-blob-request
                    'make-update-location-azure-blob-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sas-configuration))
      (common-lisp:list
       (common-lisp:cons "SasConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blob-type))
      (common-lisp:list
       (common-lisp:cons "BlobType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-tier))
      (common-lisp:list
       (common-lisp:cons "AccessTier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-azure-blob-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-azure-blob-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-location-azure-blob-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-azure-blob-response
                    'make-update-location-azure-blob-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-azure-blob-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-hdfs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-subdirectory
                         :shape "HdfsSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name-nodes :initarg :name-nodes :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-name-node-list common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-name-nodes
                         :shape "HdfsNameNodeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (block-size :initarg :block-size :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-block-size common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-block-size
                         :shape "HdfsBlockSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (replication-factor :initarg :replication-factor
                         :initform common-lisp:nil :type
                         (common-lisp:or hdfs-replication-factor
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-replication-factor
                         :shape "HdfsReplicationFactor" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (kms-key-provider-uri :initarg :kms-key-provider-uri
                         :initform common-lisp:nil :type
                         (common-lisp:or kms-key-provider-uri common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-kms-key-provider-uri
                         :shape "KmsKeyProviderUri" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (qop-configuration :initarg :qop-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or qop-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-qop-configuration
                         :shape "QopConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication-type :initarg :authentication-type
                         :initform common-lisp:nil :type
                         (common-lisp:or hdfs-authentication-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-authentication-type
                         :shape "HdfsAuthenticationType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (simple-user :initarg :simple-user :initform
                         common-lisp:nil :type
                         (common-lisp:or hdfs-user common-lisp:null) :accessor
                         struct-shape-update-location-hdfs-request-simple-user
                         :shape "HdfsUser" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-principal :initarg :kerberos-principal
                         :initform common-lisp:nil :type
                         (common-lisp:or kerberos-principal common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-kerberos-principal
                         :shape "KerberosPrincipal" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-keytab :initarg :kerberos-keytab :initform
                         common-lisp:nil :type
                         (common-lisp:or kerberos-keytab-file common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-kerberos-keytab
                         :shape "KerberosKeytabFile" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kerberos-krb5conf :initarg :kerberos-krb5conf
                         :initform common-lisp:nil :type
                         (common-lisp:or kerberos-krb5conf-file
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-kerberos-krb5conf
                         :shape "KerberosKrb5ConfFile" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-location-hdfs-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-hdfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-location-hdfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-hdfs-request
                    'make-update-location-hdfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name-nodes))
      (common-lisp:list
       (common-lisp:cons "NameNodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'block-size))
      (common-lisp:list
       (common-lisp:cons "BlockSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'replication-factor))
      (common-lisp:list
       (common-lisp:cons "ReplicationFactor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kms-key-provider-uri))
      (common-lisp:list
       (common-lisp:cons "KmsKeyProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qop-configuration))
      (common-lisp:list
       (common-lisp:cons "QopConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication-type))
      (common-lisp:list
       (common-lisp:cons "AuthenticationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-user))
      (common-lisp:list
       (common-lisp:cons "SimpleUser"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-principal))
      (common-lisp:list
       (common-lisp:cons "KerberosPrincipal"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-keytab))
      (common-lisp:list
       (common-lisp:cons "KerberosKeytab"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kerberos-krb5conf))
      (common-lisp:list
       (common-lisp:cons "KerberosKrb5Conf"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-hdfs-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-hdfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-location-hdfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-hdfs-response
                    'make-update-location-hdfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-hdfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-nfs-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-update-location-nfs-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or nfs-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-update-location-nfs-request-subdirectory
                         :shape "NfsSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (on-prem-config :initarg :on-prem-config :initform
                         common-lisp:nil :type
                         (common-lisp:or on-prem-config common-lisp:null)
                         :accessor
                         struct-shape-update-location-nfs-request-on-prem-config
                         :shape "OnPremConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or nfs-mount-options common-lisp:null)
                         :accessor
                         struct-shape-update-location-nfs-request-mount-options
                         :shape "NfsMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-nfs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-location-nfs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-nfs-request
                    'make-update-location-nfs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-prem-config))
      (common-lisp:list
       (common-lisp:cons "OnPremConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-nfs-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-nfs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-location-nfs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-nfs-response
                    'make-update-location-nfs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-nfs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-object-storage-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-port :initarg :server-port :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-port
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-server-port
                         :shape "ObjectStorageServerPort" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (server-protocol :initarg :server-protocol :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-server-protocol
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-server-protocol
                         :shape "ObjectStorageServerProtocol" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or s3subdirectory common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-subdirectory
                         :shape "S3Subdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-key :initarg :access-key :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-access-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-access-key
                         :shape "ObjectStorageAccessKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (secret-key :initarg :secret-key :initform
                         common-lisp:nil :type
                         (common-lisp:or object-storage-secret-key
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-secret-key
                         :shape "ObjectStorageSecretKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-certificate :initarg :server-certificate
                         :initform common-lisp:nil :type
                         (common-lisp:or object-storage-certificate
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-location-object-storage-request-server-certificate
                         :shape "ObjectStorageCertificate" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-object-storage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-location-object-storage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-object-storage-request
                    'make-update-location-object-storage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-port))
      (common-lisp:list
       (common-lisp:cons "ServerPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-protocol))
      (common-lisp:list
       (common-lisp:cons "ServerProtocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-key))
      (common-lisp:list
       (common-lisp:cons "AccessKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-key))
      (common-lisp:list
       (common-lisp:cons "SecretKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'server-certificate))
      (common-lisp:list
       (common-lisp:cons "ServerCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-object-storage-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-object-storage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-location-object-storage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-object-storage-response
                    'make-update-location-object-storage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-object-storage-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-smb-request common-lisp:nil
                       ((location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-location-arn
                         :shape "LocationArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subdirectory :initarg :subdirectory :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-subdirectory common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-subdirectory
                         :shape "SmbSubdirectory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or smb-user common-lisp:null) :accessor
                         struct-shape-update-location-smb-request-user :shape
                         "SmbUser" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or smb-domain common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-domain :shape
                         "SmbDomain" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (password :initarg :password :initform common-lisp:nil
                         :type (common-lisp:or smb-password common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-password
                         :shape "SmbPassword" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or agent-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-agent-arns
                         :shape "AgentArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mount-options :initarg :mount-options :initform
                         common-lisp:nil :type
                         (common-lisp:or smb-mount-options common-lisp:null)
                         :accessor
                         struct-shape-update-location-smb-request-mount-options
                         :shape "SmbMountOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-smb-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-location-smb-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-smb-request
                    'make-update-location-smb-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subdirectory))
      (common-lisp:list
       (common-lisp:cons "Subdirectory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mount-options))
      (common-lisp:list
       (common-lisp:cons "MountOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-location-smb-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-location-smb-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-location-smb-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-location-smb-response
                    'make-update-location-smb-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-location-smb-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-storage-system-request common-lisp:nil
                       ((storage-system-arn :initarg :storage-system-arn
                         :initform
                         (common-lisp:error ":storage-system-arn is required")
                         :type
                         (common-lisp:or storage-system-arn common-lisp:null)
                         :accessor
                         struct-shape-update-storage-system-request-storage-system-arn
                         :shape "StorageSystemArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (server-configuration :initarg :server-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or discovery-server-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-storage-system-request-server-configuration
                         :shape "DiscoveryServerConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (agent-arns :initarg :agent-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or discovery-agent-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-storage-system-request-agent-arns
                         :shape "DiscoveryAgentArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-storage-system-request-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-update-storage-system-request-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (credentials :initarg :credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or credentials common-lisp:null)
                         :accessor
                         struct-shape-update-storage-system-request-credentials
                         :shape "Credentials" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-storage-system-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-storage-system-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-storage-system-request
                    'make-update-storage-system-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-system-arn))
      (common-lisp:list
       (common-lisp:cons "StorageSystemArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'server-configuration))
      (common-lisp:list
       (common-lisp:cons "ServerConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-arns))
      (common-lisp:list
       (common-lisp:cons "AgentArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "Credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-storage-system-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-storage-system-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-storage-system-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-storage-system-response
                    'make-update-storage-system-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-storage-system-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-task-execution-request common-lisp:nil
                       ((task-execution-arn :initarg :task-execution-arn
                         :initform
                         (common-lisp:error ":task-execution-arn is required")
                         :type
                         (common-lisp:or task-execution-arn common-lisp:null)
                         :accessor
                         struct-shape-update-task-execution-request-task-execution-arn
                         :shape "TaskExecutionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (options :initarg :options :initform
                         (common-lisp:error ":options is required") :type
                         (common-lisp:or options common-lisp:null) :accessor
                         struct-shape-update-task-execution-request-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-task-execution-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-task-execution-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-task-execution-request
                    'make-update-task-execution-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-execution-arn))
      (common-lisp:list
       (common-lisp:cons "TaskExecutionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-task-execution-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-task-execution-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-task-execution-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-task-execution-response
                    'make-update-task-execution-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-task-execution-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-task-request common-lisp:nil
                       ((task-arn :initarg :task-arn :initform
                         (common-lisp:error ":task-arn is required") :type
                         (common-lisp:or task-arn common-lisp:null) :accessor
                         struct-shape-update-task-request-task-arn :shape
                         "TaskArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (options :initarg :options :initform common-lisp:nil
                         :type (common-lisp:or options common-lisp:null)
                         :accessor struct-shape-update-task-request-options
                         :shape "Options" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (excludes :initarg :excludes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-update-task-request-excludes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or task-schedule common-lisp:null)
                         :accessor struct-shape-update-task-request-schedule
                         :shape "TaskSchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-update-task-request-name :shape
                         "TagValue" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type (common-lisp:or log-group-arn common-lisp:null)
                         :accessor
                         struct-shape-update-task-request-cloud-watch-log-group-arn
                         :shape "LogGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (includes :initarg :includes :initform common-lisp:nil
                         :type (common-lisp:or filter-list common-lisp:null)
                         :accessor struct-shape-update-task-request-includes
                         :shape "FilterList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (manifest-config :initarg :manifest-config :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-config common-lisp:null)
                         :accessor
                         struct-shape-update-task-request-manifest-config
                         :shape "ManifestConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (task-report-config :initarg :task-report-config
                         :initform common-lisp:nil :type
                         (common-lisp:or task-report-config common-lisp:null)
                         :accessor
                         struct-shape-update-task-request-task-report-config
                         :shape "TaskReportConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-task-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-task-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-task-request 'make-update-task-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-task-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-task-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-arn))
      (common-lisp:list
       (common-lisp:cons "TaskArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'options))
      (common-lisp:list
       (common-lisp:cons "Options"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'excludes))
      (common-lisp:list
       (common-lisp:cons "Excludes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'includes))
      (common-lisp:list
       (common-lisp:cons "Includes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-config))
      (common-lisp:list
       (common-lisp:cons "ManifestConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-report-config))
      (common-lisp:list
       (common-lisp:cons "TaskReportConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-task-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-task-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-task-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-task-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-task-response 'make-update-task-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-task-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-task-response))
   common-lisp:nil))
(common-lisp:deftype verify-mode () 'common-lisp:string)
(common-lisp:deftype vpc-endpoint-id () 'common-lisp:string)
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun add-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key server-configuration system-type
                     agent-arns cloud-watch-log-group-arn tags name
                     client-token credentials)
   (common-lisp:declare
    (common-lisp:ignorable server-configuration system-type agent-arns
     cloud-watch-log-group-arn tags name client-token credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddStorageSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'add-storage-system))
(common-lisp:progn
 (common-lisp:defun cancel-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelTaskExecution"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-task-execution))
(common-lisp:progn
 (common-lisp:defun create-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key agent-name tags
                     vpc-endpoint-id subnet-arns security-group-arns)
   (common-lisp:declare
    (common-lisp:ignorable activation-key agent-name tags vpc-endpoint-id
     subnet-arns security-group-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateAgent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-agent))
(common-lisp:progn
 (common-lisp:defun create-location-azure-blob
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key container-url authentication-type
                     sas-configuration blob-type access-tier subdirectory
                     agent-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable container-url authentication-type sas-configuration
     blob-type access-tier subdirectory agent-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-azure-blob-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationAzureBlob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-azure-blob))
(common-lisp:progn
 (common-lisp:defun create-location-efs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory efs-filesystem-arn ec2config
                     tags access-point-arn file-system-access-role-arn
                     in-transit-encryption)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory efs-filesystem-arn ec2config tags
     access-point-arn file-system-access-role-arn in-transit-encryption))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-efs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationEfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-efs))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-lustre
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fsx-filesystem-arn security-group-arns
                     subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable fsx-filesystem-arn security-group-arns subdirectory
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-lustre-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationFsxLustre"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-fsx-lustre))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-ontap
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key protocol security-group-arns
                     storage-virtual-machine-arn subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable protocol security-group-arns
     storage-virtual-machine-arn subdirectory tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-ontap-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationFsxOntap"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-fsx-ontap))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-open-zfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fsx-filesystem-arn protocol
                     security-group-arns subdirectory tags)
   (common-lisp:declare
    (common-lisp:ignorable fsx-filesystem-arn protocol security-group-arns
     subdirectory tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-open-zfs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationFsxOpenZfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-fsx-open-zfs))
(common-lisp:progn
 (common-lisp:defun create-location-fsx-windows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory fsx-filesystem-arn
                     security-group-arns tags user domain password)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory fsx-filesystem-arn security-group-arns
     tags user domain password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-fsx-windows-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationFsxWindows"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-fsx-windows))
(common-lisp:progn
 (common-lisp:defun create-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory name-nodes block-size
                     replication-factor kms-key-provider-uri qop-configuration
                     authentication-type simple-user kerberos-principal
                     kerberos-keytab kerberos-krb5conf agent-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory name-nodes block-size
     replication-factor kms-key-provider-uri qop-configuration
     authentication-type simple-user kerberos-principal kerberos-keytab
     kerberos-krb5conf agent-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationHdfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-hdfs))
(common-lisp:progn
 (common-lisp:defun create-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory server-hostname
                     on-prem-config mount-options tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory server-hostname on-prem-config
     mount-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationNfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-nfs))
(common-lisp:progn
 (common-lisp:defun create-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key server-hostname server-port
                     server-protocol subdirectory bucket-name access-key
                     secret-key agent-arns tags server-certificate)
   (common-lisp:declare
    (common-lisp:ignorable server-hostname server-port server-protocol
     subdirectory bucket-name access-key secret-key agent-arns tags
     server-certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationObjectStorage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-object-storage))
(common-lisp:progn
 (common-lisp:defun create-location-s3
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory s3bucket-arn s3storage-class
                     s3config agent-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory s3bucket-arn s3storage-class s3config
     agent-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-s3request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationS3"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-s3))
(common-lisp:progn
 (common-lisp:defun create-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key subdirectory server-hostname user domain
                     password agent-arns mount-options tags)
   (common-lisp:declare
    (common-lisp:ignorable subdirectory server-hostname user domain password
     agent-arns mount-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateLocationSmb"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-location-smb))
(common-lisp:progn
 (common-lisp:defun create-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key source-location-arn
                     destination-location-arn cloud-watch-log-group-arn name
                     options excludes schedule tags includes manifest-config
                     task-report-config)
   (common-lisp:declare
    (common-lisp:ignorable source-location-arn destination-location-arn
     cloud-watch-log-group-arn name options excludes schedule tags includes
     manifest-config task-report-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-task))
(common-lisp:progn
 (common-lisp:defun delete-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn)
   (common-lisp:declare (common-lisp:ignorable agent-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAgent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-agent))
(common-lisp:progn
 (common-lisp:defun delete-location
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-location-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteLocation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-location))
(common-lisp:progn
 (common-lisp:defun delete-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn)
   (common-lisp:declare (common-lisp:ignorable task-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-task))
(common-lisp:progn
 (common-lisp:defun describe-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn)
   (common-lisp:declare (common-lisp:ignorable agent-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAgent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-agent))
(common-lisp:progn
 (common-lisp:defun describe-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn)
   (common-lisp:declare (common-lisp:ignorable discovery-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeDiscoveryJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-discovery-job))
(common-lisp:progn
 (common-lisp:defun describe-location-azure-blob
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-azure-blob-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationAzureBlob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-azure-blob))
(common-lisp:progn
 (common-lisp:defun describe-location-efs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-efs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationEfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-efs))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-lustre
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-lustre-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationFsxLustre"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-fsx-lustre))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-ontap
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-ontap-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationFsxOntap"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-fsx-ontap))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-open-zfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-open-zfs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationFsxOpenZfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-fsx-open-zfs))
(common-lisp:progn
 (common-lisp:defun describe-location-fsx-windows
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-fsx-windows-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationFsxWindows"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-fsx-windows))
(common-lisp:progn
 (common-lisp:defun describe-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationHdfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-hdfs))
(common-lisp:progn
 (common-lisp:defun describe-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationNfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-nfs))
(common-lisp:progn
 (common-lisp:defun describe-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationObjectStorage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-object-storage))
(common-lisp:progn
 (common-lisp:defun describe-location-s3
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-s3request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationS3"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-s3))
(common-lisp:progn
 (common-lisp:defun describe-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn)
   (common-lisp:declare (common-lisp:ignorable location-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeLocationSmb"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-location-smb))
(common-lisp:progn
 (common-lisp:defun describe-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn)
   (common-lisp:declare (common-lisp:ignorable storage-system-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeStorageSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-storage-system))
(common-lisp:progn
 (common-lisp:defun describe-storage-system-resource-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-type
                     resource-id start-time end-time max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-type resource-id
     start-time end-time max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storage-system-resource-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeStorageSystemResourceMetrics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-storage-system-resource-metrics))
(common-lisp:progn
 (common-lisp:defun describe-storage-system-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-type
                     resource-ids filter max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-type resource-ids filter
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storage-system-resources-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeStorageSystemResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-storage-system-resources))
(common-lisp:progn
 (common-lisp:defun describe-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn)
   (common-lisp:declare (common-lisp:ignorable task-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-task))
(common-lisp:progn
 (common-lisp:defun describe-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTaskExecution"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-task-execution))
(common-lisp:progn
 (common-lisp:defun generate-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn resource-ids
                     resource-type)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn resource-ids resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-generate-recommendations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "GenerateRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'generate-recommendations))
(common-lisp:progn
 (common-lisp:defun list-agents
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-agents-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAgents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-agents))
(common-lisp:progn
 (common-lisp:defun list-discovery-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-discovery-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListDiscoveryJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-discovery-jobs))
(common-lisp:progn
 (common-lisp:defun list-locations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token filters)
   (common-lisp:declare (common-lisp:ignorable max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-locations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListLocations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-locations))
(common-lisp:progn
 (common-lisp:defun list-storage-systems
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-storage-systems-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListStorageSystems"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-storage-systems))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable resource-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-task-executions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable task-arn max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-task-executions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTaskExecutions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-task-executions))
(common-lisp:progn
 (common-lisp:defun list-tasks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token filters)
   (common-lisp:declare (common-lisp:ignorable max-results next-token filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tasks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTasks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tasks))
(common-lisp:progn
 (common-lisp:defun remove-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn)
   (common-lisp:declare (common-lisp:ignorable storage-system-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveStorageSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'remove-storage-system))
(common-lisp:progn
 (common-lisp:defun start-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn
                     collection-duration-minutes client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn collection-duration-minutes
     client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartDiscoveryJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-discovery-job))
(common-lisp:progn
 (common-lisp:defun start-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn override-options includes
                     excludes manifest-config task-report-config tags)
   (common-lisp:declare
    (common-lisp:ignorable task-arn override-options includes excludes
     manifest-config task-report-config tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartTaskExecution"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-task-execution))
(common-lisp:progn
 (common-lisp:defun stop-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn)
   (common-lisp:declare (common-lisp:ignorable discovery-job-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StopDiscoveryJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-discovery-job))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-agent
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-arn name)
   (common-lisp:declare (common-lisp:ignorable agent-arn name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-agent-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateAgent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-agent))
(common-lisp:progn
 (common-lisp:defun update-discovery-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key discovery-job-arn
                     collection-duration-minutes)
   (common-lisp:declare
    (common-lisp:ignorable discovery-job-arn collection-duration-minutes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-discovery-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateDiscoveryJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-discovery-job))
(common-lisp:progn
 (common-lisp:defun update-location-azure-blob
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory
                     authentication-type sas-configuration blob-type
                     access-tier agent-arns)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory authentication-type
     sas-configuration blob-type access-tier agent-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-location-azure-blob-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateLocationAzureBlob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-location-azure-blob))
(common-lisp:progn
 (common-lisp:defun update-location-hdfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory name-nodes
                     block-size replication-factor kms-key-provider-uri
                     qop-configuration authentication-type simple-user
                     kerberos-principal kerberos-keytab kerberos-krb5conf
                     agent-arns)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory name-nodes block-size
     replication-factor kms-key-provider-uri qop-configuration
     authentication-type simple-user kerberos-principal kerberos-keytab
     kerberos-krb5conf agent-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-hdfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateLocationHdfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-location-hdfs))
(common-lisp:progn
 (common-lisp:defun update-location-nfs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory on-prem-config
                     mount-options)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory on-prem-config
     mount-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-nfs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateLocationNfs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-location-nfs))
(common-lisp:progn
 (common-lisp:defun update-location-object-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn server-port server-protocol
                     subdirectory access-key secret-key agent-arns
                     server-certificate)
   (common-lisp:declare
    (common-lisp:ignorable location-arn server-port server-protocol
     subdirectory access-key secret-key agent-arns server-certificate))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-location-object-storage-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateLocationObjectStorage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-location-object-storage))
(common-lisp:progn
 (common-lisp:defun update-location-smb
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key location-arn subdirectory user domain
                     password agent-arns mount-options)
   (common-lisp:declare
    (common-lisp:ignorable location-arn subdirectory user domain password
     agent-arns mount-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-location-smb-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateLocationSmb"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-location-smb))
(common-lisp:progn
 (common-lisp:defun update-storage-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key storage-system-arn server-configuration
                     agent-arns name cloud-watch-log-group-arn credentials)
   (common-lisp:declare
    (common-lisp:ignorable storage-system-arn server-configuration agent-arns
     name cloud-watch-log-group-arn credentials))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-storage-system-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateStorageSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-storage-system))
(common-lisp:progn
 (common-lisp:defun update-task
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-arn options excludes schedule name
                     cloud-watch-log-group-arn includes manifest-config
                     task-report-config)
   (common-lisp:declare
    (common-lisp:ignorable task-arn options excludes schedule name
     cloud-watch-log-group-arn includes manifest-config task-report-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-task-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTask"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-task))
(common-lisp:progn
 (common-lisp:defun update-task-execution
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key task-execution-arn options)
   (common-lisp:declare (common-lisp:ignorable task-execution-arn options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-task-execution-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'datasync-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateTaskExecution"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-task-execution))
