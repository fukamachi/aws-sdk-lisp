;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/iotevents/api (:use)
                             (:nicknames #:aws/iotevents)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotevents/api)
(common-lisp:progn
 (common-lisp:define-condition iotevents-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotevents-error))
(common-lisp:progn
 (common-lisp:defclass iotevents-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iotevents" :api-version
                        "2018-07-27" :host-prefix "iotevents" :signing-name
                        "iotevents" :global-host common-lisp:nil))
 (common-lisp:export 'iotevents-request))
(common-lisp:defvar *error-map*
  '(("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("ResourceAlreadyExistsException" . resource-already-exists-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnsupportedOperationException" . unsupported-operation-exception)))
(common-lisp:progn
 (common-lisp:defclass acknowledge-flow common-lisp:nil
                       ((enabled :initarg :enabled :initform
                         (common-lisp:error ":enabled is required") :type
                         (common-lisp:or acknowledge-flow-enabled
                                         common-lisp:null)
                         :accessor struct-shape-acknowledge-flow-enabled :shape
                         "AcknowledgeFlowEnabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-acknowledge-flow
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'acknowledge-flow
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'acknowledge-flow 'make-acknowledge-flow))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input acknowledge-flow))
   common-lisp:nil))
(common-lisp:deftype acknowledge-flow-enabled () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass action common-lisp:nil
                       ((set-variable :initarg :set-variable :initform
                         common-lisp:nil :type
                         (common-lisp:or set-variable-action common-lisp:null)
                         :accessor struct-shape-action-set-variable :shape
                         "SetVariableAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sns :initarg :sns :initform common-lisp:nil :type
                         (common-lisp:or snstopic-publish-action
                                         common-lisp:null)
                         :accessor struct-shape-action-sns :shape
                         "SNSTopicPublishAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-topic-publish :initarg :iot-topic-publish
                         :initform common-lisp:nil :type
                         (common-lisp:or iot-topic-publish-action
                                         common-lisp:null)
                         :accessor struct-shape-action-iot-topic-publish :shape
                         "IotTopicPublishAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (set-timer :initarg :set-timer :initform
                         common-lisp:nil :type
                         (common-lisp:or set-timer-action common-lisp:null)
                         :accessor struct-shape-action-set-timer :shape
                         "SetTimerAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (clear-timer :initarg :clear-timer :initform
                         common-lisp:nil :type
                         (common-lisp:or clear-timer-action common-lisp:null)
                         :accessor struct-shape-action-clear-timer :shape
                         "ClearTimerAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reset-timer :initarg :reset-timer :initform
                         common-lisp:nil :type
                         (common-lisp:or reset-timer-action common-lisp:null)
                         :accessor struct-shape-action-reset-timer :shape
                         "ResetTimerAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lambda :initarg :lambda :initform common-lisp:nil
                         :type (common-lisp:or lambda-action common-lisp:null)
                         :accessor struct-shape-action-lambda :shape
                         "LambdaAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-events :initarg :iot-events :initform
                         common-lisp:nil :type
                         (common-lisp:or iot-events-action common-lisp:null)
                         :accessor struct-shape-action-iot-events :shape
                         "IotEventsAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sqs :initarg :sqs :initform common-lisp:nil :type
                         (common-lisp:or sqs-action common-lisp:null) :accessor
                         struct-shape-action-sqs :shape "SqsAction" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (firehose :initarg :firehose :initform common-lisp:nil
                         :type
                         (common-lisp:or firehose-action common-lisp:null)
                         :accessor struct-shape-action-firehose :shape
                         "FirehoseAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dynamo-db :initarg :dynamo-db :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-dbaction common-lisp:null)
                         :accessor struct-shape-action-dynamo-db :shape
                         "DynamoDBAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dynamo-dbv2 :initarg :dynamo-dbv2 :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-dbv2action common-lisp:null)
                         :accessor struct-shape-action-dynamo-dbv2 :shape
                         "DynamoDBv2Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-site-wise :initarg :iot-site-wise :initform
                         common-lisp:nil :type
                         (common-lisp:or iot-site-wise-action common-lisp:null)
                         :accessor struct-shape-action-iot-site-wise :shape
                         "IotSiteWiseAction" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'set-variable))
      (common-lisp:list
       (common-lisp:cons "setVariable"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns))
      (common-lisp:list
       (common-lisp:cons "sns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-topic-publish))
      (common-lisp:list
       (common-lisp:cons "iotTopicPublish"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'set-timer))
      (common-lisp:list
       (common-lisp:cons "setTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clear-timer))
      (common-lisp:list
       (common-lisp:cons "clearTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reset-timer))
      (common-lisp:list
       (common-lisp:cons "resetTimer"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda))
      (common-lisp:list
       (common-lisp:cons "lambda"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-events))
      (common-lisp:list
       (common-lisp:cons "iotEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs))
      (common-lisp:list
       (common-lisp:cons "sqs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firehose))
      (common-lisp:list
       (common-lisp:cons "firehose"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-db))
      (common-lisp:list
       (common-lisp:cons "dynamoDB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-dbv2))
      (common-lisp:list
       (common-lisp:cons "dynamoDBv2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-site-wise))
      (common-lisp:list
       (common-lisp:cons "iotSiteWise"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype actions () '(trivial-types:proper-list action))
 (common-lisp:defun make-actions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass alarm-action common-lisp:nil
                       ((sns :initarg :sns :initform common-lisp:nil :type
                         (common-lisp:or snstopic-publish-action
                                         common-lisp:null)
                         :accessor struct-shape-alarm-action-sns :shape
                         "SNSTopicPublishAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-topic-publish :initarg :iot-topic-publish
                         :initform common-lisp:nil :type
                         (common-lisp:or iot-topic-publish-action
                                         common-lisp:null)
                         :accessor struct-shape-alarm-action-iot-topic-publish
                         :shape "IotTopicPublishAction" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lambda :initarg :lambda :initform common-lisp:nil
                         :type (common-lisp:or lambda-action common-lisp:null)
                         :accessor struct-shape-alarm-action-lambda :shape
                         "LambdaAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-events :initarg :iot-events :initform
                         common-lisp:nil :type
                         (common-lisp:or iot-events-action common-lisp:null)
                         :accessor struct-shape-alarm-action-iot-events :shape
                         "IotEventsAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sqs :initarg :sqs :initform common-lisp:nil :type
                         (common-lisp:or sqs-action common-lisp:null) :accessor
                         struct-shape-alarm-action-sqs :shape "SqsAction"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (firehose :initarg :firehose :initform common-lisp:nil
                         :type
                         (common-lisp:or firehose-action common-lisp:null)
                         :accessor struct-shape-alarm-action-firehose :shape
                         "FirehoseAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dynamo-db :initarg :dynamo-db :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-dbaction common-lisp:null)
                         :accessor struct-shape-alarm-action-dynamo-db :shape
                         "DynamoDBAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dynamo-dbv2 :initarg :dynamo-dbv2 :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-dbv2action common-lisp:null)
                         :accessor struct-shape-alarm-action-dynamo-dbv2 :shape
                         "DynamoDBv2Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iot-site-wise :initarg :iot-site-wise :initform
                         common-lisp:nil :type
                         (common-lisp:or iot-site-wise-action common-lisp:null)
                         :accessor struct-shape-alarm-action-iot-site-wise
                         :shape "IotSiteWiseAction" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'alarm-action 'make-alarm-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns))
      (common-lisp:list
       (common-lisp:cons "sns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-topic-publish))
      (common-lisp:list
       (common-lisp:cons "iotTopicPublish"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda))
      (common-lisp:list
       (common-lisp:cons "lambda"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-events))
      (common-lisp:list
       (common-lisp:cons "iotEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sqs))
      (common-lisp:list
       (common-lisp:cons "sqs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'firehose))
      (common-lisp:list
       (common-lisp:cons "firehose"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-db))
      (common-lisp:list
       (common-lisp:cons "dynamoDB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dynamo-dbv2))
      (common-lisp:list
       (common-lisp:cons "dynamoDBv2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iot-site-wise))
      (common-lisp:list
       (common-lisp:cons "iotSiteWise"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype alarm-actions ()
   '(trivial-types:proper-list alarm-action))
 (common-lisp:defun make-alarm-actions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-action))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass alarm-capabilities common-lisp:nil
                       ((initialization-configuration :initarg
                         :initialization-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or initialization-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-alarm-capabilities-initialization-configuration
                         :shape "InitializationConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (acknowledge-flow :initarg :acknowledge-flow :initform
                         common-lisp:nil :type
                         (common-lisp:or acknowledge-flow common-lisp:null)
                         :accessor
                         struct-shape-alarm-capabilities-acknowledge-flow
                         :shape "AcknowledgeFlow" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-capabilities
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-capabilities
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alarm-capabilities 'make-alarm-capabilities))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'initialization-configuration))
      (common-lisp:list
       (common-lisp:cons "initializationConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'acknowledge-flow))
      (common-lisp:list
       (common-lisp:cons "acknowledgeFlow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-capabilities))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass alarm-event-actions common-lisp:nil
                       ((alarm-actions :initarg :alarm-actions :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-actions common-lisp:null)
                         :accessor
                         struct-shape-alarm-event-actions-alarm-actions :shape
                         "AlarmActions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-event-actions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-event-actions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alarm-event-actions 'make-alarm-event-actions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-actions))
      (common-lisp:list
       (common-lisp:cons "alarmActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-event-actions))
   common-lisp:nil))
(common-lisp:deftype alarm-model-arn () 'common-lisp:string)
(common-lisp:deftype alarm-model-description () 'common-lisp:string)
(common-lisp:deftype alarm-model-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-model-summaries ()
   '(trivial-types:proper-list alarm-model-summary))
 (common-lisp:defun make-alarm-model-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list alarm-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass alarm-model-summary common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-alarm-model-summary-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (alarm-model-description :initarg
                         :alarm-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-summary-alarm-model-description
                         :shape "AlarmModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (alarm-model-name :initarg :alarm-model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-summary-alarm-model-name
                         :shape "AlarmModelName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-model-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-model-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alarm-model-summary 'make-alarm-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-model-summary))
   common-lisp:nil))
(common-lisp:deftype alarm-model-version () 'common-lisp:string)
(common-lisp:deftype alarm-model-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype alarm-model-version-summaries ()
   '(trivial-types:proper-list alarm-model-version-summary))
 (common-lisp:defun make-alarm-model-version-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            alarm-model-version-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass alarm-model-version-summary common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-alarm-model-name
                         :shape "AlarmModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-arn :initarg :alarm-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-arn common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-alarm-model-arn
                         :shape "AlarmModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-version :initarg :alarm-model-version
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-version common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-alarm-model-version
                         :shape "AlarmModelVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-alarm-model-version-summary-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-alarm-model-version-summary-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-status :shape
                         "AlarmModelVersionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or status-message common-lisp:null)
                         :accessor
                         struct-shape-alarm-model-version-summary-status-message
                         :shape "StatusMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-model-version-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-model-version-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alarm-model-version-summary
                    'make-alarm-model-version-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          alarm-model-version-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass alarm-notification common-lisp:nil
                       ((notification-actions :initarg :notification-actions
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-actions common-lisp:null)
                         :accessor
                         struct-shape-alarm-notification-notification-actions
                         :shape "NotificationActions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-notification
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-notification
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'alarm-notification 'make-alarm-notification))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-notification))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-notification))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'notification-actions))
      (common-lisp:list
       (common-lisp:cons "notificationActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-notification))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass alarm-rule common-lisp:nil
                       ((simple-rule :initarg :simple-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-rule common-lisp:null)
                         :accessor struct-shape-alarm-rule-simple-rule :shape
                         "SimpleRule" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-alarm-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'alarm-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'alarm-rule 'make-alarm-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input alarm-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input alarm-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-rule))
      (common-lisp:list
       (common-lisp:cons "simpleRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input alarm-rule))
   common-lisp:nil))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype analysis-id () 'common-lisp:string)
(common-lisp:deftype analysis-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass analysis-result common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or analysis-type common-lisp:null)
                         :accessor struct-shape-analysis-result-type :shape
                         "AnalysisType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (level :initarg :level :initform common-lisp:nil :type
                         (common-lisp:or analysis-result-level
                                         common-lisp:null)
                         :accessor struct-shape-analysis-result-level :shape
                         "AnalysisResultLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or analysis-message common-lisp:null)
                         :accessor struct-shape-analysis-result-message :shape
                         "AnalysisMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locations :initarg :locations :initform
                         common-lisp:nil :type
                         (common-lisp:or analysis-result-locations
                                         common-lisp:null)
                         :accessor struct-shape-analysis-result-locations
                         :shape "AnalysisResultLocations" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-analysis-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'analysis-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'analysis-result 'make-analysis-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input analysis-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input analysis-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'level))
      (common-lisp:list
       (common-lisp:cons "level"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locations))
      (common-lisp:list
       (common-lisp:cons "locations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input analysis-result))
   common-lisp:nil))
(common-lisp:deftype analysis-result-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass analysis-result-location common-lisp:nil
                       ((path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or analysis-result-location-path
                                         common-lisp:null)
                         :accessor struct-shape-analysis-result-location-path
                         :shape "AnalysisResultLocationPath" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-analysis-result-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'analysis-result-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'analysis-result-location 'make-analysis-result-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          analysis-result-location))
   common-lisp:nil))
(common-lisp:deftype analysis-result-location-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype analysis-result-locations ()
   '(trivial-types:proper-list analysis-result-location))
 (common-lisp:defun make-analysis-result-locations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            analysis-result-location))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype analysis-results ()
   '(trivial-types:proper-list analysis-result))
 (common-lisp:defun make-analysis-results
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list analysis-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype analysis-status () 'common-lisp:string)
(common-lisp:deftype analysis-type () 'common-lisp:string)
(common-lisp:deftype asset-id () 'common-lisp:string)
(common-lisp:deftype asset-model-id () 'common-lisp:string)
(common-lisp:deftype asset-property-alias () 'common-lisp:string)
(common-lisp:deftype asset-property-boolean-value () 'common-lisp:string)
(common-lisp:deftype asset-property-double-value () 'common-lisp:string)
(common-lisp:deftype asset-property-entry-id () 'common-lisp:string)
(common-lisp:deftype asset-property-id () 'common-lisp:string)
(common-lisp:deftype asset-property-integer-value () 'common-lisp:string)
(common-lisp:deftype asset-property-offset-in-nanos () 'common-lisp:string)
(common-lisp:deftype asset-property-quality () 'common-lisp:string)
(common-lisp:deftype asset-property-string-value () 'common-lisp:string)
(common-lisp:deftype asset-property-time-in-seconds () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass asset-property-timestamp common-lisp:nil
                       ((time-in-seconds :initarg :time-in-seconds :initform
                         (common-lisp:error ":timeinseconds is required") :type
                         (common-lisp:or asset-property-time-in-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-timestamp-time-in-seconds
                         :shape "AssetPropertyTimeInSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (offset-in-nanos :initarg :offset-in-nanos :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-offset-in-nanos
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-timestamp-offset-in-nanos
                         :shape "AssetPropertyOffsetInNanos" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-property-timestamp
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-property-timestamp
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'asset-property-timestamp 'make-asset-property-timestamp))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-in-seconds))
      (common-lisp:list
       (common-lisp:cons "timeInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset-in-nanos))
      (common-lisp:list
       (common-lisp:cons "offsetInNanos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-timestamp))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass asset-property-value common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or asset-property-variant
                                         common-lisp:null)
                         :accessor struct-shape-asset-property-value-value
                         :shape "AssetPropertyVariant" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-timestamp
                                         common-lisp:null)
                         :accessor struct-shape-asset-property-value-timestamp
                         :shape "AssetPropertyTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (quality :initarg :quality :initform common-lisp:nil
                         :type
                         (common-lisp:or asset-property-quality
                                         common-lisp:null)
                         :accessor struct-shape-asset-property-value-quality
                         :shape "AssetPropertyQuality" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-property-value
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-property-value
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'asset-property-value 'make-asset-property-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input asset-property-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input asset-property-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quality))
      (common-lisp:list
       (common-lisp:cons "quality"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input asset-property-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass asset-property-variant common-lisp:nil
                       ((string-value :initarg :string-value :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-string-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-variant-string-value
                         :shape "AssetPropertyStringValue" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (integer-value :initarg :integer-value :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-integer-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-variant-integer-value
                         :shape "AssetPropertyIntegerValue" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (double-value :initarg :double-value :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-double-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-variant-double-value
                         :shape "AssetPropertyDoubleValue" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (boolean-value :initarg :boolean-value :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-boolean-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-asset-property-variant-boolean-value
                         :shape "AssetPropertyBooleanValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-asset-property-variant
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'asset-property-variant
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'asset-property-variant 'make-asset-property-variant))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'string-value))
      (common-lisp:list
       (common-lisp:cons "stringValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'integer-value))
      (common-lisp:list
       (common-lisp:cons "integerValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'double-value))
      (common-lisp:list
       (common-lisp:cons "doubleValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'boolean-value))
      (common-lisp:list
       (common-lisp:cons "booleanValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          asset-property-variant))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attribute common-lisp:nil
                       ((json-path :initarg :json-path :initform
                         (common-lisp:error ":jsonpath is required") :type
                         (common-lisp:or attribute-json-path common-lisp:null)
                         :accessor struct-shape-attribute-json-path :shape
                         "AttributeJsonPath" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attribute
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attribute
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'attribute 'make-attribute))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'json-path))
      (common-lisp:list
       (common-lisp:cons "jsonPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute))
   common-lisp:nil))
(common-lisp:deftype attribute-json-path () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype attributes () '(trivial-types:proper-list attribute))
 (common-lisp:defun make-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list attribute))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass clear-timer-action common-lisp:nil
                       ((timer-name :initarg :timer-name :initform
                         (common-lisp:error ":timername is required") :type
                         (common-lisp:or timer-name common-lisp:null) :accessor
                         struct-shape-clear-timer-action-timer-name :shape
                         "TimerName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-clear-timer-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'clear-timer-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'clear-timer-action 'make-clear-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input clear-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input clear-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input clear-timer-action))
   common-lisp:nil))
(common-lisp:deftype comparison-operator () 'common-lisp:string)
(common-lisp:deftype condition () 'common-lisp:string)
(common-lisp:deftype content-expression () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-alarm-model-request common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         (common-lisp:error ":alarmmodelname is required")
                         :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-alarm-model-name
                         :shape "AlarmModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-description :initarg
                         :alarm-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-alarm-model-description
                         :shape "AlarmModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-alarm-model-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or attribute-json-path common-lisp:null)
                         :accessor struct-shape-create-alarm-model-request-key
                         :shape "AttributeJsonPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (severity :initarg :severity :initform common-lisp:nil
                         :type (common-lisp:or severity common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-severity
                         :shape "Severity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-rule :initarg :alarm-rule :initform
                         (common-lisp:error ":alarmrule is required") :type
                         (common-lisp:or alarm-rule common-lisp:null) :accessor
                         struct-shape-create-alarm-model-request-alarm-rule
                         :shape "AlarmRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-notification :initarg :alarm-notification
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-notification common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-alarm-notification
                         :shape "AlarmNotification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-event-actions :initarg :alarm-event-actions
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-event-actions common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-alarm-event-actions
                         :shape "AlarmEventActions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-capabilities :initarg :alarm-capabilities
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-capabilities common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-request-alarm-capabilities
                         :shape "AlarmCapabilities" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-alarm-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-alarm-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-alarm-model-request
                    'make-create-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-alarm-model-response common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-alarm-model-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-arn :initarg :alarm-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-arn common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-response-alarm-model-arn
                         :shape "AlarmModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-version :initarg :alarm-model-version
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-version common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-response-alarm-model-version
                         :shape "AlarmModelVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-alarm-model-response-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-alarm-model-response-status :shape
                         "AlarmModelVersionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-alarm-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-alarm-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-alarm-model-response
                    'make-create-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-detector-model-request common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-detector-model-name
                         :shape "DetectorModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detector-model-definition :initarg
                         :detector-model-definition :initform
                         (common-lisp:error
                          ":detectormodeldefinition is required")
                         :type
                         (common-lisp:or detector-model-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-detector-model-definition
                         :shape "DetectorModelDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-description :initarg
                         :detector-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-detector-model-description
                         :shape "DetectorModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or attribute-json-path common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-key :shape
                         "AttributeJsonPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-detector-model-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (evaluation-method :initarg :evaluation-method
                         :initform common-lisp:nil :type
                         (common-lisp:or evaluation-method common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-request-evaluation-method
                         :shape "EvaluationMethod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-detector-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-detector-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-detector-model-request
                    'make-create-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-detector-model-response common-lisp:nil
                       ((detector-model-configuration :initarg
                         :detector-model-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or detector-model-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-detector-model-response-detector-model-configuration
                         :shape "DetectorModelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-detector-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-detector-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-detector-model-response
                    'make-create-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-input-request common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-create-input-request-input-name :shape
                         "InputName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-description :initarg :input-description
                         :initform common-lisp:nil :type
                         (common-lisp:or input-description common-lisp:null)
                         :accessor
                         struct-shape-create-input-request-input-description
                         :shape "InputDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-definition :initarg :input-definition :initform
                         (common-lisp:error ":inputdefinition is required")
                         :type
                         (common-lisp:or input-definition common-lisp:null)
                         :accessor
                         struct-shape-create-input-request-input-definition
                         :shape "InputDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-input-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-input-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-input-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-input-request 'make-create-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-input-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-input-response common-lisp:nil
                       ((input-configuration :initarg :input-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or input-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-input-response-input-configuration
                         :shape "InputConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-input-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-input-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-input-response 'make-create-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-input-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-alarm-model-request common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         (common-lisp:error ":alarmmodelname is required")
                         :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-delete-alarm-model-request-alarm-model-name
                         :shape "AlarmModelName" :location "uri" :location-name
                         "alarmModelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-alarm-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-alarm-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-alarm-model-request
                    'make-delete-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-alarm-model-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-alarm-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-alarm-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-alarm-model-response
                    'make-delete-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-detector-model-request common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-delete-detector-model-request-detector-model-name
                         :shape "DetectorModelName" :location "uri"
                         :location-name "detectorModelName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-detector-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-detector-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-detector-model-request
                    'make-delete-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-detector-model-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-detector-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-detector-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-detector-model-response
                    'make-delete-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-input-request common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-delete-input-request-input-name :shape
                         "InputName" :location "uri" :location-name
                         "inputName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-input-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-input-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-input-request 'make-delete-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-input-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-input-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-input-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-input-response 'make-delete-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-input-response))
   common-lisp:nil))
(common-lisp:deftype delivery-stream-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass describe-alarm-model-request common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         (common-lisp:error ":alarmmodelname is required")
                         :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-request-alarm-model-name
                         :shape "AlarmModelName" :location "uri" :location-name
                         "alarmModelName")
                        (alarm-model-version :initarg :alarm-model-version
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-version common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-request-alarm-model-version
                         :shape "AlarmModelVersion" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-alarm-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-alarm-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-model-request
                    'make-describe-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-alarm-model-response common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-alarm-model-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-arn :initarg :alarm-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-model-arn
                         :shape "AlarmModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-version :initarg :alarm-model-version
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-version common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-model-version
                         :shape "AlarmModelVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-describe-alarm-model-response-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-status
                         :shape "AlarmModelVersionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or status-message common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-status-message
                         :shape "StatusMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-name :initarg :alarm-model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-model-name
                         :shape "AlarmModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-description :initarg
                         :alarm-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-model-description
                         :shape "AlarmModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or attribute-json-path common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-key :shape
                         "AttributeJsonPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (severity :initarg :severity :initform common-lisp:nil
                         :type (common-lisp:or severity common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-severity
                         :shape "Severity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-rule :initarg :alarm-rule :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-rule common-lisp:null) :accessor
                         struct-shape-describe-alarm-model-response-alarm-rule
                         :shape "AlarmRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-notification :initarg :alarm-notification
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-notification common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-notification
                         :shape "AlarmNotification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-event-actions :initarg :alarm-event-actions
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-event-actions common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-event-actions
                         :shape "AlarmEventActions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-capabilities :initarg :alarm-capabilities
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-capabilities common-lisp:null)
                         :accessor
                         struct-shape-describe-alarm-model-response-alarm-capabilities
                         :shape "AlarmCapabilities" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-alarm-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-alarm-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-alarm-model-response
                    'make-describe-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-name))
      (common-lisp:list
       (common-lisp:cons "alarmModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-detector-model-analysis-request common-lisp:nil
                       ((analysis-id :initarg :analysis-id :initform
                         (common-lisp:error ":analysisid is required") :type
                         (common-lisp:or analysis-id common-lisp:null)
                         :accessor
                         struct-shape-describe-detector-model-analysis-request-analysis-id
                         :shape "AnalysisId" :location "uri" :location-name
                         "analysisId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-detector-model-analysis-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-detector-model-analysis-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-analysis-request
                    'make-describe-detector-model-analysis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-detector-model-analysis-response
                       common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or analysis-status common-lisp:null)
                         :accessor
                         struct-shape-describe-detector-model-analysis-response-status
                         :shape "AnalysisStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-detector-model-analysis-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-detector-model-analysis-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-analysis-response
                    'make-describe-detector-model-analysis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-analysis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-detector-model-request common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-describe-detector-model-request-detector-model-name
                         :shape "DetectorModelName" :location "uri"
                         :location-name "detectorModelName")
                        (detector-model-version :initarg
                         :detector-model-version :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-detector-model-request-detector-model-version
                         :shape "DetectorModelVersion" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-detector-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-detector-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-request
                    'make-describe-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-detector-model-response common-lisp:nil
                       ((detector-model :initarg :detector-model :initform
                         common-lisp:nil :type
                         (common-lisp:or detector-model common-lisp:null)
                         :accessor
                         struct-shape-describe-detector-model-response-detector-model
                         :shape "DetectorModel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-detector-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-detector-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-detector-model-response
                    'make-describe-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model))
      (common-lisp:list
       (common-lisp:cons "detectorModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-input-request common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-describe-input-request-input-name :shape
                         "InputName" :location "uri" :location-name
                         "inputName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-input-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-input-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-input-request 'make-describe-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-input-response common-lisp:nil
                       ((input :initarg :input :initform common-lisp:nil :type
                         (common-lisp:or input common-lisp:null) :accessor
                         struct-shape-describe-input-response-input :shape
                         "Input" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-input-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-input-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-input-response 'make-describe-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input))
      (common-lisp:list
       (common-lisp:cons "input"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-input-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-logging-options-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-logging-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-logging-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-logging-options-request
                    'make-describe-logging-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-logging-options-response common-lisp:nil
                       ((logging-options :initarg :logging-options :initform
                         common-lisp:nil :type
                         (common-lisp:or logging-options common-lisp:null)
                         :accessor
                         struct-shape-describe-logging-options-response-logging-options
                         :shape "LoggingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-logging-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-logging-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-logging-options-response
                    'make-describe-logging-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-options))
      (common-lisp:list
       (common-lisp:cons "loggingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-logging-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detector-debug-option common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-detector-debug-option-detector-model-name
                         :shape "DetectorModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key-value :initarg :key-value :initform
                         common-lisp:nil :type
                         (common-lisp:or key-value common-lisp:null) :accessor
                         struct-shape-detector-debug-option-key-value :shape
                         "KeyValue" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-debug-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detector-debug-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detector-debug-option 'make-detector-debug-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-value))
      (common-lisp:list
       (common-lisp:cons "keyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-debug-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype detector-debug-options ()
   '(trivial-types:proper-list detector-debug-option))
 (common-lisp:defun make-detector-debug-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detector-debug-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass detector-model common-lisp:nil
                       ((detector-model-definition :initarg
                         :detector-model-definition :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-detector-model-definition
                         :shape "DetectorModelDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-configuration :initarg
                         :detector-model-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or detector-model-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-detector-model-configuration
                         :shape "DetectorModelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detector-model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'detector-model 'make-detector-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detector-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detector-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detector-model))
   common-lisp:nil))
(common-lisp:deftype detector-model-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass detector-model-configuration common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform common-lisp:nil :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-detector-model-name
                         :shape "DetectorModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detector-model-version :initarg
                         :detector-model-version :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-detector-model-version
                         :shape "DetectorModelVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-description :initarg
                         :detector-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-detector-model-description
                         :shape "DetectorModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-arn :initarg :detector-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or detector-model-arn common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-detector-model-arn
                         :shape "DetectorModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-detector-model-configuration-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-detector-model-configuration-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-status
                         :shape "DetectorModelVersionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or attribute-json-path common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-key :shape
                         "AttributeJsonPath" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-method :initarg :evaluation-method
                         :initform common-lisp:nil :type
                         (common-lisp:or evaluation-method common-lisp:null)
                         :accessor
                         struct-shape-detector-model-configuration-evaluation-method
                         :shape "EvaluationMethod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-model-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detector-model-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detector-model-configuration
                    'make-detector-model-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-arn))
      (common-lisp:list
       (common-lisp:cons "detectorModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detector-model-definition common-lisp:nil
                       ((states :initarg :states :initform
                         (common-lisp:error ":states is required") :type
                         (common-lisp:or states common-lisp:null) :accessor
                         struct-shape-detector-model-definition-states :shape
                         "States" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (initial-state-name :initarg :initial-state-name
                         :initform
                         (common-lisp:error ":initialstatename is required")
                         :type (common-lisp:or state-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-definition-initial-state-name
                         :shape "StateName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-model-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detector-model-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detector-model-definition
                    'make-detector-model-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'states))
      (common-lisp:list
       (common-lisp:cons "states"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initial-state-name))
      (common-lisp:list
       (common-lisp:cons "initialStateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-definition))
   common-lisp:nil))
(common-lisp:deftype detector-model-description () 'common-lisp:string)
(common-lisp:deftype detector-model-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype detector-model-summaries ()
   '(trivial-types:proper-list detector-model-summary))
 (common-lisp:defun make-detector-model-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list detector-model-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass detector-model-summary common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform common-lisp:nil :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-summary-detector-model-name
                         :shape "DetectorModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detector-model-description :initarg
                         :detector-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-summary-detector-model-description
                         :shape "DetectorModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-detector-model-summary-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-model-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detector-model-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detector-model-summary 'make-detector-model-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-summary))
   common-lisp:nil))
(common-lisp:deftype detector-model-version () 'common-lisp:string)
(common-lisp:deftype detector-model-version-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype detector-model-version-summaries ()
   '(trivial-types:proper-list detector-model-version-summary))
 (common-lisp:defun make-detector-model-version-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            detector-model-version-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass detector-model-version-summary common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform common-lisp:nil :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-detector-model-name
                         :shape "DetectorModelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detector-model-version :initarg
                         :detector-model-version :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-detector-model-version
                         :shape "DetectorModelVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-arn :initarg :detector-model-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or detector-model-arn common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-detector-model-arn
                         :shape "DetectorModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-detector-model-version-summary-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-detector-model-version-summary-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-status
                         :shape "DetectorModelVersionStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (evaluation-method :initarg :evaluation-method
                         :initform common-lisp:nil :type
                         (common-lisp:or evaluation-method common-lisp:null)
                         :accessor
                         struct-shape-detector-model-version-summary-evaluation-method
                         :shape "EvaluationMethod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detector-model-version-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'detector-model-version-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detector-model-version-summary
                    'make-detector-model-version-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-name))
      (common-lisp:list
       (common-lisp:cons "detectorModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'detector-model-arn))
      (common-lisp:list
       (common-lisp:cons "detectorModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          detector-model-version-summary))
   common-lisp:nil))
(common-lisp:deftype disabled-on-initialization () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass dynamo-dbaction common-lisp:nil
                       ((hash-key-type :initarg :hash-key-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-key-type common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-hash-key-type
                         :shape "DynamoKeyType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hash-key-field :initarg :hash-key-field :initform
                         (common-lisp:error ":hashkeyfield is required") :type
                         (common-lisp:or dynamo-key-field common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-hash-key-field
                         :shape "DynamoKeyField" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hash-key-value :initarg :hash-key-value :initform
                         (common-lisp:error ":hashkeyvalue is required") :type
                         (common-lisp:or dynamo-key-value common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-hash-key-value
                         :shape "DynamoKeyValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (range-key-type :initarg :range-key-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-key-type common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-range-key-type
                         :shape "DynamoKeyType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (range-key-field :initarg :range-key-field :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-key-field common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-range-key-field
                         :shape "DynamoKeyField" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (range-key-value :initarg :range-key-value :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-key-value common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-range-key-value
                         :shape "DynamoKeyValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation :initarg :operation :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-operation common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-operation
                         :shape "DynamoOperation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload-field :initarg :payload-field :initform
                         common-lisp:nil :type
                         (common-lisp:or dynamo-key-field common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-payload-field
                         :shape "DynamoKeyField" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (table-name :initarg :table-name :initform
                         (common-lisp:error ":tablename is required") :type
                         (common-lisp:or dynamo-table-name common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-table-name
                         :shape "DynamoTableName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-dynamo-dbaction-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dynamo-dbaction
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dynamo-dbaction
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dynamo-dbaction 'make-dynamo-dbaction))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-type))
      (common-lisp:list
       (common-lisp:cons "hashKeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-field))
      (common-lisp:list
       (common-lisp:cons "hashKeyField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hash-key-value))
      (common-lisp:list
       (common-lisp:cons "hashKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-type))
      (common-lisp:list
       (common-lisp:cons "rangeKeyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-field))
      (common-lisp:list
       (common-lisp:cons "rangeKeyField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-key-value))
      (common-lisp:list
       (common-lisp:cons "rangeKeyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation))
      (common-lisp:list
       (common-lisp:cons "operation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-field))
      (common-lisp:list
       (common-lisp:cons "payloadField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "tableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dynamo-dbaction))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dynamo-dbv2action common-lisp:nil
                       ((table-name :initarg :table-name :initform
                         (common-lisp:error ":tablename is required") :type
                         (common-lisp:or dynamo-table-name common-lisp:null)
                         :accessor struct-shape-dynamo-dbv2action-table-name
                         :shape "DynamoTableName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-dynamo-dbv2action-payload
                         :shape "Payload" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dynamo-dbv2action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dynamo-dbv2action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dynamo-dbv2action 'make-dynamo-dbv2action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'table-name))
      (common-lisp:list
       (common-lisp:cons "tableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dynamo-dbv2action))
   common-lisp:nil))
(common-lisp:deftype dynamo-key-field () 'common-lisp:string)
(common-lisp:deftype dynamo-key-type () 'common-lisp:string)
(common-lisp:deftype dynamo-key-value () 'common-lisp:string)
(common-lisp:deftype dynamo-operation () 'common-lisp:string)
(common-lisp:deftype dynamo-table-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass email-configuration common-lisp:nil
                       ((from :initarg :from :initform
                         (common-lisp:error ":from is required") :type
                         (common-lisp:or from-email common-lisp:null) :accessor
                         struct-shape-email-configuration-from :shape
                         "FromEmail" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type (common-lisp:or email-content common-lisp:null)
                         :accessor struct-shape-email-configuration-content
                         :shape "EmailContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recipients :initarg :recipients :initform
                         (common-lisp:error ":recipients is required") :type
                         (common-lisp:or email-recipients common-lisp:null)
                         :accessor struct-shape-email-configuration-recipients
                         :shape "EmailRecipients" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-configuration 'make-email-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipients))
      (common-lisp:list
       (common-lisp:cons "recipients"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype email-configurations ()
   '(trivial-types:proper-list email-configuration))
 (common-lisp:defun make-email-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass email-content common-lisp:nil
                       ((subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or email-subject common-lisp:null)
                         :accessor struct-shape-email-content-subject :shape
                         "EmailSubject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-message :initarg :additional-message
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-additional-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-email-content-additional-message :shape
                         "NotificationAdditionalMessage" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'email-content 'make-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-message))
      (common-lisp:list
       (common-lisp:cons "additionalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-recipients common-lisp:nil
                       ((to :initarg :to :initform common-lisp:nil :type
                         (common-lisp:or recipient-details common-lisp:null)
                         :accessor struct-shape-email-recipients-to :shape
                         "RecipientDetails" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-recipients
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-recipients
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-recipients 'make-email-recipients))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-recipients))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-recipients))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to))
      (common-lisp:list
       (common-lisp:cons "to"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-recipients))
   common-lisp:nil))
(common-lisp:deftype email-subject () 'common-lisp:string)
(common-lisp:deftype evaluation-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event common-lisp:nil
                       ((event-name :initarg :event-name :initform
                         (common-lisp:error ":eventname is required") :type
                         (common-lisp:or event-name common-lisp:null) :accessor
                         struct-shape-event-event-name :shape "EventName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (condition :initarg :condition :initform
                         common-lisp:nil :type
                         (common-lisp:or condition common-lisp:null) :accessor
                         struct-shape-event-condition :shape "Condition"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (actions :initarg :actions :initform common-lisp:nil
                         :type (common-lisp:or actions common-lisp:null)
                         :accessor struct-shape-event-actions :shape "Actions"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-name))
      (common-lisp:list
       (common-lisp:cons "eventName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:deftype event-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype events () '(trivial-types:proper-list event))
 (common-lisp:defun make-events
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass firehose-action common-lisp:nil
                       ((delivery-stream-name :initarg :delivery-stream-name
                         :initform
                         (common-lisp:error ":deliverystreamname is required")
                         :type
                         (common-lisp:or delivery-stream-name common-lisp:null)
                         :accessor
                         struct-shape-firehose-action-delivery-stream-name
                         :shape "DeliveryStreamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (separator :initarg :separator :initform
                         common-lisp:nil :type
                         (common-lisp:or firehose-separator common-lisp:null)
                         :accessor struct-shape-firehose-action-separator
                         :shape "FirehoseSeparator" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-firehose-action-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-firehose-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'firehose-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'firehose-action 'make-firehose-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input firehose-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input firehose-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'delivery-stream-name))
      (common-lisp:list
       (common-lisp:cons "deliveryStreamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'separator))
      (common-lisp:list
       (common-lisp:cons "separator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input firehose-action))
   common-lisp:nil))
(common-lisp:deftype firehose-separator () 'common-lisp:string)
(common-lisp:deftype from-email () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-detector-model-analysis-results-request
                       common-lisp:nil
                       ((analysis-id :initarg :analysis-id :initform
                         (common-lisp:error ":analysisid is required") :type
                         (common-lisp:or analysis-id common-lisp:null)
                         :accessor
                         struct-shape-get-detector-model-analysis-results-request-analysis-id
                         :shape "AnalysisId" :location "uri" :location-name
                         "analysisId")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-detector-model-analysis-results-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-analysis-results common-lisp:null)
                         :accessor
                         struct-shape-get-detector-model-analysis-results-request-max-results
                         :shape "MaxAnalysisResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-detector-model-analysis-results-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-detector-model-analysis-results-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-detector-model-analysis-results-request
                    'make-get-detector-model-analysis-results-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-detector-model-analysis-results-response
                       common-lisp:nil
                       ((analysis-results :initarg :analysis-results :initform
                         common-lisp:nil :type
                         (common-lisp:or analysis-results common-lisp:null)
                         :accessor
                         struct-shape-get-detector-model-analysis-results-response-analysis-results
                         :shape "AnalysisResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-detector-model-analysis-results-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-detector-model-analysis-results-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-detector-model-analysis-results-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-detector-model-analysis-results-response
                    'make-get-detector-model-analysis-results-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-results))
      (common-lisp:list
       (common-lisp:cons "analysisResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-detector-model-analysis-results-response))
   common-lisp:nil))
(common-lisp:deftype identity-store-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass initialization-configuration common-lisp:nil
                       ((disabled-on-initialization :initarg
                         :disabled-on-initialization :initform
                         (common-lisp:error
                          ":disabledoninitialization is required")
                         :type
                         (common-lisp:or disabled-on-initialization
                                         common-lisp:null)
                         :accessor
                         struct-shape-initialization-configuration-disabled-on-initialization
                         :shape "DisabledOnInitialization" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-initialization-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'initialization-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'initialization-configuration
                    'make-initialization-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disabled-on-initialization))
      (common-lisp:list
       (common-lisp:cons "disabledOnInitialization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initialization-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass input common-lisp:nil
                       ((input-configuration :initarg :input-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or input-configuration common-lisp:null)
                         :accessor struct-shape-input-input-configuration
                         :shape "InputConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-definition :initarg :input-definition :initform
                         common-lisp:nil :type
                         (common-lisp:or input-definition common-lisp:null)
                         :accessor struct-shape-input-input-definition :shape
                         "InputDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'input 'make-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input))
   common-lisp:nil))
(common-lisp:deftype input-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass input-configuration common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-input-configuration-input-name :shape
                         "InputName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-description :initarg :input-description
                         :initform common-lisp:nil :type
                         (common-lisp:or input-description common-lisp:null)
                         :accessor
                         struct-shape-input-configuration-input-description
                         :shape "InputDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-arn :initarg :input-arn :initform
                         (common-lisp:error ":inputarn is required") :type
                         (common-lisp:or input-arn common-lisp:null) :accessor
                         struct-shape-input-configuration-input-arn :shape
                         "InputArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         (common-lisp:error ":creationtime is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-input-configuration-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         (common-lisp:error ":lastupdatetime is required")
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-input-configuration-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or input-status common-lisp:null)
                         :accessor struct-shape-input-configuration-status
                         :shape "InputStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'input-configuration 'make-input-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-arn))
      (common-lisp:list
       (common-lisp:cons "inputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass input-definition common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         (common-lisp:error ":attributes is required") :type
                         (common-lisp:or attributes common-lisp:null) :accessor
                         struct-shape-input-definition-attributes :shape
                         "Attributes" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'input-definition 'make-input-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-definition))
   common-lisp:nil))
(common-lisp:deftype input-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass input-identifier common-lisp:nil
                       ((iot-events-input-identifier :initarg
                         :iot-events-input-identifier :initform common-lisp:nil
                         :type
                         (common-lisp:or iot-events-input-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-input-identifier-iot-events-input-identifier
                         :shape "IotEventsInputIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (iot-site-wise-input-identifier :initarg
                         :iot-site-wise-input-identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or iot-site-wise-input-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-input-identifier-iot-site-wise-input-identifier
                         :shape "IotSiteWiseInputIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-identifier
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'input-identifier 'make-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-events-input-identifier))
      (common-lisp:list
       (common-lisp:cons "iotEventsInputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-site-wise-input-identifier))
      (common-lisp:list
       (common-lisp:cons "iotSiteWiseInputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-identifier))
   common-lisp:nil))
(common-lisp:deftype input-name () 'common-lisp:string)
(common-lisp:deftype input-property () 'common-lisp:string)
(common-lisp:deftype input-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype input-summaries ()
   '(trivial-types:proper-list input-summary))
 (common-lisp:defun make-input-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list input-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass input-summary common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         common-lisp:nil :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-input-summary-input-name :shape
                         "InputName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-description :initarg :input-description
                         :initform common-lisp:nil :type
                         (common-lisp:or input-description common-lisp:null)
                         :accessor struct-shape-input-summary-input-description
                         :shape "InputDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-arn :initarg :input-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or input-arn common-lisp:null) :accessor
                         struct-shape-input-summary-input-arn :shape "InputArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-input-summary-creation-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-input-summary-last-update-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or input-status common-lisp:null)
                         :accessor struct-shape-input-summary-status :shape
                         "InputStatus" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-input-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'input-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'input-summary 'make-input-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input input-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input input-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-arn))
      (common-lisp:list
       (common-lisp:cons "inputArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input input-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass iot-events-action common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-iot-events-action-input-name :shape
                         "InputName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-iot-events-action-payload
                         :shape "Payload" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-events-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iot-events-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-events-action 'make-iot-events-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iot-events-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iot-events-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iot-events-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iot-events-input-identifier common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-iot-events-input-identifier-input-name
                         :shape "InputName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-events-input-identifier
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iot-events-input-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-events-input-identifier
                    'make-iot-events-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-name))
      (common-lisp:list
       (common-lisp:cons "inputName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-events-input-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iot-site-wise-action common-lisp:nil
                       ((entry-id :initarg :entry-id :initform common-lisp:nil
                         :type
                         (common-lisp:or asset-property-entry-id
                                         common-lisp:null)
                         :accessor struct-shape-iot-site-wise-action-entry-id
                         :shape "AssetPropertyEntryId" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (asset-id :initarg :asset-id :initform common-lisp:nil
                         :type (common-lisp:or asset-id common-lisp:null)
                         :accessor struct-shape-iot-site-wise-action-asset-id
                         :shape "AssetId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (property-id :initarg :property-id :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-id common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-action-property-id :shape
                         "AssetPropertyId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (property-alias :initarg :property-alias :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-alias common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-action-property-alias
                         :shape "AssetPropertyAlias" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (property-value :initarg :property-value :initform
                         common-lisp:nil :type
                         (common-lisp:or asset-property-value common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-action-property-value
                         :shape "AssetPropertyValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-site-wise-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iot-site-wise-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-action 'make-iot-site-wise-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entry-id))
      (common-lisp:list
       (common-lisp:cons "entryId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-id))
      (common-lisp:list
       (common-lisp:cons "assetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-id))
      (common-lisp:list
       (common-lisp:cons "propertyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-alias))
      (common-lisp:list
       (common-lisp:cons "propertyAlias"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-value))
      (common-lisp:list
       (common-lisp:cons "propertyValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input iot-site-wise-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iot-site-wise-asset-model-property-identifier
                       common-lisp:nil
                       ((asset-model-id :initarg :asset-model-id :initform
                         (common-lisp:error ":assetmodelid is required") :type
                         (common-lisp:or asset-model-id common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-asset-model-property-identifier-asset-model-id
                         :shape "AssetModelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (property-id :initarg :property-id :initform
                         (common-lisp:error ":propertyid is required") :type
                         (common-lisp:or asset-property-id common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-asset-model-property-identifier-property-id
                         :shape "AssetPropertyId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-site-wise-asset-model-property-identifier
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'iot-site-wise-asset-model-property-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-asset-model-property-identifier
                    'make-iot-site-wise-asset-model-property-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'asset-model-id))
      (common-lisp:list
       (common-lisp:cons "assetModelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'property-id))
      (common-lisp:list
       (common-lisp:cons "propertyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-asset-model-property-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iot-site-wise-input-identifier common-lisp:nil
                       ((iot-site-wise-asset-model-property-identifier :initarg
                         :iot-site-wise-asset-model-property-identifier
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          iot-site-wise-asset-model-property-identifier
                          common-lisp:null)
                         :accessor
                         struct-shape-iot-site-wise-input-identifier-iot-site-wise-asset-model-property-identifier
                         :shape "IotSiteWiseAssetModelPropertyIdentifier"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-site-wise-input-identifier
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'iot-site-wise-input-identifier
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-site-wise-input-identifier
                    'make-iot-site-wise-input-identifier))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'iot-site-wise-asset-model-property-identifier))
      (common-lisp:list
       (common-lisp:cons "iotSiteWiseAssetModelPropertyIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-site-wise-input-identifier))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass iot-topic-publish-action common-lisp:nil
                       ((mqtt-topic :initarg :mqtt-topic :initform
                         (common-lisp:error ":mqtttopic is required") :type
                         (common-lisp:or mqtttopic common-lisp:null) :accessor
                         struct-shape-iot-topic-publish-action-mqtt-topic
                         :shape "MQTTTopic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor
                         struct-shape-iot-topic-publish-action-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-iot-topic-publish-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'iot-topic-publish-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'iot-topic-publish-action 'make-iot-topic-publish-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mqtt-topic))
      (common-lisp:list
       (common-lisp:cons "mqttTopic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          iot-topic-publish-action))
   common-lisp:nil))
(common-lisp:deftype key-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-action common-lisp:nil
                       ((function-arn :initarg :function-arn :initform
                         (common-lisp:error ":functionarn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-lambda-action-function-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-lambda-action-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lambda-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'lambda-action 'make-lambda-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lambda-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lambda-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "functionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lambda-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-alarm-model-versions-request common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         (common-lisp:error ":alarmmodelname is required")
                         :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-list-alarm-model-versions-request-alarm-model-name
                         :shape "AlarmModelName" :location "uri" :location-name
                         "alarmModelName")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-alarm-model-versions-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-alarm-model-versions-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alarm-model-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-alarm-model-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alarm-model-versions-request
                    'make-list-alarm-model-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-alarm-model-versions-response common-lisp:nil
                       ((alarm-model-version-summaries :initarg
                         :alarm-model-version-summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-version-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-alarm-model-versions-response-alarm-model-version-summaries
                         :shape "AlarmModelVersionSummaries" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-alarm-model-versions-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alarm-model-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-alarm-model-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alarm-model-versions-response
                    'make-list-alarm-model-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-version-summaries))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-model-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-alarm-models-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-alarm-models-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-alarm-models-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alarm-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-alarm-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alarm-models-request
                    'make-list-alarm-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-alarm-models-response common-lisp:nil
                       ((alarm-model-summaries :initarg :alarm-model-summaries
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-alarm-models-response-alarm-model-summaries
                         :shape "AlarmModelSummaries" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-alarm-models-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-alarm-models-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-alarm-models-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-alarm-models-response
                    'make-list-alarm-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-summaries))
      (common-lisp:list
       (common-lisp:cons "alarmModelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-alarm-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-detector-model-versions-request common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-list-detector-model-versions-request-detector-model-name
                         :shape "DetectorModelName" :location "uri"
                         :location-name "detectorModelName")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-detector-model-versions-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-detector-model-versions-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-detector-model-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-detector-model-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-detector-model-versions-request
                    'make-list-detector-model-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-detector-model-versions-response common-lisp:nil
                       ((detector-model-version-summaries :initarg
                         :detector-model-version-summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or detector-model-version-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-detector-model-versions-response-detector-model-version-summaries
                         :shape "DetectorModelVersionSummaries" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-detector-model-versions-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-detector-model-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-detector-model-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-detector-model-versions-response
                    'make-list-detector-model-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-version-summaries))
      (common-lisp:list
       (common-lisp:cons "detectorModelVersionSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-model-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-detector-models-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-detector-models-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-detector-models-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-detector-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-detector-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-detector-models-request
                    'make-list-detector-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-detector-models-response common-lisp:nil
                       ((detector-model-summaries :initarg
                         :detector-model-summaries :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-detector-models-response-detector-model-summaries
                         :shape "DetectorModelSummaries" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-detector-models-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-detector-models-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-detector-models-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-detector-models-response
                    'make-list-detector-models-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-summaries))
      (common-lisp:list
       (common-lisp:cons "detectorModelSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-detector-models-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-input-routings-request common-lisp:nil
                       ((input-identifier :initarg :input-identifier :initform
                         (common-lisp:error ":inputidentifier is required")
                         :type
                         (common-lisp:or input-identifier common-lisp:null)
                         :accessor
                         struct-shape-list-input-routings-request-input-identifier
                         :shape "InputIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-input-routings-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-input-routings-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-input-routings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-input-routings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-input-routings-request
                    'make-list-input-routings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-identifier))
      (common-lisp:list
       (common-lisp:cons "inputIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-input-routings-response common-lisp:nil
                       ((routed-resources :initarg :routed-resources :initform
                         common-lisp:nil :type
                         (common-lisp:or routed-resources common-lisp:null)
                         :accessor
                         struct-shape-list-input-routings-response-routed-resources
                         :shape "RoutedResources" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-input-routings-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-input-routings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-input-routings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-input-routings-response
                    'make-list-input-routings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routed-resources))
      (common-lisp:list
       (common-lisp:cons "routedResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-input-routings-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-inputs-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-inputs-request-next-token :shape
                         "NextToken" :location "querystring" :location-name
                         "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-inputs-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-inputs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-inputs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-inputs-request 'make-list-inputs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-inputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-inputs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-inputs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-inputs-response common-lisp:nil
                       ((input-summaries :initarg :input-summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or input-summaries common-lisp:null)
                         :accessor
                         struct-shape-list-inputs-response-input-summaries
                         :shape "InputSummaries" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-inputs-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-inputs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-inputs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-inputs-response 'make-list-inputs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-inputs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-inputs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-summaries))
      (common-lisp:list
       (common-lisp:cons "inputSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-inputs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype logging-enabled () 'common-lisp:boolean)
(common-lisp:deftype logging-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass logging-options common-lisp:nil
                       ((role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-logging-options-role-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (level :initarg :level :initform
                         (common-lisp:error ":level is required") :type
                         (common-lisp:or logging-level common-lisp:null)
                         :accessor struct-shape-logging-options-level :shape
                         "LoggingLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform
                         (common-lisp:error ":enabled is required") :type
                         (common-lisp:or logging-enabled common-lisp:null)
                         :accessor struct-shape-logging-options-enabled :shape
                         "LoggingEnabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (detector-debug-options :initarg
                         :detector-debug-options :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-debug-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-logging-options-detector-debug-options
                         :shape "DetectorDebugOptions" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-logging-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'logging-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'logging-options 'make-logging-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input logging-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input logging-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'level))
      (common-lisp:list
       (common-lisp:cons "level"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-debug-options))
      (common-lisp:list
       (common-lisp:cons "detectorDebugOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input logging-options))
   common-lisp:nil))
(common-lisp:deftype mqtttopic () 'common-lisp:string)
(common-lisp:deftype max-analysis-results () 'common-lisp:integer)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass notification-action common-lisp:nil
                       ((action :initarg :action :initform
                         (common-lisp:error ":action is required") :type
                         (common-lisp:or notification-target-actions
                                         common-lisp:null)
                         :accessor struct-shape-notification-action-action
                         :shape "NotificationTargetActions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sms-configurations :initarg :sms-configurations
                         :initform common-lisp:nil :type
                         (common-lisp:or smsconfigurations common-lisp:null)
                         :accessor
                         struct-shape-notification-action-sms-configurations
                         :shape "SMSConfigurations" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email-configurations :initarg :email-configurations
                         :initform common-lisp:nil :type
                         (common-lisp:or email-configurations common-lisp:null)
                         :accessor
                         struct-shape-notification-action-email-configurations
                         :shape "EmailConfigurations" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notification-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notification-action 'make-notification-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input notification-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input notification-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms-configurations))
      (common-lisp:list
       (common-lisp:cons "smsConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-configurations))
      (common-lisp:list
       (common-lisp:cons "emailConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input notification-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype notification-actions ()
   '(trivial-types:proper-list notification-action))
 (common-lisp:defun make-notification-actions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list notification-action))
   aws-sdk/generator/shape::members))
(common-lisp:deftype notification-additional-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass notification-target-actions common-lisp:nil
                       ((lambda-action :initarg :lambda-action :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-action common-lisp:null)
                         :accessor
                         struct-shape-notification-target-actions-lambda-action
                         :shape "LambdaAction" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notification-target-actions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notification-target-actions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notification-target-actions
                    'make-notification-target-actions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lambda-action))
      (common-lisp:list
       (common-lisp:cons "lambdaAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notification-target-actions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass on-enter-lifecycle common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type (common-lisp:or events common-lisp:null)
                         :accessor struct-shape-on-enter-lifecycle-events
                         :shape "Events" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-on-enter-lifecycle
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'on-enter-lifecycle
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'on-enter-lifecycle 'make-on-enter-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-enter-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass on-exit-lifecycle common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type (common-lisp:or events common-lisp:null)
                         :accessor struct-shape-on-exit-lifecycle-events :shape
                         "Events" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-on-exit-lifecycle
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'on-exit-lifecycle
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'on-exit-lifecycle 'make-on-exit-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-exit-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass on-input-lifecycle common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type (common-lisp:or events common-lisp:null)
                         :accessor struct-shape-on-input-lifecycle-events
                         :shape "Events" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (transition-events :initarg :transition-events
                         :initform common-lisp:nil :type
                         (common-lisp:or transition-events common-lisp:null)
                         :accessor
                         struct-shape-on-input-lifecycle-transition-events
                         :shape "TransitionEvents" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-on-input-lifecycle
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'on-input-lifecycle
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'on-input-lifecycle 'make-on-input-lifecycle))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'transition-events))
      (common-lisp:list
       (common-lisp:cons "transitionEvents"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input on-input-lifecycle))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass payload common-lisp:nil
                       ((content-expression :initarg :content-expression
                         :initform
                         (common-lisp:error ":contentexpression is required")
                         :type
                         (common-lisp:or content-expression common-lisp:null)
                         :accessor struct-shape-payload-content-expression
                         :shape "ContentExpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or payload-type common-lisp:null)
                         :accessor struct-shape-payload-type :shape
                         "PayloadType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-payload
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'payload
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'payload 'make-payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input payload))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input payload))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-expression))
      (common-lisp:list
       (common-lisp:cons "contentExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input payload))
   common-lisp:nil))
(common-lisp:deftype payload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-logging-options-request common-lisp:nil
                       ((logging-options :initarg :logging-options :initform
                         (common-lisp:error ":loggingoptions is required")
                         :type
                         (common-lisp:or logging-options common-lisp:null)
                         :accessor
                         struct-shape-put-logging-options-request-logging-options
                         :shape "LoggingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-logging-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-logging-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-logging-options-request
                    'make-put-logging-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-options))
      (common-lisp:list
       (common-lisp:cons "loggingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-logging-options-request))
   common-lisp:nil))
(common-lisp:deftype queue-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recipient-detail common-lisp:nil
                       ((sso-identity :initarg :sso-identity :initform
                         common-lisp:nil :type
                         (common-lisp:or ssoidentity common-lisp:null)
                         :accessor struct-shape-recipient-detail-sso-identity
                         :shape "SSOIdentity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recipient-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recipient-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recipient-detail 'make-recipient-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recipient-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recipient-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sso-identity))
      (common-lisp:list
       (common-lisp:cons "ssoIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recipient-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recipient-details ()
   '(trivial-types:proper-list recipient-detail))
 (common-lisp:defun make-recipient-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recipient-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass reset-timer-action common-lisp:nil
                       ((timer-name :initarg :timer-name :initform
                         (common-lisp:error ":timername is required") :type
                         (common-lisp:or timer-name common-lisp:null) :accessor
                         struct-shape-reset-timer-action-timer-name :shape
                         "TimerName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-timer-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reset-timer-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-timer-action 'make-reset-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-timer-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-already-exists-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-already-exists-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-already-exists-exception-resource-id)
      (resource-arn :initarg :resource-arn :initform common-lisp:nil :reader
       resource-already-exists-exception-resource-arn)))
 (common-lisp:export
  (common-lisp:list 'resource-already-exists-exception
                    'resource-already-exists-exception-message
                    'resource-already-exists-exception-resource-id
                    'resource-already-exists-exception-resource-arn)))
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass routed-resource common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-routed-resource-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-routed-resource-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-routed-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'routed-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'routed-resource 'make-routed-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routed-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routed-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routed-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype routed-resources ()
   '(trivial-types:proper-list routed-resource))
 (common-lisp:defun make-routed-resources
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list routed-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass smsconfiguration common-lisp:nil
                       ((sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or smssender-id common-lisp:null)
                         :accessor struct-shape-smsconfiguration-sender-id
                         :shape "SMSSenderId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-message :initarg :additional-message
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-additional-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-smsconfiguration-additional-message
                         :shape "NotificationAdditionalMessage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recipients :initarg :recipients :initform
                         (common-lisp:error ":recipients is required") :type
                         (common-lisp:or recipient-details common-lisp:null)
                         :accessor struct-shape-smsconfiguration-recipients
                         :shape "RecipientDetails" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smsconfiguration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smsconfiguration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smsconfiguration 'make-smsconfiguration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smsconfiguration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smsconfiguration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "senderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-message))
      (common-lisp:list
       (common-lisp:cons "additionalMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recipients))
      (common-lisp:list
       (common-lisp:cons "recipients"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smsconfiguration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype smsconfigurations ()
   '(trivial-types:proper-list smsconfiguration))
 (common-lisp:defun make-smsconfigurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list smsconfiguration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype smssender-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass snstopic-publish-action common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":targetarn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-snstopic-publish-action-target-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-snstopic-publish-action-payload
                         :shape "Payload" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-snstopic-publish-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'snstopic-publish-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'snstopic-publish-action 'make-snstopic-publish-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "targetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          snstopic-publish-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ssoidentity common-lisp:nil
                       ((identity-store-id :initarg :identity-store-id
                         :initform
                         (common-lisp:error ":identitystoreid is required")
                         :type
                         (common-lisp:or identity-store-id common-lisp:null)
                         :accessor struct-shape-ssoidentity-identity-store-id
                         :shape "IdentityStoreId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type
                         (common-lisp:or ssoreference-id common-lisp:null)
                         :accessor struct-shape-ssoidentity-user-id :shape
                         "SSOReferenceId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ssoidentity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ssoidentity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ssoidentity 'make-ssoidentity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ssoidentity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ssoidentity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-store-id))
      (common-lisp:list
       (common-lisp:cons "identityStoreId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ssoidentity))
   common-lisp:nil))
(common-lisp:deftype ssoreference-id () 'common-lisp:string)
(common-lisp:deftype seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass set-timer-action common-lisp:nil
                       ((timer-name :initarg :timer-name :initform
                         (common-lisp:error ":timername is required") :type
                         (common-lisp:or timer-name common-lisp:null) :accessor
                         struct-shape-set-timer-action-timer-name :shape
                         "TimerName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (seconds :initarg :seconds :initform common-lisp:nil
                         :type (common-lisp:or seconds common-lisp:null)
                         :accessor struct-shape-set-timer-action-seconds :shape
                         "Seconds" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (duration-expression :initarg :duration-expression
                         :initform common-lisp:nil :type
                         (common-lisp:or variable-value common-lisp:null)
                         :accessor
                         struct-shape-set-timer-action-duration-expression
                         :shape "VariableValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-timer-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-timer-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-timer-action 'make-set-timer-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-timer-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-timer-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timer-name))
      (common-lisp:list
       (common-lisp:cons "timerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'seconds))
      (common-lisp:list
       (common-lisp:cons "seconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration-expression))
      (common-lisp:list
       (common-lisp:cons "durationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-timer-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-variable-action common-lisp:nil
                       ((variable-name :initarg :variable-name :initform
                         (common-lisp:error ":variablename is required") :type
                         (common-lisp:or variable-name common-lisp:null)
                         :accessor
                         struct-shape-set-variable-action-variable-name :shape
                         "VariableName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or variable-value common-lisp:null)
                         :accessor struct-shape-set-variable-action-value
                         :shape "VariableValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-variable-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-variable-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-variable-action 'make-set-variable-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-variable-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-variable-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variable-name))
      (common-lisp:list
       (common-lisp:cons "variableName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-variable-action))
   common-lisp:nil))
(common-lisp:deftype severity () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass simple-rule common-lisp:nil
                       ((input-property :initarg :input-property :initform
                         (common-lisp:error ":inputproperty is required") :type
                         (common-lisp:or input-property common-lisp:null)
                         :accessor struct-shape-simple-rule-input-property
                         :shape "InputProperty" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comparison-operator :initarg :comparison-operator
                         :initform
                         (common-lisp:error ":comparisonoperator is required")
                         :type
                         (common-lisp:or comparison-operator common-lisp:null)
                         :accessor struct-shape-simple-rule-comparison-operator
                         :shape "ComparisonOperator" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (threshold :initarg :threshold :initform
                         (common-lisp:error ":threshold is required") :type
                         (common-lisp:or threshold common-lisp:null) :accessor
                         struct-shape-simple-rule-threshold :shape "Threshold"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'simple-rule 'make-simple-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-property))
      (common-lisp:list
       (common-lisp:cons "inputProperty"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "comparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sqs-action common-lisp:nil
                       ((queue-url :initarg :queue-url :initform
                         (common-lisp:error ":queueurl is required") :type
                         (common-lisp:or queue-url common-lisp:null) :accessor
                         struct-shape-sqs-action-queue-url :shape "QueueUrl"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (use-base64 :initarg :use-base64 :initform
                         common-lisp:nil :type
                         (common-lisp:or use-base64 common-lisp:null) :accessor
                         struct-shape-sqs-action-use-base64 :shape "UseBase64"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-sqs-action-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sqs-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sqs-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sqs-action 'make-sqs-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sqs-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sqs-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'queue-url))
      (common-lisp:list
       (common-lisp:cons "queueUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-base64))
      (common-lisp:list
       (common-lisp:cons "useBase64"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sqs-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-detector-model-analysis-request common-lisp:nil
                       ((detector-model-definition :initarg
                         :detector-model-definition :initform
                         (common-lisp:error
                          ":detectormodeldefinition is required")
                         :type
                         (common-lisp:or detector-model-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-detector-model-analysis-request-detector-model-definition
                         :shape "DetectorModelDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-detector-model-analysis-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-detector-model-analysis-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-detector-model-analysis-request
                    'make-start-detector-model-analysis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-detector-model-analysis-response common-lisp:nil
                       ((analysis-id :initarg :analysis-id :initform
                         common-lisp:nil :type
                         (common-lisp:or analysis-id common-lisp:null)
                         :accessor
                         struct-shape-start-detector-model-analysis-response-analysis-id
                         :shape "AnalysisId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-detector-model-analysis-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-detector-model-analysis-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-detector-model-analysis-response
                    'make-start-detector-model-analysis-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'analysis-id))
      (common-lisp:list
       (common-lisp:cons "analysisId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-detector-model-analysis-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass state common-lisp:nil
                       ((state-name :initarg :state-name :initform
                         (common-lisp:error ":statename is required") :type
                         (common-lisp:or state-name common-lisp:null) :accessor
                         struct-shape-state-state-name :shape "StateName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (on-input :initarg :on-input :initform common-lisp:nil
                         :type
                         (common-lisp:or on-input-lifecycle common-lisp:null)
                         :accessor struct-shape-state-on-input :shape
                         "OnInputLifecycle" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (on-enter :initarg :on-enter :initform common-lisp:nil
                         :type
                         (common-lisp:or on-enter-lifecycle common-lisp:null)
                         :accessor struct-shape-state-on-enter :shape
                         "OnEnterLifecycle" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (on-exit :initarg :on-exit :initform common-lisp:nil
                         :type
                         (common-lisp:or on-exit-lifecycle common-lisp:null)
                         :accessor struct-shape-state-on-exit :shape
                         "OnExitLifecycle" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-state
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'state
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'state 'make-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state-name))
      (common-lisp:list
       (common-lisp:cons "stateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-input))
      (common-lisp:list
       (common-lisp:cons "onInput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-enter))
      (common-lisp:list
       (common-lisp:cons "onEnter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'on-exit))
      (common-lisp:list
       (common-lisp:cons "onExit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input state))
   common-lisp:nil))
(common-lisp:deftype state-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype states () '(trivial-types:proper-list state))
 (common-lisp:defun make-states
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list state))
   aws-sdk/generator/shape::members))
(common-lisp:deftype status-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "AmazonResourceName" :location "querystring"
                         :location-name "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tags
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype threshold () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timer-name () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass transition-event common-lisp:nil
                       ((event-name :initarg :event-name :initform
                         (common-lisp:error ":eventname is required") :type
                         (common-lisp:or event-name common-lisp:null) :accessor
                         struct-shape-transition-event-event-name :shape
                         "EventName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (condition :initarg :condition :initform
                         (common-lisp:error ":condition is required") :type
                         (common-lisp:or condition common-lisp:null) :accessor
                         struct-shape-transition-event-condition :shape
                         "Condition" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (actions :initarg :actions :initform common-lisp:nil
                         :type (common-lisp:or actions common-lisp:null)
                         :accessor struct-shape-transition-event-actions :shape
                         "Actions" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-state :initarg :next-state :initform
                         (common-lisp:error ":nextstate is required") :type
                         (common-lisp:or state-name common-lisp:null) :accessor
                         struct-shape-transition-event-next-state :shape
                         "StateName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-transition-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'transition-event
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'transition-event 'make-transition-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input transition-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input transition-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-name))
      (common-lisp:list
       (common-lisp:cons "eventName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-state))
      (common-lisp:list
       (common-lisp:cons "nextState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input transition-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype transition-events ()
   '(trivial-types:proper-list transition-event))
 (common-lisp:defun make-transition-events
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list transition-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation-exception
     (iotevents-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operation-exception
                    'unsupported-operation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         struct-shape-untag-resource-request-tag-keys :shape
                         "TagKeys" :location "querystring" :location-name
                         "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-alarm-model-request common-lisp:nil
                       ((alarm-model-name :initarg :alarm-model-name :initform
                         (common-lisp:error ":alarmmodelname is required")
                         :type
                         (common-lisp:or alarm-model-name common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-alarm-model-name
                         :shape "AlarmModelName" :location "uri" :location-name
                         "alarmModelName")
                        (alarm-model-description :initarg
                         :alarm-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-alarm-model-description
                         :shape "AlarmModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (severity :initarg :severity :initform common-lisp:nil
                         :type (common-lisp:or severity common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-severity
                         :shape "Severity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-rule :initarg :alarm-rule :initform
                         (common-lisp:error ":alarmrule is required") :type
                         (common-lisp:or alarm-rule common-lisp:null) :accessor
                         struct-shape-update-alarm-model-request-alarm-rule
                         :shape "AlarmRule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-notification :initarg :alarm-notification
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-notification common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-alarm-notification
                         :shape "AlarmNotification" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-event-actions :initarg :alarm-event-actions
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-event-actions common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-alarm-event-actions
                         :shape "AlarmEventActions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-capabilities :initarg :alarm-capabilities
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-capabilities common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-request-alarm-capabilities
                         :shape "AlarmCapabilities" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-alarm-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-alarm-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-alarm-model-request
                    'make-update-alarm-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'alarm-model-description))
      (common-lisp:list
       (common-lisp:cons "alarmModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'severity))
      (common-lisp:list
       (common-lisp:cons "severity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-rule))
      (common-lisp:list
       (common-lisp:cons "alarmRule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-notification))
      (common-lisp:list
       (common-lisp:cons "alarmNotification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-event-actions))
      (common-lisp:list
       (common-lisp:cons "alarmEventActions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-capabilities))
      (common-lisp:list
       (common-lisp:cons "alarmCapabilities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-alarm-model-response common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-alarm-model-response-creation-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-arn :initarg :alarm-model-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or alarm-model-arn common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-response-alarm-model-arn
                         :shape "AlarmModelArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (alarm-model-version :initarg :alarm-model-version
                         :initform common-lisp:nil :type
                         (common-lisp:or alarm-model-version common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-response-alarm-model-version
                         :shape "AlarmModelVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-alarm-model-response-last-update-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or alarm-model-version-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-alarm-model-response-status :shape
                         "AlarmModelVersionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-alarm-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-alarm-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-alarm-model-response
                    'make-update-alarm-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "creationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-arn))
      (common-lisp:list
       (common-lisp:cons "alarmModelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-model-version))
      (common-lisp:list
       (common-lisp:cons "alarmModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-alarm-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-detector-model-request common-lisp:nil
                       ((detector-model-name :initarg :detector-model-name
                         :initform
                         (common-lisp:error ":detectormodelname is required")
                         :type
                         (common-lisp:or detector-model-name common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-request-detector-model-name
                         :shape "DetectorModelName" :location "uri"
                         :location-name "detectorModelName")
                        (detector-model-definition :initarg
                         :detector-model-definition :initform
                         (common-lisp:error
                          ":detectormodeldefinition is required")
                         :type
                         (common-lisp:or detector-model-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-request-detector-model-definition
                         :shape "DetectorModelDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (detector-model-description :initarg
                         :detector-model-description :initform common-lisp:nil
                         :type
                         (common-lisp:or detector-model-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-request-detector-model-description
                         :shape "DetectorModelDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":rolearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-request-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-method :initarg :evaluation-method
                         :initform common-lisp:nil :type
                         (common-lisp:or evaluation-method common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-request-evaluation-method
                         :shape "EvaluationMethod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-detector-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-detector-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-detector-model-request
                    'make-update-detector-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-definition))
      (common-lisp:list
       (common-lisp:cons "detectorModelDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-description))
      (common-lisp:list
       (common-lisp:cons "detectorModelDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "roleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'evaluation-method))
      (common-lisp:list
       (common-lisp:cons "evaluationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-detector-model-response common-lisp:nil
                       ((detector-model-configuration :initarg
                         :detector-model-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or detector-model-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-detector-model-response-detector-model-configuration
                         :shape "DetectorModelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-detector-model-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-detector-model-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-detector-model-response
                    'make-update-detector-model-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'detector-model-configuration))
      (common-lisp:list
       (common-lisp:cons "detectorModelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-detector-model-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-input-request common-lisp:nil
                       ((input-name :initarg :input-name :initform
                         (common-lisp:error ":inputname is required") :type
                         (common-lisp:or input-name common-lisp:null) :accessor
                         struct-shape-update-input-request-input-name :shape
                         "InputName" :location "uri" :location-name
                         "inputName")
                        (input-description :initarg :input-description
                         :initform common-lisp:nil :type
                         (common-lisp:or input-description common-lisp:null)
                         :accessor
                         struct-shape-update-input-request-input-description
                         :shape "InputDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (input-definition :initarg :input-definition :initform
                         (common-lisp:error ":inputdefinition is required")
                         :type
                         (common-lisp:or input-definition common-lisp:null)
                         :accessor
                         struct-shape-update-input-request-input-definition
                         :shape "InputDefinition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-input-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-input-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-input-request 'make-update-input-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-input-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-input-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-description))
      (common-lisp:list
       (common-lisp:cons "inputDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-definition))
      (common-lisp:list
       (common-lisp:cons "inputDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-input-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-input-response common-lisp:nil
                       ((input-configuration :initarg :input-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or input-configuration common-lisp:null)
                         :accessor
                         struct-shape-update-input-response-input-configuration
                         :shape "InputConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-input-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-input-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-input-response 'make-update-input-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-configuration))
      (common-lisp:list
       (common-lisp:cons "inputConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-input-response))
   common-lisp:nil))
(common-lisp:deftype use-base64 () 'common-lisp:boolean)
(common-lisp:deftype variable-name () 'common-lisp:string)
(common-lisp:deftype variable-value () 'common-lisp:string)
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:deftype |resourceArn| () 'common-lisp:string)
(common-lisp:deftype |resourceId| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-description
                     role-arn tags key severity alarm-rule alarm-notification
                     alarm-event-actions alarm-capabilities)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-description role-arn
     tags key severity alarm-rule alarm-notification alarm-event-actions
     alarm-capabilities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/alarm-models"
                                                        "CreateAlarmModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-alarm-model))
(common-lisp:progn
 (common-lisp:defun create-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-definition detector-model-description key
                     role-arn tags evaluation-method)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-definition
     detector-model-description key role-arn tags evaluation-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/detector-models"
                                                        "CreateDetectorModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-detector-model))
(common-lisp:progn
 (common-lisp:defun create-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name input-description
                     input-definition tags)
   (common-lisp:declare
    (common-lisp:ignorable input-name input-description input-definition tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/inputs"
                                                        "CreateInput"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-input))
(common-lisp:progn
 (common-lisp:defun delete-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name)
   (common-lisp:declare (common-lisp:ignorable alarm-model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "DeleteAlarmModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-alarm-model))
(common-lisp:progn
 (common-lisp:defun delete-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name)
   (common-lisp:declare (common-lisp:ignorable detector-model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "DeleteDetectorModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-detector-model))
(common-lisp:progn
 (common-lisp:defun delete-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name)
   (common-lisp:declare (common-lisp:ignorable input-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "DeleteInput"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-input))
(common-lisp:progn
 (common-lisp:defun describe-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-version)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "DescribeAlarmModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-alarm-model))
(common-lisp:progn
 (common-lisp:defun describe-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-version)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "DescribeDetectorModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-detector-model))
(common-lisp:progn
 (common-lisp:defun describe-detector-model-analysis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key analysis-id)
   (common-lisp:declare (common-lisp:ignorable analysis-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-detector-model-analysis-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/analysis/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'analysis-id))))
                                                        "DescribeDetectorModelAnalysis"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-detector-model-analysis))
(common-lisp:progn
 (common-lisp:defun describe-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name)
   (common-lisp:declare (common-lisp:ignorable input-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "DescribeInput"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-input))
(common-lisp:progn
 (common-lisp:defun describe-logging-options ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'iotevents-request :method "GET" :path
                                "/logging" :operation
                                "DescribeLoggingOptions"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-logging-options))
(common-lisp:progn
 (common-lisp:defun get-detector-model-analysis-results
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key analysis-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable analysis-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-detector-model-analysis-results-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/analysis/detector-models/~A/results"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'analysis-id))))
                                                        "GetDetectorModelAnalysisResults"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-detector-model-analysis-results))
(common-lisp:progn
 (common-lisp:defun list-alarm-model-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-alarm-model-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "ListAlarmModelVersions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-alarm-model-versions))
(common-lisp:progn
 (common-lisp:defun list-alarm-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-alarm-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/alarm-models"
                                                        "ListAlarmModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-alarm-models))
(common-lisp:progn
 (common-lisp:defun list-detector-model-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-detector-model-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "ListDetectorModelVersions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-detector-model-versions))
(common-lisp:progn
 (common-lisp:defun list-detector-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-detector-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/detector-models"
                                                        "ListDetectorModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-detector-models))
(common-lisp:progn
 (common-lisp:defun list-input-routings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-identifier max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable input-identifier max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-input-routings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/input-routings"
                                                        "ListInputRoutings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-input-routings))
(common-lisp:progn
 (common-lisp:defun list-inputs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-inputs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/inputs"
                                                        "ListInputs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-inputs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/tags"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-logging-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key logging-options)
   (common-lisp:declare (common-lisp:ignorable logging-options))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-logging-options-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT" "/logging"
                                                        "PutLoggingOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-logging-options))
(common-lisp:progn
 (common-lisp:defun start-detector-model-analysis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-definition)
   (common-lisp:declare (common-lisp:ignorable detector-model-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-detector-model-analysis-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/analysis/detector-models/"
                                                        "StartDetectorModelAnalysis"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-detector-model-analysis))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/tags"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE" "/tags"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-alarm-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key alarm-model-name alarm-model-description
                     role-arn severity alarm-rule alarm-notification
                     alarm-event-actions alarm-capabilities)
   (common-lisp:declare
    (common-lisp:ignorable alarm-model-name alarm-model-description role-arn
     severity alarm-rule alarm-notification alarm-event-actions
     alarm-capabilities))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-alarm-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/alarm-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'alarm-model-name))))
                                                        "UpdateAlarmModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-alarm-model))
(common-lisp:progn
 (common-lisp:defun update-detector-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key detector-model-name
                     detector-model-definition detector-model-description
                     role-arn evaluation-method)
   (common-lisp:declare
    (common-lisp:ignorable detector-model-name detector-model-definition
     detector-model-description role-arn evaluation-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-detector-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/detector-models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'detector-model-name))))
                                                        "UpdateDetectorModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-detector-model))
(common-lisp:progn
 (common-lisp:defun update-input
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key input-name input-description
                     input-definition)
   (common-lisp:declare
    (common-lisp:ignorable input-name input-description input-definition))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-input-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iotevents-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/inputs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'input-name))))
                                                        "UpdateInput"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-input))
