;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/arc-zonal-shift/api
  (:use)
  (:nicknames #:aws/arc-zonal-shift)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/arc-zonal-shift/api)
(common-lisp:progn
 (common-lisp:define-condition arc-zonal-shift-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'arc-zonal-shift-error))
(common-lisp:progn
 (common-lisp:defclass arc-zonal-shift-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "arc-zonal-shift"
                        :api-version "2022-10-30" :host-prefix
                        "arc-zonal-shift" :signing-name "arc-zonal-shift"
                        :global-host common-lisp:nil))
 (common-lisp:export 'arc-zonal-shift-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype applied-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype applied-weights () 'common-lisp:hash-table)
 (common-lisp:defun make-applied-weights (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype autoshift-applied-status () 'common-lisp:string)
(common-lisp:deftype autoshift-execution-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass autoshift-in-resource common-lisp:nil
                       ((applied-status :initarg :applied-status :initform
                         (common-lisp:error ":appliedstatus is required") :type
                         (common-lisp:or autoshift-applied-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-autoshift-in-resource-applied-status
                         :shape "AutoshiftAppliedStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor struct-shape-autoshift-in-resource-away-from
                         :shape "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or start-time common-lisp:null) :accessor
                         struct-shape-autoshift-in-resource-start-time :shape
                         "StartTime" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-autoshift-in-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'autoshift-in-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'autoshift-in-resource 'make-autoshift-in-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          autoshift-in-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          autoshift-in-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applied-status))
      (common-lisp:list
       (common-lisp:cons "appliedStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          autoshift-in-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype autoshift-summaries ()
   '(trivial-types:proper-list autoshift-summary))
 (common-lisp:defun make-autoshift-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list autoshift-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass autoshift-summary common-lisp:nil
                       ((away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor struct-shape-autoshift-summary-away-from
                         :shape "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":endtime is required") :type
                         (common-lisp:or expiry-time common-lisp:null)
                         :accessor struct-shape-autoshift-summary-end-time
                         :shape "ExpiryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or start-time common-lisp:null) :accessor
                         struct-shape-autoshift-summary-start-time :shape
                         "StartTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or autoshift-execution-status
                                         common-lisp:null)
                         :accessor struct-shape-autoshift-summary-status :shape
                         "AutoshiftExecutionStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-autoshift-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'autoshift-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'autoshift-summary 'make-autoshift-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input autoshift-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input autoshift-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input autoshift-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype autoshifts-in-resource ()
   '(trivial-types:proper-list autoshift-in-resource))
 (common-lisp:defun make-autoshifts-in-resource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list autoshift-in-resource))
   aws-sdk/generator/shape::members))
(common-lisp:deftype availability-zone () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype availability-zones ()
   '(trivial-types:proper-list availability-zone))
 (common-lisp:defun make-availability-zones
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list availability-zone))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blocked-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blocked-dates ()
   '(trivial-types:proper-list blocked-date))
 (common-lisp:defun make-blocked-dates
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blocked-date))
   aws-sdk/generator/shape::members))
(common-lisp:deftype blocked-window () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blocked-windows ()
   '(trivial-types:proper-list blocked-window))
 (common-lisp:defun make-blocked-windows
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blocked-window))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass cancel-zonal-shift-request common-lisp:nil
                       ((zonal-shift-id :initarg :zonal-shift-id :initform
                         (common-lisp:error ":zonalshiftid is required") :type
                         (common-lisp:or zonal-shift-id common-lisp:null)
                         :accessor
                         struct-shape-cancel-zonal-shift-request-zonal-shift-id
                         :shape "ZonalShiftId" :location "uri" :location-name
                         "zonalShiftId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-zonal-shift-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-zonal-shift-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-zonal-shift-request
                    'make-cancel-zonal-shift-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-zonal-shift-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-zonal-shift-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-zonal-shift-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       conflict-exception-reason)
      (zonal-shift-id :initarg :zonal-shift-id :initform common-lisp:nil
       :reader conflict-exception-zonal-shift-id)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-reason
                    'conflict-exception-zonal-shift-id)))
(common-lisp:deftype conflict-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass control-condition common-lisp:nil
                       ((alarm-identifier :initarg :alarm-identifier :initform
                         (common-lisp:error ":alarmidentifier is required")
                         :type (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-control-condition-alarm-identifier :shape
                         "ResourceArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or control-condition-type
                                         common-lisp:null)
                         :accessor struct-shape-control-condition-type :shape
                         "ControlConditionType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-control-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'control-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'control-condition 'make-control-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input control-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input control-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alarm-identifier))
      (common-lisp:list
       (common-lisp:cons "alarmIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input control-condition))
   common-lisp:nil))
(common-lisp:deftype control-condition-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype control-conditions ()
   '(trivial-types:proper-list control-condition))
 (common-lisp:defun make-control-conditions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list control-condition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-practice-run-configuration-request
                       common-lisp:nil
                       ((blocked-dates :initarg :blocked-dates :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-dates common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-request-blocked-dates
                         :shape "BlockedDates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocked-windows :initarg :blocked-windows :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-windows common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-request-blocked-windows
                         :shape "BlockedWindows" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocking-alarms :initarg :blocking-alarms :initform
                         common-lisp:nil :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-request-blocking-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outcome-alarms :initarg :outcome-alarms :initform
                         (common-lisp:error ":outcomealarms is required") :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-request-outcome-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-request-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-practice-run-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-practice-run-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-practice-run-configuration-request
                    'make-create-practice-run-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-dates))
      (common-lisp:list
       (common-lisp:cons "blockedDates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-windows))
      (common-lisp:list
       (common-lisp:cons "blockedWindows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocking-alarms))
      (common-lisp:list
       (common-lisp:cons "blockingAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outcome-alarms))
      (common-lisp:list
       (common-lisp:cons "outcomeAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-practice-run-configuration-response
                       common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-response-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-response-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-configuration :initarg
                         :practice-run-configuration :initform
                         (common-lisp:error
                          ":practicerunconfiguration is required")
                         :type
                         (common-lisp:or practice-run-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-response-practice-run-configuration
                         :shape "PracticeRunConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform
                         (common-lisp:error
                          ":zonalautoshiftstatus is required")
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-practice-run-configuration-response-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-practice-run-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-practice-run-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-practice-run-configuration-response
                    'make-create-practice-run-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'practice-run-configuration))
      (common-lisp:list
       (common-lisp:cons "practiceRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-practice-run-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-practice-run-configuration-request
                       common-lisp:nil
                       ((resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-practice-run-configuration-request-resource-identifier
                         :shape "ResourceIdentifier" :location "uri"
                         :location-name "resourceIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-practice-run-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-practice-run-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-practice-run-configuration-request
                    'make-delete-practice-run-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-practice-run-configuration-response
                       common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-practice-run-configuration-response-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-practice-run-configuration-response-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform
                         (common-lisp:error
                          ":zonalautoshiftstatus is required")
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-practice-run-configuration-response-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-practice-run-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-practice-run-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-practice-run-configuration-response
                    'make-delete-practice-run-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-practice-run-configuration-response))
   common-lisp:nil))
(common-lisp:deftype expires-in () 'common-lisp:string)
(common-lisp:deftype expiry-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-managed-resource-request common-lisp:nil
                       ((resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-request-resource-identifier
                         :shape "ResourceIdentifier" :location "uri"
                         :location-name "resourceIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-managed-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-managed-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-managed-resource-request
                    'make-get-managed-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-managed-resource-response common-lisp:nil
                       ((applied-weights :initarg :applied-weights :initform
                         (common-lisp:error ":appliedweights is required")
                         :type
                         (common-lisp:or applied-weights common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-applied-weights
                         :shape "AppliedWeights" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-arn :shape
                         "ResourceArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (autoshifts :initarg :autoshifts :initform
                         common-lisp:nil :type
                         (common-lisp:or autoshifts-in-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-autoshifts
                         :shape "AutoshiftsInResource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-configuration :initarg
                         :practice-run-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or practice-run-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-practice-run-configuration
                         :shape "PracticeRunConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform common-lisp:nil
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-shifts :initarg :zonal-shifts :initform
                         (common-lisp:error ":zonalshifts is required") :type
                         (common-lisp:or zonal-shifts-in-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-managed-resource-response-zonal-shifts
                         :shape "ZonalShiftsInResource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-managed-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-managed-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-managed-resource-response
                    'make-get-managed-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applied-weights))
      (common-lisp:list
       (common-lisp:cons "appliedWeights"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'autoshifts))
      (common-lisp:list
       (common-lisp:cons "autoshifts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'practice-run-configuration))
      (common-lisp:list
       (common-lisp:cons "practiceRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zonal-shifts))
      (common-lisp:list
       (common-lisp:cons "zonalShifts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-managed-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-autoshifts-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-autoshifts-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-autoshifts-request-next-token :shape
                         "String" :location "querystring" :location-name
                         "nextToken")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or autoshift-execution-status
                                         common-lisp:null)
                         :accessor struct-shape-list-autoshifts-request-status
                         :shape "AutoshiftExecutionStatus" :location
                         "querystring" :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-autoshifts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-autoshifts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-autoshifts-request 'make-list-autoshifts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-autoshifts-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or autoshift-summaries common-lisp:null)
                         :accessor struct-shape-list-autoshifts-response-items
                         :shape "AutoshiftSummaries" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-autoshifts-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-autoshifts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-autoshifts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-autoshifts-response 'make-list-autoshifts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-autoshifts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-resources-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-managed-resources-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-managed-resources-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-resources-request
                    'make-list-managed-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-managed-resources-response common-lisp:nil
                       ((items :initarg :items :initform
                         (common-lisp:error ":items is required") :type
                         (common-lisp:or managed-resource-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-managed-resources-response-items
                         :shape "ManagedResourceSummaries" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-managed-resources-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-managed-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-managed-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-managed-resources-response
                    'make-list-managed-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-managed-resources-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-zonal-shifts-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-zonal-shifts-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-zonal-shifts-request-next-token
                         :shape "String" :location "querystring" :location-name
                         "nextToken")
                        (resource-identifier :initarg :resource-identifier
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-list-zonal-shifts-request-resource-identifier
                         :shape "ResourceIdentifier" :location "querystring"
                         :location-name "resourceIdentifier")
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or zonal-shift-status common-lisp:null)
                         :accessor
                         struct-shape-list-zonal-shifts-request-status :shape
                         "ZonalShiftStatus" :location "querystring"
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-zonal-shifts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-zonal-shifts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-zonal-shifts-request
                    'make-list-zonal-shifts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-zonal-shifts-response common-lisp:nil
                       ((items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or zonal-shift-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-zonal-shifts-response-items :shape
                         "ZonalShiftSummaries" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-zonal-shifts-response-next-token
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-zonal-shifts-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-zonal-shifts-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-zonal-shifts-response
                    'make-list-zonal-shifts-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-zonal-shifts-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype managed-resource-summaries ()
   '(trivial-types:proper-list managed-resource-summary))
 (common-lisp:defun make-managed-resource-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            managed-resource-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass managed-resource-summary common-lisp:nil
                       ((applied-weights :initarg :applied-weights :initform
                         common-lisp:nil :type
                         (common-lisp:or applied-weights common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-applied-weights
                         :shape "AppliedWeights" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor struct-shape-managed-resource-summary-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (autoshifts :initarg :autoshifts :initform
                         common-lisp:nil :type
                         (common-lisp:or autoshifts-in-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-autoshifts
                         :shape "AutoshiftsInResource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (availability-zones :initarg :availability-zones
                         :initform
                         (common-lisp:error ":availabilityzones is required")
                         :type
                         (common-lisp:or availability-zones common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-availability-zones
                         :shape "AvailabilityZones" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-managed-resource-summary-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-status :initarg :practice-run-status
                         :initform common-lisp:nil :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-practice-run-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform common-lisp:nil
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-shifts :initarg :zonal-shifts :initform
                         common-lisp:nil :type
                         (common-lisp:or zonal-shifts-in-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-managed-resource-summary-zonal-shifts
                         :shape "ZonalShiftsInResource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-managed-resource-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'managed-resource-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'managed-resource-summary 'make-managed-resource-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          managed-resource-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          managed-resource-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applied-weights))
      (common-lisp:list
       (common-lisp:cons "appliedWeights"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'autoshifts))
      (common-lisp:list
       (common-lisp:cons "autoshifts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zones))
      (common-lisp:list
       (common-lisp:cons "availabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'practice-run-status))
      (common-lisp:list
       (common-lisp:cons "practiceRunStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zonal-shifts))
      (common-lisp:list
       (common-lisp:cons "zonalShifts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          managed-resource-summary))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass practice-run-configuration common-lisp:nil
                       ((blocked-dates :initarg :blocked-dates :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-dates common-lisp:null)
                         :accessor
                         struct-shape-practice-run-configuration-blocked-dates
                         :shape "BlockedDates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocked-windows :initarg :blocked-windows :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-windows common-lisp:null)
                         :accessor
                         struct-shape-practice-run-configuration-blocked-windows
                         :shape "BlockedWindows" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocking-alarms :initarg :blocking-alarms :initform
                         common-lisp:nil :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-practice-run-configuration-blocking-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outcome-alarms :initarg :outcome-alarms :initform
                         (common-lisp:error ":outcomealarms is required") :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-practice-run-configuration-outcome-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-practice-run-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'practice-run-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'practice-run-configuration
                    'make-practice-run-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          practice-run-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          practice-run-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-dates))
      (common-lisp:list
       (common-lisp:cons "blockedDates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-windows))
      (common-lisp:list
       (common-lisp:cons "blockedWindows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocking-alarms))
      (common-lisp:list
       (common-lisp:cons "blockingAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outcome-alarms))
      (common-lisp:list
       (common-lisp:cons "outcomeAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          practice-run-configuration))
   common-lisp:nil))
(common-lisp:deftype practice-run-outcome () 'common-lisp:string)
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype resource-identifier () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype start-time () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-zonal-shift-request common-lisp:nil
                       ((away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor
                         struct-shape-start-zonal-shift-request-away-from
                         :shape "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comment :initarg :comment :initform
                         (common-lisp:error ":comment is required") :type
                         (common-lisp:or zonal-shift-comment common-lisp:null)
                         :accessor
                         struct-shape-start-zonal-shift-request-comment :shape
                         "ZonalShiftComment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expires-in :initarg :expires-in :initform
                         (common-lisp:error ":expiresin is required") :type
                         (common-lisp:or expires-in common-lisp:null) :accessor
                         struct-shape-start-zonal-shift-request-expires-in
                         :shape "ExpiresIn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-start-zonal-shift-request-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-zonal-shift-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-zonal-shift-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-zonal-shift-request
                    'make-start-zonal-shift-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-zonal-shift-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-zonal-shift-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-in))
      (common-lisp:list
       (common-lisp:cons "expiresIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-zonal-shift-request))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-practice-run-configuration-request
                       common-lisp:nil
                       ((blocked-dates :initarg :blocked-dates :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-dates common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-request-blocked-dates
                         :shape "BlockedDates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocked-windows :initarg :blocked-windows :initform
                         common-lisp:nil :type
                         (common-lisp:or blocked-windows common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-request-blocked-windows
                         :shape "BlockedWindows" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (blocking-alarms :initarg :blocking-alarms :initform
                         common-lisp:nil :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-request-blocking-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (outcome-alarms :initarg :outcome-alarms :initform
                         common-lisp:nil :type
                         (common-lisp:or control-conditions common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-request-outcome-alarms
                         :shape "ControlConditions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-request-resource-identifier
                         :shape "ResourceIdentifier" :location "uri"
                         :location-name "resourceIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-practice-run-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-practice-run-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-practice-run-configuration-request
                    'make-update-practice-run-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-dates))
      (common-lisp:list
       (common-lisp:cons "blockedDates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocked-windows))
      (common-lisp:list
       (common-lisp:cons "blockedWindows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blocking-alarms))
      (common-lisp:list
       (common-lisp:cons "blockingAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'outcome-alarms))
      (common-lisp:list
       (common-lisp:cons "outcomeAlarms"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-practice-run-configuration-response
                       common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-response-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-response-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-configuration :initarg
                         :practice-run-configuration :initform
                         (common-lisp:error
                          ":practicerunconfiguration is required")
                         :type
                         (common-lisp:or practice-run-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-response-practice-run-configuration
                         :shape "PracticeRunConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform
                         (common-lisp:error
                          ":zonalautoshiftstatus is required")
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-practice-run-configuration-response-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-practice-run-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-practice-run-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-practice-run-configuration-response
                    'make-update-practice-run-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'practice-run-configuration))
      (common-lisp:list
       (common-lisp:cons "practiceRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-practice-run-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-zonal-autoshift-configuration-request
                       common-lisp:nil
                       ((resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-autoshift-configuration-request-resource-identifier
                         :shape "ResourceIdentifier" :location "uri"
                         :location-name "resourceIdentifier")
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform
                         (common-lisp:error
                          ":zonalautoshiftstatus is required")
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-autoshift-configuration-request-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-zonal-autoshift-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-zonal-autoshift-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-zonal-autoshift-configuration-request
                    'make-update-zonal-autoshift-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-zonal-autoshift-configuration-response
                       common-lisp:nil
                       ((resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-autoshift-configuration-response-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (zonal-autoshift-status :initarg
                         :zonal-autoshift-status :initform
                         (common-lisp:error
                          ":zonalautoshiftstatus is required")
                         :type
                         (common-lisp:or zonal-autoshift-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-autoshift-configuration-response-zonal-autoshift-status
                         :shape "ZonalAutoshiftStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-zonal-autoshift-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-zonal-autoshift-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-zonal-autoshift-configuration-response
                    'make-update-zonal-autoshift-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'zonal-autoshift-status))
      (common-lisp:list
       (common-lisp:cons "zonalAutoshiftStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-autoshift-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-zonal-shift-request common-lisp:nil
                       ((comment :initarg :comment :initform common-lisp:nil
                         :type
                         (common-lisp:or zonal-shift-comment common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-shift-request-comment :shape
                         "ZonalShiftComment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expires-in :initarg :expires-in :initform
                         common-lisp:nil :type
                         (common-lisp:or expires-in common-lisp:null) :accessor
                         struct-shape-update-zonal-shift-request-expires-in
                         :shape "ExpiresIn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (zonal-shift-id :initarg :zonal-shift-id :initform
                         (common-lisp:error ":zonalshiftid is required") :type
                         (common-lisp:or zonal-shift-id common-lisp:null)
                         :accessor
                         struct-shape-update-zonal-shift-request-zonal-shift-id
                         :shape "ZonalShiftId" :location "uri" :location-name
                         "zonalShiftId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-zonal-shift-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-zonal-shift-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-zonal-shift-request
                    'make-update-zonal-shift-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-shift-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-shift-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-in))
      (common-lisp:list
       (common-lisp:cons "expiresIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-zonal-shift-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (arc-zonal-shift-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason)))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:deftype weight () 'common-lisp:single-float)
(common-lisp:deftype zonal-autoshift-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass zonal-shift common-lisp:nil
                       ((away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor struct-shape-zonal-shift-away-from :shape
                         "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comment :initarg :comment :initform
                         (common-lisp:error ":comment is required") :type
                         (common-lisp:or zonal-shift-comment common-lisp:null)
                         :accessor struct-shape-zonal-shift-comment :shape
                         "ZonalShiftComment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-time :initarg :expiry-time :initform
                         (common-lisp:error ":expirytime is required") :type
                         (common-lisp:or expiry-time common-lisp:null)
                         :accessor struct-shape-zonal-shift-expiry-time :shape
                         "ExpiryTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor struct-shape-zonal-shift-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or start-time common-lisp:null) :accessor
                         struct-shape-zonal-shift-start-time :shape "StartTime"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or zonal-shift-status common-lisp:null)
                         :accessor struct-shape-zonal-shift-status :shape
                         "ZonalShiftStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (zonal-shift-id :initarg :zonal-shift-id :initform
                         (common-lisp:error ":zonalshiftid is required") :type
                         (common-lisp:or zonal-shift-id common-lisp:null)
                         :accessor struct-shape-zonal-shift-zonal-shift-id
                         :shape "ZonalShiftId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-zonal-shift
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'zonal-shift
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'zonal-shift 'make-zonal-shift))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input zonal-shift))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input zonal-shift))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-time))
      (common-lisp:list
       (common-lisp:cons "expiryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zonal-shift-id))
      (common-lisp:list
       (common-lisp:cons "zonalShiftId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input zonal-shift))
   common-lisp:nil))
(common-lisp:deftype zonal-shift-comment () 'common-lisp:string)
(common-lisp:deftype zonal-shift-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass zonal-shift-in-resource common-lisp:nil
                       ((applied-status :initarg :applied-status :initform
                         (common-lisp:error ":appliedstatus is required") :type
                         (common-lisp:or applied-status common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-applied-status
                         :shape "AppliedStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-away-from :shape
                         "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comment :initarg :comment :initform
                         (common-lisp:error ":comment is required") :type
                         (common-lisp:or zonal-shift-comment common-lisp:null)
                         :accessor struct-shape-zonal-shift-in-resource-comment
                         :shape "ZonalShiftComment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-time :initarg :expiry-time :initform
                         (common-lisp:error ":expirytime is required") :type
                         (common-lisp:or expiry-time common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-expiry-time
                         :shape "ExpiryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-outcome :initarg :practice-run-outcome
                         :initform common-lisp:nil :type
                         (common-lisp:or practice-run-outcome common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-practice-run-outcome
                         :shape "PracticeRunOutcome" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or start-time common-lisp:null) :accessor
                         struct-shape-zonal-shift-in-resource-start-time :shape
                         "StartTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (zonal-shift-id :initarg :zonal-shift-id :initform
                         (common-lisp:error ":zonalshiftid is required") :type
                         (common-lisp:or zonal-shift-id common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-in-resource-zonal-shift-id
                         :shape "ZonalShiftId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-zonal-shift-in-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'zonal-shift-in-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'zonal-shift-in-resource 'make-zonal-shift-in-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          zonal-shift-in-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          zonal-shift-in-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applied-status))
      (common-lisp:list
       (common-lisp:cons "appliedStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-time))
      (common-lisp:list
       (common-lisp:cons "expiryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'practice-run-outcome))
      (common-lisp:list
       (common-lisp:cons "practiceRunOutcome"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zonal-shift-id))
      (common-lisp:list
       (common-lisp:cons "zonalShiftId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          zonal-shift-in-resource))
   common-lisp:nil))
(common-lisp:deftype zonal-shift-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype zonal-shift-summaries ()
   '(trivial-types:proper-list zonal-shift-summary))
 (common-lisp:defun make-zonal-shift-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list zonal-shift-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass zonal-shift-summary common-lisp:nil
                       ((away-from :initarg :away-from :initform
                         (common-lisp:error ":awayfrom is required") :type
                         (common-lisp:or availability-zone common-lisp:null)
                         :accessor struct-shape-zonal-shift-summary-away-from
                         :shape "AvailabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (comment :initarg :comment :initform
                         (common-lisp:error ":comment is required") :type
                         (common-lisp:or zonal-shift-comment common-lisp:null)
                         :accessor struct-shape-zonal-shift-summary-comment
                         :shape "ZonalShiftComment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expiry-time :initarg :expiry-time :initform
                         (common-lisp:error ":expirytime is required") :type
                         (common-lisp:or expiry-time common-lisp:null)
                         :accessor struct-shape-zonal-shift-summary-expiry-time
                         :shape "ExpiryTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (practice-run-outcome :initarg :practice-run-outcome
                         :initform common-lisp:nil :type
                         (common-lisp:or practice-run-outcome common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-summary-practice-run-outcome
                         :shape "PracticeRunOutcome" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resourceidentifier is required")
                         :type
                         (common-lisp:or resource-identifier common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-summary-resource-identifier
                         :shape "ResourceIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or start-time common-lisp:null) :accessor
                         struct-shape-zonal-shift-summary-start-time :shape
                         "StartTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or zonal-shift-status common-lisp:null)
                         :accessor struct-shape-zonal-shift-summary-status
                         :shape "ZonalShiftStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (zonal-shift-id :initarg :zonal-shift-id :initform
                         (common-lisp:error ":zonalshiftid is required") :type
                         (common-lisp:or zonal-shift-id common-lisp:null)
                         :accessor
                         struct-shape-zonal-shift-summary-zonal-shift-id :shape
                         "ZonalShiftId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-zonal-shift-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'zonal-shift-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'zonal-shift-summary 'make-zonal-shift-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input zonal-shift-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input zonal-shift-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'away-from))
      (common-lisp:list
       (common-lisp:cons "awayFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comment))
      (common-lisp:list
       (common-lisp:cons "comment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiry-time))
      (common-lisp:list
       (common-lisp:cons "expiryTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'practice-run-outcome))
      (common-lisp:list
       (common-lisp:cons "practiceRunOutcome"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-identifier))
      (common-lisp:list
       (common-lisp:cons "resourceIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zonal-shift-id))
      (common-lisp:list
       (common-lisp:cons "zonalShiftId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input zonal-shift-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype zonal-shifts-in-resource ()
   '(trivial-types:proper-list zonal-shift-in-resource))
 (common-lisp:defun make-zonal-shifts-in-resource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list zonal-shift-in-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defun cancel-zonal-shift
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key zonal-shift-id)
   (common-lisp:declare (common-lisp:ignorable zonal-shift-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-zonal-shift-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/zonalshifts/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'zonal-shift-id))))
        "CancelZonalShift"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-zonal-shift))
(common-lisp:progn
 (common-lisp:defun create-practice-run-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blocked-dates blocked-windows
                     blocking-alarms outcome-alarms resource-identifier)
   (common-lisp:declare
    (common-lisp:ignorable blocked-dates blocked-windows blocking-alarms
     outcome-alarms resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-practice-run-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "POST"
        "/configuration" "CreatePracticeRunConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-practice-run-configuration))
(common-lisp:progn
 (common-lisp:defun delete-practice-run-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier)
   (common-lisp:declare (common-lisp:ignorable resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-practice-run-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/configuration/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "DeletePracticeRunConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-practice-run-configuration))
(common-lisp:progn
 (common-lisp:defun get-managed-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier)
   (common-lisp:declare (common-lisp:ignorable resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-managed-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/managedresources/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "GetManagedResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-managed-resource))
(common-lisp:progn
 (common-lisp:defun list-autoshifts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token status)
   (common-lisp:declare (common-lisp:ignorable max-results next-token status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-autoshifts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "GET"
        "/autoshifts" "ListAutoshifts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-autoshifts))
(common-lisp:progn
 (common-lisp:defun list-managed-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-managed-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "GET"
        "/managedresources" "ListManagedResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-managed-resources))
(common-lisp:progn
 (common-lisp:defun list-zonal-shifts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     resource-identifier status)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-identifier status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-zonal-shifts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "GET"
        "/zonalshifts" "ListZonalShifts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-zonal-shifts))
(common-lisp:progn
 (common-lisp:defun start-zonal-shift
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key away-from comment expires-in
                     resource-identifier)
   (common-lisp:declare
    (common-lisp:ignorable away-from comment expires-in resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-zonal-shift-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "POST"
        "/zonalshifts" "StartZonalShift"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-zonal-shift))
(common-lisp:progn
 (common-lisp:defun update-practice-run-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blocked-dates blocked-windows
                     blocking-alarms outcome-alarms resource-identifier)
   (common-lisp:declare
    (common-lisp:ignorable blocked-dates blocked-windows blocking-alarms
     outcome-alarms resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-practice-run-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/configuration/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "UpdatePracticeRunConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-practice-run-configuration))
(common-lisp:progn
 (common-lisp:defun update-zonal-autoshift-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-identifier
                     zonal-autoshift-status)
   (common-lisp:declare
    (common-lisp:ignorable resource-identifier zonal-autoshift-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-zonal-autoshift-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/managedresources/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "UpdateZonalAutoshiftConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-zonal-autoshift-configuration))
(common-lisp:progn
 (common-lisp:defun update-zonal-shift
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key comment expires-in zonal-shift-id)
   (common-lisp:declare
    (common-lisp:ignorable comment expires-in zonal-shift-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-zonal-shift-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'arc-zonal-shift-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/zonalshifts/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'zonal-shift-id))))
        "UpdateZonalShift"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-zonal-shift))
