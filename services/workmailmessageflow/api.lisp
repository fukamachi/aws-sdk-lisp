;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/workmailmessageflow/api (:use)
                             (:nicknames #:aws/workmailmessageflow)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/workmailmessageflow/api)
(common-lisp:progn
 (common-lisp:define-condition workmailmessageflow-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'workmailmessageflow-error))
(common-lisp:progn
 (common-lisp:defclass workmailmessageflow-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "workmailmessageflow"
                        :api-version "2019-05-01" :host-prefix
                        "workmailmessageflow" :signing-name common-lisp:nil
                        :global-host common-lisp:nil))
 (common-lisp:export 'workmailmessageflow-request))
(common-lisp:defvar *error-map*
  '(("InvalidContentLocation" . invalid-content-location)
    ("MessageFrozen" . message-frozen) ("MessageRejected" . message-rejected)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defclass get-raw-message-content-request common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         (common-lisp:error ":messageid is required") :type
                         (common-lisp:or |messageIdType| common-lisp:null)
                         :accessor
                         struct-shape-get-raw-message-content-request-message-id
                         :shape "messageIdType" :location "uri" :location-name
                         "messageId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-raw-message-content-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-raw-message-content-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-raw-message-content-request
                    'make-get-raw-message-content-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-raw-message-content-response common-lisp:nil
                       ((message-content :initarg :message-content :initform
                         (common-lisp:error ":messagecontent is required")
                         :type
                         (common-lisp:or |messageContentBlob| common-lisp:null)
                         :accessor
                         struct-shape-get-raw-message-content-response-message-content
                         :shape "messageContentBlob" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-raw-message-content-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-raw-message-content-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-raw-message-content-response
                    'make-get-raw-message-content-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-content))
      (common-lisp:list
       (common-lisp:cons "messageContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-raw-message-content-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:define-condition invalid-content-location
     (workmailmessageflow-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-content-location-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-content-location
                    'invalid-content-location-message)))
(common-lisp:progn
 (common-lisp:define-condition message-frozen
     (workmailmessageflow-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       message-frozen-message)))
 (common-lisp:export
  (common-lisp:list 'message-frozen 'message-frozen-message)))
(common-lisp:progn
 (common-lisp:define-condition message-rejected
     (workmailmessageflow-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       message-rejected-message)))
 (common-lisp:export
  (common-lisp:list 'message-rejected 'message-rejected-message)))
(common-lisp:progn
 (common-lisp:defclass put-raw-message-content-request common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         (common-lisp:error ":messageid is required") :type
                         (common-lisp:or |messageIdType| common-lisp:null)
                         :accessor
                         struct-shape-put-raw-message-content-request-message-id
                         :shape "messageIdType" :location "uri" :location-name
                         "messageId")
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or raw-message-content common-lisp:null)
                         :accessor
                         struct-shape-put-raw-message-content-request-content
                         :shape "RawMessageContent" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-raw-message-content-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-raw-message-content-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-raw-message-content-request
                    'make-put-raw-message-content-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-raw-message-content-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-raw-message-content-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-raw-message-content-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-raw-message-content-response
                    'make-put-raw-message-content-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-raw-message-content-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass raw-message-content common-lisp:nil
                       ((s3reference :initarg :s3reference :initform
                         (common-lisp:error ":s3reference is required") :type
                         (common-lisp:or s3reference common-lisp:null)
                         :accessor struct-shape-raw-message-content-s3reference
                         :shape "S3Reference" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-raw-message-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'raw-message-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'raw-message-content 'make-raw-message-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input raw-message-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input raw-message-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3reference))
      (common-lisp:list
       (common-lisp:cons "s3Reference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input raw-message-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (workmailmessageflow-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass s3reference common-lisp:nil
                       ((bucket :initarg :bucket :initform
                         (common-lisp:error ":bucket is required") :type
                         (common-lisp:or |s3BucketIdType| common-lisp:null)
                         :accessor struct-shape-s3reference-bucket :shape
                         "s3BucketIdType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or |s3KeyIdType| common-lisp:null)
                         :accessor struct-shape-s3reference-key :shape
                         "s3KeyIdType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (object-version :initarg :object-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |s3VersionType| common-lisp:null)
                         :accessor struct-shape-s3reference-object-version
                         :shape "s3VersionType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3reference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3reference
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3reference 'make-s3reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-version))
      (common-lisp:list
       (common-lisp:cons "objectVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3reference))
   common-lisp:nil))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:deftype |messageContentBlob| ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype |messageIdType| () 'common-lisp:string)
(common-lisp:deftype |s3BucketIdType| () 'common-lisp:string)
(common-lisp:deftype |s3KeyIdType| () 'common-lisp:string)
(common-lisp:deftype |s3VersionType| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun get-raw-message-content
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key message-id)
   (common-lisp:declare (common-lisp:ignorable message-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-raw-message-content-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'workmailmessageflow-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/messages/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "GetRawMessageContent")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-raw-message-content))
(common-lisp:progn
 (common-lisp:defun put-raw-message-content
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key message-id content)
   (common-lisp:declare (common-lisp:ignorable message-id content))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-raw-message-content-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'workmailmessageflow-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/messages/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'message-id))))
        "PutRawMessageContent"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-raw-message-content))
