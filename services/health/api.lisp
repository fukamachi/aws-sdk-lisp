;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/health/api
  (:use)
  (:nicknames #:aws/health)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/health/api)
(common-lisp:progn
 (common-lisp:define-condition health-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'health-error))
(common-lisp:progn
 (common-lisp:defclass health-request (aws-sdk/json-request:json-request)
                       common-lisp:nil
                       (:default-initargs :service "health" :api-version
                        "2016-08-04" :host-prefix "health" :signing-name
                        common-lisp:nil :global-host common-lisp:nil
                        :target-prefix "AWSHealth_20160804" :json-version
                        "1.1"))
 (common-lisp:export 'health-request))
(common-lisp:defvar *error-map*
  '(("ConcurrentModificationException" . concurrent-modification-exception)
    ("InvalidPaginationToken" . invalid-pagination-token)
    ("UnsupportedLocale" . unsupported-locale)))
(common-lisp:progn
 (common-lisp:defclass account-entity-aggregate common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-account-entity-aggregate-account-id
                         :shape "eventArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |count| common-lisp:null) :accessor
                         struct-shape-account-entity-aggregate-count :shape
                         "count" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (statuses :initarg :statuses :initform common-lisp:nil
                         :type
                         (common-lisp:or |entityStatuses| common-lisp:null)
                         :accessor
                         struct-shape-account-entity-aggregate-statuses :shape
                         "entityStatuses" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-entity-aggregate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-entity-aggregate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-entity-aggregate 'make-account-entity-aggregate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-entity-aggregate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-entity-aggregate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statuses))
      (common-lisp:list
       (common-lisp:cons "statuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-entity-aggregate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-entity-aggregates-list ()
   '(trivial-types:proper-list account-entity-aggregate))
 (common-lisp:defun make-account-entity-aggregates-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-entity-aggregate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass affected-entity common-lisp:nil
                       ((entity-arn :initarg :entity-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityArn| common-lisp:null)
                         :accessor struct-shape-affected-entity-entity-arn
                         :shape "entityArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-affected-entity-event-arn :shape
                         "eventArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (entity-value :initarg :entity-value :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityValue| common-lisp:null)
                         :accessor struct-shape-affected-entity-entity-value
                         :shape "entityValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-url :initarg :entity-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityUrl| common-lisp:null)
                         :accessor struct-shape-affected-entity-entity-url
                         :shape "entityUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor struct-shape-affected-entity-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-affected-entity-last-updated-time :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityStatusCode| common-lisp:null)
                         :accessor struct-shape-affected-entity-status-code
                         :shape "entityStatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |tagSet| common-lisp:null) :accessor
                         struct-shape-affected-entity-tags :shape "tagSet"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-affected-entity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'affected-entity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'affected-entity 'make-affected-entity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input affected-entity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input affected-entity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-arn))
      (common-lisp:list
       (common-lisp:cons "entityArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-value))
      (common-lisp:list
       (common-lisp:cons "entityValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-url))
      (common-lisp:list
       (common-lisp:cons "entityUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input affected-entity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (health-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       concurrent-modification-exception-message)))
 (common-lisp:export
  (common-lisp:list 'concurrent-modification-exception
                    'concurrent-modification-exception-message)))
(common-lisp:progn
 (common-lisp:defclass date-time-range common-lisp:nil
                       ((from :initarg :from :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-date-time-range-from :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (to :initarg :to :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-date-time-range-to :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-date-time-range
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'date-time-range
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'date-time-range 'make-date-time-range))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input date-time-range))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input date-time-range))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to))
      (common-lisp:list
       (common-lisp:cons "to"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input date-time-range))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-affected-accounts-for-organization-request
                       common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         (common-lisp:error ":eventarn is required") :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-describe-affected-accounts-for-organization-request-event-arn
                         :shape "eventArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-accounts-for-organization-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResults| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-accounts-for-organization-request-max-results
                         :shape "maxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-accounts-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-accounts-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-accounts-for-organization-request
                    'make-describe-affected-accounts-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-affected-accounts-for-organization-response
                       common-lisp:nil
                       ((affected-accounts :initarg :affected-accounts
                         :initform common-lisp:nil :type
                         (common-lisp:or |affectedAccountsList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-accounts-for-organization-response-affected-accounts
                         :shape "affectedAccountsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-scope-code :initarg :event-scope-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventScopeCode| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-accounts-for-organization-response-event-scope-code
                         :shape "eventScopeCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-accounts-for-organization-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-accounts-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-accounts-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-accounts-for-organization-response
                    'make-describe-affected-accounts-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'affected-accounts))
      (common-lisp:list
       (common-lisp:cons "affectedAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-scope-code))
      (common-lisp:list
       (common-lisp:cons "eventScopeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-accounts-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-affected-entities-for-organization-failed-set ()
   '(trivial-types:proper-list organization-affected-entities-error-item))
 (common-lisp:defun make-describe-affected-entities-for-organization-failed-set
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-affected-entities-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-affected-entities-for-organization-request
                       common-lisp:nil
                       ((organization-entity-filters :initarg
                         :organization-entity-filters :initform common-lisp:nil
                         :type
                         (common-lisp:or organization-entity-filters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-request-organization-entity-filters
                         :shape "OrganizationEntityFiltersList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResultsLowerRange|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-request-max-results
                         :shape "maxResultsLowerRange" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (organization-entity-account-filters :initarg
                         :organization-entity-account-filters :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          organization-entity-account-filters-list
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-request-organization-entity-account-filters
                         :shape "OrganizationEntityAccountFiltersList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-entities-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-entities-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-entities-for-organization-request
                    'make-describe-affected-entities-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-entity-filters))
      (common-lisp:list
       (common-lisp:cons "organizationEntityFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-entity-account-filters))
      (common-lisp:list
       (common-lisp:cons "organizationEntityAccountFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-affected-entities-for-organization-response
                       common-lisp:nil
                       ((entities :initarg :entities :initform common-lisp:nil
                         :type (common-lisp:or entity-list common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-response-entities
                         :shape "EntityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-set :initarg :failed-set :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          describe-affected-entities-for-organization-failed-set
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-response-failed-set
                         :shape
                         "DescribeAffectedEntitiesForOrganizationFailedSet"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-for-organization-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-entities-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-entities-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-entities-for-organization-response
                    'make-describe-affected-entities-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-set))
      (common-lisp:list
       (common-lisp:cons "failedSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-affected-entities-request common-lisp:nil
                       ((filter :initarg :filter :initform
                         (common-lisp:error ":filter is required") :type
                         (common-lisp:or entity-filter common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-request-filter
                         :shape "EntityFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResults| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-request-max-results
                         :shape "maxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-entities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-entities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-entities-request
                    'make-describe-affected-entities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-affected-entities-response common-lisp:nil
                       ((entities :initarg :entities :initform common-lisp:nil
                         :type (common-lisp:or entity-list common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-response-entities
                         :shape "EntityList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-affected-entities-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-affected-entities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-affected-entities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-affected-entities-response
                    'make-describe-affected-entities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entities))
      (common-lisp:list
       (common-lisp:cons "entities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-affected-entities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-aggregates-for-organization-request
                       common-lisp:nil
                       ((event-arns :initarg :event-arns :initform
                         (common-lisp:error ":eventarns is required") :type
                         (common-lisp:or organization-event-arns-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-aggregates-for-organization-request-event-arns
                         :shape "OrganizationEventArnsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aws-account-ids :initarg :aws-account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or organization-account-ids-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-aggregates-for-organization-request-aws-account-ids
                         :shape "OrganizationAccountIdsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-aggregates-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-aggregates-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-aggregates-for-organization-request
                    'make-describe-entity-aggregates-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arns))
      (common-lisp:list
       (common-lisp:cons "eventArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-ids))
      (common-lisp:list
       (common-lisp:cons "awsAccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-aggregates-for-organization-response
                       common-lisp:nil
                       ((organization-entity-aggregates :initarg
                         :organization-entity-aggregates :initform
                         common-lisp:nil :type
                         (common-lisp:or organization-entity-aggregates-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-aggregates-for-organization-response-organization-entity-aggregates
                         :shape "OrganizationEntityAggregatesList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-aggregates-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-aggregates-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-aggregates-for-organization-response
                    'make-describe-entity-aggregates-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-entity-aggregates))
      (common-lisp:list
       (common-lisp:cons "organizationEntityAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-aggregates-request common-lisp:nil
                       ((event-arns :initarg :event-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or event-arns-list common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-aggregates-request-event-arns
                         :shape "EventArnsList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-aggregates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-aggregates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-aggregates-request
                    'make-describe-entity-aggregates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arns))
      (common-lisp:list
       (common-lisp:cons "eventArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-entity-aggregates-response common-lisp:nil
                       ((entity-aggregates :initarg :entity-aggregates
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-aggregate-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-entity-aggregates-response-entity-aggregates
                         :shape "EntityAggregateList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-entity-aggregates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-entity-aggregates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-entity-aggregates-response
                    'make-describe-entity-aggregates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-aggregates))
      (common-lisp:list
       (common-lisp:cons "entityAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-entity-aggregates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-aggregates-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type (common-lisp:or event-filter common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-request-filter
                         :shape "EventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aggregate-field :initarg :aggregate-field :initform
                         (common-lisp:error ":aggregatefield is required")
                         :type
                         (common-lisp:or |eventAggregateField|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-request-aggregate-field
                         :shape "eventAggregateField" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResults| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-request-max-results
                         :shape "maxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-aggregates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-aggregates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-aggregates-request
                    'make-describe-event-aggregates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregate-field))
      (common-lisp:list
       (common-lisp:cons "aggregateField"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-aggregates-response common-lisp:nil
                       ((event-aggregates :initarg :event-aggregates :initform
                         common-lisp:nil :type
                         (common-lisp:or event-aggregate-list common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-response-event-aggregates
                         :shape "EventAggregateList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-aggregates-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-aggregates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-aggregates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-aggregates-response
                    'make-describe-event-aggregates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-aggregates))
      (common-lisp:list
       (common-lisp:cons "eventAggregates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-aggregates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-event-details-failed-set ()
   '(trivial-types:proper-list event-details-error-item))
 (common-lisp:defun make-describe-event-details-failed-set
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-details-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype describe-event-details-for-organization-failed-set ()
   '(trivial-types:proper-list organization-event-details-error-item))
 (common-lisp:defun make-describe-event-details-for-organization-failed-set
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-event-details-error-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-event-details-for-organization-request
                       common-lisp:nil
                       ((organization-event-detail-filters :initarg
                         :organization-event-detail-filters :initform
                         (common-lisp:error
                          ":organizationeventdetailfilters is required")
                         :type
                         (common-lisp:or organization-event-detail-filters-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-for-organization-request-organization-event-detail-filters
                         :shape "OrganizationEventDetailFiltersList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-for-organization-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-details-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-details-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-details-for-organization-request
                    'make-describe-event-details-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'organization-event-detail-filters))
      (common-lisp:list
       (common-lisp:cons "organizationEventDetailFilters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-details-for-organization-response
                       common-lisp:nil
                       ((successful-set :initarg :successful-set :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          describe-event-details-for-organization-successful-set
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-for-organization-response-successful-set
                         :shape
                         "DescribeEventDetailsForOrganizationSuccessfulSet"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failed-set :initarg :failed-set :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          describe-event-details-for-organization-failed-set
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-for-organization-response-failed-set
                         :shape "DescribeEventDetailsForOrganizationFailedSet"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-details-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-details-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-details-for-organization-response
                    'make-describe-event-details-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful-set))
      (common-lisp:list
       (common-lisp:cons "successfulSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-set))
      (common-lisp:list
       (common-lisp:cons "failedSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-event-details-for-organization-successful-set ()
   '(trivial-types:proper-list organization-event-details))
 (common-lisp:defun make-describe-event-details-for-organization-successful-set
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-event-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-event-details-request common-lisp:nil
                       ((event-arns :initarg :event-arns :initform
                         (common-lisp:error ":eventarns is required") :type
                         (common-lisp:or |eventArnList| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-request-event-arns
                         :shape "eventArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-details-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-details-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-details-request
                    'make-describe-event-details-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arns))
      (common-lisp:list
       (common-lisp:cons "eventArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-details-response common-lisp:nil
                       ((successful-set :initarg :successful-set :initform
                         common-lisp:nil :type
                         (common-lisp:or describe-event-details-successful-set
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-response-successful-set
                         :shape "DescribeEventDetailsSuccessfulSet" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (failed-set :initarg :failed-set :initform
                         common-lisp:nil :type
                         (common-lisp:or describe-event-details-failed-set
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-event-details-response-failed-set
                         :shape "DescribeEventDetailsFailedSet" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-details-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-details-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-details-response
                    'make-describe-event-details-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'successful-set))
      (common-lisp:list
       (common-lisp:cons "successfulSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-set))
      (common-lisp:list
       (common-lisp:cons "failedSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-details-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype describe-event-details-successful-set ()
   '(trivial-types:proper-list event-details))
 (common-lisp:defun make-describe-event-details-successful-set
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-details))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass describe-event-types-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or event-type-filter common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-request-filter
                         :shape "EventTypeFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResults| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-request-max-results
                         :shape "maxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-types-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-event-types-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-types-request
                    'make-describe-event-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-event-types-response common-lisp:nil
                       ((event-types :initarg :event-types :initform
                         common-lisp:nil :type
                         (common-lisp:or event-type-list common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-response-event-types
                         :shape "EventTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-event-types-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-event-types-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-event-types-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-event-types-response
                    'make-describe-event-types-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-types))
      (common-lisp:list
       (common-lisp:cons "eventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-event-types-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-for-organization-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type
                         (common-lisp:or organization-event-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-request-filter
                         :shape "OrganizationEventFilter" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-request-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResultsLowerRange|
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-request-max-results
                         :shape "maxResultsLowerRange" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-events-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-for-organization-request
                    'make-describe-events-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-for-organization-response
                       common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type
                         (common-lisp:or organization-event-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-response-events
                         :shape "OrganizationEventList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-for-organization-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-events-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-for-organization-response
                    'make-describe-events-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-request common-lisp:nil
                       ((filter :initarg :filter :initform common-lisp:nil
                         :type (common-lisp:or event-filter common-lisp:null)
                         :accessor struct-shape-describe-events-request-filter
                         :shape "EventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-request-next-token :shape
                         "nextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or |maxResults| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-request-max-results
                         :shape "maxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |locale| common-lisp:null)
                         :accessor struct-shape-describe-events-request-locale
                         :shape "locale" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-request 'make-describe-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter))
      (common-lisp:list
       (common-lisp:cons "filter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-events-response common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type (common-lisp:or event-list common-lisp:null)
                         :accessor struct-shape-describe-events-response-events
                         :shape "EventList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |nextToken| common-lisp:null)
                         :accessor
                         struct-shape-describe-events-response-next-token
                         :shape "nextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-events-response 'make-describe-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-health-service-status-for-organization-response
                       common-lisp:nil
                       ((health-service-access-status-for-organization :initarg
                         :health-service-access-status-for-organization
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          |healthServiceAccessStatusForOrganization|
                          common-lisp:null)
                         :accessor
                         struct-shape-describe-health-service-status-for-organization-response-health-service-access-status-for-organization
                         :shape "healthServiceAccessStatusForOrganization"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-health-service-status-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-health-service-status-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-health-service-status-for-organization-response
                    'make-describe-health-service-status-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-health-service-status-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-health-service-status-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'health-service-access-status-for-organization))
      (common-lisp:list
       (common-lisp:cons "healthServiceAccessStatusForOrganization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-health-service-status-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-account-filter common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         (common-lisp:error ":eventarn is required") :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-entity-account-filter-event-arn :shape
                         "eventArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor
                         struct-shape-entity-account-filter-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-codes :initarg :status-codes :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityStatusCodeList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-entity-account-filter-status-codes :shape
                         "entityStatusCodeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-account-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-account-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-account-filter 'make-entity-account-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          entity-account-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          entity-account-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-codes))
      (common-lisp:list
       (common-lisp:cons "statusCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          entity-account-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass entity-aggregate common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-entity-aggregate-event-arn :shape
                         "eventArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |count| common-lisp:null) :accessor
                         struct-shape-entity-aggregate-count :shape "count"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (statuses :initarg :statuses :initform common-lisp:nil
                         :type
                         (common-lisp:or |entityStatuses| common-lisp:null)
                         :accessor struct-shape-entity-aggregate-statuses
                         :shape "entityStatuses" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-aggregate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-aggregate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'entity-aggregate 'make-entity-aggregate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity-aggregate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity-aggregate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statuses))
      (common-lisp:list
       (common-lisp:cons "statuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity-aggregate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-aggregate-list ()
   '(trivial-types:proper-list entity-aggregate))
 (common-lisp:defun make-entity-aggregate-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-aggregate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass entity-filter common-lisp:nil
                       ((event-arns :initarg :event-arns :initform
                         (common-lisp:error ":eventarns is required") :type
                         (common-lisp:or |eventArnList| common-lisp:null)
                         :accessor struct-shape-entity-filter-event-arns :shape
                         "eventArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-arns :initarg :entity-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityArnList| common-lisp:null)
                         :accessor struct-shape-entity-filter-entity-arns
                         :shape "entityArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-values :initarg :entity-values :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityValueList| common-lisp:null)
                         :accessor struct-shape-entity-filter-entity-values
                         :shape "entityValueList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-times :initarg :last-updated-times
                         :initform common-lisp:nil :type
                         (common-lisp:or |dateTimeRangeList| common-lisp:null)
                         :accessor
                         struct-shape-entity-filter-last-updated-times :shape
                         "dateTimeRangeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |tagFilter| common-lisp:null)
                         :accessor struct-shape-entity-filter-tags :shape
                         "tagFilter" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-codes :initarg :status-codes :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityStatusCodeList|
                                         common-lisp:null)
                         :accessor struct-shape-entity-filter-status-codes
                         :shape "entityStatusCodeList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-entity-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'entity-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'entity-filter 'make-entity-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input entity-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input entity-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arns))
      (common-lisp:list
       (common-lisp:cons "eventArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-arns))
      (common-lisp:list
       (common-lisp:cons "entityArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-values))
      (common-lisp:list
       (common-lisp:cons "entityValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-times))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-codes))
      (common-lisp:list
       (common-lisp:cons "statusCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input entity-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype entity-list ()
   '(trivial-types:proper-list affected-entity))
 (common-lisp:defun make-entity-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list affected-entity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-event-arn :shape "eventArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or |service| common-lisp:null)
                         :accessor struct-shape-event-service :shape "service"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-type-code :initarg :event-type-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventTypeCode| common-lisp:null)
                         :accessor struct-shape-event-event-type-code :shape
                         "eventTypeCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-category :initarg :event-type-category
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventTypeCategory| common-lisp:null)
                         :accessor struct-shape-event-event-type-category
                         :shape "eventTypeCategory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or |region| common-lisp:null)
                         :accessor struct-shape-event-region :shape "region"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (availability-zone :initarg :availability-zone
                         :initform common-lisp:nil :type
                         (common-lisp:or |availabilityZone| common-lisp:null)
                         :accessor struct-shape-event-availability-zone :shape
                         "availabilityZone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-event-start-time :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-event-end-time :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-event-last-updated-time :shape
                         "timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventStatusCode| common-lisp:null)
                         :accessor struct-shape-event-status-code :shape
                         "eventStatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-scope-code :initarg :event-scope-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventScopeCode| common-lisp:null)
                         :accessor struct-shape-event-event-scope-code :shape
                         "eventScopeCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-code))
      (common-lisp:list
       (common-lisp:cons "eventTypeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-category))
      (common-lisp:list
       (common-lisp:cons "eventTypeCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zone))
      (common-lisp:list
       (common-lisp:cons "availabilityZone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-scope-code))
      (common-lisp:list
       (common-lisp:cons "eventScopeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-account-filter common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         (common-lisp:error ":eventarn is required") :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-event-account-filter-event-arn :shape
                         "eventArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor
                         struct-shape-event-account-filter-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-account-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-account-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-account-filter 'make-event-account-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-account-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-account-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-account-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-aggregate common-lisp:nil
                       ((aggregate-value :initarg :aggregate-value :initform
                         common-lisp:nil :type
                         (common-lisp:or |aggregateValue| common-lisp:null)
                         :accessor struct-shape-event-aggregate-aggregate-value
                         :shape "aggregateValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |count| common-lisp:null) :accessor
                         struct-shape-event-aggregate-count :shape "count"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-aggregate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-aggregate
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-aggregate 'make-event-aggregate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-aggregate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-aggregate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregate-value))
      (common-lisp:list
       (common-lisp:cons "aggregateValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-aggregate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-aggregate-list ()
   '(trivial-types:proper-list event-aggregate))
 (common-lisp:defun make-event-aggregate-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-aggregate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype event-arns-list ()
   '(trivial-types:proper-list |eventArn|))
 (common-lisp:defun make-event-arns-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventArn|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-description common-lisp:nil
                       ((latest-description :initarg :latest-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventDescription| common-lisp:null)
                         :accessor
                         struct-shape-event-description-latest-description
                         :shape "eventDescription" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-description
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-description
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-description 'make-event-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-description))
      (common-lisp:list
       (common-lisp:cons "latestDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-details common-lisp:nil
                       ((event :initarg :event :initform common-lisp:nil :type
                         (common-lisp:or event common-lisp:null) :accessor
                         struct-shape-event-details-event :shape "Event"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-description :initarg :event-description
                         :initform common-lisp:nil :type
                         (common-lisp:or event-description common-lisp:null)
                         :accessor struct-shape-event-details-event-description
                         :shape "EventDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-metadata :initarg :event-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventMetadata| common-lisp:null)
                         :accessor struct-shape-event-details-event-metadata
                         :shape "eventMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-details 'make-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-description))
      (common-lisp:list
       (common-lisp:cons "eventDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-metadata))
      (common-lisp:list
       (common-lisp:cons "eventMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-details-error-item common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-event-details-error-item-event-arn :shape
                         "eventArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-name :initarg :error-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-event-details-error-item-error-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-event-details-error-item-error-message
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-details-error-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-details-error-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-details-error-item 'make-event-details-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-details-error-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-details-error-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-name))
      (common-lisp:list
       (common-lisp:cons "errorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-details-error-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-filter common-lisp:nil
                       ((event-arns :initarg :event-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArnList| common-lisp:null)
                         :accessor struct-shape-event-filter-event-arns :shape
                         "eventArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-codes :initarg :event-type-codes :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventTypeList| common-lisp:null)
                         :accessor struct-shape-event-filter-event-type-codes
                         :shape "eventTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (services :initarg :services :initform common-lisp:nil
                         :type (common-lisp:or |serviceList| common-lisp:null)
                         :accessor struct-shape-event-filter-services :shape
                         "serviceList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (regions :initarg :regions :initform common-lisp:nil
                         :type (common-lisp:or |regionList| common-lisp:null)
                         :accessor struct-shape-event-filter-regions :shape
                         "regionList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (availability-zones :initarg :availability-zones
                         :initform common-lisp:nil :type
                         (common-lisp:or |availabilityZones| common-lisp:null)
                         :accessor struct-shape-event-filter-availability-zones
                         :shape "availabilityZones" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-times :initarg :start-times :initform
                         common-lisp:nil :type
                         (common-lisp:or |dateTimeRangeList| common-lisp:null)
                         :accessor struct-shape-event-filter-start-times :shape
                         "dateTimeRangeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-times :initarg :end-times :initform
                         common-lisp:nil :type
                         (common-lisp:or |dateTimeRangeList| common-lisp:null)
                         :accessor struct-shape-event-filter-end-times :shape
                         "dateTimeRangeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-times :initarg :last-updated-times
                         :initform common-lisp:nil :type
                         (common-lisp:or |dateTimeRangeList| common-lisp:null)
                         :accessor struct-shape-event-filter-last-updated-times
                         :shape "dateTimeRangeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-arns :initarg :entity-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityArnList| common-lisp:null)
                         :accessor struct-shape-event-filter-entity-arns :shape
                         "entityArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-values :initarg :entity-values :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityValueList| common-lisp:null)
                         :accessor struct-shape-event-filter-entity-values
                         :shape "entityValueList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-categories :initarg :event-type-categories
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventTypeCategoryList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-filter-event-type-categories :shape
                         "eventTypeCategoryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |tagFilter| common-lisp:null)
                         :accessor struct-shape-event-filter-tags :shape
                         "tagFilter" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-status-codes :initarg :event-status-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventStatusCodeList|
                                         common-lisp:null)
                         :accessor struct-shape-event-filter-event-status-codes
                         :shape "eventStatusCodeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-filter 'make-event-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arns))
      (common-lisp:list
       (common-lisp:cons "eventArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-codes))
      (common-lisp:list
       (common-lisp:cons "eventTypeCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'services))
      (common-lisp:list
       (common-lisp:cons "services"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'availability-zones))
      (common-lisp:list
       (common-lisp:cons "availabilityZones"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-times))
      (common-lisp:list
       (common-lisp:cons "startTimes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-times))
      (common-lisp:list
       (common-lisp:cons "endTimes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-times))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-arns))
      (common-lisp:list
       (common-lisp:cons "entityArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-values))
      (common-lisp:list
       (common-lisp:cons "entityValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-type-categories))
      (common-lisp:list
       (common-lisp:cons "eventTypeCategories"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-status-codes))
      (common-lisp:list
       (common-lisp:cons "eventStatusCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun make-event-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-type common-lisp:nil
                       ((service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or |service| common-lisp:null)
                         :accessor struct-shape-event-type-service :shape
                         "service" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or |eventTypeCode| common-lisp:null)
                         :accessor struct-shape-event-type-code :shape
                         "eventTypeCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (category :initarg :category :initform common-lisp:nil
                         :type
                         (common-lisp:or |eventTypeCategory| common-lisp:null)
                         :accessor struct-shape-event-type-category :shape
                         "eventTypeCategory" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-type 'make-event-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-type-category-list ()
   '(trivial-types:proper-list |eventTypeCategory|))
 (common-lisp:defun make-event-type-category-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventTypeCategory|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype event-type-code-list ()
   '(trivial-types:proper-list |eventTypeCode|))
 (common-lisp:defun make-event-type-code-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventTypeCode|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-type-filter common-lisp:nil
                       ((event-type-codes :initarg :event-type-codes :initform
                         common-lisp:nil :type
                         (common-lisp:or event-type-code-list common-lisp:null)
                         :accessor
                         struct-shape-event-type-filter-event-type-codes :shape
                         "EventTypeCodeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (services :initarg :services :initform common-lisp:nil
                         :type (common-lisp:or |serviceList| common-lisp:null)
                         :accessor struct-shape-event-type-filter-services
                         :shape "serviceList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-categories :initarg :event-type-categories
                         :initform common-lisp:nil :type
                         (common-lisp:or event-type-category-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-type-filter-event-type-categories
                         :shape "EventTypeCategoryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-type-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-type-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-type-filter 'make-event-type-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-type-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-type-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-codes))
      (common-lisp:list
       (common-lisp:cons "eventTypeCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'services))
      (common-lisp:list
       (common-lisp:cons "services"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-type-categories))
      (common-lisp:list
       (common-lisp:cons "eventTypeCategories"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-type-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-type-list ()
   '(trivial-types:proper-list event-type))
 (common-lisp:defun make-event-type-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition invalid-pagination-token
     (health-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-pagination-token-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-pagination-token
                    'invalid-pagination-token-message)))
(common-lisp:progn
 (common-lisp:deftype organization-account-ids-list ()
   '(trivial-types:proper-list |accountId|))
 (common-lisp:defun make-organization-account-ids-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |accountId|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass organization-affected-entities-error-item
                       common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor
                         struct-shape-organization-affected-entities-error-item-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-organization-affected-entities-error-item-event-arn
                         :shape "eventArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-name :initarg :error-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-organization-affected-entities-error-item-error-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-organization-affected-entities-error-item-error-message
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-affected-entities-error-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'organization-affected-entities-error-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-affected-entities-error-item
                    'make-organization-affected-entities-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-affected-entities-error-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-affected-entities-error-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-name))
      (common-lisp:list
       (common-lisp:cons "errorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-affected-entities-error-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-entity-account-filters-list ()
   '(trivial-types:proper-list entity-account-filter))
 (common-lisp:defun make-organization-entity-account-filters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list entity-account-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass organization-entity-aggregate common-lisp:nil
                       ((event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-organization-entity-aggregate-event-arn
                         :shape "eventArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (count :initarg :count :initform common-lisp:nil :type
                         (common-lisp:or |count| common-lisp:null) :accessor
                         struct-shape-organization-entity-aggregate-count
                         :shape "count" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (statuses :initarg :statuses :initform common-lisp:nil
                         :type
                         (common-lisp:or |entityStatuses| common-lisp:null)
                         :accessor
                         struct-shape-organization-entity-aggregate-statuses
                         :shape "entityStatuses" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (accounts :initarg :accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or account-entity-aggregates-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-entity-aggregate-accounts
                         :shape "AccountEntityAggregatesList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-entity-aggregate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'organization-entity-aggregate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-entity-aggregate
                    'make-organization-entity-aggregate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-entity-aggregate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-entity-aggregate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'count))
      (common-lisp:list
       (common-lisp:cons "count"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statuses))
      (common-lisp:list
       (common-lisp:cons "statuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accounts))
      (common-lisp:list
       (common-lisp:cons "accounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-entity-aggregate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-entity-aggregates-list ()
   '(trivial-types:proper-list organization-entity-aggregate))
 (common-lisp:defun make-organization-entity-aggregates-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            organization-entity-aggregate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype organization-entity-filters-list ()
   '(trivial-types:proper-list event-account-filter))
 (common-lisp:defun make-organization-entity-filters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-account-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass organization-event common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-organization-event-arn :shape "eventArn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (service :initarg :service :initform common-lisp:nil
                         :type (common-lisp:or |service| common-lisp:null)
                         :accessor struct-shape-organization-event-service
                         :shape "service" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-code :initarg :event-type-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventTypeCode| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-event-type-code :shape
                         "eventTypeCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-category :initarg :event-type-category
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventTypeCategory| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-event-type-category
                         :shape "eventTypeCategory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-scope-code :initarg :event-scope-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventScopeCode| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-event-scope-code
                         :shape "eventScopeCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or |region| common-lisp:null)
                         :accessor struct-shape-organization-event-region
                         :shape "region" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-organization-event-start-time
                         :shape "timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-organization-event-end-time
                         :shape "timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-organization-event-last-updated-time
                         :shape "timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventStatusCode| common-lisp:null)
                         :accessor struct-shape-organization-event-status-code
                         :shape "eventStatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'organization-event
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-event 'make-organization-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input organization-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input organization-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service))
      (common-lisp:list
       (common-lisp:cons "service"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-code))
      (common-lisp:list
       (common-lisp:cons "eventTypeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-category))
      (common-lisp:list
       (common-lisp:cons "eventTypeCategory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-scope-code))
      (common-lisp:list
       (common-lisp:cons "eventScopeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input organization-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-event-arns-list ()
   '(trivial-types:proper-list |eventArn|))
 (common-lisp:defun make-organization-event-arns-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventArn|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype organization-event-detail-filters-list ()
   '(trivial-types:proper-list event-account-filter))
 (common-lisp:defun make-organization-event-detail-filters-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-account-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass organization-event-details common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event :initarg :event :initform common-lisp:nil :type
                         (common-lisp:or event common-lisp:null) :accessor
                         struct-shape-organization-event-details-event :shape
                         "Event" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-description :initarg :event-description
                         :initform common-lisp:nil :type
                         (common-lisp:or event-description common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-event-description
                         :shape "EventDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-metadata :initarg :event-metadata :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventMetadata| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-event-metadata
                         :shape "eventMetadata" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-event-details
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'organization-event-details
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-event-details
                    'make-organization-event-details))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-description))
      (common-lisp:list
       (common-lisp:cons "eventDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-metadata))
      (common-lisp:list
       (common-lisp:cons "eventMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass organization-event-details-error-item common-lisp:nil
                       ((aws-account-id :initarg :aws-account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |accountId| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-error-item-aws-account-id
                         :shape "accountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-arn :initarg :event-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventArn| common-lisp:null) :accessor
                         struct-shape-organization-event-details-error-item-event-arn
                         :shape "eventArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-name :initarg :error-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-error-item-error-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-message :initarg :error-message :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-organization-event-details-error-item-error-message
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-event-details-error-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'organization-event-details-error-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-event-details-error-item
                    'make-organization-event-details-error-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details-error-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details-error-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-id))
      (common-lisp:list
       (common-lisp:cons "awsAccountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-arn))
      (common-lisp:list
       (common-lisp:cons "eventArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-name))
      (common-lisp:list
       (common-lisp:cons "errorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-message))
      (common-lisp:list
       (common-lisp:cons "errorMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-details-error-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass organization-event-filter common-lisp:nil
                       ((event-type-codes :initarg :event-type-codes :initform
                         common-lisp:nil :type
                         (common-lisp:or |eventTypeList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-event-type-codes
                         :shape "eventTypeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aws-account-ids :initarg :aws-account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or |awsAccountIdsList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-aws-account-ids
                         :shape "awsAccountIdsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (services :initarg :services :initform common-lisp:nil
                         :type (common-lisp:or |serviceList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-services :shape
                         "serviceList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (regions :initarg :regions :initform common-lisp:nil
                         :type (common-lisp:or |regionList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-regions :shape
                         "regionList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or date-time-range common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-start-time
                         :shape "DateTimeRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or date-time-range common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-end-time :shape
                         "DateTimeRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-time :initarg :last-updated-time
                         :initform common-lisp:nil :type
                         (common-lisp:or date-time-range common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-last-updated-time
                         :shape "DateTimeRange" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-arns :initarg :entity-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityArnList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-entity-arns
                         :shape "entityArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-values :initarg :entity-values :initform
                         common-lisp:nil :type
                         (common-lisp:or |entityValueList| common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-entity-values
                         :shape "entityValueList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-type-categories :initarg :event-type-categories
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventTypeCategoryList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-event-type-categories
                         :shape "eventTypeCategoryList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-status-codes :initarg :event-status-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or |eventStatusCodeList|
                                         common-lisp:null)
                         :accessor
                         struct-shape-organization-event-filter-event-status-codes
                         :shape "eventStatusCodeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-organization-event-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'organization-event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'organization-event-filter
                    'make-organization-event-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type-codes))
      (common-lisp:list
       (common-lisp:cons "eventTypeCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-account-ids))
      (common-lisp:list
       (common-lisp:cons "awsAccountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'services))
      (common-lisp:list
       (common-lisp:cons "services"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'regions))
      (common-lisp:list
       (common-lisp:cons "regions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-time))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-arns))
      (common-lisp:list
       (common-lisp:cons "entityArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-values))
      (common-lisp:list
       (common-lisp:cons "entityValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-type-categories))
      (common-lisp:list
       (common-lisp:cons "eventTypeCategories"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-status-codes))
      (common-lisp:list
       (common-lisp:cons "eventStatusCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          organization-event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype organization-event-list ()
   '(trivial-types:proper-list organization-event))
 (common-lisp:defun make-organization-event-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list organization-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition unsupported-locale
     (health-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-locale-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-locale 'unsupported-locale-message)))
(common-lisp:deftype |accountId| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |affectedAccountsList| ()
   '(trivial-types:proper-list |accountId|))
 (common-lisp:defun make-affectedaccountslist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |accountId|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |aggregateValue| () 'common-lisp:string)
(common-lisp:deftype |availabilityZone| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |availabilityZones| ()
   '(trivial-types:proper-list |availabilityZone|))
 (common-lisp:defun make-availabilityzones
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |availabilityZone|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |awsAccountIdsList| ()
   '(trivial-types:proper-list |accountId|))
 (common-lisp:defun make-awsaccountidslist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |accountId|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |count| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |dateTimeRangeList| ()
   '(trivial-types:proper-list date-time-range))
 (common-lisp:defun make-datetimerangelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list date-time-range))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |entityArn| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |entityArnList| ()
   '(trivial-types:proper-list |entityArn|))
 (common-lisp:defun make-entityarnlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |entityArn|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |entityStatusCode| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |entityStatusCodeList| ()
   '(trivial-types:proper-list |entityStatusCode|))
 (common-lisp:defun make-entitystatuscodelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |entityStatusCode|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |entityStatuses| () 'common-lisp:hash-table)
 (common-lisp:defun make-entitystatuses (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |entityUrl| () 'common-lisp:string)
(common-lisp:deftype |entityValue| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |entityValueList| ()
   '(trivial-types:proper-list |entityValue|))
 (common-lisp:defun make-entityvaluelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |entityValue|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |eventAggregateField| () 'common-lisp:string)
(common-lisp:deftype |eventArn| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |eventArnList| ()
   '(trivial-types:proper-list |eventArn|))
 (common-lisp:defun make-eventarnlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventArn|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |eventDescription| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |eventMetadata| () 'common-lisp:hash-table)
 (common-lisp:defun make-eventmetadata (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |eventScopeCode| () 'common-lisp:string)
(common-lisp:deftype |eventStatusCode| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |eventStatusCodeList| ()
   '(trivial-types:proper-list |eventStatusCode|))
 (common-lisp:defun make-eventstatuscodelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventStatusCode|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |eventType| () 'common-lisp:string)
(common-lisp:deftype |eventTypeCategory| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |eventTypeCategoryList| ()
   '(trivial-types:proper-list |eventTypeCategory|))
 (common-lisp:defun make-eventtypecategorylist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventTypeCategory|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |eventTypeCode| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |eventTypeList| ()
   '(trivial-types:proper-list |eventType|))
 (common-lisp:defun make-eventtypelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |eventType|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |healthServiceAccessStatusForOrganization| ()
  'common-lisp:string)
(common-lisp:deftype |locale| () 'common-lisp:string)
(common-lisp:deftype |maxResults| () 'common-lisp:integer)
(common-lisp:deftype |maxResultsLowerRange| () 'common-lisp:integer)
(common-lisp:deftype |metadataKey| () 'common-lisp:string)
(common-lisp:deftype |metadataValue| () 'common-lisp:string)
(common-lisp:deftype |nextToken| () 'common-lisp:string)
(common-lisp:deftype |region| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |regionList| () '(trivial-types:proper-list |region|))
 (common-lisp:defun make-regionlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |region|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |service| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |serviceList| () '(trivial-types:proper-list |service|))
 (common-lisp:defun make-servicelist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |service|))
   aws-sdk/generator/shape::members))
common-lisp:nil
(common-lisp:progn
 (common-lisp:deftype |tagFilter| () '(trivial-types:proper-list |tagSet|))
 (common-lisp:defun make-tagfilter
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |tagSet|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |tagKey| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype |tagSet| () 'common-lisp:hash-table)
 (common-lisp:defun make-tagset (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |tagValue| () 'common-lisp:string)
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun describe-affected-accounts-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable event-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-affected-accounts-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAffectedAccountsForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-affected-accounts-for-organization))
(common-lisp:progn
 (common-lisp:defun describe-affected-entities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter locale next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable filter locale next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-affected-entities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAffectedEntities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-affected-entities))
(common-lisp:progn
 (common-lisp:defun describe-affected-entities-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-entity-filters locale
                     next-token max-results
                     organization-entity-account-filters)
   (common-lisp:declare
    (common-lisp:ignorable organization-entity-filters locale next-token
     max-results organization-entity-account-filters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-affected-entities-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAffectedEntitiesForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-affected-entities-for-organization))
(common-lisp:progn
 (common-lisp:defun describe-entity-aggregates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-arns)
   (common-lisp:declare (common-lisp:ignorable event-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entity-aggregates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEntityAggregates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-entity-aggregates))
(common-lisp:progn
 (common-lisp:defun describe-entity-aggregates-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-arns aws-account-ids)
   (common-lisp:declare (common-lisp:ignorable event-arns aws-account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-entity-aggregates-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEntityAggregatesForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-entity-aggregates-for-organization))
(common-lisp:progn
 (common-lisp:defun describe-event-aggregates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter aggregate-field max-results
                     next-token)
   (common-lisp:declare
    (common-lisp:ignorable filter aggregate-field max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-event-aggregates-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventAggregates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-aggregates))
(common-lisp:progn
 (common-lisp:defun describe-event-details
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-arns locale)
   (common-lisp:declare (common-lisp:ignorable event-arns locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-event-details-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventDetails"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-details))
(common-lisp:progn
 (common-lisp:defun describe-event-details-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key organization-event-detail-filters locale)
   (common-lisp:declare
    (common-lisp:ignorable organization-event-detail-filters locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-event-details-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventDetailsForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-details-for-organization))
(common-lisp:progn
 (common-lisp:defun describe-event-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter locale next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable filter locale next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-event-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventTypes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-event-types))
(common-lisp:progn
 (common-lisp:defun describe-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results locale)
   (common-lisp:declare
    (common-lisp:ignorable filter next-token max-results locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEvents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-events))
(common-lisp:progn
 (common-lisp:defun describe-events-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filter next-token max-results locale)
   (common-lisp:declare
    (common-lisp:ignorable filter next-token max-results locale))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-events-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'health-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeEventsForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-events-for-organization))
(common-lisp:progn
 (common-lisp:defun describe-health-service-status-for-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'health-request :method "POST" :path "/"
                                :operation
                                "DescribeHealthServiceStatusForOrganization"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'describe-health-service-status-for-organization))
(common-lisp:progn
 (common-lisp:defun disable-health-service-access-for-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'health-request :method "POST" :path "/"
                                :operation
                                "DisableHealthServiceAccessForOrganization"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'disable-health-service-access-for-organization))
(common-lisp:progn
 (common-lisp:defun enable-health-service-access-for-organization ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'health-request :method "POST" :path "/"
                                :operation
                                "EnableHealthServiceAccessForOrganization"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'enable-health-service-access-for-organization))
