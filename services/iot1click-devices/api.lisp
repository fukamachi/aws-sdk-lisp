;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/iot1click-devices/api
  (:use)
  (:nicknames #:aws/iot1click-devices)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot1click-devices/api)
(common-lisp:progn
 (common-lisp:define-condition iot1click-devices-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot1click-devices-error))
(common-lisp:progn
 (common-lisp:defclass iot1click-devices-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iot1click-devices"
                        :api-version "2018-05-14" :host-prefix
                        "devices.iot1click" :signing-name "iot1click"
                        :global-host common-lisp:nil))
 (common-lisp:export 'iot1click-devices-request))
(common-lisp:defvar *error-map*
  '(("ForbiddenException" . forbidden-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("PreconditionFailedException" . precondition-failed-exception)
    ("RangeNotSatisfiableException" . range-not-satisfiable-exception)
    ("ResourceConflictException" . resource-conflict-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defclass attributes common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'attributes 'make-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass claim-devices-by-claim-code-request common-lisp:nil
                       ((claim-code :initarg :claim-code :initform
                         (common-lisp:error ":claim-code is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-claim-devices-by-claim-code-request-claim-code
                         :shape "__string" :location "uri" :location-name
                         "claimCode"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-claim-devices-by-claim-code-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'claim-devices-by-claim-code-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'claim-devices-by-claim-code-request
                    'make-claim-devices-by-claim-code-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass claim-devices-by-claim-code-response common-lisp:nil
                       ((claim-code :initarg :claim-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMin12Max40| common-lisp:null)
                         :accessor
                         struct-shape-claim-devices-by-claim-code-response-claim-code
                         :shape "__stringMin12Max40" :location common-lisp:nil
                         :location-name "claimCode")
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-claim-devices-by-claim-code-response-total
                         :shape "__integer" :location common-lisp:nil
                         :location-name "total"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-claim-devices-by-claim-code-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'claim-devices-by-claim-code-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'claim-devices-by-claim-code-response
                    'make-claim-devices-by-claim-code-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'claim-code))
      (common-lisp:list
       (common-lisp:cons "ClaimCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          claim-devices-by-claim-code-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-device-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-device-request-device-id :shape
                         "__string" :location "uri" :location-name "deviceId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-device-request 'make-describe-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-device-response common-lisp:nil
                       ((device-description :initarg :device-description
                         :initform common-lisp:nil :type
                         (common-lisp:or device-description common-lisp:null)
                         :accessor
                         struct-shape-describe-device-response-device-description
                         :shape "DeviceDescription" :location common-lisp:nil
                         :location-name "deviceDescription"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-device-response 'make-describe-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-description))
      (common-lisp:list
       (common-lisp:cons "DeviceDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or attributes common-lisp:null) :accessor
                         struct-shape-device-attributes :shape "Attributes"
                         :location common-lisp:nil :location-name "attributes")
                        (device-id :initarg :device-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-device-id :shape "__string"
                         :location common-lisp:nil :location-name "deviceId")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-type :shape "__string" :location
                         common-lisp:nil :location-name "type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'device 'make-device))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-id))
      (common-lisp:list
       (common-lisp:cons "DeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype device-attributes () 'common-lisp:hash-table)
 (common-lisp:defun make-device-attributes
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass device-claim-response common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-claim-response-state :shape
                         "__string" :location common-lisp:nil :location-name
                         "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-claim-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-claim-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'device-claim-response 'make-device-claim-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-claim-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-claim-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-claim-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-description common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-description-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or device-attributes common-lisp:null)
                         :accessor struct-shape-device-description-attributes
                         :shape "DeviceAttributes" :location common-lisp:nil
                         :location-name "attributes")
                        (device-id :initarg :device-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-description-device-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "deviceId")
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-device-description-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enabled")
                        (remaining-life :initarg :remaining-life :initform
                         common-lisp:nil :type
                         (common-lisp:or |__doubleMin0Max100| common-lisp:null)
                         :accessor
                         struct-shape-device-description-remaining-life :shape
                         "__doubleMin0Max100" :location common-lisp:nil
                         :location-name "remainingLife")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-description-type :shape "__string"
                         :location common-lisp:nil :location-name "type")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-device-description-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-description
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-description
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'device-description 'make-device-description))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-description))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-description))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-id))
      (common-lisp:list
       (common-lisp:cons "DeviceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'remaining-life))
      (common-lisp:list
       (common-lisp:cons "RemainingLife"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-description))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-event common-lisp:nil
                       ((device :initarg :device :initform common-lisp:nil
                         :type (common-lisp:or device common-lisp:null)
                         :accessor struct-shape-device-event-device :shape
                         "Device" :location common-lisp:nil :location-name
                         "device")
                        (std-event :initarg :std-event :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-event-std-event :shape "__string"
                         :location common-lisp:nil :location-name "stdEvent"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'device-event 'make-device-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device))
      (common-lisp:list
       (common-lisp:cons "Device"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'std-event))
      (common-lisp:list
       (common-lisp:cons "StdEvent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-events-response common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfDeviceEvent|
                                         common-lisp:null)
                         :accessor struct-shape-device-events-response-events
                         :shape "__listOfDeviceEvent" :location common-lisp:nil
                         :location-name "events")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-events-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'device-events-response 'make-device-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          device-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          device-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          device-events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-method common-lisp:nil
                       ((device-type :initarg :device-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-method-device-type :shape
                         "__string" :location common-lisp:nil :location-name
                         "deviceType")
                        (method-name :initarg :method-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-device-method-method-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "methodName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-method
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-method
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'device-method 'make-device-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-method))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type))
      (common-lisp:list
       (common-lisp:cons "DeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-name))
      (common-lisp:list
       (common-lisp:cons "MethodName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass empty common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-empty
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'empty
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'empty 'make-empty))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input empty))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input empty))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass finalize-device-claim-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finalize-device-claim-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-finalize-device-claim-request-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finalize-device-claim-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'finalize-device-claim-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'finalize-device-claim-request
                    'make-finalize-device-claim-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass finalize-device-claim-response common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-finalize-device-claim-response-state
                         :shape "__string" :location common-lisp:nil
                         :location-name "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-finalize-device-claim-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'finalize-device-claim-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'finalize-device-claim-response
                    'make-finalize-device-claim-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          finalize-device-claim-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       forbidden-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-code
                    'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-device-methods-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-device-methods-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-device-methods-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-device-methods-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-device-methods-request
                    'make-get-device-methods-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-methods-response common-lisp:nil
                       ((device-methods :initarg :device-methods :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfDeviceMethod|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-device-methods-response-device-methods
                         :shape "__listOfDeviceMethod" :location
                         common-lisp:nil :location-name "deviceMethods"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-device-methods-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-device-methods-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-device-methods-response
                    'make-get-device-methods-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-methods))
      (common-lisp:list
       (common-lisp:cons "DeviceMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-methods-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass initiate-device-claim-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-initiate-device-claim-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-initiate-device-claim-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'initiate-device-claim-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'initiate-device-claim-request
                    'make-initiate-device-claim-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass initiate-device-claim-response common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-initiate-device-claim-response-state
                         :shape "__string" :location common-lisp:nil
                         :location-name "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-initiate-device-claim-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'initiate-device-claim-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'initiate-device-claim-response
                    'make-initiate-device-claim-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          initiate-device-claim-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       internal-failure-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-code
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       invalid-request-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception 'invalid-request-exception-code
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass invoke-device-method-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-invoke-device-method-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId")
                        (device-method :initarg :device-method :initform
                         common-lisp:nil :type
                         (common-lisp:or device-method common-lisp:null)
                         :accessor
                         struct-shape-invoke-device-method-request-device-method
                         :shape "DeviceMethod" :location common-lisp:nil
                         :location-name "deviceMethod")
                        (device-method-parameters :initarg
                         :device-method-parameters :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-invoke-device-method-request-device-method-parameters
                         :shape "__string" :location common-lisp:nil
                         :location-name "deviceMethodParameters"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-device-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoke-device-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-device-method-request
                    'make-invoke-device-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-method))
      (common-lisp:list
       (common-lisp:cons "DeviceMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-method-parameters))
      (common-lisp:list
       (common-lisp:cons "DeviceMethodParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass invoke-device-method-response common-lisp:nil
                       ((device-method-response :initarg
                         :device-method-response :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-invoke-device-method-response-device-method-response
                         :shape "__string" :location common-lisp:nil
                         :location-name "deviceMethodResponse"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-device-method-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'invoke-device-method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-device-method-response
                    'make-invoke-device-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-method-response))
      (common-lisp:list
       (common-lisp:cons "DeviceMethodResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-device-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-events-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-device-events-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId")
                        (from-time-stamp :initarg :from-time-stamp :initform
                         (common-lisp:error ":from-time-stamp is required")
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-list-device-events-request-from-time-stamp
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "fromTimeStamp")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-device-events-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-device-events-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (to-time-stamp :initarg :to-time-stamp :initform
                         (common-lisp:error ":to-time-stamp is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-list-device-events-request-to-time-stamp
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "toTimeStamp"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-device-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-device-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-device-events-request
                    'make-list-device-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-device-events-response common-lisp:nil
                       ((events :initarg :events :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfDeviceEvent|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-device-events-response-events :shape
                         "__listOfDeviceEvent" :location common-lisp:nil
                         :location-name "events")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-device-events-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-device-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-device-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-device-events-response
                    'make-list-device-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-device-events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-devices-request common-lisp:nil
                       ((device-type :initarg :device-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-devices-request-device-type :shape
                         "__string" :location "querystring" :location-name
                         "deviceType")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-devices-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-devices-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-devices-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-devices-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-devices-request 'make-list-devices-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-devices-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-devices-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-devices-response common-lisp:nil
                       ((devices :initarg :devices :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfDeviceDescription|
                                         common-lisp:null)
                         :accessor struct-shape-list-devices-response-devices
                         :shape "__listOfDeviceDescription" :location
                         common-lisp:nil :location-name "devices")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-devices-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-devices-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-devices-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-devices-response 'make-list-devices-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "Devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-devices-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition precondition-failed-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       precondition-failed-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       precondition-failed-exception-message)))
 (common-lisp:export
  (common-lisp:list 'precondition-failed-exception
                    'precondition-failed-exception-code
                    'precondition-failed-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition range-not-satisfiable-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       range-not-satisfiable-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       range-not-satisfiable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'range-not-satisfiable-exception
                    'range-not-satisfiable-exception-code
                    'range-not-satisfiable-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-conflict-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-conflict-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-conflict-exception
                    'resource-conflict-exception-code
                    'resource-conflict-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot1click-devices-error)
     ((code :initarg :code :initform common-lisp:nil :reader
       resource-not-found-exception-code)
      (message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-code
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass unclaim-device-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-unclaim-device-request-device-id :shape
                         "__string" :location "uri" :location-name "deviceId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unclaim-device-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unclaim-device-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unclaim-device-request 'make-unclaim-device-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass unclaim-device-response common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-unclaim-device-response-state :shape
                         "__string" :location common-lisp:nil :location-name
                         "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unclaim-device-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unclaim-device-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unclaim-device-response 'make-unclaim-device-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          unclaim-device-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-device-state-request common-lisp:nil
                       ((device-id :initarg :device-id :initform
                         (common-lisp:error ":device-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-device-state-request-device-id
                         :shape "__string" :location "uri" :location-name
                         "deviceId")
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-device-state-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "enabled"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-device-state-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-device-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-device-state-request
                    'make-update-device-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-device-state-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-device-state-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-device-state-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-device-state-response
                    'make-update-device-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-device-state-response))
   common-lisp:nil))
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__doubleMin0Max100| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfDeviceDescription| ()
   '(trivial-types:proper-list device-description))
 (common-lisp:defun make-__listofdevicedescription
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-description))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeviceEvent| ()
   '(trivial-types:proper-list device-event))
 (common-lisp:defun make-__listofdeviceevent
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-event))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfDeviceMethod| ()
   '(trivial-types:proper-list device-method))
 (common-lisp:defun make-__listofdevicemethod
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-method))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMin12Max40| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun claim-devices-by-claim-code
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key claim-code)
   (common-lisp:declare (common-lisp:ignorable claim-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-claim-devices-by-claim-code-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/claims/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'claim-code))))
        "ClaimDevicesByClaimCode"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'claim-devices-by-claim-code))
(common-lisp:progn
 (common-lisp:defun describe-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id)
   (common-lisp:declare (common-lisp:ignorable device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "DescribeDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-device))
(common-lisp:progn
 (common-lisp:defun finalize-device-claim
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id tags)
   (common-lisp:declare (common-lisp:ignorable device-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-finalize-device-claim-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/finalize-claim"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "FinalizeDeviceClaim"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'finalize-device-claim))
(common-lisp:progn
 (common-lisp:defun get-device-methods
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id)
   (common-lisp:declare (common-lisp:ignorable device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-methods-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/methods"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "GetDeviceMethods"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-device-methods))
(common-lisp:progn
 (common-lisp:defun initiate-device-claim
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id)
   (common-lisp:declare (common-lisp:ignorable device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-initiate-device-claim-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/initiate-claim"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "InitiateDeviceClaim"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'initiate-device-claim))
(common-lisp:progn
 (common-lisp:defun invoke-device-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id device-method
                     device-method-parameters)
   (common-lisp:declare
    (common-lisp:ignorable device-id device-method device-method-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invoke-device-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/methods"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "InvokeDeviceMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'invoke-device-method))
(common-lisp:progn
 (common-lisp:defun list-device-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id from-time-stamp max-results
                     next-token to-time-stamp)
   (common-lisp:declare
    (common-lisp:ignorable device-id from-time-stamp max-results next-token
     to-time-stamp))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-device-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/events"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "ListDeviceEvents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-device-events))
(common-lisp:progn
 (common-lisp:defun list-devices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-type max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable device-type max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-devices-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "GET"
        "/devices" "ListDevices"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-devices))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun unclaim-device
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id)
   (common-lisp:declare (common-lisp:ignorable device-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unclaim-device-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/unclaim"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "UnclaimDevice"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'unclaim-device))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-device-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-id enabled)
   (common-lisp:declare (common-lisp:ignorable device-id enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-device-state-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iot1click-devices-request aws-sdk/generator/operation::input "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/devices/~A/state"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'device-id))))
        "UpdateDeviceState"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-device-state))
