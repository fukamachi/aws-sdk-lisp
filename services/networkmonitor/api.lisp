;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/networkmonitor/api (:use)
                             (:nicknames #:aws/networkmonitor)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/networkmonitor/api)
(common-lisp:progn
 (common-lisp:define-condition networkmonitor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'networkmonitor-error))
(common-lisp:progn
 (common-lisp:defclass networkmonitor-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "networkmonitor"
                        :api-version "2023-08-01" :host-prefix "networkmonitor"
                        :signing-name "networkmonitor" :global-host
                        common-lisp:nil))
 (common-lisp:export 'networkmonitor-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype address-family () 'common-lisp:string)
(common-lisp:deftype aggregation-period () 'common-lisp:integer)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-monitor-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-input-monitor-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (probes :initarg :probes :initform common-lisp:nil
                         :type
                         (common-lisp:or create-monitor-probe-input-list
                                         common-lisp:null)
                         :accessor struct-shape-create-monitor-input-probes
                         :shape "CreateMonitorProbeInputList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (aggregation-period :initarg :aggregation-period
                         :initform common-lisp:nil :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-input-aggregation-period
                         :shape "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-monitor-input-client-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-monitor-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-monitor-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-monitor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-monitor-input 'make-create-monitor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-monitor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-name))
      (common-lisp:list
       (common-lisp:cons "monitorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probes))
      (common-lisp:list
       (common-lisp:cons "probes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-monitor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-monitor-output common-lisp:nil
                       ((monitor-arn :initarg :monitor-arn :initform
                         (common-lisp:error ":monitorarn is required") :type
                         (common-lisp:or monitor-arn common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-output-monitor-arn :shape
                         "MonitorArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-output-monitor-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or monitor-state common-lisp:null)
                         :accessor struct-shape-create-monitor-output-state
                         :shape "MonitorState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aggregation-period :initarg :aggregation-period
                         :initform common-lisp:nil :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-output-aggregation-period
                         :shape "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-monitor-output-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-monitor-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-monitor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-monitor-output 'make-create-monitor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-arn))
      (common-lisp:list
       (common-lisp:cons "monitorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-name))
      (common-lisp:list
       (common-lisp:cons "monitorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-monitor-probe-input common-lisp:nil
                       ((source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-monitor-probe-input-source-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-probe-input-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-create-monitor-probe-input-destination-port
                         :shape "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-create-monitor-probe-input-protocol
                         :shape "Protocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor
                         struct-shape-create-monitor-probe-input-packet-size
                         :shape "PacketSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (probe-tags :initarg :probe-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-monitor-probe-input-probe-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-monitor-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-monitor-probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-monitor-probe-input
                    'make-create-monitor-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-probe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-tags))
      (common-lisp:list
       (common-lisp:cons "probeTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-monitor-probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype create-monitor-probe-input-list ()
   '(trivial-types:proper-list create-monitor-probe-input))
 (common-lisp:defun make-create-monitor-probe-input-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            create-monitor-probe-input))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-probe-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-create-probe-input-monitor-name
                         :shape "ResourceName" :location "uri" :location-name
                         "monitorName")
                        (probe :initarg :probe :initform
                         (common-lisp:error ":probe is required") :type
                         (common-lisp:or probe-input common-lisp:null)
                         :accessor struct-shape-create-probe-input-probe :shape
                         "ProbeInput" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-probe-input-client-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-probe-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-probe-input 'make-create-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-probe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe))
      (common-lisp:list
       (common-lisp:cons "probe"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "clientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-probe-output common-lisp:nil
                       ((probe-id :initarg :probe-id :initform common-lisp:nil
                         :type (common-lisp:or probe-id common-lisp:null)
                         :accessor struct-shape-create-probe-output-probe-id
                         :shape "ProbeId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (probe-arn :initarg :probe-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-probe-output-probe-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-probe-output-source-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-create-probe-output-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-create-probe-output-destination-port
                         :shape "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-create-probe-output-protocol :shape
                         "Protocol" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-create-probe-output-packet-size
                         :shape "PacketSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address-family :initarg :address-family :initform
                         common-lisp:nil :type
                         (common-lisp:or address-family common-lisp:null)
                         :accessor
                         struct-shape-create-probe-output-address-family :shape
                         "AddressFamily" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-id :initarg :vpc-id :initform common-lisp:nil
                         :type (common-lisp:or vpc-id common-lisp:null)
                         :accessor struct-shape-create-probe-output-vpc-id
                         :shape "VpcId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or probe-state common-lisp:null)
                         :accessor struct-shape-create-probe-output-state
                         :shape "ProbeState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-create-probe-output-created-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-create-probe-output-modified-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-probe-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-probe-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-probe-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-probe-output 'make-create-probe-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-probe-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-probe-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-id))
      (common-lisp:list
       (common-lisp:cons "probeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-arn))
      (common-lisp:list
       (common-lisp:cons "probeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-family))
      (common-lisp:list
       (common-lisp:cons "addressFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "modifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-probe-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-monitor-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-delete-monitor-input-monitor-name :shape
                         "ResourceName" :location "uri" :location-name
                         "monitorName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-monitor-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-monitor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-monitor-input 'make-delete-monitor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-monitor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-monitor-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-monitor-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-monitor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-monitor-output 'make-delete-monitor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-monitor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-monitor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-monitor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-probe-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-delete-probe-input-monitor-name
                         :shape "ResourceName" :location "uri" :location-name
                         "monitorName")
                        (probe-id :initarg :probe-id :initform
                         (common-lisp:error ":probeid is required") :type
                         (common-lisp:or probe-id common-lisp:null) :accessor
                         struct-shape-delete-probe-input-probe-id :shape
                         "ProbeId" :location "uri" :location-name "probeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-probe-input 'make-delete-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-probe-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-probe-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-probe-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-probe-output 'make-delete-probe-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-probe-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-probe-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-probe-output))
   common-lisp:nil))
(common-lisp:deftype destination () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-monitor-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-get-monitor-input-monitor-name
                         :shape "ResourceName" :location "uri" :location-name
                         "monitorName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-monitor-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-monitor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-monitor-input 'make-get-monitor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-monitor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-monitor-output common-lisp:nil
                       ((monitor-arn :initarg :monitor-arn :initform
                         (common-lisp:error ":monitorarn is required") :type
                         (common-lisp:or monitor-arn common-lisp:null)
                         :accessor struct-shape-get-monitor-output-monitor-arn
                         :shape "MonitorArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-get-monitor-output-monitor-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or monitor-state common-lisp:null)
                         :accessor struct-shape-get-monitor-output-state :shape
                         "MonitorState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aggregation-period :initarg :aggregation-period
                         :initform
                         (common-lisp:error ":aggregationperiod is required")
                         :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-get-monitor-output-aggregation-period
                         :shape "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-monitor-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (probes :initarg :probes :initform common-lisp:nil
                         :type (common-lisp:or probe-list common-lisp:null)
                         :accessor struct-shape-get-monitor-output-probes
                         :shape "ProbeList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         (common-lisp:error ":createdat is required") :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-get-monitor-output-created-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         (common-lisp:error ":modifiedat is required") :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-get-monitor-output-modified-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-monitor-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-monitor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-monitor-output 'make-get-monitor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-monitor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-monitor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-arn))
      (common-lisp:list
       (common-lisp:cons "monitorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-name))
      (common-lisp:list
       (common-lisp:cons "monitorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probes))
      (common-lisp:list
       (common-lisp:cons "probes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "modifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-monitor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-probe-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-get-probe-input-monitor-name
                         :shape "ResourceName" :location "uri" :location-name
                         "monitorName")
                        (probe-id :initarg :probe-id :initform
                         (common-lisp:error ":probeid is required") :type
                         (common-lisp:or probe-id common-lisp:null) :accessor
                         struct-shape-get-probe-input-probe-id :shape "ProbeId"
                         :location "uri" :location-name "probeId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-probe-input 'make-get-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-probe-output common-lisp:nil
                       ((probe-id :initarg :probe-id :initform common-lisp:nil
                         :type (common-lisp:or probe-id common-lisp:null)
                         :accessor struct-shape-get-probe-output-probe-id
                         :shape "ProbeId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (probe-arn :initarg :probe-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-probe-output-probe-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-probe-output-source-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-get-probe-output-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-get-probe-output-destination-port :shape
                         "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-get-probe-output-protocol :shape
                         "Protocol" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-get-probe-output-packet-size
                         :shape "PacketSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address-family :initarg :address-family :initform
                         common-lisp:nil :type
                         (common-lisp:or address-family common-lisp:null)
                         :accessor struct-shape-get-probe-output-address-family
                         :shape "AddressFamily" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-id :initarg :vpc-id :initform common-lisp:nil
                         :type (common-lisp:or vpc-id common-lisp:null)
                         :accessor struct-shape-get-probe-output-vpc-id :shape
                         "VpcId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or probe-state common-lisp:null)
                         :accessor struct-shape-get-probe-output-state :shape
                         "ProbeState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-get-probe-output-created-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-get-probe-output-modified-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-probe-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-probe-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-probe-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-probe-output 'make-get-probe-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-probe-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-probe-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-id))
      (common-lisp:list
       (common-lisp:cons "probeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-arn))
      (common-lisp:list
       (common-lisp:cons "probeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-family))
      (common-lisp:list
       (common-lisp:cons "addressFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "modifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-probe-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype iso8601timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-monitors-input common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor struct-shape-list-monitors-input-next-token
                         :shape "PaginationToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-monitors-input-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-monitors-input-state :shape "String"
                         :location "querystring" :location-name "state"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-monitors-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-monitors-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-monitors-input 'make-list-monitors-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-monitors-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-monitors-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-monitors-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-monitors-output common-lisp:nil
                       ((monitors :initarg :monitors :initform
                         (common-lisp:error ":monitors is required") :type
                         (common-lisp:or monitor-list common-lisp:null)
                         :accessor struct-shape-list-monitors-output-monitors
                         :shape "MonitorList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-list-monitors-output-next-token :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-monitors-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-monitors-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-monitors-output 'make-list-monitors-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-monitors-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-monitors-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitors))
      (common-lisp:list
       (common-lisp:cons "monitors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-monitors-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-input-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-output-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype monitor-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype monitor-list ()
   '(trivial-types:proper-list monitor-summary))
 (common-lisp:defun make-monitor-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list monitor-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype monitor-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass monitor-summary common-lisp:nil
                       ((monitor-arn :initarg :monitor-arn :initform
                         (common-lisp:error ":monitorarn is required") :type
                         (common-lisp:or monitor-arn common-lisp:null)
                         :accessor struct-shape-monitor-summary-monitor-arn
                         :shape "MonitorArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-monitor-summary-monitor-name
                         :shape "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or monitor-state common-lisp:null)
                         :accessor struct-shape-monitor-summary-state :shape
                         "MonitorState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aggregation-period :initarg :aggregation-period
                         :initform common-lisp:nil :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-monitor-summary-aggregation-period :shape
                         "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-monitor-summary-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-monitor-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'monitor-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'monitor-summary 'make-monitor-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input monitor-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input monitor-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-arn))
      (common-lisp:list
       (common-lisp:cons "monitorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-name))
      (common-lisp:list
       (common-lisp:cons "monitorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input monitor-summary))
   common-lisp:nil))
(common-lisp:deftype packet-size () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:deftype port () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass probe common-lisp:nil
                       ((probe-id :initarg :probe-id :initform common-lisp:nil
                         :type (common-lisp:or probe-id common-lisp:null)
                         :accessor struct-shape-probe-probe-id :shape "ProbeId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (probe-arn :initarg :probe-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-probe-probe-arn :shape "Arn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-probe-source-arn :shape "Arn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-probe-destination :shape
                         "Destination" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-probe-destination-port :shape "Port"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-probe-protocol :shape "Protocol"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-probe-packet-size :shape
                         "PacketSize" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (address-family :initarg :address-family :initform
                         common-lisp:nil :type
                         (common-lisp:or address-family common-lisp:null)
                         :accessor struct-shape-probe-address-family :shape
                         "AddressFamily" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-id :initarg :vpc-id :initform common-lisp:nil
                         :type (common-lisp:or vpc-id common-lisp:null)
                         :accessor struct-shape-probe-vpc-id :shape "VpcId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or probe-state common-lisp:null)
                         :accessor struct-shape-probe-state :shape "ProbeState"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-probe-created-at :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-probe-modified-at :shape
                         "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-probe-tags :shape "TagMap" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-probe
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'probe
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'probe 'make-probe))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input probe))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input probe))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-id))
      (common-lisp:list
       (common-lisp:cons "probeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-arn))
      (common-lisp:list
       (common-lisp:cons "probeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-family))
      (common-lisp:list
       (common-lisp:cons "addressFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "modifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input probe))
   common-lisp:nil))
(common-lisp:deftype probe-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass probe-input common-lisp:nil
                       ((source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-probe-input-source-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-probe-input-destination :shape
                         "Destination" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-probe-input-destination-port :shape
                         "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-probe-input-protocol :shape "Protocol"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-probe-input-packet-size :shape
                         "PacketSize" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-probe-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'probe-input 'make-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input probe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype probe-list () '(trivial-types:proper-list probe))
 (common-lisp:defun make-probe-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list probe))
   aws-sdk/generator/shape::members))
(common-lisp:deftype probe-state () 'common-lisp:string)
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:deftype resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-input-resource-arn :shape
                         "Arn" :location "uri" :location-name "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-input-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-input 'make-tag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-output 'make-tag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-output))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-input-resource-arn :shape
                         "Arn" :location "uri" :location-name "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-input-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-input 'make-untag-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input untag-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input untag-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-output common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-output 'make-untag-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-monitor-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-monitor-input-monitor-name :shape
                         "ResourceName" :location "uri" :location-name
                         "monitorName")
                        (aggregation-period :initarg :aggregation-period
                         :initform
                         (common-lisp:error ":aggregationperiod is required")
                         :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-update-monitor-input-aggregation-period
                         :shape "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-monitor-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-monitor-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-monitor-input 'make-update-monitor-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-monitor-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-monitor-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-monitor-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-monitor-output common-lisp:nil
                       ((monitor-arn :initarg :monitor-arn :initform
                         (common-lisp:error ":monitorarn is required") :type
                         (common-lisp:or monitor-arn common-lisp:null)
                         :accessor
                         struct-shape-update-monitor-output-monitor-arn :shape
                         "MonitorArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-monitor-output-monitor-name :shape
                         "ResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform
                         (common-lisp:error ":state is required") :type
                         (common-lisp:or monitor-state common-lisp:null)
                         :accessor struct-shape-update-monitor-output-state
                         :shape "MonitorState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (aggregation-period :initarg :aggregation-period
                         :initform common-lisp:nil :type
                         (common-lisp:or aggregation-period common-lisp:null)
                         :accessor
                         struct-shape-update-monitor-output-aggregation-period
                         :shape "AggregationPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-update-monitor-output-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-monitor-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-monitor-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-monitor-output 'make-update-monitor-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-monitor-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-monitor-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-arn))
      (common-lisp:list
       (common-lisp:cons "monitorArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'monitor-name))
      (common-lisp:list
       (common-lisp:cons "monitorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aggregation-period))
      (common-lisp:list
       (common-lisp:cons "aggregationPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-monitor-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-probe-input common-lisp:nil
                       ((monitor-name :initarg :monitor-name :initform
                         (common-lisp:error ":monitorname is required") :type
                         (common-lisp:or resource-name common-lisp:null)
                         :accessor struct-shape-update-probe-input-monitor-name
                         :shape "ResourceName" :location "uri" :location-name
                         "monitorName")
                        (probe-id :initarg :probe-id :initform
                         (common-lisp:error ":probeid is required") :type
                         (common-lisp:or probe-id common-lisp:null) :accessor
                         struct-shape-update-probe-input-probe-id :shape
                         "ProbeId" :location "uri" :location-name "probeId")
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or probe-state common-lisp:null)
                         :accessor struct-shape-update-probe-input-state :shape
                         "ProbeState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         common-lisp:nil :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-update-probe-input-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-update-probe-input-destination-port
                         :shape "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or protocol common-lisp:null)
                         :accessor struct-shape-update-probe-input-protocol
                         :shape "Protocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-update-probe-input-packet-size
                         :shape "PacketSize" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-probe-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-probe-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-probe-input 'make-update-probe-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-probe-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-probe-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-probe-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-probe-output common-lisp:nil
                       ((probe-id :initarg :probe-id :initform common-lisp:nil
                         :type (common-lisp:or probe-id common-lisp:null)
                         :accessor struct-shape-update-probe-output-probe-id
                         :shape "ProbeId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (probe-arn :initarg :probe-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-probe-output-probe-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-arn :initarg :source-arn :initform
                         (common-lisp:error ":sourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-probe-output-source-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-update-probe-output-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-port :initarg :destination-port :initform
                         common-lisp:nil :type
                         (common-lisp:or port common-lisp:null) :accessor
                         struct-shape-update-probe-output-destination-port
                         :shape "Port" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (protocol :initarg :protocol :initform
                         (common-lisp:error ":protocol is required") :type
                         (common-lisp:or protocol common-lisp:null) :accessor
                         struct-shape-update-probe-output-protocol :shape
                         "Protocol" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (packet-size :initarg :packet-size :initform
                         common-lisp:nil :type
                         (common-lisp:or packet-size common-lisp:null)
                         :accessor struct-shape-update-probe-output-packet-size
                         :shape "PacketSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (address-family :initarg :address-family :initform
                         common-lisp:nil :type
                         (common-lisp:or address-family common-lisp:null)
                         :accessor
                         struct-shape-update-probe-output-address-family :shape
                         "AddressFamily" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-id :initarg :vpc-id :initform common-lisp:nil
                         :type (common-lisp:or vpc-id common-lisp:null)
                         :accessor struct-shape-update-probe-output-vpc-id
                         :shape "VpcId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or probe-state common-lisp:null)
                         :accessor struct-shape-update-probe-output-state
                         :shape "ProbeState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-update-probe-output-created-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (modified-at :initarg :modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or iso8601timestamp common-lisp:null)
                         :accessor struct-shape-update-probe-output-modified-at
                         :shape "Iso8601Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-update-probe-output-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-probe-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-probe-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-probe-output 'make-update-probe-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-probe-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-probe-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-id))
      (common-lisp:list
       (common-lisp:cons "probeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'probe-arn))
      (common-lisp:list
       (common-lisp:cons "probeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-arn))
      (common-lisp:list
       (common-lisp:cons "sourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-port))
      (common-lisp:list
       (common-lisp:cons "destinationPort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'packet-size))
      (common-lisp:list
       (common-lisp:cons "packetSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address-family))
      (common-lisp:list
       (common-lisp:cons "addressFamily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-id))
      (common-lisp:list
       (common-lisp:cons "vpcId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "state"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'modified-at))
      (common-lisp:list
       (common-lisp:cons "modifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-probe-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (networkmonitor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype vpc-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-monitor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name probes aggregation-period
                     client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable monitor-name probes aggregation-period client-token
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-monitor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/monitors"
                                                        "CreateMonitor"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-monitor))
(common-lisp:progn
 (common-lisp:defun create-probe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name probe client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable monitor-name probe client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-probe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A/probes"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))))
                                                        "CreateProbe"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-probe))
(common-lisp:progn
 (common-lisp:defun delete-monitor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name)
   (common-lisp:declare (common-lisp:ignorable monitor-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-monitor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))))
                                                        "DeleteMonitor"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-monitor))
(common-lisp:progn
 (common-lisp:defun delete-probe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name probe-id)
   (common-lisp:declare (common-lisp:ignorable monitor-name probe-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-probe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A/probes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'probe-id))))
                                                        "DeleteProbe"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-probe))
(common-lisp:progn
 (common-lisp:defun get-monitor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name)
   (common-lisp:declare (common-lisp:ignorable monitor-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-monitor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))))
                                                        "GetMonitor"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-monitor))
(common-lisp:progn
 (common-lisp:defun get-probe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name probe-id)
   (common-lisp:declare (common-lisp:ignorable monitor-name probe-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-probe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A/probes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'probe-id))))
                                                        "GetProbe"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-probe))
(common-lisp:progn
 (common-lisp:defun list-monitors
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results state)
   (common-lisp:declare (common-lisp:ignorable next-token max-results state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-monitors-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/monitors"
                                                        "ListMonitors"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-monitors))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-monitor
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name aggregation-period)
   (common-lisp:declare
    (common-lisp:ignorable monitor-name aggregation-period))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-monitor-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))))
                                                        "UpdateMonitor"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-monitor))
(common-lisp:progn
 (common-lisp:defun update-probe
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key monitor-name probe-id state destination
                     destination-port protocol packet-size)
   (common-lisp:declare
    (common-lisp:ignorable monitor-name probe-id state destination
     destination-port protocol packet-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-probe-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'networkmonitor-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/monitors/~A/probes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'monitor-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'probe-id))))
                                                        "UpdateProbe"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-probe))
