;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/route53-recovery-cluster/api
  (:use)
  (:nicknames #:aws/route53-recovery-cluster)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/route53-recovery-cluster/api)
(common-lisp:progn
 (common-lisp:define-condition route53-recovery-cluster-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'route53-recovery-cluster-error))
(common-lisp:progn
 (common-lisp:defclass route53-recovery-cluster-request
                       (aws-sdk/json-request:json-request) common-lisp:nil
                       (:default-initargs :service "route53-recovery-cluster"
                        :api-version "2019-12-02" :host-prefix
                        "route53-recovery-cluster" :signing-name
                        "route53-recovery-cluster" :global-host common-lisp:nil
                        :target-prefix "ToggleCustomerAPI" :json-version
                        "1.0"))
 (common-lisp:export 'route53-recovery-cluster-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("EndpointTemporarilyUnavailableException"
     . endpoint-temporarily-unavailable-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceLimitExceededException" . service-limit-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype arns () '(trivial-types:proper-list arn))
 (common-lisp:defun make-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       conflict-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       conflict-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-resource-id
                    'conflict-exception-resource-type)))
(common-lisp:deftype control-panel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition endpoint-temporarily-unavailable-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       endpoint-temporarily-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'endpoint-temporarily-unavailable-exception
                    'endpoint-temporarily-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass get-routing-control-state-request common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-routing-control-state-request-routing-control-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-routing-control-state-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-routing-control-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-routing-control-state-request
                    'make-get-routing-control-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-routing-control-state-response common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-routing-control-state-response-routing-control-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (routing-control-state :initarg :routing-control-state
                         :initform
                         (common-lisp:error
                          ":routing-control-state is required")
                         :type
                         (common-lisp:or routing-control-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-routing-control-state-response-routing-control-state
                         :shape "RoutingControlState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-control-name :initarg :routing-control-name
                         :initform common-lisp:nil :type
                         (common-lisp:or routing-control-name common-lisp:null)
                         :accessor
                         struct-shape-get-routing-control-state-response-routing-control-name
                         :shape "RoutingControlName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-routing-control-state-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-routing-control-state-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-routing-control-state-response
                    'make-get-routing-control-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-state))
      (common-lisp:list
       (common-lisp:cons "RoutingControlState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-name))
      (common-lisp:list
       (common-lisp:cons "RoutingControlName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-routing-control-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader internal-server-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message
                    'internal-server-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:defclass list-routing-controls-request common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-routing-controls-request-control-panel-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or page-token common-lisp:null) :accessor
                         struct-shape-list-routing-controls-request-next-token
                         :shape "PageToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-routing-controls-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-routing-controls-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-routing-controls-request
                    'make-list-routing-controls-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-routing-controls-response common-lisp:nil
                       ((routing-controls :initarg :routing-controls :initform
                         (common-lisp:error ":routing-controls is required")
                         :type
                         (common-lisp:or routing-controls common-lisp:null)
                         :accessor
                         struct-shape-list-routing-controls-response-routing-controls
                         :shape "RoutingControls" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or page-token common-lisp:null) :accessor
                         struct-shape-list-routing-controls-response-next-token
                         :shape "PageToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-routing-controls-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-routing-controls-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-routing-controls-response
                    'make-list-routing-controls-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-controls))
      (common-lisp:list
       (common-lisp:cons "RoutingControls"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-routing-controls-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype owner () 'common-lisp:string)
(common-lisp:deftype page-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       resource-not-found-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       resource-not-found-exception-resource-type)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-resource-id
                    'resource-not-found-exception-resource-type)))
(common-lisp:deftype retry-after-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass routing-control common-lisp:nil
                       ((control-panel-arn :initarg :control-panel-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-routing-control-control-panel-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (control-panel-name :initarg :control-panel-name
                         :initform common-lisp:nil :type
                         (common-lisp:or control-panel-name common-lisp:null)
                         :accessor
                         struct-shape-routing-control-control-panel-name :shape
                         "ControlPanelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-control-arn :initarg :routing-control-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-routing-control-routing-control-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (routing-control-name :initarg :routing-control-name
                         :initform common-lisp:nil :type
                         (common-lisp:or routing-control-name common-lisp:null)
                         :accessor
                         struct-shape-routing-control-routing-control-name
                         :shape "RoutingControlName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (routing-control-state :initarg :routing-control-state
                         :initform common-lisp:nil :type
                         (common-lisp:or routing-control-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-routing-control-routing-control-state
                         :shape "RoutingControlState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (owner :initarg :owner :initform common-lisp:nil :type
                         (common-lisp:or owner common-lisp:null) :accessor
                         struct-shape-routing-control-owner :shape "Owner"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-routing-control
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'routing-control
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'routing-control 'make-routing-control))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input routing-control))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input routing-control))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-arn))
      (common-lisp:list
       (common-lisp:cons "ControlPanelArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'control-panel-name))
      (common-lisp:list
       (common-lisp:cons "ControlPanelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-name))
      (common-lisp:list
       (common-lisp:cons "RoutingControlName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-state))
      (common-lisp:list
       (common-lisp:cons "RoutingControlState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner))
      (common-lisp:list
       (common-lisp:cons "Owner"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input routing-control))
   common-lisp:nil))
(common-lisp:deftype routing-control-name () 'common-lisp:string)
(common-lisp:deftype routing-control-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype routing-controls ()
   '(trivial-types:proper-list routing-control))
 (common-lisp:defun make-routing-controls
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list routing-control))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-limit-exceeded-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-limit-exceeded-exception-message)
      (resource-id :initarg :resource-id :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-id)
      (resource-type :initarg :resource-type :initform common-lisp:nil :reader
       service-limit-exceeded-exception-resource-type)
      (limit-code :initarg :limit-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-limit-code)
      (service-code :initarg :service-code :initform common-lisp:nil :reader
       service-limit-exceeded-exception-service-code)))
 (common-lisp:export
  (common-lisp:list 'service-limit-exceeded-exception
                    'service-limit-exceeded-exception-message
                    'service-limit-exceeded-exception-resource-id
                    'service-limit-exceeded-exception-resource-type
                    'service-limit-exceeded-exception-limit-code
                    'service-limit-exceeded-exception-service-code)))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)
      (retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader throttling-exception-retry-after-seconds)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message
                    'throttling-exception-retry-after-seconds)))
(common-lisp:progn
 (common-lisp:deftype update-routing-control-state-entries ()
   '(trivial-types:proper-list update-routing-control-state-entry))
 (common-lisp:defun make-update-routing-control-state-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            update-routing-control-state-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-state-entry common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-routing-control-state-entry-routing-control-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (routing-control-state :initarg :routing-control-state
                         :initform
                         (common-lisp:error
                          ":routing-control-state is required")
                         :type
                         (common-lisp:or routing-control-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-state-entry-routing-control-state
                         :shape "RoutingControlState" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-state-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-state-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-state-entry
                    'make-update-routing-control-state-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-state))
      (common-lisp:list
       (common-lisp:cons "RoutingControlState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-state-request common-lisp:nil
                       ((routing-control-arn :initarg :routing-control-arn
                         :initform
                         (common-lisp:error ":routing-control-arn is required")
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-routing-control-state-request-routing-control-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (routing-control-state :initarg :routing-control-state
                         :initform
                         (common-lisp:error
                          ":routing-control-state is required")
                         :type
                         (common-lisp:or routing-control-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-state-request-routing-control-state
                         :shape "RoutingControlState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (safety-rules-to-override :initarg
                         :safety-rules-to-override :initform common-lisp:nil
                         :type (common-lisp:or arns common-lisp:null) :accessor
                         struct-shape-update-routing-control-state-request-safety-rules-to-override
                         :shape "Arns" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-state-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-state-request
                    'make-update-routing-control-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'routing-control-arn))
      (common-lisp:list
       (common-lisp:cons "RoutingControlArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'routing-control-state))
      (common-lisp:list
       (common-lisp:cons "RoutingControlState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'safety-rules-to-override))
      (common-lisp:list
       (common-lisp:cons "SafetyRulesToOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-state-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-state-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-state-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-state-response
                    'make-update-routing-control-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-state-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-states-request common-lisp:nil
                       ((update-routing-control-state-entries :initarg
                         :update-routing-control-state-entries :initform
                         (common-lisp:error
                          ":update-routing-control-state-entries is required")
                         :type
                         (common-lisp:or update-routing-control-state-entries
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-routing-control-states-request-update-routing-control-state-entries
                         :shape "UpdateRoutingControlStateEntries" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (safety-rules-to-override :initarg
                         :safety-rules-to-override :initform common-lisp:nil
                         :type (common-lisp:or arns common-lisp:null) :accessor
                         struct-shape-update-routing-control-states-request-safety-rules-to-override
                         :shape "Arns" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-states-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-states-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-states-request
                    'make-update-routing-control-states-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-routing-control-state-entries))
      (common-lisp:list
       (common-lisp:cons "UpdateRoutingControlStateEntries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'safety-rules-to-override))
      (common-lisp:list
       (common-lisp:cons "SafetyRulesToOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-routing-control-states-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-routing-control-states-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-routing-control-states-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-routing-control-states-response
                    'make-update-routing-control-states-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-routing-control-states-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (route53-recovery-cluster-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)
      (fields :initarg :fields :initform common-lisp:nil :reader
       validation-exception-fields)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason 'validation-exception-fields)))
(common-lisp:progn
 (common-lisp:defclass validation-exception-field common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform
                         (common-lisp:error ":message is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-validation-exception-field-message :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-validation-exception-field
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'validation-exception-field
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'validation-exception-field
                    'make-validation-exception-field))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          validation-exception-field))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype validation-exception-field-list ()
   '(trivial-types:proper-list validation-exception-field))
 (common-lisp:defun make-validation-exception-field-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            validation-exception-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun get-routing-control-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-control-arn)
   (common-lisp:declare (common-lisp:ignorable routing-control-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-routing-control-state-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-cluster-request aws-sdk/generator/operation::input
        "POST" "/" "GetRoutingControlState"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-routing-control-state))
(common-lisp:progn
 (common-lisp:defun list-routing-controls
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key control-panel-arn next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable control-panel-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-routing-controls-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-cluster-request aws-sdk/generator/operation::input
        "POST" "/" "ListRoutingControls"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-routing-controls))
(common-lisp:progn
 (common-lisp:defun update-routing-control-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key routing-control-arn routing-control-state
                     safety-rules-to-override)
   (common-lisp:declare
    (common-lisp:ignorable routing-control-arn routing-control-state
     safety-rules-to-override))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-routing-control-state-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-cluster-request aws-sdk/generator/operation::input
        "POST" "/" "UpdateRoutingControlState"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-routing-control-state))
(common-lisp:progn
 (common-lisp:defun update-routing-control-states
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key update-routing-control-state-entries
                     safety-rules-to-override)
   (common-lisp:declare
    (common-lisp:ignorable update-routing-control-state-entries
     safety-rules-to-override))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-routing-control-states-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-cluster-request aws-sdk/generator/operation::input
        "POST" "/" "UpdateRoutingControlStates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-routing-control-states))
