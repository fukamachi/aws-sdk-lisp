;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/personalize-events/api (:use)
                             (:nicknames #:aws/personalize-events)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/personalize-events/api)
(common-lisp:progn
 (common-lisp:define-condition personalize-events-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'personalize-events-error))
(common-lisp:progn
 (common-lisp:defclass personalize-events-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "personalize-events"
                        :api-version "2018-03-22" :host-prefix
                        "personalize-events" :signing-name "personalize"
                        :global-host common-lisp:nil))
 (common-lisp:export 'personalize-events-request))
(common-lisp:defvar *error-map*
  '(("InvalidInputException" . invalid-input-exception)
    ("ResourceInUseException" . resource-in-use-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defclass action common-lisp:nil
                       ((action-id :initarg :action-id :initform
                         (common-lisp:error ":actionid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-action-action-id :shape
                         "StringType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or action-properties common-lisp:null)
                         :accessor struct-shape-action-properties :shape
                         "ActionProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'action 'make-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "actionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action))
   common-lisp:nil))
(common-lisp:deftype action-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype action-impression ()
   '(trivial-types:proper-list action-id))
 (common-lisp:defun make-action-impression
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass action-interaction common-lisp:nil
                       ((action-id :initarg :action-id :initform
                         (common-lisp:error ":actionid is required") :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-action-interaction-action-id :shape
                         "ActionId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor struct-shape-action-interaction-user-id
                         :shape "UserId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-id :initarg :session-id :initform
                         (common-lisp:error ":sessionid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-action-interaction-session-id
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         (common-lisp:error ":string is required") :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-action-interaction-timestamp :shape
                         "Date" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-type :initarg :event-type :initform
                         (common-lisp:error ":eventtype is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-action-interaction-event-type
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-id :initarg :event-id :initform common-lisp:nil
                         :type (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-action-interaction-event-id
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-id common-lisp:null)
                         :accessor
                         struct-shape-action-interaction-recommendation-id
                         :shape "RecommendationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (impression :initarg :impression :initform
                         common-lisp:nil :type
                         (common-lisp:or action-impression common-lisp:null)
                         :accessor struct-shape-action-interaction-impression
                         :shape "ActionImpression" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or action-interaction-properties
                                         common-lisp:null)
                         :accessor struct-shape-action-interaction-properties
                         :shape "ActionInteractionProperties" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-action-interaction
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'action-interaction
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'action-interaction 'make-action-interaction))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input action-interaction))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input action-interaction))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "actionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "sessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "recommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impression))
      (common-lisp:list
       (common-lisp:cons "impression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input action-interaction))
   common-lisp:nil))
(common-lisp:deftype action-interaction-properties () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype action-interactions-list ()
   '(trivial-types:proper-list action-interaction))
 (common-lisp:defun make-action-interactions-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action-interaction))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype action-list () '(trivial-types:proper-list action))
 (common-lisp:defun make-action-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list action))
   aws-sdk/generator/shape::members))
(common-lisp:deftype action-properties () 'common-lisp:string)
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype date () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event common-lisp:nil
                       ((event-id :initarg :event-id :initform common-lisp:nil
                         :type (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-event-event-id :shape
                         "StringType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-type :initarg :event-type :initform
                         (common-lisp:error ":eventtype is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-event-event-type :shape
                         "StringType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-value :initarg :event-value :initform
                         common-lisp:nil :type
                         (common-lisp:or float-type common-lisp:null) :accessor
                         struct-shape-event-event-value :shape "FloatType"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (item-id :initarg :item-id :initform common-lisp:nil
                         :type (common-lisp:or item-id common-lisp:null)
                         :accessor struct-shape-event-item-id :shape "ItemId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or event-properties-json
                                         common-lisp:null)
                         :accessor struct-shape-event-properties :shape
                         "EventPropertiesJSON" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sent-at :initarg :sent-at :initform
                         (common-lisp:error ":sentat is required") :type
                         (common-lisp:or date common-lisp:null) :accessor
                         struct-shape-event-sent-at :shape "Date" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-id common-lisp:null)
                         :accessor struct-shape-event-recommendation-id :shape
                         "RecommendationId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (impression :initarg :impression :initform
                         common-lisp:nil :type
                         (common-lisp:or impression common-lisp:null) :accessor
                         struct-shape-event-impression :shape "Impression"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metric-attribution :initarg :metric-attribution
                         :initform common-lisp:nil :type
                         (common-lisp:or metric-attribution common-lisp:null)
                         :accessor struct-shape-event-metric-attribution :shape
                         "MetricAttribution" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-id))
      (common-lisp:list
       (common-lisp:cons "eventId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "eventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-value))
      (common-lisp:list
       (common-lisp:cons "eventValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-id))
      (common-lisp:list
       (common-lisp:cons "itemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sent-at))
      (common-lisp:list
       (common-lisp:cons "sentAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "recommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'impression))
      (common-lisp:list
       (common-lisp:cons "impression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-attribution))
      (common-lisp:list
       (common-lisp:cons "metricAttribution"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:deftype event-attribution-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-list () '(trivial-types:proper-list event))
 (common-lisp:defun make-event-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-properties-json () 'common-lisp:string)
(common-lisp:deftype float-type () 'common-lisp:single-float)
(common-lisp:progn
 (common-lisp:deftype impression () '(trivial-types:proper-list item-id))
 (common-lisp:defun make-impression
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition invalid-input-exception
     (personalize-events-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-input-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'invalid-input-exception-message)))
(common-lisp:progn
 (common-lisp:defclass item common-lisp:nil
                       ((item-id :initarg :item-id :initform
                         (common-lisp:error ":itemid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-item-item-id :shape
                         "StringType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or item-properties common-lisp:null)
                         :accessor struct-shape-item-properties :shape
                         "ItemProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-item (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'item 'make-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-id))
      (common-lisp:list
       (common-lisp:cons "itemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input item))
   common-lisp:nil))
(common-lisp:deftype item-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype item-list () '(trivial-types:proper-list item))
 (common-lisp:defun make-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item))
   aws-sdk/generator/shape::members))
(common-lisp:deftype item-properties () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass metric-attribution common-lisp:nil
                       ((event-attribution-source :initarg
                         :event-attribution-source :initform
                         (common-lisp:error
                          ":eventattributionsource is required")
                         :type
                         (common-lisp:or event-attribution-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-metric-attribution-event-attribution-source
                         :shape "EventAttributionSource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-attribution
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-attribution
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'metric-attribution 'make-metric-attribution))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-attribution))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-attribution))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-attribution-source))
      (common-lisp:list
       (common-lisp:cons "eventAttributionSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-attribution))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-action-interactions-request common-lisp:nil
                       ((tracking-id :initarg :tracking-id :initform
                         (common-lisp:error ":trackingid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor
                         struct-shape-put-action-interactions-request-tracking-id
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (action-interactions :initarg :action-interactions
                         :initform
                         (common-lisp:error ":actioninteractions is required")
                         :type
                         (common-lisp:or action-interactions-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-action-interactions-request-action-interactions
                         :shape "ActionInteractionsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-action-interactions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-action-interactions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-action-interactions-request
                    'make-put-action-interactions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-action-interactions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-action-interactions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-id))
      (common-lisp:list
       (common-lisp:cons "trackingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-interactions))
      (common-lisp:list
       (common-lisp:cons "actionInteractions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-action-interactions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-actions-request common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         (common-lisp:error ":datasetarn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-put-actions-request-dataset-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (actions :initarg :actions :initform
                         (common-lisp:error ":actions is required") :type
                         (common-lisp:or action-list common-lisp:null)
                         :accessor struct-shape-put-actions-request-actions
                         :shape "ActionList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-actions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-actions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-actions-request 'make-put-actions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-actions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-actions-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "datasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'actions))
      (common-lisp:list
       (common-lisp:cons "actions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-actions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-events-request common-lisp:nil
                       ((tracking-id :initarg :tracking-id :initform
                         (common-lisp:error ":trackingid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-put-events-request-tracking-id
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor struct-shape-put-events-request-user-id
                         :shape "UserId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-id :initarg :session-id :initform
                         (common-lisp:error ":sessionid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-put-events-request-session-id
                         :shape "StringType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-list :initarg :event-list :initform
                         (common-lisp:error ":eventlist is required") :type
                         (common-lisp:or event-list common-lisp:null) :accessor
                         struct-shape-put-events-request-event-list :shape
                         "EventList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-request 'make-put-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-id))
      (common-lisp:list
       (common-lisp:cons "trackingId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-id))
      (common-lisp:list
       (common-lisp:cons "sessionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-list))
      (common-lisp:list
       (common-lisp:cons "eventList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-items-request common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         (common-lisp:error ":datasetarn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-put-items-request-dataset-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform
                         (common-lisp:error ":items is required") :type
                         (common-lisp:or item-list common-lisp:null) :accessor
                         struct-shape-put-items-request-items :shape "ItemList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-items-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-items-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-items-request 'make-put-items-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-items-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-items-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "datasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-items-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-users-request common-lisp:nil
                       ((dataset-arn :initarg :dataset-arn :initform
                         (common-lisp:error ":datasetarn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-put-users-request-dataset-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (users :initarg :users :initform
                         (common-lisp:error ":users is required") :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-put-users-request-users :shape "UserList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-users-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-users-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-users-request 'make-put-users-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-users-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-users-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dataset-arn))
      (common-lisp:list
       (common-lisp:cons "datasetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-users-request))
   common-lisp:nil))
(common-lisp:deftype recommendation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-in-use-exception
     (personalize-events-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-in-use-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-in-use-exception
                    'resource-in-use-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (personalize-events-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype string-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass user common-lisp:nil
                       ((user-id :initarg :user-id :initform
                         (common-lisp:error ":userid is required") :type
                         (common-lisp:or string-type common-lisp:null)
                         :accessor struct-shape-user-user-id :shape
                         "StringType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or user-properties common-lisp:null)
                         :accessor struct-shape-user-properties :shape
                         "UserProperties" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-user (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'user 'make-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input user))
   common-lisp:nil))
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype user-list () '(trivial-types:proper-list user))
 (common-lisp:defun make-user-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-properties () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun put-action-interactions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tracking-id action-interactions)
   (common-lisp:declare
    (common-lisp:ignorable tracking-id action-interactions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-action-interactions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-events-request aws-sdk/generator/operation::input "POST"
        "/action-interactions" "PutActionInteractions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-action-interactions))
(common-lisp:progn
 (common-lisp:defun put-actions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dataset-arn actions)
   (common-lisp:declare (common-lisp:ignorable dataset-arn actions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-actions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-events-request aws-sdk/generator/operation::input "POST"
        "/actions" "PutActions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-actions))
(common-lisp:progn
 (common-lisp:defun put-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tracking-id user-id session-id
                     event-list)
   (common-lisp:declare
    (common-lisp:ignorable tracking-id user-id session-id event-list))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-events-request aws-sdk/generator/operation::input "POST"
        "/events" "PutEvents"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-events))
(common-lisp:progn
 (common-lisp:defun put-items
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dataset-arn items)
   (common-lisp:declare (common-lisp:ignorable dataset-arn items))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-items-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-events-request aws-sdk/generator/operation::input "POST"
        "/items" "PutItems"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-items))
(common-lisp:progn
 (common-lisp:defun put-users
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dataset-arn users)
   (common-lisp:declare (common-lisp:ignorable dataset-arn users))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-users-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-events-request aws-sdk/generator/operation::input "POST"
        "/users" "PutUsers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-users))
