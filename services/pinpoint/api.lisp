;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint/api
  (:use)
  (:nicknames #:aws/pinpoint)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pinpoint/api)
(common-lisp:progn
 (common-lisp:define-condition pinpoint-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pinpoint-error))
(common-lisp:progn
 (common-lisp:defclass pinpoint-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "pinpoint" :api-version
                        "2016-12-01" :host-prefix "pinpoint" :signing-name
                        "mobiletargeting" :global-host common-lisp:nil))
 (common-lisp:export 'pinpoint-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("MethodNotAllowedException" . method-not-allowed-exception)
    ("NotFoundException" . not-found-exception)
    ("PayloadTooLargeException" . payload-too-large-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defclass admchannel-request common-lisp:nil
                       ((client-id :initarg :client-id :initform
                         (common-lisp:error ":client-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-request-client-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-secret :initarg :client-secret :initform
                         (common-lisp:error ":client-secret is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-request-client-secret :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-admchannel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-admchannel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'admchannel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'admchannel-request 'make-admchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input admchannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input admchannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-secret))
      (common-lisp:list
       (common-lisp:cons "ClientSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input admchannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass admchannel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-admchannel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-admchannel-response-has-credential :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-admchannel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admchannel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-admchannel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-admchannel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'admchannel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'admchannel-response 'make-admchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input admchannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input admchannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input admchannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass admmessage common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-admmessage-action :shape
                         "Action" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (consolidation-key :initarg :consolidation-key
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-consolidation-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-admmessage-data :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (expires-after :initarg :expires-after :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-expires-after :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (icon-reference :initarg :icon-reference :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-icon-reference :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-icon-url :initarg :image-icon-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-image-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (md5 :initarg :md5 :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-md5 :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-raw-content :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-admmessage-silent-push :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (small-image-icon-url :initarg :small-image-icon-url
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-small-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-sound :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-admmessage-substitutions :shape
                         "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-title :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-admmessage-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-admmessage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'admmessage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'admmessage 'make-admmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input admmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input admmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'consolidation-key))
      (common-lisp:list
       (common-lisp:cons "ConsolidationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expires-after))
      (common-lisp:list
       (common-lisp:cons "ExpiresAfter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-reference))
      (common-lisp:list
       (common-lisp:cons "IconReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'md5))
      (common-lisp:list
       (common-lisp:cons "MD5"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'small-image-icon-url))
      (common-lisp:list
       (common-lisp:cons "SmallImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input admmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnschannel-request common-lisp:nil
                       ((bundle-id :initarg :bundle-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-bundle-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (certificate :initarg :certificate :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-certificate :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-apnschannel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (private-key :initarg :private-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-private-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (team-id :initarg :team-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-apnschannel-request-team-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-key :initarg :token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-token-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (token-key-id :initarg :token-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-request-token-key-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnschannel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnschannel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnschannel-request 'make-apnschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnschannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnschannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "BundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key))
      (common-lisp:list
       (common-lisp:cons "TokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key-id))
      (common-lisp:list
       (common-lisp:cons "TokenKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnschannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnschannel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-apnschannel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnschannel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-token-key :initarg :has-token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnschannel-response-has-token-key :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnschannel-response-is-archived :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnschannel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-apnschannel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnschannel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnschannel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnschannel-response 'make-apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnschannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnschannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-token-key))
      (common-lisp:list
       (common-lisp:cons "HasTokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnschannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnsmessage common-lisp:nil
                       ((apnspush-type :initarg :apnspush-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-apnspush-type :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-apnsmessage-action :shape
                         "Action" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (badge :initarg :badge :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-apnsmessage-badge :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (category :initarg :category :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-apnsmessage-category :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (collapse-id :initarg :collapse-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-collapse-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-apnsmessage-data :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-url :initarg :media-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-media-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (preferred-authentication-method :initarg
                         :preferred-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-preferred-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-apnsmessage-priority :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-raw-content :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-apnsmessage-silent-push :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-sound :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-apnsmessage-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (thread-id :initarg :thread-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-thread-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-to-live :initarg :time-to-live :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-apnsmessage-time-to-live :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-title :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsmessage-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnsmessage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnsmessage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'apnsmessage 'make-apnsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input apnsmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input apnsmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnspush-type))
      (common-lisp:list
       (common-lisp:cons "APNSPushType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'badge))
      (common-lisp:list
       (common-lisp:cons "Badge"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'category))
      (common-lisp:list
       (common-lisp:cons "Category"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collapse-id))
      (common-lisp:list
       (common-lisp:cons "CollapseId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-authentication-method))
      (common-lisp:list
       (common-lisp:cons "PreferredAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thread-id))
      (common-lisp:list
       (common-lisp:cons "ThreadId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-to-live))
      (common-lisp:list
       (common-lisp:cons "TimeToLive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input apnsmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnspush-notification-template common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor
                         struct-shape-apnspush-notification-template-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-body
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (media-url :initarg :media-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-media-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-raw-content
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-sound
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-title
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnspush-notification-template-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnspush-notification-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'apnspush-notification-template
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnspush-notification-template
                    'make-apnspush-notification-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnspush-notification-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnspush-notification-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnspush-notification-template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnssandbox-channel-request common-lisp:nil
                       ((bundle-id :initarg :bundle-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-bundle-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate :initarg :certificate :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-certificate
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (private-key :initarg :private-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-private-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-request-team-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-key :initarg :token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-token-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-key-id :initarg :token-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-request-token-key-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnssandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnssandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-request
                    'make-apnssandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "BundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key))
      (common-lisp:list
       (common-lisp:cons "TokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key-id))
      (common-lisp:list
       (common-lisp:cons "TokenKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnssandbox-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-token-key :initarg :has-token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-response-has-token-key
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnssandbox-channel-response-platform
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-apnssandbox-channel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnssandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnssandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnssandbox-channel-response
                    'make-apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-token-key))
      (common-lisp:list
       (common-lisp:cons "HasTokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnssandbox-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnsvoip-channel-request common-lisp:nil
                       ((bundle-id :initarg :bundle-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-bundle-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (certificate :initarg :certificate :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-certificate
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-request-enabled :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (private-key :initarg :private-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-private-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-request-team-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (token-key :initarg :token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-token-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (token-key-id :initarg :token-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-request-token-key-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnsvoip-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnsvoip-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnsvoip-channel-request 'make-apnsvoip-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "BundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key))
      (common-lisp:list
       (common-lisp:cons "TokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key-id))
      (common-lisp:list
       (common-lisp:cons "TokenKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnsvoip-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-response-enabled :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-token-key :initarg :has-token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-response-has-token-key
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-channel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-channel-response-version :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnsvoip-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'apnsvoip-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnsvoip-channel-response
                    'make-apnsvoip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-token-key))
      (common-lisp:list
       (common-lisp:cons "HasTokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnsvoip-sandbox-channel-request common-lisp:nil
                       ((bundle-id :initarg :bundle-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-bundle-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate :initarg :certificate :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-certificate
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (private-key :initarg :private-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-private-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-team-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-key :initarg :token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-token-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (token-key-id :initarg :token-key-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-request-token-key-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnsvoip-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'apnsvoip-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnsvoip-sandbox-channel-request
                    'make-apnsvoip-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bundle-id))
      (common-lisp:list
       (common-lisp:cons "BundleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate))
      (common-lisp:list
       (common-lisp:cons "Certificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'private-key))
      (common-lisp:list
       (common-lisp:cons "PrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key))
      (common-lisp:list
       (common-lisp:cons "TokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'token-key-id))
      (common-lisp:list
       (common-lisp:cons "TokenKeyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass apnsvoip-sandbox-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-token-key :initarg :has-token-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-has-token-key
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-platform
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-apnsvoip-sandbox-channel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-apnsvoip-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'apnsvoip-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'apnsvoip-sandbox-channel-response
                    'make-apnsvoip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-token-key))
      (common-lisp:list
       (common-lisp:cons "HasTokenKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          apnsvoip-sandbox-channel-response))
   common-lisp:nil))
(common-lisp:deftype action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass activities-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-activity-response
                                         common-lisp:null)
                         :accessor struct-shape-activities-response-item :shape
                         "ListOfActivityResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activities-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'activities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'activities-response 'make-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input activities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input activities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input activities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass activity common-lisp:nil
                       ((custom :initarg :custom :initform common-lisp:nil
                         :type
                         (common-lisp:or custom-message-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-custom :shape
                         "CustomMessageActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (conditional-split :initarg :conditional-split
                         :initform common-lisp:nil :type
                         (common-lisp:or conditional-split-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-conditional-split
                         :shape "ConditionalSplitActivity" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-description :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or email-message-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-email :shape
                         "EmailMessageActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (holdout :initarg :holdout :initform common-lisp:nil
                         :type
                         (common-lisp:or holdout-activity common-lisp:null)
                         :accessor struct-shape-activity-holdout :shape
                         "HoldoutActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (multi-condition :initarg :multi-condition :initform
                         common-lisp:nil :type
                         (common-lisp:or multi-conditional-split-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-multi-condition :shape
                         "MultiConditionalSplitActivity" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (push :initarg :push :initform common-lisp:nil :type
                         (common-lisp:or push-message-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-push :shape
                         "PushMessageActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (random-split :initarg :random-split :initform
                         common-lisp:nil :type
                         (common-lisp:or random-split-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-random-split :shape
                         "RandomSplitActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sms :initarg :sms :initform common-lisp:nil :type
                         (common-lisp:or smsmessage-activity common-lisp:null)
                         :accessor struct-shape-activity-sms :shape
                         "SMSMessageActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (wait :initarg :wait :initform common-lisp:nil :type
                         (common-lisp:or wait-activity common-lisp:null)
                         :accessor struct-shape-activity-wait :shape
                         "WaitActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (contact-center :initarg :contact-center :initform
                         common-lisp:nil :type
                         (common-lisp:or contact-center-activity
                                         common-lisp:null)
                         :accessor struct-shape-activity-contact-center :shape
                         "ContactCenterActivity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'activity 'make-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom))
      (common-lisp:list
       (common-lisp:cons "CUSTOM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'conditional-split))
      (common-lisp:list
       (common-lisp:cons "ConditionalSplit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "EMAIL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'holdout))
      (common-lisp:list
       (common-lisp:cons "Holdout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-condition))
      (common-lisp:list
       (common-lisp:cons "MultiCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push))
      (common-lisp:list
       (common-lisp:cons "PUSH"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'random-split))
      (common-lisp:list
       (common-lisp:cons "RandomSplit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms))
      (common-lisp:list
       (common-lisp:cons "SMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait))
      (common-lisp:list
       (common-lisp:cons "Wait"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'contact-center))
      (common-lisp:list
       (common-lisp:cons "ContactCenter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass activity-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-activity-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-campaign-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end :initarg :end :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-end :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (result :initarg :result :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-activity-response-result :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (scheduled-start :initarg :scheduled-start :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-scheduled-start :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start :initarg :start :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-start :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-state :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (successful-endpoint-count :initarg
                         :successful-endpoint-count :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-activity-response-successful-endpoint-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezones-completed-count :initarg
                         :timezones-completed-count :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-activity-response-timezones-completed-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezones-total-count :initarg :timezones-total-count
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-activity-response-timezones-total-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-endpoint-count :initarg :total-endpoint-count
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-activity-response-total-endpoint-count
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (treatment-id :initarg :treatment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-activity-response-treatment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (execution-metrics :initarg :execution-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-activity-response-execution-metrics
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activity-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'activity-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'activity-response 'make-activity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input activity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input activity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scheduled-start))
      (common-lisp:list
       (common-lisp:cons "ScheduledStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'successful-endpoint-count))
      (common-lisp:list
       (common-lisp:cons "SuccessfulEndpointCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezones-completed-count))
      (common-lisp:list
       (common-lisp:cons "TimezonesCompletedCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezones-total-count))
      (common-lisp:list
       (common-lisp:cons "TimezonesTotalCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'total-endpoint-count))
      (common-lisp:list
       (common-lisp:cons "TotalEndpointCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-id))
      (common-lisp:list
       (common-lisp:cons "TreatmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'execution-metrics))
      (common-lisp:list
       (common-lisp:cons "ExecutionMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input activity-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass address-configuration common-lisp:nil
                       ((body-override :initarg :body-override :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-address-configuration-body-override
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor
                         struct-shape-address-configuration-channel-type :shape
                         "ChannelType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-address-configuration-context
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-address-configuration-raw-content :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-address-configuration-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title-override :initarg :title-override :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-address-configuration-title-override
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-address-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'address-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'address-configuration 'make-address-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body-override))
      (common-lisp:list
       (common-lisp:cons "BodyOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title-override))
      (common-lisp:list
       (common-lisp:cons "TitleOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          address-configuration))
   common-lisp:nil))
(common-lisp:deftype alignment () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass android-push-notification-template common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor
                         struct-shape-android-push-notification-template-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-body
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (image-icon-url :initarg :image-icon-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-image-icon-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-image-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-raw-content
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (small-image-icon-url :initarg :small-image-icon-url
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-small-image-icon-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-sound
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-title
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-android-push-notification-template-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-android-push-notification-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'android-push-notification-template
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'android-push-notification-template
                    'make-android-push-notification-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          android-push-notification-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          android-push-notification-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'small-image-icon-url))
      (common-lisp:list
       (common-lisp:cons "SmallImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          android-push-notification-template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-date-range-kpi-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-application-date-range-kpi-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-application-date-range-kpi-response-end-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-date-range-kpi-response-kpi-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-result :initarg :kpi-result :initform
                         (common-lisp:error ":kpi-result is required") :type
                         (common-lisp:or base-kpi-result common-lisp:null)
                         :accessor
                         struct-shape-application-date-range-kpi-response-kpi-result
                         :shape "BaseKpiResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-date-range-kpi-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-application-date-range-kpi-response-start-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-date-range-kpi-response
                    'make-application-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-name))
      (common-lisp:list
       (common-lisp:cons "KpiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-result))
      (common-lisp:list
       (common-lisp:cons "KpiResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-date-range-kpi-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-response common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-response-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-application-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-response 'make-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-settings-journey-limits common-lisp:nil
                       ((daily-cap :initarg :daily-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-application-settings-journey-limits-daily-cap
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timeframe-cap :initarg :timeframe-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-timeframe-cap
                                         common-lisp:null)
                         :accessor
                         struct-shape-application-settings-journey-limits-timeframe-cap
                         :shape "JourneyTimeframeCap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-cap :initarg :total-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-application-settings-journey-limits-total-cap
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-settings-journey-limits
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-settings-journey-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-settings-journey-limits
                    'make-application-settings-journey-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-journey-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-journey-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-cap))
      (common-lisp:list
       (common-lisp:cons "DailyCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeframe-cap))
      (common-lisp:list
       (common-lisp:cons "TimeframeCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-cap))
      (common-lisp:list
       (common-lisp:cons "TotalCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-journey-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-settings-resource common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-application-settings-resource-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (campaign-hook :initarg :campaign-hook :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-hook common-lisp:null)
                         :accessor
                         struct-shape-application-settings-resource-campaign-hook
                         :shape "CampaignHook" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-application-settings-resource-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type
                         (common-lisp:or campaign-limits common-lisp:null)
                         :accessor
                         struct-shape-application-settings-resource-limits
                         :shape "CampaignLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-application-settings-resource-quiet-time
                         :shape "QuietTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-limits :initarg :journey-limits :initform
                         common-lisp:nil :type
                         (common-lisp:or application-settings-journey-limits
                                         common-lisp:null)
                         :accessor
                         struct-shape-application-settings-resource-journey-limits
                         :shape "ApplicationSettingsJourneyLimits" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-settings-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-settings-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-settings-resource
                    'make-application-settings-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-hook))
      (common-lisp:list
       (common-lisp:cons "CampaignHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-limits))
      (common-lisp:list
       (common-lisp:cons "JourneyLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-settings-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass applications-response common-lisp:nil
                       ((item :initarg :item :initform common-lisp:nil :type
                         (common-lisp:or list-of-application-response
                                         common-lisp:null)
                         :accessor struct-shape-applications-response-item
                         :shape "ListOfApplicationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-applications-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'applications-response 'make-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attribute-dimension common-lisp:nil
                       ((attribute-type :initarg :attribute-type :initform
                         common-lisp:nil :type
                         (common-lisp:or attribute-type common-lisp:null)
                         :accessor
                         struct-shape-attribute-dimension-attribute-type :shape
                         "AttributeType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-attribute-dimension-values
                         :shape "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attribute-dimension
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attribute-dimension
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attribute-dimension 'make-attribute-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attribute-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attribute-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-type))
      (common-lisp:list
       (common-lisp:cons "AttributeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attribute-dimension))
   common-lisp:nil))
(common-lisp:deftype attribute-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass attributes-resource common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-attributes-resource-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attribute-type :initarg :attribute-type :initform
                         (common-lisp:error ":attribute-type is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-attributes-resource-attribute-type :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-attributes-resource-attributes
                         :shape "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attributes-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attributes-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attributes-resource 'make-attributes-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attributes-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attributes-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attribute-type))
      (common-lisp:list
       (common-lisp:cons "AttributeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attributes-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       bad-request-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message
                    'bad-request-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass baidu-channel-request common-lisp:nil
                       ((api-key :initarg :api-key :initform
                         (common-lisp:error ":api-key is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-request-api-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-baidu-channel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secret-key :initarg :secret-key :initform
                         (common-lisp:error ":secret-key is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-request-secret-key :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-baidu-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'baidu-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'baidu-channel-request 'make-baidu-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secret-key))
      (common-lisp:list
       (common-lisp:cons "SecretKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass baidu-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (credential :initarg :credential :initform
                         (common-lisp:error ":credential is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-credential :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-baidu-channel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-baidu-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-baidu-channel-response-is-archived :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-channel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-baidu-channel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-baidu-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'baidu-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'baidu-channel-response 'make-baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credential))
      (common-lisp:list
       (common-lisp:cons "Credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          baidu-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass baidu-message common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-baidu-message-action :shape
                         "Action" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-baidu-message-data :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (icon-reference :initarg :icon-reference :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-icon-reference :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-icon-url :initarg :image-icon-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-image-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-raw-content :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-baidu-message-silent-push
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (small-image-icon-url :initarg :small-image-icon-url
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-small-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-sound :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-baidu-message-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-to-live :initarg :time-to-live :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-baidu-message-time-to-live
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-title :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-baidu-message-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-baidu-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'baidu-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'baidu-message 'make-baidu-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input baidu-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input baidu-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-reference))
      (common-lisp:list
       (common-lisp:cons "IconReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'small-image-icon-url))
      (common-lisp:list
       (common-lisp:cons "SmallImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-to-live))
      (common-lisp:list
       (common-lisp:cons "TimeToLive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input baidu-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass base-kpi-result common-lisp:nil
                       ((rows :initarg :rows :initform
                         (common-lisp:error ":rows is required") :type
                         (common-lisp:or list-of-result-row common-lisp:null)
                         :accessor struct-shape-base-kpi-result-rows :shape
                         "ListOfResultRow" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-base-kpi-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'base-kpi-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'base-kpi-result 'make-base-kpi-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-kpi-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-kpi-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rows))
      (common-lisp:list
       (common-lisp:cons "Rows"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-kpi-result))
   common-lisp:nil))
(common-lisp:deftype button-action () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass campaign-custom-message common-lisp:nil
                       ((data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-custom-message-data :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-custom-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-custom-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-custom-message 'make-campaign-custom-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-custom-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-custom-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-custom-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-date-range-kpi-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-campaign-date-range-kpi-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-date-range-kpi-response-campaign-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-campaign-date-range-kpi-response-end-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-date-range-kpi-response-kpi-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-result :initarg :kpi-result :initform
                         (common-lisp:error ":kpi-result is required") :type
                         (common-lisp:or base-kpi-result common-lisp:null)
                         :accessor
                         struct-shape-campaign-date-range-kpi-response-kpi-result
                         :shape "BaseKpiResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-date-range-kpi-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-campaign-date-range-kpi-response-start-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'campaign-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-date-range-kpi-response
                    'make-campaign-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-name))
      (common-lisp:list
       (common-lisp:cons "KpiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-result))
      (common-lisp:list
       (common-lisp:cons "KpiResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-date-range-kpi-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-email-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-email-message-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (from-address :initarg :from-address :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-email-message-from-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (html-body :initarg :html-body :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-email-message-html-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-email-message-title :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-email-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-email-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-email-message 'make-campaign-email-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html-body))
      (common-lisp:list
       (common-lisp:cons "HtmlBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-email-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-event-filter common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         (common-lisp:error ":dimensions is required") :type
                         (common-lisp:or event-dimensions common-lisp:null)
                         :accessor
                         struct-shape-campaign-event-filter-dimensions :shape
                         "EventDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-type :initarg :filter-type :initform
                         (common-lisp:error ":filter-type is required") :type
                         (common-lisp:or filter-type common-lisp:null)
                         :accessor
                         struct-shape-campaign-event-filter-filter-type :shape
                         "FilterType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-event-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-event-filter 'make-campaign-event-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-type))
      (common-lisp:list
       (common-lisp:cons "FilterType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-hook common-lisp:nil
                       ((lambda-function-name :initarg :lambda-function-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-hook-lambda-function-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or mode common-lisp:null) :accessor
                         struct-shape-campaign-hook-mode :shape "Mode"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (web-url :initarg :web-url :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-campaign-hook-web-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-hook
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-hook
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'campaign-hook 'make-campaign-hook))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-hook))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-hook))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lambda-function-name))
      (common-lisp:list
       (common-lisp:cons "LambdaFunctionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mode))
      (common-lisp:list
       (common-lisp:cons "Mode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-url))
      (common-lisp:list
       (common-lisp:cons "WebUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-hook))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-in-app-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-in-app-message-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-in-app-message-content
                                         common-lisp:null)
                         :accessor struct-shape-campaign-in-app-message-content
                         :shape "ListOfInAppMessageContent" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (custom-config :initarg :custom-config :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-campaign-in-app-message-custom-config
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (layout :initarg :layout :initform common-lisp:nil
                         :type (common-lisp:or layout common-lisp:null)
                         :accessor struct-shape-campaign-in-app-message-layout
                         :shape "Layout" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-in-app-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-in-app-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-in-app-message 'make-campaign-in-app-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          campaign-in-app-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          campaign-in-app-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-config))
      (common-lisp:list
       (common-lisp:cons "CustomConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'layout))
      (common-lisp:list
       (common-lisp:cons "Layout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          campaign-in-app-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-limits common-lisp:nil
                       ((daily :initarg :daily :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-campaign-limits-daily :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (maximum-duration :initarg :maximum-duration :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-campaign-limits-maximum-duration :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (messages-per-second :initarg :messages-per-second
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-campaign-limits-messages-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total :initarg :total :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-campaign-limits-total :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (session :initarg :session :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-campaign-limits-session :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-limits
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'campaign-limits 'make-campaign-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily))
      (common-lisp:list
       (common-lisp:cons "Daily"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'maximum-duration))
      (common-lisp:list
       (common-lisp:cons "MaximumDuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages-per-second))
      (common-lisp:list
       (common-lisp:cons "MessagesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total))
      (common-lisp:list
       (common-lisp:cons "Total"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-response common-lisp:nil
                       ((additional-treatments :initarg :additional-treatments
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-treatment-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-additional-treatments
                         :shape "ListOfTreatmentResource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (custom-delivery-configuration :initarg
                         :custom-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-custom-delivery-configuration
                         :shape "CustomDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-state :initarg :default-state :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-state common-lisp:null)
                         :accessor struct-shape-campaign-response-default-state
                         :shape "CampaignState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-description :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (holdout-percent :initarg :holdout-percent :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-holdout-percent :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (hook :initarg :hook :initform common-lisp:nil :type
                         (common-lisp:or campaign-hook common-lisp:null)
                         :accessor struct-shape-campaign-response-hook :shape
                         "CampaignHook" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-paused :initarg :is-paused :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-campaign-response-is-paused
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type
                         (common-lisp:or campaign-limits common-lisp:null)
                         :accessor struct-shape-campaign-response-limits :shape
                         "CampaignLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-message-configuration
                         :shape "MessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or schedule common-lisp:null)
                         :accessor struct-shape-campaign-response-schedule
                         :shape "Schedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-version :initarg :segment-version :initform
                         (common-lisp:error ":segment-version is required")
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-segment-version :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or campaign-state common-lisp:null)
                         :accessor struct-shape-campaign-response-state :shape
                         "CampaignState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-campaign-response-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-campaign-response-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (treatment-description :initarg :treatment-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-treatment-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (treatment-name :initarg :treatment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-response-treatment-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-campaign-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-campaign-response-priority
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-response 'make-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-treatments))
      (common-lisp:list
       (common-lisp:cons "AdditionalTreatments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "CustomDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-state))
      (common-lisp:list
       (common-lisp:cons "DefaultState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'holdout-percent))
      (common-lisp:list
       (common-lisp:cons "HoldoutPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hook))
      (common-lisp:list
       (common-lisp:cons "Hook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-paused))
      (common-lisp:list
       (common-lisp:cons "IsPaused"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-sms-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-sms-message-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-type :initarg :message-type :initform
                         common-lisp:nil :type
                         (common-lisp:or message-type common-lisp:null)
                         :accessor
                         struct-shape-campaign-sms-message-message-type :shape
                         "MessageType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (origination-number :initarg :origination-number
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-sms-message-origination-number
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-sms-message-sender-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (entity-id :initarg :entity-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-sms-message-entity-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-id :initarg :template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaign-sms-message-template-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-sms-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-sms-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaign-sms-message 'make-campaign-sms-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination-number))
      (common-lisp:list
       (common-lisp:cons "OriginationNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-id))
      (common-lisp:list
       (common-lisp:cons "EntityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-id))
      (common-lisp:list
       (common-lisp:cons "TemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-sms-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass campaign-state common-lisp:nil
                       ((campaign-status :initarg :campaign-status :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-status common-lisp:null)
                         :accessor struct-shape-campaign-state-campaign-status
                         :shape "CampaignStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaign-state
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaign-state
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'campaign-state 'make-campaign-state))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaign-state))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaign-state))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-status))
      (common-lisp:list
       (common-lisp:cons "CampaignStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaign-state))
   common-lisp:nil))
(common-lisp:deftype campaign-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass campaigns-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-campaign-response
                                         common-lisp:null)
                         :accessor struct-shape-campaigns-response-item :shape
                         "ListOfCampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-campaigns-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-campaigns-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'campaigns-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'campaigns-response 'make-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input campaigns-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-channel-response-enabled :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-channel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-response-last-modified-by :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-channel-response-version :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-response 'make-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-response))
   common-lisp:nil))
(common-lisp:deftype channel-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass channels-response common-lisp:nil
                       ((channels :initarg :channels :initform
                         (common-lisp:error ":channels is required") :type
                         (common-lisp:or map-of-channel-response
                                         common-lisp:null)
                         :accessor struct-shape-channels-response-channels
                         :shape "MapOfChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channels-response 'make-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass condition common-lisp:nil
                       ((conditions :initarg :conditions :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-simple-condition
                                         common-lisp:null)
                         :accessor struct-shape-condition-conditions :shape
                         "ListOfSimpleCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operator :initarg :operator :initform common-lisp:nil
                         :type (common-lisp:or operator common-lisp:null)
                         :accessor struct-shape-condition-operator :shape
                         "Operator" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'condition 'make-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'conditions))
      (common-lisp:list
       (common-lisp:cons "Conditions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operator))
      (common-lisp:list
       (common-lisp:cons "Operator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass conditional-split-activity common-lisp:nil
                       ((condition :initarg :condition :initform
                         common-lisp:nil :type
                         (common-lisp:or condition common-lisp:null) :accessor
                         struct-shape-conditional-split-activity-condition
                         :shape "Condition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-wait-time :initarg :evaluation-wait-time
                         :initform common-lisp:nil :type
                         (common-lisp:or wait-time common-lisp:null) :accessor
                         struct-shape-conditional-split-activity-evaluation-wait-time
                         :shape "WaitTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (false-activity :initarg :false-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-conditional-split-activity-false-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (true-activity :initarg :true-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-conditional-split-activity-true-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-conditional-split-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'conditional-split-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'conditional-split-activity
                    'make-conditional-split-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          conditional-split-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          conditional-split-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "Condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-wait-time))
      (common-lisp:list
       (common-lisp:cons "EvaluationWaitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'false-activity))
      (common-lisp:list
       (common-lisp:cons "FalseActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'true-activity))
      (common-lisp:list
       (common-lisp:cons "TrueActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          conditional-split-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass contact-center-activity common-lisp:nil
                       ((next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-contact-center-activity-next-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-contact-center-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'contact-center-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'contact-center-activity 'make-contact-center-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          contact-center-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          contact-center-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          contact-center-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       conflict-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass create-app-request common-lisp:nil
                       ((create-application-request :initarg
                         :create-application-request :initform
                         (common-lisp:error
                          ":create-application-request is required")
                         :type
                         (common-lisp:or create-application-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-app-request-create-application-request
                         :shape "CreateApplicationRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-request 'make-create-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-application-request))
      (common-lisp:list
       (common-lisp:cons "CreateApplicationRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input create-app-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-app-response common-lisp:nil
                       ((application-response :initarg :application-response
                         :initform
                         (common-lisp:error
                          ":application-response is required")
                         :type
                         (common-lisp:or application-response common-lisp:null)
                         :accessor
                         struct-shape-create-app-response-application-response
                         :shape "ApplicationResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-app-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-app-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-app-response 'make-create-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input create-app-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-application-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-application-request-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-create-application-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-campaign-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-campaign-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (write-campaign-request :initarg
                         :write-campaign-request :initform
                         (common-lisp:error
                          ":write-campaign-request is required")
                         :type
                         (common-lisp:or write-campaign-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-campaign-request-write-campaign-request
                         :shape "WriteCampaignRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-campaign-request 'make-create-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-campaign-request))
      (common-lisp:list
       (common-lisp:cons "WriteCampaignRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-campaign-response common-lisp:nil
                       ((campaign-response :initarg :campaign-response
                         :initform
                         (common-lisp:error ":campaign-response is required")
                         :type
                         (common-lisp:or campaign-response common-lisp:null)
                         :accessor
                         struct-shape-create-campaign-response-campaign-response
                         :shape "CampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-campaign-response 'make-create-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-campaign-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-email-template-request common-lisp:nil
                       ((email-template-request :initarg
                         :email-template-request :initform
                         (common-lisp:error
                          ":email-template-request is required")
                         :type
                         (common-lisp:or email-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-email-template-request-email-template-request
                         :shape "EmailTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-email-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-email-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-email-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-email-template-request
                    'make-create-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-template-request))
      (common-lisp:list
       (common-lisp:cons "EmailTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-email-template-response common-lisp:nil
                       ((create-template-message-body :initarg
                         :create-template-message-body :initform
                         (common-lisp:error
                          ":create-template-message-body is required")
                         :type
                         (common-lisp:or create-template-message-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-email-template-response-create-template-message-body
                         :shape "CreateTemplateMessageBody" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-email-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-email-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-email-template-response
                    'make-create-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-template-message-body))
      (common-lisp:list
       (common-lisp:cons "CreateTemplateMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-template-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-email-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-export-job-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-export-job-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (export-job-request :initarg :export-job-request
                         :initform
                         (common-lisp:error ":export-job-request is required")
                         :type
                         (common-lisp:or export-job-request common-lisp:null)
                         :accessor
                         struct-shape-create-export-job-request-export-job-request
                         :shape "ExportJobRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-export-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-export-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-export-job-request
                    'make-create-export-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'export-job-request))
      (common-lisp:list
       (common-lisp:cons "ExportJobRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'export-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-export-job-response common-lisp:nil
                       ((export-job-response :initarg :export-job-response
                         :initform
                         (common-lisp:error ":export-job-response is required")
                         :type
                         (common-lisp:or export-job-response common-lisp:null)
                         :accessor
                         struct-shape-create-export-job-response-export-job-response
                         :shape "ExportJobResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-export-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-export-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-export-job-response
                    'make-create-export-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'export-job-response))
      (common-lisp:list
       (common-lisp:cons "ExportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'export-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-export-job-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-import-job-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-import-job-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (import-job-request :initarg :import-job-request
                         :initform
                         (common-lisp:error ":import-job-request is required")
                         :type
                         (common-lisp:or import-job-request common-lisp:null)
                         :accessor
                         struct-shape-create-import-job-request-import-job-request
                         :shape "ImportJobRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-import-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-import-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-import-job-request
                    'make-create-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-request))
      (common-lisp:list
       (common-lisp:cons "ImportJobRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-import-job-response common-lisp:nil
                       ((import-job-response :initarg :import-job-response
                         :initform
                         (common-lisp:error ":import-job-response is required")
                         :type
                         (common-lisp:or import-job-response common-lisp:null)
                         :accessor
                         struct-shape-create-import-job-response-import-job-response
                         :shape "ImportJobResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-import-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-import-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-import-job-response
                    'make-create-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-import-job-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-in-app-template-request common-lisp:nil
                       ((in-app-template-request :initarg
                         :in-app-template-request :initform
                         (common-lisp:error
                          ":in-app-template-request is required")
                         :type
                         (common-lisp:or in-app-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-in-app-template-request-in-app-template-request
                         :shape "InAppTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-in-app-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-in-app-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-in-app-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-in-app-template-request
                    'make-create-in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-app-template-request))
      (common-lisp:list
       (common-lisp:cons "InAppTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-in-app-template-response common-lisp:nil
                       ((template-create-message-body :initarg
                         :template-create-message-body :initform
                         (common-lisp:error
                          ":template-create-message-body is required")
                         :type
                         (common-lisp:or template-create-message-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-in-app-template-response-template-create-message-body
                         :shape "TemplateCreateMessageBody" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-in-app-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-in-app-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-in-app-template-response
                    'make-create-in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-create-message-body))
      (common-lisp:list
       (common-lisp:cons "TemplateCreateMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'template-create-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-in-app-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-journey-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-journey-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (write-journey-request :initarg :write-journey-request
                         :initform
                         (common-lisp:error
                          ":write-journey-request is required")
                         :type
                         (common-lisp:or write-journey-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-journey-request-write-journey-request
                         :shape "WriteJourneyRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-journey-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-journey-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-journey-request 'make-create-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-journey-request))
      (common-lisp:list
       (common-lisp:cons "WriteJourneyRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-journey-response common-lisp:nil
                       ((journey-response :initarg :journey-response :initform
                         (common-lisp:error ":journey-response is required")
                         :type
                         (common-lisp:or journey-response common-lisp:null)
                         :accessor
                         struct-shape-create-journey-response-journey-response
                         :shape "JourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-journey-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-journey-response 'make-create-journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-response))
      (common-lisp:list
       (common-lisp:cons "JourneyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-journey-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-push-template-request common-lisp:nil
                       ((push-notification-template-request :initarg
                         :push-notification-template-request :initform
                         (common-lisp:error
                          ":push-notification-template-request is required")
                         :type
                         (common-lisp:or push-notification-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-push-template-request-push-notification-template-request
                         :shape "PushNotificationTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-push-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-push-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-push-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-push-template-request
                    'make-create-push-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'push-notification-template-request))
      (common-lisp:list
       (common-lisp:cons "PushNotificationTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'push-notification-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-push-template-response common-lisp:nil
                       ((create-template-message-body :initarg
                         :create-template-message-body :initform
                         (common-lisp:error
                          ":create-template-message-body is required")
                         :type
                         (common-lisp:or create-template-message-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-push-template-response-create-template-message-body
                         :shape "CreateTemplateMessageBody" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-push-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-push-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-push-template-response
                    'make-create-push-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-template-message-body))
      (common-lisp:list
       (common-lisp:cons "CreateTemplateMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-template-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-push-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-recommender-configuration common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-attributes
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-recommender-configuration-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-recommender-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-id-type :initarg
                         :recommendation-provider-id-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-recommender-configuration-recommendation-provider-id-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-role-arn :initarg
                         :recommendation-provider-role-arn :initform
                         (common-lisp:error
                          ":recommendation-provider-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-recommendation-provider-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-uri :initarg
                         :recommendation-provider-uri :initform
                         (common-lisp:error
                          ":recommendation-provider-uri is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-recommendation-provider-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-transformer-uri :initarg
                         :recommendation-transformer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-recommender-configuration-recommendation-transformer-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-display-name :initarg
                         :recommendations-display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-recommender-configuration-recommendations-display-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-per-message :initarg
                         :recommendations-per-message :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-recommendations-per-message
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recommender-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recommender-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recommender-configuration
                    'make-create-recommender-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-id-type))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderIdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-role-arn))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-transformer-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationTransformerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-display-name))
      (common-lisp:list
       (common-lisp:cons "RecommendationsDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-per-message))
      (common-lisp:list
       (common-lisp:cons "RecommendationsPerMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-recommender-configuration-request common-lisp:nil
                       ((create-recommender-configuration :initarg
                         :create-recommender-configuration :initform
                         (common-lisp:error
                          ":create-recommender-configuration is required")
                         :type
                         (common-lisp:or create-recommender-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-request-create-recommender-configuration
                         :shape "CreateRecommenderConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recommender-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recommender-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recommender-configuration-request
                    'make-create-recommender-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-recommender-configuration))
      (common-lisp:list
       (common-lisp:cons "CreateRecommenderConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-recommender-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-recommender-configuration-response
                       common-lisp:nil
                       ((recommender-configuration-response :initarg
                         :recommender-configuration-response :initform
                         (common-lisp:error
                          ":recommender-configuration-response is required")
                         :type
                         (common-lisp:or recommender-configuration-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recommender-configuration-response-recommender-configuration-response
                         :shape "RecommenderConfigurationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recommender-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recommender-configuration-response
                    'make-create-recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommender-configuration-response))
      (common-lisp:list
       (common-lisp:cons "RecommenderConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-recommender-configuration-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-segment-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-segment-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (write-segment-request :initarg :write-segment-request
                         :initform
                         (common-lisp:error
                          ":write-segment-request is required")
                         :type
                         (common-lisp:or write-segment-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-segment-request-write-segment-request
                         :shape "WriteSegmentRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-segment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-segment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-segment-request 'make-create-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-request))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-segment-response common-lisp:nil
                       ((segment-response :initarg :segment-response :initform
                         (common-lisp:error ":segment-response is required")
                         :type
                         (common-lisp:or segment-response common-lisp:null)
                         :accessor
                         struct-shape-create-segment-response-segment-response
                         :shape "SegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-segment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-segment-response 'make-create-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-segment-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-sms-template-request common-lisp:nil
                       ((smstemplate-request :initarg :smstemplate-request
                         :initform
                         (common-lisp:error ":smstemplate-request is required")
                         :type
                         (common-lisp:or smstemplate-request common-lisp:null)
                         :accessor
                         struct-shape-create-sms-template-request-smstemplate-request
                         :shape "SMSTemplateRequest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-sms-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sms-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sms-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sms-template-request
                    'make-create-sms-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smstemplate-request))
      (common-lisp:list
       (common-lisp:cons "SMSTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smstemplate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-sms-template-response common-lisp:nil
                       ((create-template-message-body :initarg
                         :create-template-message-body :initform
                         (common-lisp:error
                          ":create-template-message-body is required")
                         :type
                         (common-lisp:or create-template-message-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-sms-template-response-create-template-message-body
                         :shape "CreateTemplateMessageBody" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-sms-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-sms-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-sms-template-response
                    'make-create-sms-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-template-message-body))
      (common-lisp:list
       (common-lisp:cons "CreateTemplateMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-template-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-sms-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-template-message-body common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-template-message-body-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-template-message-body-message
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-template-message-body-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-template-message-body
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-template-message-body
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-template-message-body
                    'make-create-template-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-template-message-body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-template-message-body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-template-message-body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-voice-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-voice-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (voice-template-request :initarg
                         :voice-template-request :initform
                         (common-lisp:error
                          ":voice-template-request is required")
                         :type
                         (common-lisp:or voice-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-template-request-voice-template-request
                         :shape "VoiceTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-template-request
                    'make-create-voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-template-request))
      (common-lisp:list
       (common-lisp:cons "VoiceTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass create-voice-template-response common-lisp:nil
                       ((create-template-message-body :initarg
                         :create-template-message-body :initform
                         (common-lisp:error
                          ":create-template-message-body is required")
                         :type
                         (common-lisp:or create-template-message-body
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-voice-template-response-create-template-message-body
                         :shape "CreateTemplateMessageBody" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-voice-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-voice-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-voice-template-response
                    'make-create-voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'create-template-message-body))
      (common-lisp:list
       (common-lisp:cons "CreateTemplateMessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'create-template-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          create-voice-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass custom-delivery-configuration common-lisp:nil
                       ((delivery-uri :initarg :delivery-uri :initform
                         (common-lisp:error ":delivery-uri is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-delivery-configuration-delivery-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-types :initarg :endpoint-types :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-endpoint-types-element
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-delivery-configuration-endpoint-types
                         :shape "ListOf__EndpointTypesElement" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-delivery-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'custom-delivery-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-delivery-configuration
                    'make-custom-delivery-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-delivery-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-delivery-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-uri))
      (common-lisp:list
       (common-lisp:cons "DeliveryUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-types))
      (common-lisp:list
       (common-lisp:cons "EndpointTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-delivery-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass custom-message-activity common-lisp:nil
                       ((delivery-uri :initarg :delivery-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-message-activity-delivery-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-types :initarg :endpoint-types :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-endpoint-types-element
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-message-activity-endpoint-types
                         :shape "ListOf__EndpointTypesElement" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-config :initarg :message-config :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-custom-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-custom-message-activity-message-config
                         :shape "JourneyCustomMessage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-message-activity-next-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-message-activity-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-version :initarg :template-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-custom-message-activity-template-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-custom-message-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'custom-message-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'custom-message-activity 'make-custom-message-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          custom-message-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          custom-message-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-uri))
      (common-lisp:list
       (common-lisp:cons "DeliveryUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-types))
      (common-lisp:list
       (common-lisp:cons "EndpointTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-config))
      (common-lisp:list
       (common-lisp:cons "MessageConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-version))
      (common-lisp:list
       (common-lisp:cons "TemplateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          custom-message-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-button-configuration common-lisp:nil
                       ((background-color :initarg :background-color :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-button-configuration-background-color
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (border-radius :initarg :border-radius :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-default-button-configuration-border-radius
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (button-action :initarg :button-action :initform
                         (common-lisp:error ":button-action is required") :type
                         (common-lisp:or button-action common-lisp:null)
                         :accessor
                         struct-shape-default-button-configuration-button-action
                         :shape "ButtonAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (link :initarg :link :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-button-configuration-link :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text :initarg :text :initform
                         (common-lisp:error ":text is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-button-configuration-text :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text-color :initarg :text-color :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-button-configuration-text-color
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-button-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'default-button-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'default-button-configuration
                    'make-default-button-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-button-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-button-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-color))
      (common-lisp:list
       (common-lisp:cons "BackgroundColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'border-radius))
      (common-lisp:list
       (common-lisp:cons "BorderRadius"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'button-action))
      (common-lisp:list
       (common-lisp:cons "ButtonAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'link))
      (common-lisp:list
       (common-lisp:cons "Link"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-color))
      (common-lisp:list
       (common-lisp:cons "TextColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-button-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-message-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-default-message-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'default-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'default-message 'make-default-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input default-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input default-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input default-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-push-notification-message common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor
                         struct-shape-default-push-notification-message-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-message-body
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-default-push-notification-message-data
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-default-push-notification-message-silent-push
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-default-push-notification-message-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-message-title
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-message-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-push-notification-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'default-push-notification-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'default-push-notification-message
                    'make-default-push-notification-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass default-push-notification-template common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor
                         struct-shape-default-push-notification-template-action
                         :shape "Action" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-template-body
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-template-sound
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-template-title
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-default-push-notification-template-url
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-default-push-notification-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'default-push-notification-template
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'default-push-notification-template
                    'make-default-push-notification-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          default-push-notification-template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-adm-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-adm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-adm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-adm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-adm-channel-request
                    'make-delete-adm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-adm-channel-response common-lisp:nil
                       ((admchannel-response :initarg :admchannel-response
                         :initform
                         (common-lisp:error ":admchannel-response is required")
                         :type
                         (common-lisp:or admchannel-response common-lisp:null)
                         :accessor
                         struct-shape-delete-adm-channel-response-admchannel-response
                         :shape "ADMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-adm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-adm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-adm-channel-response
                    'make-delete-adm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admchannel-response))
      (common-lisp:list
       (common-lisp:cons "ADMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'admchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-adm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-apns-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-apns-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-request
                    'make-delete-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-apns-channel-response common-lisp:nil
                       ((apnschannel-response :initarg :apnschannel-response
                         :initform
                         (common-lisp:error
                          ":apnschannel-response is required")
                         :type
                         (common-lisp:or apnschannel-response common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-channel-response-apnschannel-response
                         :shape "APNSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-apns-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-channel-response
                    'make-delete-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-apns-sandbox-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-request
                    'make-delete-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-apns-sandbox-channel-response common-lisp:nil
                       ((apnssandbox-channel-response :initarg
                         :apnssandbox-channel-response :initform
                         (common-lisp:error
                          ":apnssandbox-channel-response is required")
                         :type
                         (common-lisp:or apnssandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-sandbox-channel-response-apnssandbox-channel-response
                         :shape "APNSSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-sandbox-channel-response
                    'make-delete-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-apns-voip-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-voip-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-voip-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-voip-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-voip-channel-request
                    'make-delete-apns-voip-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-apns-voip-channel-response common-lisp:nil
                       ((apnsvoip-channel-response :initarg
                         :apnsvoip-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-voip-channel-response-apnsvoip-channel-response
                         :shape "APNSVoipChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-voip-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-voip-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-voip-channel-response
                    'make-delete-apns-voip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-apns-voip-sandbox-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-voip-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-voip-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-voip-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-voip-sandbox-channel-request
                    'make-delete-apns-voip-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-apns-voip-sandbox-channel-response
                       common-lisp:nil
                       ((apnsvoip-sandbox-channel-response :initarg
                         :apnsvoip-sandbox-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-sandbox-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-sandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-apns-voip-sandbox-channel-response-apnsvoip-sandbox-channel-response
                         :shape "APNSVoipSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-apns-voip-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-apns-voip-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-apns-voip-sandbox-channel-response
                    'make-delete-apns-voip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-apns-voip-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-app-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-app-request-application-id :shape
                         "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-request 'make-delete-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-app-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-app-response common-lisp:nil
                       ((application-response :initarg :application-response
                         :initform
                         (common-lisp:error
                          ":application-response is required")
                         :type
                         (common-lisp:or application-response common-lisp:null)
                         :accessor
                         struct-shape-delete-app-response-application-response
                         :shape "ApplicationResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-app-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-app-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-app-response 'make-delete-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input delete-app-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-baidu-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-baidu-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-baidu-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-baidu-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-baidu-channel-request
                    'make-delete-baidu-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-baidu-channel-response common-lisp:nil
                       ((baidu-channel-response :initarg
                         :baidu-channel-response :initform
                         (common-lisp:error
                          ":baidu-channel-response is required")
                         :type
                         (common-lisp:or baidu-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-baidu-channel-response-baidu-channel-response
                         :shape "BaiduChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-baidu-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-baidu-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-baidu-channel-response
                    'make-delete-baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'baidu-channel-response))
      (common-lisp:list
       (common-lisp:cons "BaiduChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-baidu-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-campaign-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-campaign-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-campaign-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-request 'make-delete-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-campaign-response common-lisp:nil
                       ((campaign-response :initarg :campaign-response
                         :initform
                         (common-lisp:error ":campaign-response is required")
                         :type
                         (common-lisp:or campaign-response common-lisp:null)
                         :accessor
                         struct-shape-delete-campaign-response-campaign-response
                         :shape "CampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-campaign-response 'make-delete-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-campaign-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-email-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-email-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-email-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-request
                    'make-delete-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-email-channel-response common-lisp:nil
                       ((email-channel-response :initarg
                         :email-channel-response :initform
                         (common-lisp:error
                          ":email-channel-response is required")
                         :type
                         (common-lisp:or email-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-email-channel-response-email-channel-response
                         :shape "EmailChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-email-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-channel-response
                    'make-delete-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-email-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-email-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-email-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-email-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-template-request
                    'make-delete-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-email-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-delete-email-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-email-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-template-response
                    'make-delete-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-endpoint-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-endpoint-request-endpoint-id
                         :shape "__string" :location "uri" :location-name
                         "endpoint-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-request 'make-delete-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-endpoint-response common-lisp:nil
                       ((endpoint-response :initarg :endpoint-response
                         :initform
                         (common-lisp:error ":endpoint-response is required")
                         :type
                         (common-lisp:or endpoint-response common-lisp:null)
                         :accessor
                         struct-shape-delete-endpoint-response-endpoint-response
                         :shape "EndpointResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-endpoint-response 'make-delete-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-response))
      (common-lisp:list
       (common-lisp:cons "EndpointResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-endpoint-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-event-stream-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-event-stream-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-event-stream-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-event-stream-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-request
                    'make-delete-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-stream-response common-lisp:nil
                       ((event-stream :initarg :event-stream :initform
                         (common-lisp:error ":event-stream is required") :type
                         (common-lisp:or event-stream common-lisp:null)
                         :accessor
                         struct-shape-delete-event-stream-response-event-stream
                         :shape "EventStream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-event-stream-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-event-stream-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-event-stream-response
                    'make-delete-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-stream-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-gcm-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-gcm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-gcm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gcm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-request
                    'make-delete-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gcm-channel-response common-lisp:nil
                       ((gcmchannel-response :initarg :gcmchannel-response
                         :initform
                         (common-lisp:error ":gcmchannel-response is required")
                         :type
                         (common-lisp:or gcmchannel-response common-lisp:null)
                         :accessor
                         struct-shape-delete-gcm-channel-response-gcmchannel-response
                         :shape "GCMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-gcm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gcm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-gcm-channel-response
                    'make-delete-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-gcm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-in-app-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-in-app-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-in-app-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-in-app-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-in-app-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-in-app-template-request
                    'make-delete-in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-in-app-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-delete-in-app-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-in-app-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-in-app-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-in-app-template-response
                    'make-delete-in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-in-app-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-journey-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-journey-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-journey-request-journey-id :shape
                         "__string" :location "uri" :location-name
                         "journey-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-journey-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-journey-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-journey-request 'make-delete-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-journey-response common-lisp:nil
                       ((journey-response :initarg :journey-response :initform
                         (common-lisp:error ":journey-response is required")
                         :type
                         (common-lisp:or journey-response common-lisp:null)
                         :accessor
                         struct-shape-delete-journey-response-journey-response
                         :shape "JourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-journey-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-journey-response 'make-delete-journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-response))
      (common-lisp:list
       (common-lisp:cons "JourneyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-journey-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-push-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-push-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-push-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-push-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-push-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-push-template-request
                    'make-delete-push-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-push-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-delete-push-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-push-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-push-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-push-template-response
                    'make-delete-push-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-push-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-recommender-configuration-request common-lisp:nil
                       ((recommender-id :initarg :recommender-id :initform
                         (common-lisp:error ":recommender-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-recommender-configuration-request-recommender-id
                         :shape "__string" :location "uri" :location-name
                         "recommender-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recommender-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommender-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recommender-configuration-request
                    'make-delete-recommender-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recommender-configuration-response
                       common-lisp:nil
                       ((recommender-configuration-response :initarg
                         :recommender-configuration-response :initform
                         (common-lisp:error
                          ":recommender-configuration-response is required")
                         :type
                         (common-lisp:or recommender-configuration-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-recommender-configuration-response-recommender-configuration-response
                         :shape "RecommenderConfigurationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommender-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recommender-configuration-response
                    'make-delete-recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommender-configuration-response))
      (common-lisp:list
       (common-lisp:cons "RecommenderConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommender-configuration-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-segment-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-segment-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-segment-request-segment-id :shape
                         "__string" :location "uri" :location-name
                         "segment-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-segment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-segment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-segment-request 'make-delete-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-segment-response common-lisp:nil
                       ((segment-response :initarg :segment-response :initform
                         (common-lisp:error ":segment-response is required")
                         :type
                         (common-lisp:or segment-response common-lisp:null)
                         :accessor
                         struct-shape-delete-segment-response-segment-response
                         :shape "SegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-segment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-segment-response 'make-delete-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-segment-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-sms-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-sms-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sms-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sms-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-request
                    'make-delete-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sms-channel-response common-lisp:nil
                       ((smschannel-response :initarg :smschannel-response
                         :initform
                         (common-lisp:error ":smschannel-response is required")
                         :type
                         (common-lisp:or smschannel-response common-lisp:null)
                         :accessor
                         struct-shape-delete-sms-channel-response-smschannel-response
                         :shape "SMSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sms-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sms-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sms-channel-response
                    'make-delete-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-sms-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-sms-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-sms-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sms-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sms-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sms-template-request
                    'make-delete-sms-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-sms-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-delete-sms-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-sms-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-sms-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-sms-template-response
                    'make-delete-sms-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-sms-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-user-endpoints-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-user-endpoints-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-user-endpoints-request-user-id
                         :shape "__string" :location "uri" :location-name
                         "user-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-user-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-user-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-user-endpoints-request
                    'make-delete-user-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-user-endpoints-response common-lisp:nil
                       ((endpoints-response :initarg :endpoints-response
                         :initform
                         (common-lisp:error ":endpoints-response is required")
                         :type
                         (common-lisp:or endpoints-response common-lisp:null)
                         :accessor
                         struct-shape-delete-user-endpoints-response-endpoints-response
                         :shape "EndpointsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-user-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-user-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-user-endpoints-response
                    'make-delete-user-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints-response))
      (common-lisp:list
       (common-lisp:cons "EndpointsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-user-endpoints-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-voice-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-voice-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-channel-request
                    'make-delete-voice-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-channel-response common-lisp:nil
                       ((voice-channel-response :initarg
                         :voice-channel-response :initform
                         (common-lisp:error
                          ":voice-channel-response is required")
                         :type
                         (common-lisp:or voice-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-channel-response-voice-channel-response
                         :shape "VoiceChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-channel-response
                    'make-delete-voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-channel-response))
      (common-lisp:list
       (common-lisp:cons "VoiceChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass delete-voice-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-voice-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-template-request
                    'make-delete-voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-voice-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-delete-voice-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-voice-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-voice-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-voice-template-response
                    'make-delete-voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-voice-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype delivery-status () 'common-lisp:string)
(common-lisp:deftype dimension-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass direct-message-configuration common-lisp:nil
                       ((admmessage :initarg :admmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or admmessage common-lisp:null) :accessor
                         struct-shape-direct-message-configuration-admmessage
                         :shape "ADMMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (apnsmessage :initarg :apnsmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or apnsmessage common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-apnsmessage
                         :shape "APNSMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (baidu-message :initarg :baidu-message :initform
                         common-lisp:nil :type
                         (common-lisp:or baidu-message common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-baidu-message
                         :shape "BaiduMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-message :initarg :default-message :initform
                         common-lisp:nil :type
                         (common-lisp:or default-message common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-default-message
                         :shape "DefaultMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-push-notification-message :initarg
                         :default-push-notification-message :initform
                         common-lisp:nil :type
                         (common-lisp:or default-push-notification-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-default-push-notification-message
                         :shape "DefaultPushNotificationMessage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (email-message :initarg :email-message :initform
                         common-lisp:nil :type
                         (common-lisp:or email-message common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-email-message
                         :shape "EmailMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gcmmessage :initarg :gcmmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or gcmmessage common-lisp:null) :accessor
                         struct-shape-direct-message-configuration-gcmmessage
                         :shape "GCMMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smsmessage :initarg :smsmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or smsmessage common-lisp:null) :accessor
                         struct-shape-direct-message-configuration-smsmessage
                         :shape "SMSMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-message :initarg :voice-message :initform
                         common-lisp:nil :type
                         (common-lisp:or voice-message common-lisp:null)
                         :accessor
                         struct-shape-direct-message-configuration-voice-message
                         :shape "VoiceMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-direct-message-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'direct-message-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'direct-message-configuration
                    'make-direct-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admmessage))
      (common-lisp:list
       (common-lisp:cons "ADMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnsmessage))
      (common-lisp:list
       (common-lisp:cons "APNSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'baidu-message))
      (common-lisp:list
       (common-lisp:cons "BaiduMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-message))
      (common-lisp:list
       (common-lisp:cons "DefaultMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-push-notification-message))
      (common-lisp:list
       (common-lisp:cons "DefaultPushNotificationMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmmessage))
      (common-lisp:list
       (common-lisp:cons "GCMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smsmessage))
      (common-lisp:list
       (common-lisp:cons "SMSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-message))
      (common-lisp:list
       (common-lisp:cons "VoiceMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          direct-message-configuration))
   common-lisp:nil))
(common-lisp:deftype duration () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass email-channel-request common-lisp:nil
                       ((configuration-set :initarg :configuration-set
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-request-configuration-set
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-email-channel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-address :initarg :from-address :initform
                         (common-lisp:error ":from-address is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-request-from-address :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity :initarg :identity :initform
                         (common-lisp:error ":identity is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-request-identity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-channel-request-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-channel-request 'make-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-set))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity))
      (common-lisp:list
       (common-lisp:cons "Identity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-set :initarg :configuration-set
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-configuration-set
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-email-channel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-address :initarg :from-address :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-from-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-email-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity :initarg :identity :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-channel-response-identity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-email-channel-response-is-archived :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (messages-per-second :initarg :messages-per-second
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-email-channel-response-messages-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-channel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-channel-response-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-email-channel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-channel-response 'make-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-set))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity))
      (common-lisp:list
       (common-lisp:cons "Identity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages-per-second))
      (common-lisp:list
       (common-lisp:cons "MessagesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-message-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (feedback-forwarding-address :initarg
                         :feedback-forwarding-address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-email-message-feedback-forwarding-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-address :initarg :from-address :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-message-from-address :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-email :initarg :raw-email :initform
                         common-lisp:nil :type
                         (common-lisp:or raw-email common-lisp:null) :accessor
                         struct-shape-email-message-raw-email :shape "RawEmail"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (reply-to-addresses :initarg :reply-to-addresses
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-email-message-reply-to-addresses :shape
                         "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (simple-email :initarg :simple-email :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-email common-lisp:null)
                         :accessor struct-shape-email-message-simple-email
                         :shape "SimpleEmail" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-email-message-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'email-message 'make-email-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-address))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-email))
      (common-lisp:list
       (common-lisp:cons "RawEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reply-to-addresses))
      (common-lisp:list
       (common-lisp:cons "ReplyToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple-email))
      (common-lisp:list
       (common-lisp:cons "SimpleEmail"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-message-activity common-lisp:nil
                       ((message-config :initarg :message-config :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-email-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-email-message-activity-message-config
                         :shape "JourneyEmailMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-message-activity-next-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-message-activity-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-version :initarg :template-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-message-activity-template-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-message-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-message-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-message-activity 'make-email-message-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-message-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-message-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-config))
      (common-lisp:list
       (common-lisp:cons "MessageConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-version))
      (common-lisp:list
       (common-lisp:cons "TemplateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-message-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-template-request common-lisp:nil
                       ((default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-request-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (html-part :initarg :html-part :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-request-html-part :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-request-recommender-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-template-request-subject
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-email-template-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-request-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text-part :initarg :text-part :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-request-text-part :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-template-request 'make-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html-part))
      (common-lisp:list
       (common-lisp:cons "HtmlPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-part))
      (common-lisp:list
       (common-lisp:cons "TextPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass email-template-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (html-part :initarg :html-part :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-html-part :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-email-template-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-recommender-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-template-response-subject
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-email-template-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor
                         struct-shape-email-template-response-template-type
                         :shape "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text-part :initarg :text-part :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-email-template-response-text-part :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-email-template-response-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'email-template-response 'make-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html-part))
      (common-lisp:list
       (common-lisp:cons "HtmlPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-part))
      (common-lisp:list
       (common-lisp:cons "TextPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          email-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-batch-item common-lisp:nil
                       ((address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-attributes
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor
                         struct-shape-endpoint-batch-item-channel-type :shape
                         "ChannelType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (demographic :initarg :demographic :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-demographic common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-demographic
                         :shape "EndpointDemographic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (effective-date :initarg :effective-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-batch-item-effective-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-status :initarg :endpoint-status :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-batch-item-endpoint-status
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-batch-item-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-location common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-location
                         :shape "EndpointLocation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or map-of-double common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-metrics
                         :shape "MapOf__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (opt-out :initarg :opt-out :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-opt-out
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-batch-item-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or endpoint-user common-lisp:null)
                         :accessor struct-shape-endpoint-batch-item-user :shape
                         "EndpointUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-batch-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-batch-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-item 'make-endpoint-batch-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-batch-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-batch-request common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-endpoint-batch-item
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-batch-request-item
                         :shape "ListOfEndpointBatchItem" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-batch-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-batch-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-batch-request 'make-endpoint-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-batch-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-demographic common-lisp:nil
                       ((app-version :initarg :app-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-demographic-app-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (locale :initarg :locale :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-demographic-locale
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (make :initarg :make :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-demographic-make :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model :initarg :model :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-demographic-model :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model-version :initarg :model-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-demographic-model-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (platform :initarg :platform :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-demographic-platform
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform-version :initarg :platform-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-demographic-platform-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-demographic-timezone
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-demographic
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-demographic
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-demographic 'make-endpoint-demographic))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-version))
      (common-lisp:list
       (common-lisp:cons "AppVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'locale))
      (common-lisp:list
       (common-lisp:cons "Locale"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'make))
      (common-lisp:list
       (common-lisp:cons "Make"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model))
      (common-lisp:list
       (common-lisp:cons "Model"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform-version))
      (common-lisp:list
       (common-lisp:cons "PlatformVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-demographic))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-item-response common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-item-response-message
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-endpoint-item-response-status-code :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-item-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-item-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-item-response 'make-endpoint-item-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-item-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-item-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-item-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-location common-lisp:nil
                       ((city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-location-city :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-location-country
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latitude :initarg :latitude :initform common-lisp:nil
                         :type (common-lisp:or |__double| common-lisp:null)
                         :accessor struct-shape-endpoint-location-latitude
                         :shape "__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (longitude :initarg :longitude :initform
                         common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-endpoint-location-longitude :shape
                         "__double" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (postal-code :initarg :postal-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-location-postal-code :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (region :initarg :region :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-location-region :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-location 'make-endpoint-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latitude))
      (common-lisp:list
       (common-lisp:cons "Latitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'longitude))
      (common-lisp:list
       (common-lisp:cons "Longitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'postal-code))
      (common-lisp:list
       (common-lisp:cons "PostalCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'region))
      (common-lisp:list
       (common-lisp:cons "Region"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-message-result common-lisp:nil
                       ((address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-message-result-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delivery-status :initarg :delivery-status :initform
                         (common-lisp:error ":delivery-status is required")
                         :type
                         (common-lisp:or delivery-status common-lisp:null)
                         :accessor
                         struct-shape-endpoint-message-result-delivery-status
                         :shape "DeliveryStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-message-result-message-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":status-code is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-endpoint-message-result-status-code
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-message-result-status-message
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (updated-token :initarg :updated-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-message-result-updated-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-message-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-message-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-message-result 'make-endpoint-message-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-message-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-message-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-status))
      (common-lisp:list
       (common-lisp:cons "DeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-token))
      (common-lisp:list
       (common-lisp:cons "UpdatedToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-message-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-request common-lisp:nil
                       ((address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-request-address :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-request-attributes
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-endpoint-request-channel-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (demographic :initarg :demographic :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-demographic common-lisp:null)
                         :accessor struct-shape-endpoint-request-demographic
                         :shape "EndpointDemographic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (effective-date :initarg :effective-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-request-effective-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-status :initarg :endpoint-status :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-request-endpoint-status :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-location common-lisp:null)
                         :accessor struct-shape-endpoint-request-location
                         :shape "EndpointLocation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or map-of-double common-lisp:null)
                         :accessor struct-shape-endpoint-request-metrics :shape
                         "MapOf__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (opt-out :initarg :opt-out :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-request-opt-out :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-request-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or endpoint-user common-lisp:null)
                         :accessor struct-shape-endpoint-request-user :shape
                         "EndpointUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-request 'make-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-response common-lisp:nil
                       ((address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-response-address
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-response-attributes
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-endpoint-response-channel-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cohort-id :initarg :cohort-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-cohort-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (demographic :initarg :demographic :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-demographic common-lisp:null)
                         :accessor struct-shape-endpoint-response-demographic
                         :shape "EndpointDemographic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (effective-date :initarg :effective-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-effective-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-status :initarg :endpoint-status :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-endpoint-status :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-location common-lisp:null)
                         :accessor struct-shape-endpoint-response-location
                         :shape "EndpointLocation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or map-of-double common-lisp:null)
                         :accessor struct-shape-endpoint-response-metrics
                         :shape "MapOf__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (opt-out :initarg :opt-out :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-response-opt-out
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-response-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or endpoint-user common-lisp:null)
                         :accessor struct-shape-endpoint-response-user :shape
                         "EndpointUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-response 'make-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cohort-id))
      (common-lisp:list
       (common-lisp:cons "CohortId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-send-configuration common-lisp:nil
                       ((body-override :initarg :body-override :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-send-configuration-body-override
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-endpoint-send-configuration-context
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-send-configuration-raw-content
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-endpoint-send-configuration-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (title-override :initarg :title-override :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-endpoint-send-configuration-title-override
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-send-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-send-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-send-configuration
                    'make-endpoint-send-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-send-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-send-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body-override))
      (common-lisp:list
       (common-lisp:cons "BodyOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title-override))
      (common-lisp:list
       (common-lisp:cons "TitleOverride"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-send-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoint-user common-lisp:nil
                       ((user-attributes :initarg :user-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-user-user-attributes
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-endpoint-user-user-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-user
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-user
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'endpoint-user 'make-endpoint-user))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoint-user))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoint-user))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoint-user))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass endpoints-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-endpoint-response
                                         common-lisp:null)
                         :accessor struct-shape-endpoints-response-item :shape
                         "ListOfEndpointResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoints-response 'make-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event common-lisp:nil
                       ((app-package-name :initarg :app-package-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-app-package-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-title :initarg :app-title :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-app-title :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (app-version-code :initarg :app-version-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-app-version-code :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-event-attributes :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-sdk-version :initarg :client-sdk-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-client-sdk-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-type :initarg :event-type :initform
                         (common-lisp:error ":event-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-event-type :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or map-of-double common-lisp:null)
                         :accessor struct-shape-event-metrics :shape
                         "MapOf__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sdk-name :initarg :sdk-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-event-sdk-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (session :initarg :session :initform common-lisp:nil
                         :type (common-lisp:or session common-lisp:null)
                         :accessor struct-shape-event-session :shape "Session"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         (common-lisp:error ":timestamp is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-timestamp :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event 'make-event))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-package-name))
      (common-lisp:list
       (common-lisp:cons "AppPackageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-title))
      (common-lisp:list
       (common-lisp:cons "AppTitle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-version-code))
      (common-lisp:list
       (common-lisp:cons "AppVersionCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-sdk-version))
      (common-lisp:list
       (common-lisp:cons "ClientSdkVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "EventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sdk-name))
      (common-lisp:list
       (common-lisp:cons "SdkName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session))
      (common-lisp:list
       (common-lisp:cons "Session"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-condition common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or event-dimensions common-lisp:null)
                         :accessor struct-shape-event-condition-dimensions
                         :shape "EventDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-activity :initarg :message-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-condition-message-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-condition 'make-event-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-activity))
      (common-lisp:list
       (common-lisp:cons "MessageActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-dimensions common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-attribute-dimension
                                         common-lisp:null)
                         :accessor struct-shape-event-dimensions-attributes
                         :shape "MapOfAttributeDimension" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-type :initarg :event-type :initform
                         common-lisp:nil :type
                         (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-event-dimensions-event-type
                         :shape "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-metric-dimension
                                         common-lisp:null)
                         :accessor struct-shape-event-dimensions-metrics :shape
                         "MapOfMetricDimension" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-dimensions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-dimensions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-dimensions 'make-event-dimensions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-dimensions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-dimensions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-type))
      (common-lisp:list
       (common-lisp:cons "EventType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-dimensions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-filter common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         (common-lisp:error ":dimensions is required") :type
                         (common-lisp:or event-dimensions common-lisp:null)
                         :accessor struct-shape-event-filter-dimensions :shape
                         "EventDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-type :initarg :filter-type :initform
                         (common-lisp:error ":filter-type is required") :type
                         (common-lisp:or filter-type common-lisp:null)
                         :accessor struct-shape-event-filter-filter-type :shape
                         "FilterType" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-filter 'make-event-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-type))
      (common-lisp:list
       (common-lisp:cons "FilterType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-item-response common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-event-item-response-message
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-event-item-response-status-code
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-item-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-item-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-item-response 'make-event-item-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-item-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-item-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-item-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-start-condition common-lisp:nil
                       ((event-filter :initarg :event-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor
                         struct-shape-event-start-condition-event-filter :shape
                         "EventFilter" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-start-condition-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-start-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-start-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-start-condition 'make-event-start-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-start-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-start-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-start-condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-stream common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-event-stream-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-stream-arn :initarg
                         :destination-stream-arn :initform
                         (common-lisp:error
                          ":destination-stream-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-event-stream-destination-stream-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (external-id :initarg :external-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-stream-external-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-stream-last-modified-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-by :initarg :last-updated-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-stream-last-updated-by :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-event-stream-role-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-stream
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-stream
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-stream 'make-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-by))
      (common-lisp:list
       (common-lisp:cons "LastUpdatedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass events-batch common-lisp:nil
                       ((endpoint :initarg :endpoint :initform
                         (common-lisp:error ":endpoint is required") :type
                         (common-lisp:or public-endpoint common-lisp:null)
                         :accessor struct-shape-events-batch-endpoint :shape
                         "PublicEndpoint" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (events :initarg :events :initform
                         (common-lisp:error ":events is required") :type
                         (common-lisp:or map-of-event common-lisp:null)
                         :accessor struct-shape-events-batch-events :shape
                         "MapOfEvent" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-batch
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'events-batch
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'events-batch 'make-events-batch))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input events-batch))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input events-batch))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "Endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events))
      (common-lisp:list
       (common-lisp:cons "Events"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input events-batch))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass events-request common-lisp:nil
                       ((batch-item :initarg :batch-item :initform
                         (common-lisp:error ":batch-item is required") :type
                         (common-lisp:or map-of-events-batch common-lisp:null)
                         :accessor struct-shape-events-request-batch-item
                         :shape "MapOfEventsBatch" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'events-request 'make-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'batch-item))
      (common-lisp:list
       (common-lisp:cons "BatchItem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input events-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass events-response common-lisp:nil
                       ((results :initarg :results :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-item-response common-lisp:null)
                         :accessor struct-shape-events-response-results :shape
                         "MapOfItemResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'events-response 'make-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "Results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input events-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-job-request common-lisp:nil
                       ((role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-request-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url-prefix :initarg :s3url-prefix :initform
                         (common-lisp:error ":s3url-prefix is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-request-s3url-prefix :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-request-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-version :initarg :segment-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-request-segment-version :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-job-request 'make-export-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url-prefix))
      (common-lisp:list
       (common-lisp:cons "S3UrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-job-resource common-lisp:nil
                       ((role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-resource-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url-prefix :initarg :s3url-prefix :initform
                         (common-lisp:error ":s3url-prefix is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-resource-s3url-prefix :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-resource-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-version :initarg :segment-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-resource-segment-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-job-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-job-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-job-resource 'make-export-job-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-job-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-job-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url-prefix))
      (common-lisp:list
       (common-lisp:cons "S3UrlPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-job-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-job-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (completed-pieces :initarg :completed-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-completed-pieces
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (completion-date :initarg :completion-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-response-completion-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (definition :initarg :definition :initform
                         (common-lisp:error ":definition is required") :type
                         (common-lisp:or export-job-resource common-lisp:null)
                         :accessor struct-shape-export-job-response-definition
                         :shape "ExportJobResource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-pieces :initarg :failed-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-failed-pieces :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failures :initarg :failures :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-export-job-response-failures
                         :shape "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         (common-lisp:error ":job-status is required") :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-export-job-response-job-status :shape
                         "JobStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-failures :initarg :total-failures :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-total-failures :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-pieces :initarg :total-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-total-pieces :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-processed :initarg :total-processed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-export-job-response-total-processed
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-job-response-type :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-job-response 'make-export-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed-pieces))
      (common-lisp:list
       (common-lisp:cons "CompletedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-pieces))
      (common-lisp:list
       (common-lisp:cons "FailedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "Failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-failures))
      (common-lisp:list
       (common-lisp:cons "TotalFailures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-pieces))
      (common-lisp:list
       (common-lisp:cons "TotalPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-processed))
      (common-lisp:list
       (common-lisp:cons "TotalProcessed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-jobs-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-export-job-response
                                         common-lisp:null)
                         :accessor struct-shape-export-jobs-response-item
                         :shape "ListOfExportJobResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-export-jobs-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-jobs-response 'make-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-jobs-response))
   common-lisp:nil))
(common-lisp:deftype filter-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       forbidden-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message
                    'forbidden-exception-request-id)))
(common-lisp:deftype format () 'common-lisp:string)
(common-lisp:deftype frequency () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass gcmchannel-request common-lisp:nil
                       ((api-key :initarg :api-key :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-gcmchannel-request-api-key
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-request-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-gcmchannel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (service-json :initarg :service-json :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-request-service-json :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gcmchannel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gcmchannel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-request 'make-gcmchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key))
      (common-lisp:list
       (common-lisp:cons "ApiKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-json))
      (common-lisp:list
       (common-lisp:cons "ServiceJson"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmchannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gcmchannel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (credential :initarg :credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-credential :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-authentication-method :initarg
                         :default-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-default-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-gcmchannel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-gcmchannel-response-has-credential :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (has-fcm-service-credentials :initarg
                         :has-fcm-service-credentials :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-gcmchannel-response-has-fcm-service-credentials
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-gcmchannel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmchannel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-gcmchannel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gcmchannel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gcmchannel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gcmchannel-response 'make-gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credential))
      (common-lisp:list
       (common-lisp:cons "Credential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-authentication-method))
      (common-lisp:list
       (common-lisp:cons "DefaultAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'has-fcm-service-credentials))
      (common-lisp:list
       (common-lisp:cons "HasFcmServiceCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmchannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gcmmessage common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-gcmmessage-action :shape
                         "Action" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (collapse-key :initarg :collapse-key :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-collapse-key :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-gcmmessage-data :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (icon-reference :initarg :icon-reference :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-icon-reference :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-icon-url :initarg :image-icon-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-image-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (preferred-authentication-method :initarg
                         :preferred-authentication-method :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-preferred-authentication-method
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-gcmmessage-priority :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-raw-content :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (restricted-package-name :initarg
                         :restricted-package-name :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-gcmmessage-restricted-package-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-gcmmessage-silent-push :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (small-image-icon-url :initarg :small-image-icon-url
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-small-image-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sound :initarg :sound :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-sound :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-gcmmessage-substitutions :shape
                         "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (time-to-live :initarg :time-to-live :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-gcmmessage-time-to-live :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-title :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-gcmmessage-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gcmmessage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gcmmessage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gcmmessage 'make-gcmmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gcmmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gcmmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'collapse-key))
      (common-lisp:list
       (common-lisp:cons "CollapseKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'icon-reference))
      (common-lisp:list
       (common-lisp:cons "IconReference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preferred-authentication-method))
      (common-lisp:list
       (common-lisp:cons "PreferredAuthenticationMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'restricted-package-name))
      (common-lisp:list
       (common-lisp:cons "RestrictedPackageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'small-image-icon-url))
      (common-lisp:list
       (common-lisp:cons "SmallImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sound))
      (common-lisp:list
       (common-lisp:cons "Sound"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-to-live))
      (common-lisp:list
       (common-lisp:cons "TimeToLive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gcmmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gpscoordinates common-lisp:nil
                       ((latitude :initarg :latitude :initform
                         (common-lisp:error ":latitude is required") :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-gpscoordinates-latitude :shape "__double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (longitude :initarg :longitude :initform
                         (common-lisp:error ":longitude is required") :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-gpscoordinates-longitude :shape
                         "__double" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gpscoordinates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gpscoordinates
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gpscoordinates 'make-gpscoordinates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gpscoordinates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gpscoordinates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latitude))
      (common-lisp:list
       (common-lisp:cons "Latitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'longitude))
      (common-lisp:list
       (common-lisp:cons "Longitude"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gpscoordinates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gpspoint-dimension common-lisp:nil
                       ((coordinates :initarg :coordinates :initform
                         (common-lisp:error ":coordinates is required") :type
                         (common-lisp:or gpscoordinates common-lisp:null)
                         :accessor struct-shape-gpspoint-dimension-coordinates
                         :shape "GPSCoordinates" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (range-in-kilometers :initarg :range-in-kilometers
                         :initform common-lisp:nil :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-gpspoint-dimension-range-in-kilometers
                         :shape "__double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gpspoint-dimension
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gpspoint-dimension
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gpspoint-dimension 'make-gpspoint-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gpspoint-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gpspoint-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'coordinates))
      (common-lisp:list
       (common-lisp:cons "Coordinates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'range-in-kilometers))
      (common-lisp:list
       (common-lisp:cons "RangeInKilometers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gpspoint-dimension))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-adm-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-adm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-adm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-adm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-adm-channel-request 'make-get-adm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-adm-channel-response common-lisp:nil
                       ((admchannel-response :initarg :admchannel-response
                         :initform
                         (common-lisp:error ":admchannel-response is required")
                         :type
                         (common-lisp:or admchannel-response common-lisp:null)
                         :accessor
                         struct-shape-get-adm-channel-response-admchannel-response
                         :shape "ADMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-adm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-adm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-adm-channel-response 'make-get-adm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admchannel-response))
      (common-lisp:list
       (common-lisp:cons "ADMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'admchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-adm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-apns-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-apns-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apns-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-request 'make-get-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apns-channel-response common-lisp:nil
                       ((apnschannel-response :initarg :apnschannel-response
                         :initform
                         (common-lisp:error
                          ":apnschannel-response is required")
                         :type
                         (common-lisp:or apnschannel-response common-lisp:null)
                         :accessor
                         struct-shape-get-apns-channel-response-apnschannel-response
                         :shape "APNSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apns-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-channel-response
                    'make-get-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-apns-sandbox-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-apns-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-request
                    'make-get-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apns-sandbox-channel-response common-lisp:nil
                       ((apnssandbox-channel-response :initarg
                         :apnssandbox-channel-response :initform
                         (common-lisp:error
                          ":apnssandbox-channel-response is required")
                         :type
                         (common-lisp:or apnssandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-apns-sandbox-channel-response-apnssandbox-channel-response
                         :shape "APNSSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-sandbox-channel-response
                    'make-get-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-apns-voip-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-apns-voip-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-voip-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-voip-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-voip-channel-request
                    'make-get-apns-voip-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apns-voip-channel-response common-lisp:nil
                       ((apnsvoip-channel-response :initarg
                         :apnsvoip-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-apns-voip-channel-response-apnsvoip-channel-response
                         :shape "APNSVoipChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-voip-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-voip-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-voip-channel-response
                    'make-get-apns-voip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-apns-voip-sandbox-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-apns-voip-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-voip-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-voip-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-voip-sandbox-channel-request
                    'make-get-apns-voip-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apns-voip-sandbox-channel-response common-lisp:nil
                       ((apnsvoip-sandbox-channel-response :initarg
                         :apnsvoip-sandbox-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-sandbox-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-sandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-apns-voip-sandbox-channel-response-apnsvoip-sandbox-channel-response
                         :shape "APNSVoipSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apns-voip-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-apns-voip-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apns-voip-sandbox-channel-response
                    'make-get-apns-voip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-apns-voip-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-app-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-get-app-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-app-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-app-request 'make-get-app-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-app-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-app-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-app-response common-lisp:nil
                       ((application-response :initarg :application-response
                         :initform
                         (common-lisp:error
                          ":application-response is required")
                         :type
                         (common-lisp:or application-response common-lisp:null)
                         :accessor
                         struct-shape-get-app-response-application-response
                         :shape "ApplicationResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-app-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-app-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-app-response 'make-get-app-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input get-app-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-application-date-range-kpi-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-application-date-range-kpi-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-application-date-range-kpi-request-end-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "end-time")
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-application-date-range-kpi-request-kpi-name
                         :shape "__string" :location "uri" :location-name
                         "kpi-name")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-application-date-range-kpi-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-application-date-range-kpi-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-application-date-range-kpi-request-start-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "start-time"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-date-range-kpi-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-date-range-kpi-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-date-range-kpi-request
                    'make-get-application-date-range-kpi-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-date-range-kpi-response common-lisp:nil
                       ((application-date-range-kpi-response :initarg
                         :application-date-range-kpi-response :initform
                         (common-lisp:error
                          ":application-date-range-kpi-response is required")
                         :type
                         (common-lisp:or application-date-range-kpi-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-date-range-kpi-response-application-date-range-kpi-response
                         :shape "ApplicationDateRangeKpiResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-date-range-kpi-response
                    'make-get-application-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-date-range-kpi-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationDateRangeKpiResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-application-date-range-kpi-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-application-settings-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-application-settings-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-request
                    'make-get-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-settings-response common-lisp:nil
                       ((application-settings-resource :initarg
                         :application-settings-resource :initform
                         (common-lisp:error
                          ":application-settings-resource is required")
                         :type
                         (common-lisp:or application-settings-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-settings-response-application-settings-resource
                         :shape "ApplicationSettingsResource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-application-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-settings-response
                    'make-get-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-settings-resource))
      (common-lisp:list
       (common-lisp:cons "ApplicationSettingsResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-settings-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-application-settings-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-apps-request common-lisp:nil
                       ((page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-apps-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-apps-request-token :shape "__string"
                         :location "querystring" :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apps-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apps-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apps-request 'make-get-apps-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apps-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apps-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apps-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-apps-response common-lisp:nil
                       ((applications-response :initarg :applications-response
                         :initform
                         (common-lisp:error
                          ":applications-response is required")
                         :type
                         (common-lisp:or applications-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-apps-response-applications-response
                         :shape "ApplicationsResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-apps-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-apps-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-apps-response 'make-get-apps-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'applications-response))
      (common-lisp:list
       (common-lisp:cons "ApplicationsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input get-apps-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-baidu-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-baidu-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-baidu-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-baidu-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-baidu-channel-request
                    'make-get-baidu-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-baidu-channel-response common-lisp:nil
                       ((baidu-channel-response :initarg
                         :baidu-channel-response :initform
                         (common-lisp:error
                          ":baidu-channel-response is required")
                         :type
                         (common-lisp:or baidu-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-baidu-channel-response-baidu-channel-response
                         :shape "BaiduChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-baidu-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-baidu-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-baidu-channel-response
                    'make-get-baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'baidu-channel-response))
      (common-lisp:list
       (common-lisp:cons "BaiduChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-baidu-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaign-activities-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-activities-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-activities-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-activities-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-activities-request-token
                         :shape "__string" :location "querystring"
                         :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-activities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-activities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-request
                    'make-get-campaign-activities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaign-activities-response common-lisp:nil
                       ((activities-response :initarg :activities-response
                         :initform
                         (common-lisp:error ":activities-response is required")
                         :type
                         (common-lisp:or activities-response common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-activities-response-activities-response
                         :shape "ActivitiesResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-activities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-activities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-activities-response
                    'make-get-campaign-activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activities-response))
      (common-lisp:list
       (common-lisp:cons "ActivitiesResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'activities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-activities-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaign-date-range-kpi-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-date-range-kpi-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-date-range-kpi-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-date-range-kpi-request-end-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "end-time")
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-date-range-kpi-request-kpi-name
                         :shape "__string" :location "uri" :location-name
                         "kpi-name")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-date-range-kpi-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-date-range-kpi-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-date-range-kpi-request-start-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "start-time"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-date-range-kpi-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-date-range-kpi-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-date-range-kpi-request
                    'make-get-campaign-date-range-kpi-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaign-date-range-kpi-response common-lisp:nil
                       ((campaign-date-range-kpi-response :initarg
                         :campaign-date-range-kpi-response :initform
                         (common-lisp:error
                          ":campaign-date-range-kpi-response is required")
                         :type
                         (common-lisp:or campaign-date-range-kpi-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-date-range-kpi-response-campaign-date-range-kpi-response
                         :shape "CampaignDateRangeKpiResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-date-range-kpi-response
                    'make-get-campaign-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'campaign-date-range-kpi-response))
      (common-lisp:list
       (common-lisp:cons "CampaignDateRangeKpiResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'campaign-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-date-range-kpi-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaign-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-request-campaign-id :shape
                         "__string" :location "uri" :location-name
                         "campaign-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-request 'make-get-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaign-response common-lisp:nil
                       ((campaign-response :initarg :campaign-response
                         :initform
                         (common-lisp:error ":campaign-response is required")
                         :type
                         (common-lisp:or campaign-response common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-response-campaign-response
                         :shape "CampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-response 'make-get-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaign-version-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-version-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-version-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id")
                        (version :initarg :version :initform
                         (common-lisp:error ":version is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-version-request-version
                         :shape "__string" :location "uri" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-campaign-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-request
                    'make-get-campaign-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaign-version-response common-lisp:nil
                       ((campaign-response :initarg :campaign-response
                         :initform
                         (common-lisp:error ":campaign-response is required")
                         :type
                         (common-lisp:or campaign-response common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-version-response-campaign-response
                         :shape "CampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-version-response
                    'make-get-campaign-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-version-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaign-versions-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-versions-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-versions-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-versions-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaign-versions-request-token
                         :shape "__string" :location "querystring"
                         :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-request
                    'make-get-campaign-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaign-versions-response common-lisp:nil
                       ((campaigns-response :initarg :campaigns-response
                         :initform
                         (common-lisp:error ":campaigns-response is required")
                         :type
                         (common-lisp:or campaigns-response common-lisp:null)
                         :accessor
                         struct-shape-get-campaign-versions-response-campaigns-response
                         :shape "CampaignsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaign-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-campaign-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaign-versions-response
                    'make-get-campaign-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaigns-response))
      (common-lisp:list
       (common-lisp:cons "CampaignsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaign-versions-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-campaigns-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-campaigns-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaigns-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-campaigns-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaigns-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-campaigns-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-request 'make-get-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-campaigns-response common-lisp:nil
                       ((campaigns-response :initarg :campaigns-response
                         :initform
                         (common-lisp:error ":campaigns-response is required")
                         :type
                         (common-lisp:or campaigns-response common-lisp:null)
                         :accessor
                         struct-shape-get-campaigns-response-campaigns-response
                         :shape "CampaignsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-campaigns-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-campaigns-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-campaigns-response 'make-get-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaigns-response))
      (common-lisp:list
       (common-lisp:cons "CampaignsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-campaigns-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-channels-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-channels-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channels-request 'make-get-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-channels-response common-lisp:nil
                       ((channels-response :initarg :channels-response
                         :initform
                         (common-lisp:error ":channels-response is required")
                         :type
                         (common-lisp:or channels-response common-lisp:null)
                         :accessor
                         struct-shape-get-channels-response-channels-response
                         :shape "ChannelsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-channels-response 'make-get-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels-response))
      (common-lisp:list
       (common-lisp:cons "ChannelsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-channels-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-channels-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-email-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-email-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-request
                    'make-get-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-email-channel-response common-lisp:nil
                       ((email-channel-response :initarg
                         :email-channel-response :initform
                         (common-lisp:error
                          ":email-channel-response is required")
                         :type
                         (common-lisp:or email-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-email-channel-response-email-channel-response
                         :shape "EmailChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-channel-response
                    'make-get-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-email-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-email-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-email-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-email-template-request-version :shape
                         "__string" :location "querystring" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-template-request
                    'make-get-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-email-template-response common-lisp:nil
                       ((email-template-response :initarg
                         :email-template-response :initform
                         (common-lisp:error
                          ":email-template-response is required")
                         :type
                         (common-lisp:or email-template-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-email-template-response-email-template-response
                         :shape "EmailTemplateResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-template-response
                    'make-get-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-template-response))
      (common-lisp:list
       (common-lisp:cons "EmailTemplateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-email-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-endpoint-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-endpoint-request-endpoint-id :shape
                         "__string" :location "uri" :location-name
                         "endpoint-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-request 'make-get-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-endpoint-response common-lisp:nil
                       ((endpoint-response :initarg :endpoint-response
                         :initform
                         (common-lisp:error ":endpoint-response is required")
                         :type
                         (common-lisp:or endpoint-response common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-response-endpoint-response
                         :shape "EndpointResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-response 'make-get-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-response))
      (common-lisp:list
       (common-lisp:cons "EndpointResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-event-stream-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-event-stream-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-event-stream-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-event-stream-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-request 'make-get-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-event-stream-response common-lisp:nil
                       ((event-stream :initarg :event-stream :initform
                         (common-lisp:error ":event-stream is required") :type
                         (common-lisp:or event-stream common-lisp:null)
                         :accessor
                         struct-shape-get-event-stream-response-event-stream
                         :shape "EventStream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-event-stream-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-event-stream-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-event-stream-response
                    'make-get-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-event-stream-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-export-job-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-export-job-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-export-job-request-job-id :shape
                         "__string" :location "uri" :location-name "job-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-export-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-export-job-request 'make-get-export-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-export-job-response common-lisp:nil
                       ((export-job-response :initarg :export-job-response
                         :initform
                         (common-lisp:error ":export-job-response is required")
                         :type
                         (common-lisp:or export-job-response common-lisp:null)
                         :accessor
                         struct-shape-get-export-job-response-export-job-response
                         :shape "ExportJobResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-export-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-export-job-response 'make-get-export-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'export-job-response))
      (common-lisp:list
       (common-lisp:cons "ExportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'export-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-export-job-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-export-jobs-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-export-jobs-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-export-jobs-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-export-jobs-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-export-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-export-jobs-request 'make-get-export-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-export-jobs-response common-lisp:nil
                       ((export-jobs-response :initarg :export-jobs-response
                         :initform
                         (common-lisp:error
                          ":export-jobs-response is required")
                         :type
                         (common-lisp:or export-jobs-response common-lisp:null)
                         :accessor
                         struct-shape-get-export-jobs-response-export-jobs-response
                         :shape "ExportJobsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-export-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-export-jobs-response 'make-get-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ExportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-export-jobs-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-gcm-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-gcm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-gcm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-gcm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-request 'make-get-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gcm-channel-response common-lisp:nil
                       ((gcmchannel-response :initarg :gcmchannel-response
                         :initform
                         (common-lisp:error ":gcmchannel-response is required")
                         :type
                         (common-lisp:or gcmchannel-response common-lisp:null)
                         :accessor
                         struct-shape-get-gcm-channel-response-gcmchannel-response
                         :shape "GCMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-gcm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-gcm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-gcm-channel-response 'make-get-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-gcm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-import-job-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-import-job-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (job-id :initarg :job-id :initform
                         (common-lisp:error ":job-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-import-job-request-job-id :shape
                         "__string" :location "uri" :location-name "job-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-import-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-import-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-import-job-request 'make-get-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-import-job-response common-lisp:nil
                       ((import-job-response :initarg :import-job-response
                         :initform
                         (common-lisp:error ":import-job-response is required")
                         :type
                         (common-lisp:or import-job-response common-lisp:null)
                         :accessor
                         struct-shape-get-import-job-response-import-job-response
                         :shape "ImportJobResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-import-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-import-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-import-job-response 'make-get-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-job-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-import-job-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-import-jobs-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-import-jobs-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-import-jobs-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-import-jobs-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-import-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-import-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-request 'make-get-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-import-jobs-response common-lisp:nil
                       ((import-jobs-response :initarg :import-jobs-response
                         :initform
                         (common-lisp:error
                          ":import-jobs-response is required")
                         :type
                         (common-lisp:or import-jobs-response common-lisp:null)
                         :accessor
                         struct-shape-get-import-jobs-response-import-jobs-response
                         :shape "ImportJobsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-import-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-import-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-import-jobs-response 'make-get-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-import-jobs-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-in-app-messages-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-in-app-messages-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-in-app-messages-request-endpoint-id
                         :shape "__string" :location "uri" :location-name
                         "endpoint-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-in-app-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-in-app-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-in-app-messages-request
                    'make-get-in-app-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-in-app-messages-response common-lisp:nil
                       ((in-app-messages-response :initarg
                         :in-app-messages-response :initform
                         (common-lisp:error
                          ":in-app-messages-response is required")
                         :type
                         (common-lisp:or in-app-messages-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-in-app-messages-response-in-app-messages-response
                         :shape "InAppMessagesResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-in-app-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-in-app-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-in-app-messages-response
                    'make-get-in-app-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-app-messages-response))
      (common-lisp:list
       (common-lisp:cons "InAppMessagesResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'in-app-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-messages-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-in-app-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-in-app-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-in-app-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-in-app-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-in-app-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-in-app-template-request
                    'make-get-in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-in-app-template-response common-lisp:nil
                       ((in-app-template-response :initarg
                         :in-app-template-response :initform
                         (common-lisp:error
                          ":in-app-template-response is required")
                         :type
                         (common-lisp:or in-app-template-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-in-app-template-response-in-app-template-response
                         :shape "InAppTemplateResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-in-app-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-in-app-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-in-app-template-response
                    'make-get-in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-app-template-response))
      (common-lisp:list
       (common-lisp:cons "InAppTemplateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-in-app-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-date-range-kpi-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-date-range-kpi-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-date-range-kpi-request-end-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "end-time")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-date-range-kpi-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-date-range-kpi-request-kpi-name
                         :shape "__string" :location "uri" :location-name
                         "kpi-name")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-date-range-kpi-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-date-range-kpi-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-date-range-kpi-request-start-time
                         :shape "__timestampIso8601" :location "querystring"
                         :location-name "start-time"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-date-range-kpi-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-date-range-kpi-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-date-range-kpi-request
                    'make-get-journey-date-range-kpi-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-date-range-kpi-response common-lisp:nil
                       ((journey-date-range-kpi-response :initarg
                         :journey-date-range-kpi-response :initform
                         (common-lisp:error
                          ":journey-date-range-kpi-response is required")
                         :type
                         (common-lisp:or journey-date-range-kpi-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-journey-date-range-kpi-response-journey-date-range-kpi-response
                         :shape "JourneyDateRangeKpiResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-date-range-kpi-response
                    'make-get-journey-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-date-range-kpi-response))
      (common-lisp:list
       (common-lisp:cons "JourneyDateRangeKpiResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-date-range-kpi-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-execution-activity-metrics-request
                       common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-execution-activity-metrics-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-activity-id :initarg :journey-activity-id
                         :initform
                         (common-lisp:error ":journey-activity-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-execution-activity-metrics-request-journey-activity-id
                         :shape "__string" :location "uri" :location-name
                         "journey-activity-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-activity-metrics-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-activity-metrics-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-activity-metrics-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-execution-activity-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-execution-activity-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-execution-activity-metrics-request
                    'make-get-journey-execution-activity-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-execution-activity-metrics-response
                       common-lisp:nil
                       ((journey-execution-activity-metrics-response :initarg
                         :journey-execution-activity-metrics-response :initform
                         (common-lisp:error
                          ":journey-execution-activity-metrics-response is required")
                         :type
                         (common-lisp:or
                          journey-execution-activity-metrics-response
                          common-lisp:null)
                         :accessor
                         struct-shape-get-journey-execution-activity-metrics-response-journey-execution-activity-metrics-response
                         :shape "JourneyExecutionActivityMetricsResponse"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-execution-activity-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-execution-activity-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-execution-activity-metrics-response
                    'make-get-journey-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-execution-activity-metrics-response))
      (common-lisp:list
       (common-lisp:cons "JourneyExecutionActivityMetricsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-activity-metrics-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-execution-metrics-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-execution-metrics-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-metrics-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-metrics-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-execution-metrics-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-execution-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-execution-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-execution-metrics-request
                    'make-get-journey-execution-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-execution-metrics-response common-lisp:nil
                       ((journey-execution-metrics-response :initarg
                         :journey-execution-metrics-response :initform
                         (common-lisp:error
                          ":journey-execution-metrics-response is required")
                         :type
                         (common-lisp:or journey-execution-metrics-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-journey-execution-metrics-response-journey-execution-metrics-response
                         :shape "JourneyExecutionMetricsResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-execution-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-execution-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-execution-metrics-response
                    'make-get-journey-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-execution-metrics-response))
      (common-lisp:list
       (common-lisp:cons "JourneyExecutionMetricsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-execution-metrics-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-request-application-id :shape
                         "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-request-journey-id :shape
                         "__string" :location "uri" :location-name
                         "journey-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-journey-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-request 'make-get-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-journey-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-response common-lisp:nil
                       ((journey-response :initarg :journey-response :initform
                         (common-lisp:error ":journey-response is required")
                         :type
                         (common-lisp:or journey-response common-lisp:null)
                         :accessor
                         struct-shape-get-journey-response-journey-response
                         :shape "JourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-journey-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-response 'make-get-journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-journey-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-journey-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-response))
      (common-lisp:list
       (common-lisp:cons "JourneyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-journey-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input get-journey-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-run-execution-activity-metrics-request
                       common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-activity-id :initarg :journey-activity-id
                         :initform
                         (common-lisp:error ":journey-activity-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-journey-activity-id
                         :shape "__string" :location "uri" :location-name
                         "journey-activity-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (run-id :initarg :run-id :initform
                         (common-lisp:error ":run-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-request-run-id
                         :shape "__string" :location "uri" :location-name
                         "run-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-run-execution-activity-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-run-execution-activity-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-run-execution-activity-metrics-request
                    'make-get-journey-run-execution-activity-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-run-execution-activity-metrics-response
                       common-lisp:nil
                       ((journey-run-execution-activity-metrics-response
                         :initarg
                         :journey-run-execution-activity-metrics-response
                         :initform
                         (common-lisp:error
                          ":journey-run-execution-activity-metrics-response is required")
                         :type
                         (common-lisp:or
                          journey-run-execution-activity-metrics-response
                          common-lisp:null)
                         :accessor
                         struct-shape-get-journey-run-execution-activity-metrics-response-journey-run-execution-activity-metrics-response
                         :shape "JourneyRunExecutionActivityMetricsResponse"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-run-execution-activity-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-run-execution-activity-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-run-execution-activity-metrics-response
                    'make-get-journey-run-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-run-execution-activity-metrics-response))
      (common-lisp:list
       (common-lisp:cons "JourneyRunExecutionActivityMetricsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-run-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-activity-metrics-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-run-execution-metrics-request
                       common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-run-execution-metrics-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-metrics-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-metrics-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-metrics-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (run-id :initarg :run-id :initform
                         (common-lisp:error ":run-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-run-execution-metrics-request-run-id
                         :shape "__string" :location "uri" :location-name
                         "run-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-run-execution-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-run-execution-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-run-execution-metrics-request
                    'make-get-journey-run-execution-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-run-execution-metrics-response
                       common-lisp:nil
                       ((journey-run-execution-metrics-response :initarg
                         :journey-run-execution-metrics-response :initform
                         (common-lisp:error
                          ":journey-run-execution-metrics-response is required")
                         :type
                         (common-lisp:or journey-run-execution-metrics-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-journey-run-execution-metrics-response-journey-run-execution-metrics-response
                         :shape "JourneyRunExecutionMetricsResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-run-execution-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-journey-run-execution-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-run-execution-metrics-response
                    'make-get-journey-run-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-run-execution-metrics-response))
      (common-lisp:list
       (common-lisp:cons "JourneyRunExecutionMetricsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-run-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-run-execution-metrics-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-journey-runs-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-journey-runs-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-runs-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-runs-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-journey-runs-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-runs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-journey-runs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-runs-request 'make-get-journey-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-journey-runs-response common-lisp:nil
                       ((journey-runs-response :initarg :journey-runs-response
                         :initform
                         (common-lisp:error
                          ":journey-runs-response is required")
                         :type
                         (common-lisp:or journey-runs-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-journey-runs-response-journey-runs-response
                         :shape "JourneyRunsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-journey-runs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-journey-runs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-journey-runs-response
                    'make-get-journey-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-runs-response))
      (common-lisp:list
       (common-lisp:cons "JourneyRunsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-journey-runs-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-push-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-push-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-push-template-request-version :shape
                         "__string" :location "querystring" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-push-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-push-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-push-template-request
                    'make-get-push-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-push-template-response common-lisp:nil
                       ((push-notification-template-response :initarg
                         :push-notification-template-response :initform
                         (common-lisp:error
                          ":push-notification-template-response is required")
                         :type
                         (common-lisp:or push-notification-template-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-push-template-response-push-notification-template-response
                         :shape "PushNotificationTemplateResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-push-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-push-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-push-template-response
                    'make-get-push-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'push-notification-template-response))
      (common-lisp:list
       (common-lisp:cons "PushNotificationTemplateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'push-notification-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-push-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-recommender-configuration-request common-lisp:nil
                       ((recommender-id :initarg :recommender-id :initform
                         (common-lisp:error ":recommender-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-recommender-configuration-request-recommender-id
                         :shape "__string" :location "uri" :location-name
                         "recommender-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommender-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommender-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommender-configuration-request
                    'make-get-recommender-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommender-configuration-response common-lisp:nil
                       ((recommender-configuration-response :initarg
                         :recommender-configuration-response :initform
                         (common-lisp:error
                          ":recommender-configuration-response is required")
                         :type
                         (common-lisp:or recommender-configuration-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recommender-configuration-response-recommender-configuration-response
                         :shape "RecommenderConfigurationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommender-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommender-configuration-response
                    'make-get-recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommender-configuration-response))
      (common-lisp:list
       (common-lisp:cons "RecommenderConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configuration-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-recommender-configurations-request common-lisp:nil
                       ((page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-recommender-configurations-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-recommender-configurations-request-token
                         :shape "__string" :location "querystring"
                         :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommender-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommender-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommender-configurations-request
                    'make-get-recommender-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommender-configurations-response common-lisp:nil
                       ((list-recommender-configurations-response :initarg
                         :list-recommender-configurations-response :initform
                         (common-lisp:error
                          ":list-recommender-configurations-response is required")
                         :type
                         (common-lisp:or
                          list-recommender-configurations-response
                          common-lisp:null)
                         :accessor
                         struct-shape-get-recommender-configurations-response-list-recommender-configurations-response
                         :shape "ListRecommenderConfigurationsResponse"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommender-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommender-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommender-configurations-response
                    'make-get-recommender-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'list-recommender-configurations-response))
      (common-lisp:list
       (common-lisp:cons "ListRecommenderConfigurationsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'list-recommender-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-recommender-configurations-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segment-export-jobs-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segment-export-jobs-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-export-jobs-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-export-jobs-request-segment-id
                         :shape "__string" :location "uri" :location-name
                         "segment-id")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-export-jobs-request-token
                         :shape "__string" :location "querystring"
                         :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-export-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-segment-export-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-export-jobs-request
                    'make-get-segment-export-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segment-export-jobs-response common-lisp:nil
                       ((export-jobs-response :initarg :export-jobs-response
                         :initform
                         (common-lisp:error
                          ":export-jobs-response is required")
                         :type
                         (common-lisp:or export-jobs-response common-lisp:null)
                         :accessor
                         struct-shape-get-segment-export-jobs-response-export-jobs-response
                         :shape "ExportJobsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-export-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-segment-export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-export-jobs-response
                    'make-get-segment-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'export-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ExportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-export-jobs-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segment-import-jobs-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segment-import-jobs-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-import-jobs-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-import-jobs-request-segment-id
                         :shape "__string" :location "uri" :location-name
                         "segment-id")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-import-jobs-request-token
                         :shape "__string" :location "querystring"
                         :location-name "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-import-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-segment-import-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-request
                    'make-get-segment-import-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segment-import-jobs-response common-lisp:nil
                       ((import-jobs-response :initarg :import-jobs-response
                         :initform
                         (common-lisp:error
                          ":import-jobs-response is required")
                         :type
                         (common-lisp:or import-jobs-response common-lisp:null)
                         :accessor
                         struct-shape-get-segment-import-jobs-response-import-jobs-response
                         :shape "ImportJobsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-import-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-segment-import-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-import-jobs-response
                    'make-get-segment-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'import-jobs-response))
      (common-lisp:list
       (common-lisp:cons "ImportJobsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-import-jobs-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segment-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segment-request-application-id :shape
                         "__string" :location "uri" :location-name
                         "application-id")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-request-segment-id :shape
                         "__string" :location "uri" :location-name
                         "segment-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-request 'make-get-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segment-response common-lisp:nil
                       ((segment-response :initarg :segment-response :initform
                         (common-lisp:error ":segment-response is required")
                         :type
                         (common-lisp:or segment-response common-lisp:null)
                         :accessor
                         struct-shape-get-segment-response-segment-response
                         :shape "SegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-response 'make-get-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input get-segment-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segment-version-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segment-version-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-version-request-segment-id
                         :shape "__string" :location "uri" :location-name
                         "segment-id")
                        (version :initarg :version :initform
                         (common-lisp:error ":version is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-version-request-version
                         :shape "__string" :location "uri" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segment-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-request
                    'make-get-segment-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segment-version-response common-lisp:nil
                       ((segment-response :initarg :segment-response :initform
                         (common-lisp:error ":segment-response is required")
                         :type
                         (common-lisp:or segment-response common-lisp:null)
                         :accessor
                         struct-shape-get-segment-version-response-segment-response
                         :shape "SegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segment-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-version-response
                    'make-get-segment-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-version-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segment-versions-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segment-versions-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-versions-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-versions-request-segment-id
                         :shape "__string" :location "uri" :location-name
                         "segment-id")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segment-versions-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segment-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-request
                    'make-get-segment-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segment-versions-response common-lisp:nil
                       ((segments-response :initarg :segments-response
                         :initform
                         (common-lisp:error ":segments-response is required")
                         :type
                         (common-lisp:or segments-response common-lisp:null)
                         :accessor
                         struct-shape-get-segment-versions-response-segments-response
                         :shape "SegmentsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segment-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-segment-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segment-versions-response
                    'make-get-segment-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-response))
      (common-lisp:list
       (common-lisp:cons "SegmentsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-segment-versions-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-segments-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-segments-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segments-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-segments-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segments-request 'make-get-segments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-segments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-segments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-segments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-segments-response common-lisp:nil
                       ((segments-response :initarg :segments-response
                         :initform
                         (common-lisp:error ":segments-response is required")
                         :type
                         (common-lisp:or segments-response common-lisp:null)
                         :accessor
                         struct-shape-get-segments-response-segments-response
                         :shape "SegmentsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-segments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-segments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-segments-response 'make-get-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segments-response))
      (common-lisp:list
       (common-lisp:cons "SegmentsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-segments-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-sms-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-sms-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sms-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sms-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-request 'make-get-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sms-channel-response common-lisp:nil
                       ((smschannel-response :initarg :smschannel-response
                         :initform
                         (common-lisp:error ":smschannel-response is required")
                         :type
                         (common-lisp:or smschannel-response common-lisp:null)
                         :accessor
                         struct-shape-get-sms-channel-response-smschannel-response
                         :shape "SMSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sms-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sms-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sms-channel-response 'make-get-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-sms-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-sms-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-sms-template-request-version :shape
                         "__string" :location "querystring" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sms-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sms-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sms-template-request 'make-get-sms-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sms-template-response common-lisp:nil
                       ((smstemplate-response :initarg :smstemplate-response
                         :initform
                         (common-lisp:error
                          ":smstemplate-response is required")
                         :type
                         (common-lisp:or smstemplate-response common-lisp:null)
                         :accessor
                         struct-shape-get-sms-template-response-smstemplate-response
                         :shape "SMSTemplateResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sms-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sms-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sms-template-response
                    'make-get-sms-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'smstemplate-response))
      (common-lisp:list
       (common-lisp:cons "SMSTemplateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smstemplate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-sms-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-user-endpoints-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-user-endpoints-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-user-endpoints-request-user-id :shape
                         "__string" :location "uri" :location-name "user-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-endpoints-request
                    'make-get-user-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-user-endpoints-response common-lisp:nil
                       ((endpoints-response :initarg :endpoints-response
                         :initform
                         (common-lisp:error ":endpoints-response is required")
                         :type
                         (common-lisp:or endpoints-response common-lisp:null)
                         :accessor
                         struct-shape-get-user-endpoints-response-endpoints-response
                         :shape "EndpointsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-user-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-user-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-user-endpoints-response
                    'make-get-user-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints-response))
      (common-lisp:list
       (common-lisp:cons "EndpointsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-user-endpoints-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-voice-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-voice-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-channel-request
                    'make-get-voice-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-channel-response common-lisp:nil
                       ((voice-channel-response :initarg
                         :voice-channel-response :initform
                         (common-lisp:error
                          ":voice-channel-response is required")
                         :type
                         (common-lisp:or voice-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-channel-response-voice-channel-response
                         :shape "VoiceChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-channel-response
                    'make-get-voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-channel-response))
      (common-lisp:list
       (common-lisp:cons "VoiceChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-voice-template-request common-lisp:nil
                       ((template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-voice-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-voice-template-request-version :shape
                         "__string" :location "querystring" :location-name
                         "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-template-request
                    'make-get-voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-voice-template-response common-lisp:nil
                       ((voice-template-response :initarg
                         :voice-template-response :initform
                         (common-lisp:error
                          ":voice-template-response is required")
                         :type
                         (common-lisp:or voice-template-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-voice-template-response-voice-template-response
                         :shape "VoiceTemplateResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-voice-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-voice-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-voice-template-response
                    'make-get-voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-template-response))
      (common-lisp:list
       (common-lisp:cons "VoiceTemplateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-voice-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass holdout-activity common-lisp:nil
                       ((next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-holdout-activity-next-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (percentage :initarg :percentage :initform
                         (common-lisp:error ":percentage is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-holdout-activity-percentage
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-holdout-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'holdout-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'holdout-activity 'make-holdout-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input holdout-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input holdout-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input holdout-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-job-request common-lisp:nil
                       ((define-segment :initarg :define-segment :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-job-request-define-segment :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (external-id :initarg :external-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-request-external-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or format common-lisp:null) :accessor
                         struct-shape-import-job-request-format :shape "Format"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (register-endpoints :initarg :register-endpoints
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-job-request-register-endpoints
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-request-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url :initarg :s3url :initform
                         (common-lisp:error ":s3url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-request-s3url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-request-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-name :initarg :segment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-request-segment-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-job-request 'make-import-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'define-segment))
      (common-lisp:list
       (common-lisp:cons "DefineSegment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'register-endpoints))
      (common-lisp:list
       (common-lisp:cons "RegisterEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-name))
      (common-lisp:list
       (common-lisp:cons "SegmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-job-resource common-lisp:nil
                       ((define-segment :initarg :define-segment :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-job-resource-define-segment :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (external-id :initarg :external-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-resource-external-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or format common-lisp:null) :accessor
                         struct-shape-import-job-resource-format :shape
                         "Format" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (register-endpoints :initarg :register-endpoints
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-import-job-resource-register-endpoints
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-resource-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url :initarg :s3url :initform
                         (common-lisp:error ":s3url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-resource-s3url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-resource-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-name :initarg :segment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-resource-segment-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-job-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-job-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-job-resource 'make-import-job-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'define-segment))
      (common-lisp:list
       (common-lisp:cons "DefineSegment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'register-endpoints))
      (common-lisp:list
       (common-lisp:cons "RegisterEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-name))
      (common-lisp:list
       (common-lisp:cons "SegmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-job-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (completed-pieces :initarg :completed-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-completed-pieces
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (completion-date :initarg :completion-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-response-completion-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (definition :initarg :definition :initform
                         (common-lisp:error ":definition is required") :type
                         (common-lisp:or import-job-resource common-lisp:null)
                         :accessor struct-shape-import-job-response-definition
                         :shape "ImportJobResource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed-pieces :initarg :failed-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-failed-pieces :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failures :initarg :failures :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-import-job-response-failures
                         :shape "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (job-status :initarg :job-status :initform
                         (common-lisp:error ":job-status is required") :type
                         (common-lisp:or job-status common-lisp:null) :accessor
                         struct-shape-import-job-response-job-status :shape
                         "JobStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-failures :initarg :total-failures :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-total-failures :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-pieces :initarg :total-pieces :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-total-pieces :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (total-processed :initarg :total-processed :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-import-job-response-total-processed
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-job-response-type :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-job-response 'make-import-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completed-pieces))
      (common-lisp:list
       (common-lisp:cons "CompletedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-date))
      (common-lisp:list
       (common-lisp:cons "CompletionDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definition))
      (common-lisp:list
       (common-lisp:cons "Definition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed-pieces))
      (common-lisp:list
       (common-lisp:cons "FailedPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failures))
      (common-lisp:list
       (common-lisp:cons "Failures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-status))
      (common-lisp:list
       (common-lisp:cons "JobStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-failures))
      (common-lisp:list
       (common-lisp:cons "TotalFailures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-pieces))
      (common-lisp:list
       (common-lisp:cons "TotalPieces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-processed))
      (common-lisp:list
       (common-lisp:cons "TotalProcessed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-jobs-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-import-job-response
                                         common-lisp:null)
                         :accessor struct-shape-import-jobs-response-item
                         :shape "ListOfImportJobResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-import-jobs-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-jobs-response 'make-import-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input import-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input import-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input import-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-campaign-schedule common-lisp:nil
                       ((end-date :initarg :end-date :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-in-app-campaign-schedule-end-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-filter :initarg :event-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-event-filter
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-campaign-schedule-event-filter
                         :shape "CampaignEventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-in-app-campaign-schedule-quiet-time
                         :shape "QuietTime" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-campaign-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-campaign-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-campaign-schedule 'make-in-app-campaign-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-campaign-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-campaign-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "EndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-campaign-schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message common-lisp:nil
                       ((content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-in-app-message-content
                                         common-lisp:null)
                         :accessor struct-shape-in-app-message-content :shape
                         "ListOfInAppMessageContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom-config :initarg :custom-config :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-in-app-message-custom-config
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (layout :initarg :layout :initform common-lisp:nil
                         :type (common-lisp:or layout common-lisp:null)
                         :accessor struct-shape-in-app-message-layout :shape
                         "Layout" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'in-app-message 'make-in-app-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input in-app-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input in-app-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-config))
      (common-lisp:list
       (common-lisp:cons "CustomConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'layout))
      (common-lisp:list
       (common-lisp:cons "Layout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input in-app-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message-body-config common-lisp:nil
                       ((alignment :initarg :alignment :initform
                         (common-lisp:error ":alignment is required") :type
                         (common-lisp:or alignment common-lisp:null) :accessor
                         struct-shape-in-app-message-body-config-alignment
                         :shape "Alignment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-body-config-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text-color :initarg :text-color :initform
                         (common-lisp:error ":text-color is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-body-config-text-color
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message-body-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message-body-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-message-body-config
                    'make-in-app-message-body-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-body-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-body-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alignment))
      (common-lisp:list
       (common-lisp:cons "Alignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-color))
      (common-lisp:list
       (common-lisp:cons "TextColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-body-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message-button common-lisp:nil
                       ((android :initarg :android :initform common-lisp:nil
                         :type
                         (common-lisp:or override-button-configuration
                                         common-lisp:null)
                         :accessor struct-shape-in-app-message-button-android
                         :shape "OverrideButtonConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-config :initarg :default-config :initform
                         common-lisp:nil :type
                         (common-lisp:or default-button-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-button-default-config
                         :shape "DefaultButtonConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ios :initarg :ios :initform common-lisp:nil :type
                         (common-lisp:or override-button-configuration
                                         common-lisp:null)
                         :accessor struct-shape-in-app-message-button-ios
                         :shape "OverrideButtonConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (web :initarg :web :initform common-lisp:nil :type
                         (common-lisp:or override-button-configuration
                                         common-lisp:null)
                         :accessor struct-shape-in-app-message-button-web
                         :shape "OverrideButtonConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message-button
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message-button
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-message-button 'make-in-app-message-button))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-button))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-button))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'android))
      (common-lisp:list
       (common-lisp:cons "Android"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-config))
      (common-lisp:list
       (common-lisp:cons "DefaultConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ios))
      (common-lisp:list
       (common-lisp:cons "IOS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web))
      (common-lisp:list
       (common-lisp:cons "Web"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-button))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message-campaign common-lisp:nil
                       ((campaign-id :initarg :campaign-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-campaign-campaign-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (daily-cap :initarg :daily-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-daily-cap :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (in-app-message :initarg :in-app-message :initform
                         common-lisp:nil :type
                         (common-lisp:or in-app-message common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-in-app-message
                         :shape "InAppMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-priority :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type
                         (common-lisp:or in-app-campaign-schedule
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-schedule :shape
                         "InAppCampaignSchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (session-cap :initarg :session-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-session-cap
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-cap :initarg :total-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-campaign-total-cap :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (treatment-id :initarg :treatment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-campaign-treatment-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message-campaign
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message-campaign
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-message-campaign 'make-in-app-message-campaign))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-campaign))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-campaign))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-cap))
      (common-lisp:list
       (common-lisp:cons "DailyCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'in-app-message))
      (common-lisp:list
       (common-lisp:cons "InAppMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'session-cap))
      (common-lisp:list
       (common-lisp:cons "SessionCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-cap))
      (common-lisp:list
       (common-lisp:cons "TotalCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-id))
      (common-lisp:list
       (common-lisp:cons "TreatmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-campaign))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message-content common-lisp:nil
                       ((background-color :initarg :background-color :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-content-background-color
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body-config :initarg :body-config :initform
                         common-lisp:nil :type
                         (common-lisp:or in-app-message-body-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-content-body-config :shape
                         "InAppMessageBodyConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (header-config :initarg :header-config :initform
                         common-lisp:nil :type
                         (common-lisp:or in-app-message-header-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-content-header-config
                         :shape "InAppMessageHeaderConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-content-image-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (primary-btn :initarg :primary-btn :initform
                         common-lisp:nil :type
                         (common-lisp:or in-app-message-button
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-content-primary-btn :shape
                         "InAppMessageButton" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secondary-btn :initarg :secondary-btn :initform
                         common-lisp:nil :type
                         (common-lisp:or in-app-message-button
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-message-content-secondary-btn
                         :shape "InAppMessageButton" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-message-content 'make-in-app-message-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'background-color))
      (common-lisp:list
       (common-lisp:cons "BackgroundColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body-config))
      (common-lisp:list
       (common-lisp:cons "BodyConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header-config))
      (common-lisp:list
       (common-lisp:cons "HeaderConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-btn))
      (common-lisp:list
       (common-lisp:cons "PrimaryBtn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secondary-btn))
      (common-lisp:list
       (common-lisp:cons "SecondaryBtn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-message-header-config common-lisp:nil
                       ((alignment :initarg :alignment :initform
                         (common-lisp:error ":alignment is required") :type
                         (common-lisp:or alignment common-lisp:null) :accessor
                         struct-shape-in-app-message-header-config-alignment
                         :shape "Alignment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (header :initarg :header :initform
                         (common-lisp:error ":header is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-header-config-header
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text-color :initarg :text-color :initform
                         (common-lisp:error ":text-color is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-message-header-config-text-color
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-message-header-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-message-header-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-message-header-config
                    'make-in-app-message-header-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-header-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-header-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'alignment))
      (common-lisp:list
       (common-lisp:cons "Alignment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'header))
      (common-lisp:list
       (common-lisp:cons "Header"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-color))
      (common-lisp:list
       (common-lisp:cons "TextColor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-message-header-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-messages-response common-lisp:nil
                       ((in-app-message-campaigns :initarg
                         :in-app-message-campaigns :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-in-app-message-campaign
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-messages-response-in-app-message-campaigns
                         :shape "ListOfInAppMessageCampaign" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-messages-response 'make-in-app-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-app-message-campaigns))
      (common-lisp:list
       (common-lisp:cons "InAppMessageCampaigns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-messages-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-template-request common-lisp:nil
                       ((content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-in-app-message-content
                                         common-lisp:null)
                         :accessor struct-shape-in-app-template-request-content
                         :shape "ListOfInAppMessageContent" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (custom-config :initarg :custom-config :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-request-custom-config
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (layout :initarg :layout :initform common-lisp:nil
                         :type (common-lisp:or layout common-lisp:null)
                         :accessor struct-shape-in-app-template-request-layout
                         :shape "Layout" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-in-app-template-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-template-request-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-template-request 'make-in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-config))
      (common-lisp:list
       (common-lisp:cons "CustomConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'layout))
      (common-lisp:list
       (common-lisp:cons "Layout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass in-app-template-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-template-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-in-app-message-content
                                         common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-response-content :shape
                         "ListOfInAppMessageContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-template-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom-config :initarg :custom-config :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-response-custom-config
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (layout :initarg :layout :initform common-lisp:nil
                         :type (common-lisp:or layout common-lisp:null)
                         :accessor struct-shape-in-app-template-response-layout
                         :shape "Layout" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-in-app-template-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-template-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-in-app-template-response-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-response-template-type
                         :shape "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-in-app-template-response-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-in-app-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'in-app-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'in-app-template-response 'make-in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-config))
      (common-lisp:list
       (common-lisp:cons "CustomConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'layout))
      (common-lisp:list
       (common-lisp:cons "Layout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          in-app-template-response))
   common-lisp:nil))
(common-lisp:deftype include () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       internal-server-error-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message
                    'internal-server-error-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass item-response common-lisp:nil
                       ((endpoint-item-response :initarg
                         :endpoint-item-response :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-item-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-item-response-endpoint-item-response
                         :shape "EndpointItemResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (events-item-response :initarg :events-item-response
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-event-item-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-item-response-events-item-response :shape
                         "MapOfEventItemResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-item-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'item-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'item-response 'make-item-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input item-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input item-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-item-response))
      (common-lisp:list
       (common-lisp:cons "EndpointItemResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'events-item-response))
      (common-lisp:list
       (common-lisp:cons "EventsItemResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input item-response))
   common-lisp:nil))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass journey-custom-message common-lisp:nil
                       ((data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-custom-message-data :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-custom-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-custom-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-custom-message 'make-journey-custom-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-custom-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-custom-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-custom-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-date-range-kpi-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-date-range-kpi-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-journey-date-range-kpi-response-end-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-date-range-kpi-response-journey-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-name :initarg :kpi-name :initform
                         (common-lisp:error ":kpi-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-date-range-kpi-response-kpi-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kpi-result :initarg :kpi-result :initform
                         (common-lisp:error ":kpi-result is required") :type
                         (common-lisp:or base-kpi-result common-lisp:null)
                         :accessor
                         struct-shape-journey-date-range-kpi-response-kpi-result
                         :shape "BaseKpiResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-date-range-kpi-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor
                         struct-shape-journey-date-range-kpi-response-start-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-date-range-kpi-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'journey-date-range-kpi-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-date-range-kpi-response
                    'make-journey-date-range-kpi-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-date-range-kpi-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-date-range-kpi-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-id))
      (common-lisp:list
       (common-lisp:cons "JourneyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-name))
      (common-lisp:list
       (common-lisp:cons "KpiName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kpi-result))
      (common-lisp:list
       (common-lisp:cons "KpiResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-date-range-kpi-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-email-message common-lisp:nil
                       ((from-address :initarg :from-address :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-email-message-from-address :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-email-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-email-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-email-message 'make-journey-email-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-email-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-email-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-email-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-execution-activity-metrics-response
                       common-lisp:nil
                       ((activity-type :initarg :activity-type :initform
                         (common-lisp:error ":activity-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-execution-activity-metrics-response-activity-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-activity-metrics-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-activity-id :initarg :journey-activity-id
                         :initform
                         (common-lisp:error ":journey-activity-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-activity-metrics-response-journey-activity-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-execution-activity-metrics-response-journey-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-evaluated-time :initarg :last-evaluated-time
                         :initform
                         (common-lisp:error ":last-evaluated-time is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-activity-metrics-response-last-evaluated-time
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform
                         (common-lisp:error ":metrics is required") :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-activity-metrics-response-metrics
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-execution-activity-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'journey-execution-activity-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-execution-activity-metrics-response
                    'make-journey-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-activity-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-activity-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activity-type))
      (common-lisp:list
       (common-lisp:cons "ActivityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-activity-id))
      (common-lisp:list
       (common-lisp:cons "JourneyActivityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-id))
      (common-lisp:list
       (common-lisp:cons "JourneyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-evaluated-time))
      (common-lisp:list
       (common-lisp:cons "LastEvaluatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-activity-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-execution-metrics-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-metrics-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-execution-metrics-response-journey-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-evaluated-time :initarg :last-evaluated-time
                         :initform
                         (common-lisp:error ":last-evaluated-time is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-metrics-response-last-evaluated-time
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform
                         (common-lisp:error ":metrics is required") :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-journey-execution-metrics-response-metrics
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-execution-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'journey-execution-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-execution-metrics-response
                    'make-journey-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-id))
      (common-lisp:list
       (common-lisp:cons "JourneyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-evaluated-time))
      (common-lisp:list
       (common-lisp:cons "LastEvaluatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-execution-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-limits common-lisp:nil
                       ((daily-cap :initarg :daily-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-journey-limits-daily-cap :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-reentry-cap :initarg :endpoint-reentry-cap
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-journey-limits-endpoint-reentry-cap
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (messages-per-second :initarg :messages-per-second
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-journey-limits-messages-per-second :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-reentry-interval :initarg
                         :endpoint-reentry-interval :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-limits-endpoint-reentry-interval
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timeframe-cap :initarg :timeframe-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-timeframe-cap
                                         common-lisp:null)
                         :accessor struct-shape-journey-limits-timeframe-cap
                         :shape "JourneyTimeframeCap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (total-cap :initarg :total-cap :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-journey-limits-total-cap :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-limits
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-limits
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'journey-limits 'make-journey-limits))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-limits))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-limits))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-cap))
      (common-lisp:list
       (common-lisp:cons "DailyCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-reentry-cap))
      (common-lisp:list
       (common-lisp:cons "EndpointReentryCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages-per-second))
      (common-lisp:list
       (common-lisp:cons "MessagesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-reentry-interval))
      (common-lisp:list
       (common-lisp:cons "EndpointReentryInterval"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeframe-cap))
      (common-lisp:list
       (common-lisp:cons "TimeframeCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'total-cap))
      (common-lisp:list
       (common-lisp:cons "TotalCap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-limits))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-push-message common-lisp:nil
                       ((time-to-live :initarg :time-to-live :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-push-message-time-to-live :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-push-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-push-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-push-message 'make-journey-push-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-push-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-push-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-to-live))
      (common-lisp:list
       (common-lisp:cons "TimeToLive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-push-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-channel-settings common-lisp:nil
                       ((connect-campaign-arn :initarg :connect-campaign-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-channel-settings-connect-campaign-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connect-campaign-execution-role-arn :initarg
                         :connect-campaign-execution-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-channel-settings-connect-campaign-execution-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-channel-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-channel-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-channel-settings 'make-journey-channel-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-channel-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-channel-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-campaign-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectCampaignArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'connect-campaign-execution-role-arn))
      (common-lisp:list
       (common-lisp:cons "ConnectCampaignExecutionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-channel-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-response common-lisp:nil
                       ((activities :initarg :activities :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-activity common-lisp:null)
                         :accessor struct-shape-journey-response-activities
                         :shape "MapOfActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-journey-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type (common-lisp:or journey-limits common-lisp:null)
                         :accessor struct-shape-journey-response-limits :shape
                         "JourneyLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (local-time :initarg :local-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-journey-response-local-time
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-journey-response-quiet-time :shape
                         "QuietTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (refresh-frequency :initarg :refresh-frequency
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-refresh-frequency :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type
                         (common-lisp:or journey-schedule common-lisp:null)
                         :accessor struct-shape-journey-response-schedule
                         :shape "JourneySchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-activity :initarg :start-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-response-start-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-condition :initarg :start-condition :initform
                         common-lisp:nil :type
                         (common-lisp:or start-condition common-lisp:null)
                         :accessor
                         struct-shape-journey-response-start-condition :shape
                         "StartCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or state common-lisp:null) :accessor
                         struct-shape-journey-response-state :shape "State"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-journey-response-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (wait-for-quiet-time :initarg :wait-for-quiet-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-journey-response-wait-for-quiet-time
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (refresh-on-segment-update :initarg
                         :refresh-on-segment-update :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-journey-response-refresh-on-segment-update
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-channel-settings :initarg
                         :journey-channel-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or journey-channel-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-journey-response-journey-channel-settings
                         :shape "JourneyChannelSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sending-schedule :initarg :sending-schedule :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-journey-response-sending-schedule :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (open-hours :initarg :open-hours :initform
                         common-lisp:nil :type
                         (common-lisp:or open-hours common-lisp:null) :accessor
                         struct-shape-journey-response-open-hours :shape
                         "OpenHours" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (closed-days :initarg :closed-days :initform
                         common-lisp:nil :type
                         (common-lisp:or closed-days common-lisp:null)
                         :accessor struct-shape-journey-response-closed-days
                         :shape "ClosedDays" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone-estimation-methods :initarg
                         :timezone-estimation-methods :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          list-of-timezone-estimation-methods-element
                          common-lisp:null)
                         :accessor
                         struct-shape-journey-response-timezone-estimation-methods
                         :shape "ListOf__TimezoneEstimationMethodsElement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-response 'make-journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activities))
      (common-lisp:list
       (common-lisp:cons "Activities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'local-time))
      (common-lisp:list
       (common-lisp:cons "LocalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'refresh-frequency))
      (common-lisp:list
       (common-lisp:cons "RefreshFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-activity))
      (common-lisp:list
       (common-lisp:cons "StartActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-condition))
      (common-lisp:list
       (common-lisp:cons "StartCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-for-quiet-time))
      (common-lisp:list
       (common-lisp:cons "WaitForQuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-on-segment-update))
      (common-lisp:list
       (common-lisp:cons "RefreshOnSegmentUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-channel-settings))
      (common-lisp:list
       (common-lisp:cons "JourneyChannelSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-schedule))
      (common-lisp:list
       (common-lisp:cons "SendingSchedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-hours))
      (common-lisp:list
       (common-lisp:cons "OpenHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'closed-days))
      (common-lisp:list
       (common-lisp:cons "ClosedDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezone-estimation-methods))
      (common-lisp:list
       (common-lisp:cons "TimezoneEstimationMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-run-execution-activity-metrics-response
                       common-lisp:nil
                       ((activity-type :initarg :activity-type :initform
                         (common-lisp:error ":activity-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-activity-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-activity-id :initarg :journey-activity-id
                         :initform
                         (common-lisp:error ":journey-activity-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-journey-activity-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-journey-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-evaluated-time :initarg :last-evaluated-time
                         :initform
                         (common-lisp:error ":last-evaluated-time is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-last-evaluated-time
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform
                         (common-lisp:error ":metrics is required") :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-metrics
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (run-id :initarg :run-id :initform
                         (common-lisp:error ":run-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-execution-activity-metrics-response-run-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-run-execution-activity-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'journey-run-execution-activity-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-run-execution-activity-metrics-response
                    'make-journey-run-execution-activity-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-activity-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-activity-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activity-type))
      (common-lisp:list
       (common-lisp:cons "ActivityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-activity-id))
      (common-lisp:list
       (common-lisp:cons "JourneyActivityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-id))
      (common-lisp:list
       (common-lisp:cons "JourneyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-evaluated-time))
      (common-lisp:list
       (common-lisp:cons "LastEvaluatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-id))
      (common-lisp:list
       (common-lisp:cons "RunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-activity-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-run-execution-metrics-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-metrics-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-execution-metrics-response-journey-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-evaluated-time :initarg :last-evaluated-time
                         :initform
                         (common-lisp:error ":last-evaluated-time is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-metrics-response-last-evaluated-time
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform
                         (common-lisp:error ":metrics is required") :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-journey-run-execution-metrics-response-metrics
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (run-id :initarg :run-id :initform
                         (common-lisp:error ":run-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-execution-metrics-response-run-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-run-execution-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'journey-run-execution-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-run-execution-metrics-response
                    'make-journey-run-execution-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-id))
      (common-lisp:list
       (common-lisp:cons "JourneyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-evaluated-time))
      (common-lisp:list
       (common-lisp:cons "LastEvaluatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-id))
      (common-lisp:list
       (common-lisp:cons "RunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-run-execution-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-run-response common-lisp:nil
                       ((creation-time :initarg :creation-time :initform
                         (common-lisp:error ":creation-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-response-creation-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-update-time :initarg :last-update-time :initform
                         (common-lisp:error ":last-update-time is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-journey-run-response-last-update-time
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (run-id :initarg :run-id :initform
                         (common-lisp:error ":run-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-run-response-run-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or journey-run-status common-lisp:null)
                         :accessor struct-shape-journey-run-response-status
                         :shape "JourneyRunStatus" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-run-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-run-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-run-response 'make-journey-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-time))
      (common-lisp:list
       (common-lisp:cons "CreationTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-update-time))
      (common-lisp:list
       (common-lisp:cons "LastUpdateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'run-id))
      (common-lisp:list
       (common-lisp:cons "RunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-run-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-runs-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-journey-run-response
                                         common-lisp:null)
                         :accessor struct-shape-journey-runs-response-item
                         :shape "ListOfJourneyRunResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-runs-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-runs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-runs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-runs-response 'make-journey-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-runs-response))
   common-lisp:nil))
(common-lisp:deftype journey-run-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass journey-smsmessage common-lisp:nil
                       ((message-type :initarg :message-type :initform
                         common-lisp:nil :type
                         (common-lisp:or message-type common-lisp:null)
                         :accessor struct-shape-journey-smsmessage-message-type
                         :shape "MessageType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origination-number :initarg :origination-number
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-smsmessage-origination-number
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-smsmessage-sender-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (entity-id :initarg :entity-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-smsmessage-entity-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-id :initarg :template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journey-smsmessage-template-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-smsmessage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-smsmessage
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-smsmessage 'make-journey-smsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-smsmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-smsmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination-number))
      (common-lisp:list
       (common-lisp:cons "OriginationNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-id))
      (common-lisp:list
       (common-lisp:cons "EntityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-id))
      (common-lisp:list
       (common-lisp:cons "TemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-smsmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-schedule common-lisp:nil
                       ((end-time :initarg :end-time :initform common-lisp:nil
                         :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-journey-schedule-end-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__timestampIso8601| common-lisp:null)
                         :accessor struct-shape-journey-schedule-start-time
                         :shape "__timestampIso8601" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-journey-schedule-timezone
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-schedule 'make-journey-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journey-schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journey-schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journey-schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-state-request common-lisp:nil
                       ((state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or state common-lisp:null) :accessor
                         struct-shape-journey-state-request-state :shape
                         "State" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-state-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-state-request 'make-journey-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-state-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journey-timeframe-cap common-lisp:nil
                       ((cap :initarg :cap :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-journey-timeframe-cap-cap
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (days :initarg :days :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-journey-timeframe-cap-days
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journey-timeframe-cap
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journey-timeframe-cap
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journey-timeframe-cap 'make-journey-timeframe-cap))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          journey-timeframe-cap))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          journey-timeframe-cap))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cap))
      (common-lisp:list
       (common-lisp:cons "Cap"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'days))
      (common-lisp:list
       (common-lisp:cons "Days"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          journey-timeframe-cap))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass journeys-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-journey-response
                                         common-lisp:null)
                         :accessor struct-shape-journeys-response-item :shape
                         "ListOfJourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-journeys-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-journeys-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'journeys-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'journeys-response 'make-journeys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input journeys-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input journeys-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input journeys-response))
   common-lisp:nil))
(common-lisp:deftype layout () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-journeys-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-list-journeys-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-journeys-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (token :initarg :token :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-journeys-request-token :shape
                         "__string" :location "querystring" :location-name
                         "token"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-journeys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-journeys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-journeys-request 'make-list-journeys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-journeys-response common-lisp:nil
                       ((journeys-response :initarg :journeys-response
                         :initform
                         (common-lisp:error ":journeys-response is required")
                         :type
                         (common-lisp:or journeys-response common-lisp:null)
                         :accessor
                         struct-shape-list-journeys-response-journeys-response
                         :shape "JourneysResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-journeys-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-journeys-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-journeys-response 'make-list-journeys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journeys-response))
      (common-lisp:list
       (common-lisp:cons "JourneysResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journeys-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          list-journeys-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass list-recommender-configurations-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or
                          list-of-recommender-configuration-response
                          common-lisp:null)
                         :accessor
                         struct-shape-list-recommender-configurations-response-item
                         :shape "ListOfRecommenderConfigurationResponse"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-recommender-configurations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recommender-configurations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recommender-configurations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recommender-configurations-response
                    'make-list-recommender-configurations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recommender-configurations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recommender-configurations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recommender-configurations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags-model :initarg :tags-model :initform
                         (common-lisp:error ":tags-model is required") :type
                         (common-lisp:or tags-model common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags-model
                         :shape "TagsModel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-model))
      (common-lisp:list
       (common-lisp:cons "TagsModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'tags-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass list-template-versions-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-template-versions-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-template-versions-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "page-size")
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-template-versions-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-template-versions-request-template-type
                         :shape "__string" :location "uri" :location-name
                         "template-type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-template-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-template-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-template-versions-request
                    'make-list-template-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-template-versions-response common-lisp:nil
                       ((template-versions-response :initarg
                         :template-versions-response :initform
                         (common-lisp:error
                          ":template-versions-response is required")
                         :type
                         (common-lisp:or template-versions-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-template-versions-response-template-versions-response
                         :shape "TemplateVersionsResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-template-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-template-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-template-versions-response
                    'make-list-template-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-versions-response))
      (common-lisp:list
       (common-lisp:cons "TemplateVersionsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'template-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          list-template-versions-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass list-templates-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-templates-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "next-token")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-templates-request-page-size :shape
                         "__string" :location "querystring" :location-name
                         "page-size")
                        (prefix :initarg :prefix :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-list-templates-request-prefix
                         :shape "__string" :location "querystring"
                         :location-name "prefix")
                        (template-type :initarg :template-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-templates-request-template-type
                         :shape "__string" :location "querystring"
                         :location-name "template-type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-templates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-templates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-templates-request 'make-list-templates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-templates-response common-lisp:nil
                       ((templates-response :initarg :templates-response
                         :initform
                         (common-lisp:error ":templates-response is required")
                         :type
                         (common-lisp:or templates-response common-lisp:null)
                         :accessor
                         struct-shape-list-templates-response-templates-response
                         :shape "TemplatesResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-templates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-templates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-templates-response 'make-list-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'templates-response))
      (common-lisp:list
       (common-lisp:cons "TemplatesResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          list-templates-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass message common-lisp:nil
                       ((action :initarg :action :initform common-lisp:nil
                         :type (common-lisp:or action common-lisp:null)
                         :accessor struct-shape-message-action :shape "Action"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-body :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (image-icon-url :initarg :image-icon-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-image-icon-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-small-icon-url :initarg :image-small-icon-url
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-image-small-icon-url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-image-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (json-body :initarg :json-body :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-json-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (media-url :initarg :media-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-media-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw-content :initarg :raw-content :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-raw-content :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (silent-push :initarg :silent-push :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-message-silent-push :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (time-to-live :initarg :time-to-live :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-message-time-to-live :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (title :initarg :title :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-title :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-url :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action))
      (common-lisp:list
       (common-lisp:cons "Action"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'image-small-icon-url))
      (common-lisp:list
       (common-lisp:cons "ImageSmallIconUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'json-body))
      (common-lisp:list
       (common-lisp:cons "JsonBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw-content))
      (common-lisp:list
       (common-lisp:cons "RawContent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'silent-push))
      (common-lisp:list
       (common-lisp:cons "SilentPush"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-to-live))
      (common-lisp:list
       (common-lisp:cons "TimeToLive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'title))
      (common-lisp:list
       (common-lisp:cons "Title"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message-body common-lisp:nil
                       ((message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-message-body-message :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-body-request-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-body
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-body
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message-body 'make-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message-configuration common-lisp:nil
                       ((admmessage :initarg :admmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or message common-lisp:null) :accessor
                         struct-shape-message-configuration-admmessage :shape
                         "Message" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (apnsmessage :initarg :apnsmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or message common-lisp:null) :accessor
                         struct-shape-message-configuration-apnsmessage :shape
                         "Message" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (baidu-message :initarg :baidu-message :initform
                         common-lisp:nil :type
                         (common-lisp:or message common-lisp:null) :accessor
                         struct-shape-message-configuration-baidu-message
                         :shape "Message" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom-message :initarg :custom-message :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-custom-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-configuration-custom-message
                         :shape "CampaignCustomMessage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-message :initarg :default-message :initform
                         common-lisp:nil :type
                         (common-lisp:or message common-lisp:null) :accessor
                         struct-shape-message-configuration-default-message
                         :shape "Message" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email-message :initarg :email-message :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-email-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-configuration-email-message
                         :shape "CampaignEmailMessage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gcmmessage :initarg :gcmmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or message common-lisp:null) :accessor
                         struct-shape-message-configuration-gcmmessage :shape
                         "Message" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (smsmessage :initarg :smsmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-sms-message common-lisp:null)
                         :accessor
                         struct-shape-message-configuration-smsmessage :shape
                         "CampaignSmsMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (in-app-message :initarg :in-app-message :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-in-app-message
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-configuration-in-app-message
                         :shape "CampaignInAppMessage" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'message-configuration 'make-message-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admmessage))
      (common-lisp:list
       (common-lisp:cons "ADMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnsmessage))
      (common-lisp:list
       (common-lisp:cons "APNSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'baidu-message))
      (common-lisp:list
       (common-lisp:cons "BaiduMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-message))
      (common-lisp:list
       (common-lisp:cons "CustomMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-message))
      (common-lisp:list
       (common-lisp:cons "DefaultMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-message))
      (common-lisp:list
       (common-lisp:cons "EmailMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmmessage))
      (common-lisp:list
       (common-lisp:cons "GCMMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smsmessage))
      (common-lisp:list
       (common-lisp:cons "SMSMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'in-app-message))
      (common-lisp:list
       (common-lisp:cons "InAppMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          message-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message-request common-lisp:nil
                       ((addresses :initarg :addresses :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-address-configuration
                                         common-lisp:null)
                         :accessor struct-shape-message-request-addresses
                         :shape "MapOfAddressConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-message-request-context :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoints :initarg :endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-endpoint-send-configuration
                                         common-lisp:null)
                         :accessor struct-shape-message-request-endpoints
                         :shape "MapOfEndpointSendConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform
                         (common-lisp:error
                          ":message-configuration is required")
                         :type
                         (common-lisp:or direct-message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-request-message-configuration
                         :shape "DirectMessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-request-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trace-id :initarg :trace-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-message-request-trace-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message-request 'make-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'addresses))
      (common-lisp:list
       (common-lisp:cons "Addresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoints))
      (common-lisp:list
       (common-lisp:cons "Endpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-id))
      (common-lisp:list
       (common-lisp:cons "TraceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-message-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-result :initarg :endpoint-result :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-endpoint-message-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-message-response-endpoint-result :shape
                         "MapOfEndpointMessageResult" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-response-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (result :initarg :result :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-message-result
                                         common-lisp:null)
                         :accessor struct-shape-message-response-result :shape
                         "MapOfMessageResult" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'message-response 'make-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-result))
      (common-lisp:list
       (common-lisp:cons "EndpointResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass message-result common-lisp:nil
                       ((delivery-status :initarg :delivery-status :initform
                         (common-lisp:error ":delivery-status is required")
                         :type
                         (common-lisp:or delivery-status common-lisp:null)
                         :accessor struct-shape-message-result-delivery-status
                         :shape "DeliveryStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-result-message-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":status-code is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-message-result-status-code
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-result-status-message :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (updated-token :initarg :updated-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-result-updated-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message-result 'make-message-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-status))
      (common-lisp:list
       (common-lisp:cons "DeliveryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "StatusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "StatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'updated-token))
      (common-lisp:list
       (common-lisp:cons "UpdatedToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-result))
   common-lisp:nil))
(common-lisp:deftype message-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition method-not-allowed-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       method-not-allowed-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       method-not-allowed-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'method-not-allowed-exception
                    'method-not-allowed-exception-message
                    'method-not-allowed-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass metric-dimension common-lisp:nil
                       ((comparison-operator :initarg :comparison-operator
                         :initform
                         (common-lisp:error ":comparison-operator is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-metric-dimension-comparison-operator
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or |__double| common-lisp:null) :accessor
                         struct-shape-metric-dimension-value :shape "__double"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-dimension
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-dimension
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'metric-dimension 'make-metric-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'comparison-operator))
      (common-lisp:list
       (common-lisp:cons "ComparisonOperator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-dimension))
   common-lisp:nil))
(common-lisp:deftype mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass multi-conditional-branch common-lisp:nil
                       ((condition :initarg :condition :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-condition common-lisp:null)
                         :accessor
                         struct-shape-multi-conditional-branch-condition :shape
                         "SimpleCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-multi-conditional-branch-next-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-multi-conditional-branch
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'multi-conditional-branch
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'multi-conditional-branch 'make-multi-conditional-branch))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-branch))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-branch))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'condition))
      (common-lisp:list
       (common-lisp:cons "Condition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-branch))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass multi-conditional-split-activity common-lisp:nil
                       ((branches :initarg :branches :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-multi-conditional-branch
                                         common-lisp:null)
                         :accessor
                         struct-shape-multi-conditional-split-activity-branches
                         :shape "ListOfMultiConditionalBranch" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-activity :initarg :default-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-multi-conditional-split-activity-default-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (evaluation-wait-time :initarg :evaluation-wait-time
                         :initform common-lisp:nil :type
                         (common-lisp:or wait-time common-lisp:null) :accessor
                         struct-shape-multi-conditional-split-activity-evaluation-wait-time
                         :shape "WaitTime" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-multi-conditional-split-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'multi-conditional-split-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'multi-conditional-split-activity
                    'make-multi-conditional-split-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-split-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-split-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'branches))
      (common-lisp:list
       (common-lisp:cons "Branches"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-activity))
      (common-lisp:list
       (common-lisp:cons "DefaultActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'evaluation-wait-time))
      (common-lisp:list
       (common-lisp:cons "EvaluationWaitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          multi-conditional-split-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       not-found-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message
                    'not-found-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass number-validate-request common-lisp:nil
                       ((iso-country-code :initarg :iso-country-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-request-iso-country-code
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-number :initarg :phone-number :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-request-phone-number
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-number-validate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'number-validate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'number-validate-request 'make-number-validate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iso-country-code))
      (common-lisp:list
       (common-lisp:cons "IsoCountryCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-number))
      (common-lisp:list
       (common-lisp:cons "PhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass number-validate-response common-lisp:nil
                       ((carrier :initarg :carrier :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-carrier :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (city :initarg :city :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-city :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cleansed-phone-number-e164 :initarg
                         :cleansed-phone-number-e164 :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-cleansed-phone-number-e164
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cleansed-phone-number-national :initarg
                         :cleansed-phone-number-national :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-cleansed-phone-number-national
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country :initarg :country :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-country :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (country-code-iso2 :initarg :country-code-iso2
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-country-code-iso2
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (country-code-numeric :initarg :country-code-numeric
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-country-code-numeric
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (county :initarg :county :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-number-validate-response-county
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (original-country-code-iso2 :initarg
                         :original-country-code-iso2 :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-original-country-code-iso2
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (original-phone-number :initarg :original-phone-number
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-original-phone-number
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-type :initarg :phone-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-number-validate-response-phone-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (phone-type-code :initarg :phone-type-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-phone-type-code
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-timezone :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (zip-code :initarg :zip-code :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-number-validate-response-zip-code :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-number-validate-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'number-validate-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'number-validate-response 'make-number-validate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'carrier))
      (common-lisp:list
       (common-lisp:cons "Carrier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'city))
      (common-lisp:list
       (common-lisp:cons "City"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cleansed-phone-number-e164))
      (common-lisp:list
       (common-lisp:cons "CleansedPhoneNumberE164"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cleansed-phone-number-national))
      (common-lisp:list
       (common-lisp:cons "CleansedPhoneNumberNational"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country-code-iso2))
      (common-lisp:list
       (common-lisp:cons "CountryCodeIso2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'country-code-numeric))
      (common-lisp:list
       (common-lisp:cons "CountryCodeNumeric"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'county))
      (common-lisp:list
       (common-lisp:cons "County"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'original-country-code-iso2))
      (common-lisp:list
       (common-lisp:cons "OriginalCountryCodeIso2"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'original-phone-number))
      (common-lisp:list
       (common-lisp:cons "OriginalPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-type))
      (common-lisp:list
       (common-lisp:cons "PhoneType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'phone-type-code))
      (common-lisp:list
       (common-lisp:cons "PhoneTypeCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'zip-code))
      (common-lisp:list
       (common-lisp:cons "ZipCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          number-validate-response))
   common-lisp:nil))
(common-lisp:deftype operator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass override-button-configuration common-lisp:nil
                       ((button-action :initarg :button-action :initform
                         (common-lisp:error ":button-action is required") :type
                         (common-lisp:or button-action common-lisp:null)
                         :accessor
                         struct-shape-override-button-configuration-button-action
                         :shape "ButtonAction" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (link :initarg :link :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-override-button-configuration-link :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-override-button-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'override-button-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'override-button-configuration
                    'make-override-button-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          override-button-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          override-button-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'button-action))
      (common-lisp:list
       (common-lisp:cons "ButtonAction"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'link))
      (common-lisp:list
       (common-lisp:cons "Link"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          override-button-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition payload-too-large-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       payload-too-large-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       payload-too-large-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'payload-too-large-exception
                    'payload-too-large-exception-message
                    'payload-too-large-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass phone-number-validate-request common-lisp:nil
                       ((number-validate-request :initarg
                         :number-validate-request :initform
                         (common-lisp:error
                          ":number-validate-request is required")
                         :type
                         (common-lisp:or number-validate-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-validate-request-number-validate-request
                         :shape "NumberValidateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-validate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'phone-number-validate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-validate-request
                    'make-phone-number-validate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-validate-request))
      (common-lisp:list
       (common-lisp:cons "NumberValidateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'number-validate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass phone-number-validate-response common-lisp:nil
                       ((number-validate-response :initarg
                         :number-validate-response :initform
                         (common-lisp:error
                          ":number-validate-response is required")
                         :type
                         (common-lisp:or number-validate-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-phone-number-validate-response-number-validate-response
                         :shape "NumberValidateResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-phone-number-validate-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'phone-number-validate-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'phone-number-validate-response
                    'make-phone-number-validate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-validate-response))
      (common-lisp:list
       (common-lisp:cons "NumberValidateResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'number-validate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          phone-number-validate-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass public-endpoint common-lisp:nil
                       ((address :initarg :address :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-public-endpoint-address :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-public-endpoint-attributes
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-type :initarg :channel-type :initform
                         common-lisp:nil :type
                         (common-lisp:or channel-type common-lisp:null)
                         :accessor struct-shape-public-endpoint-channel-type
                         :shape "ChannelType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (demographic :initarg :demographic :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-demographic common-lisp:null)
                         :accessor struct-shape-public-endpoint-demographic
                         :shape "EndpointDemographic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (effective-date :initarg :effective-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-public-endpoint-effective-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (endpoint-status :initarg :endpoint-status :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-public-endpoint-endpoint-status :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-location common-lisp:null)
                         :accessor struct-shape-public-endpoint-location :shape
                         "EndpointLocation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type (common-lisp:or map-of-double common-lisp:null)
                         :accessor struct-shape-public-endpoint-metrics :shape
                         "MapOf__double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (opt-out :initarg :opt-out :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-public-endpoint-opt-out :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-public-endpoint-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user :initarg :user :initform common-lisp:nil :type
                         (common-lisp:or endpoint-user common-lisp:null)
                         :accessor struct-shape-public-endpoint-user :shape
                         "EndpointUser" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-public-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'public-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'public-endpoint 'make-public-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input public-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input public-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'address))
      (common-lisp:list
       (common-lisp:cons "Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-type))
      (common-lisp:list
       (common-lisp:cons "ChannelType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'effective-date))
      (common-lisp:list
       (common-lisp:cons "EffectiveDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-status))
      (common-lisp:list
       (common-lisp:cons "EndpointStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'opt-out))
      (common-lisp:list
       (common-lisp:cons "OptOut"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user))
      (common-lisp:list
       (common-lisp:cons "User"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input public-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass push-message-activity common-lisp:nil
                       ((message-config :initarg :message-config :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-push-message common-lisp:null)
                         :accessor
                         struct-shape-push-message-activity-message-config
                         :shape "JourneyPushMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-message-activity-next-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-message-activity-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-version :initarg :template-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-message-activity-template-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-push-message-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'push-message-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'push-message-activity 'make-push-message-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          push-message-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          push-message-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-config))
      (common-lisp:list
       (common-lisp:cons "MessageConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-version))
      (common-lisp:list
       (common-lisp:cons "TemplateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          push-message-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass push-notification-template-request common-lisp:nil
                       ((adm :initarg :adm :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-adm
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (apns :initarg :apns :initform common-lisp:nil :type
                         (common-lisp:or apnspush-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-apns
                         :shape "APNSPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (baidu :initarg :baidu :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-baidu
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default :initarg :default :initform common-lisp:nil
                         :type
                         (common-lisp:or default-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-default
                         :shape "DefaultPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-request-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gcm :initarg :gcm :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-gcm
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-request-recommender-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-request-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-push-notification-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'push-notification-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'push-notification-template-request
                    'make-push-notification-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'adm))
      (common-lisp:list
       (common-lisp:cons "ADM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apns))
      (common-lisp:list
       (common-lisp:cons "APNS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'baidu))
      (common-lisp:list
       (common-lisp:cons "Baidu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default))
      (common-lisp:list
       (common-lisp:cons "Default"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcm))
      (common-lisp:list
       (common-lisp:cons "GCM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass push-notification-template-response common-lisp:nil
                       ((adm :initarg :adm :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-adm
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (apns :initarg :apns :initform common-lisp:nil :type
                         (common-lisp:or apnspush-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-apns
                         :shape "APNSPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (baidu :initarg :baidu :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-baidu
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default :initarg :default :initform common-lisp:nil
                         :type
                         (common-lisp:or default-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-default
                         :shape "DefaultPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gcm :initarg :gcm :initform common-lisp:nil :type
                         (common-lisp:or android-push-notification-template
                                         common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-gcm
                         :shape "AndroidPushNotificationTemplate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-recommender-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-push-notification-template-response-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-template-type
                         :shape "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-push-notification-template-response-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-push-notification-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'push-notification-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'push-notification-template-response
                    'make-push-notification-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'adm))
      (common-lisp:list
       (common-lisp:cons "ADM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apns))
      (common-lisp:list
       (common-lisp:cons "APNS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'baidu))
      (common-lisp:list
       (common-lisp:cons "Baidu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default))
      (common-lisp:list
       (common-lisp:cons "Default"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcm))
      (common-lisp:list
       (common-lisp:cons "GCM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          push-notification-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-event-stream-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-event-stream-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (write-event-stream :initarg :write-event-stream
                         :initform
                         (common-lisp:error ":write-event-stream is required")
                         :type
                         (common-lisp:or write-event-stream common-lisp:null)
                         :accessor
                         struct-shape-put-event-stream-request-write-event-stream
                         :shape "WriteEventStream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-event-stream-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-event-stream-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-request 'make-put-event-stream-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'write-event-stream))
      (common-lisp:list
       (common-lisp:cons "WriteEventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'write-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass put-event-stream-response common-lisp:nil
                       ((event-stream :initarg :event-stream :initform
                         (common-lisp:error ":event-stream is required") :type
                         (common-lisp:or event-stream common-lisp:null)
                         :accessor
                         struct-shape-put-event-stream-response-event-stream
                         :shape "EventStream" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-event-stream-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-event-stream-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-event-stream-response
                    'make-put-event-stream-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-stream))
      (common-lisp:list
       (common-lisp:cons "EventStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          put-event-stream-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass put-events-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-put-events-request-application-id :shape
                         "__string" :location "uri" :location-name
                         "application-id")
                        (events-request :initarg :events-request :initform
                         (common-lisp:error ":events-request is required")
                         :type (common-lisp:or events-request common-lisp:null)
                         :accessor
                         struct-shape-put-events-request-events-request :shape
                         "EventsRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-request 'make-put-events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events-request))
      (common-lisp:list
       (common-lisp:cons "EventsRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'events-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input put-events-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass put-events-response common-lisp:nil
                       ((events-response :initarg :events-response :initform
                         (common-lisp:error ":events-response is required")
                         :type
                         (common-lisp:or events-response common-lisp:null)
                         :accessor
                         struct-shape-put-events-response-events-response
                         :shape "EventsResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-events-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-events-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-events-response 'make-put-events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'events-response))
      (common-lisp:list
       (common-lisp:cons "EventsResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'events-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input put-events-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass quiet-time common-lisp:nil
                       ((end :initarg :end :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-quiet-time-end :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start :initarg :start :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-quiet-time-start :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-quiet-time
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'quiet-time
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'quiet-time 'make-quiet-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input quiet-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input quiet-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end))
      (common-lisp:list
       (common-lisp:cons "End"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start))
      (common-lisp:list
       (common-lisp:cons "Start"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input quiet-time))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass random-split-activity common-lisp:nil
                       ((branches :initarg :branches :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-random-split-entry
                                         common-lisp:null)
                         :accessor struct-shape-random-split-activity-branches
                         :shape "ListOfRandomSplitEntry" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-random-split-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'random-split-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'random-split-activity 'make-random-split-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          random-split-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          random-split-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'branches))
      (common-lisp:list
       (common-lisp:cons "Branches"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          random-split-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass random-split-entry common-lisp:nil
                       ((next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-random-split-entry-next-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (percentage :initarg :percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-random-split-entry-percentage
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-random-split-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'random-split-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'random-split-entry 'make-random-split-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input random-split-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input random-split-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percentage))
      (common-lisp:list
       (common-lisp:cons "Percentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input random-split-entry))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass raw-email common-lisp:nil
                       ((data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or |__blob| common-lisp:null) :accessor
                         struct-shape-raw-email-data :shape "__blob" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-raw-email
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'raw-email
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'raw-email 'make-raw-email))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input raw-email))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input raw-email))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input raw-email))
   common-lisp:nil))
(common-lisp:deftype |__blob| ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass recency-dimension common-lisp:nil
                       ((duration :initarg :duration :initform
                         (common-lisp:error ":duration is required") :type
                         (common-lisp:or duration common-lisp:null) :accessor
                         struct-shape-recency-dimension-duration :shape
                         "Duration" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recency-type :initarg :recency-type :initform
                         (common-lisp:error ":recency-type is required") :type
                         (common-lisp:or recency-type common-lisp:null)
                         :accessor struct-shape-recency-dimension-recency-type
                         :shape "RecencyType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recency-dimension
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recency-dimension
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recency-dimension 'make-recency-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recency-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recency-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recency-type))
      (common-lisp:list
       (common-lisp:cons "RecencyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recency-dimension))
   common-lisp:nil))
(common-lisp:deftype recency-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommender-configuration-response common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-recommender-configuration-response-attributes
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-recommender-configuration-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-id-type :initarg
                         :recommendation-provider-id-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-recommendation-provider-id-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-role-arn :initarg
                         :recommendation-provider-role-arn :initform
                         (common-lisp:error
                          ":recommendation-provider-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-recommender-configuration-response-recommendation-provider-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-uri :initarg
                         :recommendation-provider-uri :initform
                         (common-lisp:error
                          ":recommendation-provider-uri is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-recommender-configuration-response-recommendation-provider-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-transformer-uri :initarg
                         :recommendation-transformer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-recommendation-transformer-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-display-name :initarg
                         :recommendations-display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-recommender-configuration-response-recommendations-display-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-per-message :initarg
                         :recommendations-per-message :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-recommender-configuration-response-recommendations-per-message
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommender-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommender-configuration-response
                    'make-recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommender-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommender-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-id-type))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderIdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-role-arn))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-transformer-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationTransformerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-display-name))
      (common-lisp:list
       (common-lisp:cons "RecommendationsDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-per-message))
      (common-lisp:list
       (common-lisp:cons "RecommendationsPerMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommender-configuration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-attributes-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-remove-attributes-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (attribute-type :initarg :attribute-type :initform
                         (common-lisp:error ":attribute-type is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-remove-attributes-request-attribute-type
                         :shape "__string" :location "uri" :location-name
                         "attribute-type")
                        (update-attributes-request :initarg
                         :update-attributes-request :initform
                         (common-lisp:error
                          ":update-attributes-request is required")
                         :type
                         (common-lisp:or update-attributes-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-remove-attributes-request-update-attributes-request
                         :shape "UpdateAttributesRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-attributes-request
                    'make-remove-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-attributes-request))
      (common-lisp:list
       (common-lisp:cons "UpdateAttributesRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'update-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass remove-attributes-response common-lisp:nil
                       ((attributes-resource :initarg :attributes-resource
                         :initform
                         (common-lisp:error ":attributes-resource is required")
                         :type
                         (common-lisp:or attributes-resource common-lisp:null)
                         :accessor
                         struct-shape-remove-attributes-response-attributes-resource
                         :shape "AttributesResource" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'remove-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-attributes-response
                    'make-remove-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes-resource))
      (common-lisp:list
       (common-lisp:cons "AttributesResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'attributes-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          remove-attributes-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass result-row common-lisp:nil
                       ((grouped-bys :initarg :grouped-bys :initform
                         (common-lisp:error ":grouped-bys is required") :type
                         (common-lisp:or list-of-result-row-value
                                         common-lisp:null)
                         :accessor struct-shape-result-row-grouped-bys :shape
                         "ListOfResultRowValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or list-of-result-row-value
                                         common-lisp:null)
                         :accessor struct-shape-result-row-values :shape
                         "ListOfResultRowValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-result-row
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'result-row
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'result-row 'make-result-row))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input result-row))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input result-row))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'grouped-bys))
      (common-lisp:list
       (common-lisp:cons "GroupedBys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input result-row))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass result-row-value common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-result-row-value-key :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-result-row-value-type :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-result-row-value-value :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-result-row-value
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'result-row-value
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'result-row-value 'make-result-row-value))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input result-row-value))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input result-row-value))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input result-row-value))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smschannel-request common-lisp:nil
                       ((enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-smschannel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-request-sender-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (short-code :initarg :short-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-request-short-code :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smschannel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smschannel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smschannel-request 'make-smschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smschannel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smschannel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'short-code))
      (common-lisp:list
       (common-lisp:cons "ShortCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smschannel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smschannel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-application-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-smschannel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-smschannel-response-has-credential :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-smschannel-response-is-archived
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (promotional-messages-per-second :initarg
                         :promotional-messages-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-smschannel-response-promotional-messages-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-sender-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (short-code :initarg :short-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smschannel-response-short-code :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (transactional-messages-per-second :initarg
                         :transactional-messages-per-second :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-smschannel-response-transactional-messages-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-smschannel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smschannel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smschannel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smschannel-response 'make-smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smschannel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smschannel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'promotional-messages-per-second))
      (common-lisp:list
       (common-lisp:cons "PromotionalMessagesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'short-code))
      (common-lisp:list
       (common-lisp:cons "ShortCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'transactional-messages-per-second))
      (common-lisp:list
       (common-lisp:cons "TransactionalMessagesPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smschannel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smsmessage common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (keyword :initarg :keyword :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-smsmessage-keyword :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (media-url :initarg :media-url :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-media-url :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-type :initarg :message-type :initform
                         common-lisp:nil :type
                         (common-lisp:or message-type common-lisp:null)
                         :accessor struct-shape-smsmessage-message-type :shape
                         "MessageType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (origination-number :initarg :origination-number
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-origination-number :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sender-id :initarg :sender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-sender-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-smsmessage-substitutions :shape
                         "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-id :initarg :entity-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-entity-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-id :initarg :template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-template-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smsmessage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smsmessage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'smsmessage 'make-smsmessage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smsmessage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smsmessage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'keyword))
      (common-lisp:list
       (common-lisp:cons "Keyword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'media-url))
      (common-lisp:list
       (common-lisp:cons "MediaUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-type))
      (common-lisp:list
       (common-lisp:cons "MessageType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination-number))
      (common-lisp:list
       (common-lisp:cons "OriginationNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sender-id))
      (common-lisp:list
       (common-lisp:cons "SenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-id))
      (common-lisp:list
       (common-lisp:cons "EntityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-id))
      (common-lisp:list
       (common-lisp:cons "TemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smsmessage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smsmessage-activity common-lisp:nil
                       ((message-config :initarg :message-config :initform
                         common-lisp:nil :type
                         (common-lisp:or journey-smsmessage common-lisp:null)
                         :accessor
                         struct-shape-smsmessage-activity-message-config :shape
                         "JourneySMSMessage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-activity-next-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-activity-template-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-version :initarg :template-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smsmessage-activity-template-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smsmessage-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smsmessage-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smsmessage-activity 'make-smsmessage-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smsmessage-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smsmessage-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-config))
      (common-lisp:list
       (common-lisp:cons "MessageConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-version))
      (common-lisp:list
       (common-lisp:cons "TemplateVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smsmessage-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smstemplate-request common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-request-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-request-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-request-recommender-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-smstemplate-request-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-request-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smstemplate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smstemplate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smstemplate-request 'make-smstemplate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smstemplate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smstemplate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smstemplate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass smstemplate-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-smstemplate-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommender-id :initarg :recommender-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-recommender-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-smstemplate-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-smstemplate-response-template-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor
                         struct-shape-smstemplate-response-template-type :shape
                         "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-smstemplate-response-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smstemplate-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smstemplate-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smstemplate-response 'make-smstemplate-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smstemplate-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smstemplate-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-id))
      (common-lisp:list
       (common-lisp:cons "RecommenderId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smstemplate-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass schedule common-lisp:nil
                       ((end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-schedule-end-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-filter :initarg :event-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-event-filter
                                         common-lisp:null)
                         :accessor struct-shape-schedule-event-filter :shape
                         "CampaignEventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (frequency :initarg :frequency :initform
                         common-lisp:nil :type
                         (common-lisp:or frequency common-lisp:null) :accessor
                         struct-shape-schedule-frequency :shape "Frequency"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-local-time :initarg :is-local-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-schedule-is-local-time :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-schedule-quiet-time :shape "QuietTime"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-schedule-start-time :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-schedule-timezone :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'schedule 'make-schedule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input schedule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input schedule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'frequency))
      (common-lisp:list
       (common-lisp:cons "Frequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-local-time))
      (common-lisp:list
       (common-lisp:cons "IsLocalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input schedule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-behaviors common-lisp:nil
                       ((recency :initarg :recency :initform common-lisp:nil
                         :type
                         (common-lisp:or recency-dimension common-lisp:null)
                         :accessor struct-shape-segment-behaviors-recency
                         :shape "RecencyDimension" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-behaviors
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-behaviors
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-behaviors 'make-segment-behaviors))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-behaviors))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-behaviors))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recency))
      (common-lisp:list
       (common-lisp:cons "Recency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-behaviors))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-condition common-lisp:nil
                       ((segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-condition-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-condition 'make-segment-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-demographics common-lisp:nil
                       ((app-version :initarg :app-version :initform
                         common-lisp:nil :type
                         (common-lisp:or set-dimension common-lisp:null)
                         :accessor
                         struct-shape-segment-demographics-app-version :shape
                         "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel :initarg :channel :initform common-lisp:nil
                         :type (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-segment-demographics-channel
                         :shape "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-type :initarg :device-type :initform
                         common-lisp:nil :type
                         (common-lisp:or set-dimension common-lisp:null)
                         :accessor
                         struct-shape-segment-demographics-device-type :shape
                         "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (make :initarg :make :initform common-lisp:nil :type
                         (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-segment-demographics-make
                         :shape "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model :initarg :model :initform common-lisp:nil :type
                         (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-segment-demographics-model
                         :shape "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform common-lisp:nil
                         :type (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-segment-demographics-platform
                         :shape "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-demographics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-demographics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-demographics 'make-segment-demographics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-demographics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-demographics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'app-version))
      (common-lisp:list
       (common-lisp:cons "AppVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type))
      (common-lisp:list
       (common-lisp:cons "DeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'make))
      (common-lisp:list
       (common-lisp:cons "Make"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model))
      (common-lisp:list
       (common-lisp:cons "Model"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-demographics))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-dimensions common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-attribute-dimension
                                         common-lisp:null)
                         :accessor struct-shape-segment-dimensions-attributes
                         :shape "MapOfAttributeDimension" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (behavior :initarg :behavior :initform common-lisp:nil
                         :type
                         (common-lisp:or segment-behaviors common-lisp:null)
                         :accessor struct-shape-segment-dimensions-behavior
                         :shape "SegmentBehaviors" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (demographic :initarg :demographic :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-demographics common-lisp:null)
                         :accessor struct-shape-segment-dimensions-demographic
                         :shape "SegmentDemographics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or segment-location common-lisp:null)
                         :accessor struct-shape-segment-dimensions-location
                         :shape "SegmentLocation" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics :initarg :metrics :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-metric-dimension
                                         common-lisp:null)
                         :accessor struct-shape-segment-dimensions-metrics
                         :shape "MapOfMetricDimension" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-attributes :initarg :user-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-attribute-dimension
                                         common-lisp:null)
                         :accessor
                         struct-shape-segment-dimensions-user-attributes :shape
                         "MapOfAttributeDimension" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-dimensions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-dimensions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-dimensions 'make-segment-dimensions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-dimensions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-dimensions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'behavior))
      (common-lisp:list
       (common-lisp:cons "Behavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'demographic))
      (common-lisp:list
       (common-lisp:cons "Demographic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "Location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics))
      (common-lisp:list
       (common-lisp:cons "Metrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-attributes))
      (common-lisp:list
       (common-lisp:cons "UserAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-dimensions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-group common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-segment-dimensions
                                         common-lisp:null)
                         :accessor struct-shape-segment-group-dimensions :shape
                         "ListOfSegmentDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-segments :initarg :source-segments :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-segment-reference
                                         common-lisp:null)
                         :accessor struct-shape-segment-group-source-segments
                         :shape "ListOfSegmentReference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (source-type :initarg :source-type :initform
                         common-lisp:nil :type
                         (common-lisp:or source-type common-lisp:null)
                         :accessor struct-shape-segment-group-source-type
                         :shape "SourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or type common-lisp:null) :accessor
                         struct-shape-segment-group-type :shape "Type"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-group
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-group
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'segment-group 'make-segment-group))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-group))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-group))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-segments))
      (common-lisp:list
       (common-lisp:cons "SourceSegments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-type))
      (common-lisp:list
       (common-lisp:cons "SourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-group))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-group-list common-lisp:nil
                       ((groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-segment-group
                                         common-lisp:null)
                         :accessor struct-shape-segment-group-list-groups
                         :shape "ListOfSegmentGroup" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include :initarg :include :initform common-lisp:nil
                         :type (common-lisp:or include common-lisp:null)
                         :accessor struct-shape-segment-group-list-include
                         :shape "Include" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-group-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-group-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-group-list 'make-segment-group-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-group-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-group-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "Groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include))
      (common-lisp:list
       (common-lisp:cons "Include"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-group-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-import-resource common-lisp:nil
                       ((channel-counts :initarg :channel-counts :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-integer common-lisp:null)
                         :accessor
                         struct-shape-segment-import-resource-channel-counts
                         :shape "MapOf__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (external-id :initarg :external-id :initform
                         (common-lisp:error ":external-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-import-resource-external-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or format common-lisp:null) :accessor
                         struct-shape-segment-import-resource-format :shape
                         "Format" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-import-resource-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url :initarg :s3url :initform
                         (common-lisp:error ":s3url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-import-resource-s3url :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (size :initarg :size :initform
                         (common-lisp:error ":size is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-segment-import-resource-size
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-import-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-import-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-import-resource 'make-segment-import-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-counts))
      (common-lisp:list
       (common-lisp:cons "ChannelCounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-id))
      (common-lisp:list
       (common-lisp:cons "ExternalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "Format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size))
      (common-lisp:list
       (common-lisp:cons "Size"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          segment-import-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-location common-lisp:nil
                       ((country :initarg :country :initform common-lisp:nil
                         :type (common-lisp:or set-dimension common-lisp:null)
                         :accessor struct-shape-segment-location-country :shape
                         "SetDimension" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gpspoint :initarg :gpspoint :initform common-lisp:nil
                         :type
                         (common-lisp:or gpspoint-dimension common-lisp:null)
                         :accessor struct-shape-segment-location-gpspoint
                         :shape "GPSPointDimension" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-location 'make-segment-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'country))
      (common-lisp:list
       (common-lisp:cons "Country"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gpspoint))
      (common-lisp:list
       (common-lisp:cons "GPSPoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-location))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-reference common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-reference-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-segment-reference-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-reference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-reference
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-reference 'make-segment-reference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-reference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-reference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-reference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass segment-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-segment-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-response-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-dimensions common-lisp:null)
                         :accessor struct-shape-segment-response-dimensions
                         :shape "SegmentDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-response-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (import-definition :initarg :import-definition
                         :initform common-lisp:nil :type
                         (common-lisp:or segment-import-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-segment-response-import-definition :shape
                         "SegmentImportResource" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segment-response-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-groups :initarg :segment-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-group-list common-lisp:null)
                         :accessor struct-shape-segment-response-segment-groups
                         :shape "SegmentGroupList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-type :initarg :segment-type :initform
                         (common-lisp:error ":segment-type is required") :type
                         (common-lisp:or segment-type common-lisp:null)
                         :accessor struct-shape-segment-response-segment-type
                         :shape "SegmentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-segment-response-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-segment-response-version :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segment-response 'make-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'import-definition))
      (common-lisp:list
       (common-lisp:cons "ImportDefinition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-groups))
      (common-lisp:list
       (common-lisp:cons "SegmentGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-type))
      (common-lisp:list
       (common-lisp:cons "SegmentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segment-response))
   common-lisp:nil))
(common-lisp:deftype segment-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass segments-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-segment-response
                                         common-lisp:null)
                         :accessor struct-shape-segments-response-item :shape
                         "ListOfSegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-segments-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-segments-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'segments-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'segments-response 'make-segments-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input segments-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input segments-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input segments-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-messages-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-messages-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (message-request :initarg :message-request :initform
                         (common-lisp:error ":message-request is required")
                         :type
                         (common-lisp:or message-request common-lisp:null)
                         :accessor
                         struct-shape-send-messages-request-message-request
                         :shape "MessageRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-messages-request 'make-send-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-request))
      (common-lisp:list
       (common-lisp:cons "MessageRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass send-messages-response common-lisp:nil
                       ((message-response :initarg :message-response :initform
                         (common-lisp:error ":message-response is required")
                         :type
                         (common-lisp:or message-response common-lisp:null)
                         :accessor
                         struct-shape-send-messages-response-message-response
                         :shape "MessageResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-messages-response 'make-send-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-response))
      (common-lisp:list
       (common-lisp:cons "MessageResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-messages-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass send-otpmessage-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (send-otpmessage-request-parameters :initarg
                         :send-otpmessage-request-parameters :initform
                         (common-lisp:error
                          ":send-otpmessage-request-parameters is required")
                         :type
                         (common-lisp:or send-otpmessage-request-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-send-otpmessage-request-parameters
                         :shape "SendOTPMessageRequestParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-otpmessage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-otpmessage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-otpmessage-request 'make-send-otpmessage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'send-otpmessage-request-parameters))
      (common-lisp:list
       (common-lisp:cons "SendOTPMessageRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'send-otpmessage-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass send-otpmessage-request-parameters common-lisp:nil
                       ((allowed-attempts :initarg :allowed-attempts :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-allowed-attempts
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (brand-name :initarg :brand-name :initform
                         (common-lisp:error ":brand-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-otpmessage-request-parameters-brand-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel :initarg :channel :initform
                         (common-lisp:error ":channel is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-otpmessage-request-parameters-channel
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code-length :initarg :code-length :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-code-length
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-identity :initarg :destination-identity
                         :initform
                         (common-lisp:error
                          ":destination-identity is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-destination-identity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (entity-id :initarg :entity-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-otpmessage-request-parameters-entity-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language :initarg :language :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-language
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origination-identity :initarg :origination-identity
                         :initform
                         (common-lisp:error
                          ":origination-identity is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-origination-identity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reference-id :initarg :reference-id :initform
                         (common-lisp:error ":reference-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-otpmessage-request-parameters-reference-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-id :initarg :template-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-otpmessage-request-parameters-template-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (validity-period :initarg :validity-period :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-request-parameters-validity-period
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-otpmessage-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'send-otpmessage-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-otpmessage-request-parameters
                    'make-send-otpmessage-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'allowed-attempts))
      (common-lisp:list
       (common-lisp:cons "AllowedAttempts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'brand-name))
      (common-lisp:list
       (common-lisp:cons "BrandName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel))
      (common-lisp:list
       (common-lisp:cons "Channel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code-length))
      (common-lisp:list
       (common-lisp:cons "CodeLength"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-identity))
      (common-lisp:list
       (common-lisp:cons "DestinationIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'entity-id))
      (common-lisp:list
       (common-lisp:cons "EntityId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language))
      (common-lisp:list
       (common-lisp:cons "Language"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origination-identity))
      (common-lisp:list
       (common-lisp:cons "OriginationIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference-id))
      (common-lisp:list
       (common-lisp:cons "ReferenceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-id))
      (common-lisp:list
       (common-lisp:cons "TemplateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'validity-period))
      (common-lisp:list
       (common-lisp:cons "ValidityPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-otpmessage-response common-lisp:nil
                       ((message-response :initarg :message-response :initform
                         (common-lisp:error ":message-response is required")
                         :type
                         (common-lisp:or message-response common-lisp:null)
                         :accessor
                         struct-shape-send-otpmessage-response-message-response
                         :shape "MessageResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-otpmessage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-otpmessage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-otpmessage-response 'make-send-otpmessage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-response))
      (common-lisp:list
       (common-lisp:cons "MessageResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-otpmessage-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass send-users-message-request common-lisp:nil
                       ((context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-request-context :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform
                         (common-lisp:error
                          ":message-configuration is required")
                         :type
                         (common-lisp:or direct-message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-request-message-configuration
                         :shape "DirectMessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-request-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (trace-id :initarg :trace-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-request-trace-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (users :initarg :users :initform
                         (common-lisp:error ":users is required") :type
                         (common-lisp:or map-of-endpoint-send-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-request-users :shape
                         "MapOfEndpointSendConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-users-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-users-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-users-message-request
                    'make-send-users-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "Context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'trace-id))
      (common-lisp:list
       (common-lisp:cons "TraceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'users))
      (common-lisp:list
       (common-lisp:cons "Users"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-users-message-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-send-users-message-response-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (result :initarg :result :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-map-of-endpoint-message-result
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-message-response-result :shape
                         "MapOfMapOfEndpointMessageResult" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-users-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-users-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-users-message-response
                    'make-send-users-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'result))
      (common-lisp:list
       (common-lisp:cons "Result"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-users-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-users-messages-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-send-users-messages-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (send-users-message-request :initarg
                         :send-users-message-request :initform
                         (common-lisp:error
                          ":send-users-message-request is required")
                         :type
                         (common-lisp:or send-users-message-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-messages-request-send-users-message-request
                         :shape "SendUsersMessageRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-users-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-users-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-users-messages-request
                    'make-send-users-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'send-users-message-request))
      (common-lisp:list
       (common-lisp:cons "SendUsersMessageRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'send-users-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass send-users-messages-response common-lisp:nil
                       ((send-users-message-response :initarg
                         :send-users-message-response :initform
                         (common-lisp:error
                          ":send-users-message-response is required")
                         :type
                         (common-lisp:or send-users-message-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-users-messages-response-send-users-message-response
                         :shape "SendUsersMessageResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-users-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-users-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-users-messages-response
                    'make-send-users-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'send-users-message-response))
      (common-lisp:list
       (common-lisp:cons "SendUsersMessageResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'send-users-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          send-users-messages-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass session common-lisp:nil
                       ((duration :initarg :duration :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-session-duration :shape
                         "__integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-id :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (start-timestamp :initarg :start-timestamp :initform
                         (common-lisp:error ":start-timestamp is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-session-start-timestamp :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stop-timestamp :initarg :stop-timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-session-stop-timestamp :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-session
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'session
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'session 'make-session))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input session))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input session))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'duration))
      (common-lisp:list
       (common-lisp:cons "Duration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-timestamp))
      (common-lisp:list
       (common-lisp:cons "StartTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stop-timestamp))
      (common-lisp:list
       (common-lisp:cons "StopTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input session))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-dimension common-lisp:nil
                       ((dimension-type :initarg :dimension-type :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension-type common-lisp:null)
                         :accessor struct-shape-set-dimension-dimension-type
                         :shape "DimensionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform
                         (common-lisp:error ":values is required") :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-set-dimension-values :shape
                         "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-dimension
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-dimension
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'set-dimension 'make-set-dimension))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input set-dimension))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input set-dimension))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-type))
      (common-lisp:list
       (common-lisp:cons "DimensionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "Values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input set-dimension))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass simple-condition common-lisp:nil
                       ((event-condition :initarg :event-condition :initform
                         common-lisp:nil :type
                         (common-lisp:or event-condition common-lisp:null)
                         :accessor
                         struct-shape-simple-condition-event-condition :shape
                         "EventCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-condition :initarg :segment-condition
                         :initform common-lisp:nil :type
                         (common-lisp:or segment-condition common-lisp:null)
                         :accessor
                         struct-shape-simple-condition-segment-condition :shape
                         "SegmentCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-dimensions :initarg :segment-dimensions
                         :initform common-lisp:nil :type
                         (common-lisp:or segment-dimensions common-lisp:null)
                         :accessor
                         struct-shape-simple-condition-segment-dimensions
                         :shape "SegmentDimensions" :location common-lisp:nil
                         :location-name "segmentDimensions"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'simple-condition 'make-simple-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-condition))
      (common-lisp:list
       (common-lisp:cons "EventCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-condition))
      (common-lisp:list
       (common-lisp:cons "SegmentCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-dimensions))
      (common-lisp:list
       (common-lisp:cons "SegmentDimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-condition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass simple-email common-lisp:nil
                       ((html-part :initarg :html-part :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-email-part common-lisp:null)
                         :accessor struct-shape-simple-email-html-part :shape
                         "SimpleEmailPart" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type
                         (common-lisp:or simple-email-part common-lisp:null)
                         :accessor struct-shape-simple-email-subject :shape
                         "SimpleEmailPart" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text-part :initarg :text-part :initform
                         common-lisp:nil :type
                         (common-lisp:or simple-email-part common-lisp:null)
                         :accessor struct-shape-simple-email-text-part :shape
                         "SimpleEmailPart" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-email
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-email
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'simple-email 'make-simple-email))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-email))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-email))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html-part))
      (common-lisp:list
       (common-lisp:cons "HtmlPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text-part))
      (common-lisp:list
       (common-lisp:cons "TextPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-email))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass simple-email-part common-lisp:nil
                       ((charset :initarg :charset :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-simple-email-part-charset
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (data :initarg :data :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-simple-email-part-data :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-simple-email-part
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'simple-email-part
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'simple-email-part 'make-simple-email-part))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input simple-email-part))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input simple-email-part))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input simple-email-part))
   common-lisp:nil))
(common-lisp:deftype source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-condition common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-start-condition-description :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-start-condition :initarg :event-start-condition
                         :initform common-lisp:nil :type
                         (common-lisp:or event-start-condition
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-condition-event-start-condition
                         :shape "EventStartCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-start-condition :initarg
                         :segment-start-condition :initform common-lisp:nil
                         :type
                         (common-lisp:or segment-condition common-lisp:null)
                         :accessor
                         struct-shape-start-condition-segment-start-condition
                         :shape "SegmentCondition" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-condition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-condition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'start-condition 'make-start-condition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-condition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-condition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-start-condition))
      (common-lisp:list
       (common-lisp:cons "EventStartCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-start-condition))
      (common-lisp:list
       (common-lisp:cons "SegmentStartCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-condition))
   common-lisp:nil))
(common-lisp:deftype state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags-model :initarg :tags-model :initform
                         (common-lisp:error ":tags-model is required") :type
                         (common-lisp:or tags-model common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags-model :shape
                         "TagsModel" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags-model))
      (common-lisp:list
       (common-lisp:cons "TagsModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'tags-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass tags-model common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-tags-model-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tags-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tags-model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tags-model 'make-tags-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags-model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-name :shape "__string" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-template-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template-active-version-request common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-active-version-request-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-active-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'template-active-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-active-version-request
                    'make-template-active-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          template-active-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          template-active-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          template-active-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template-configuration common-lisp:nil
                       ((email-template :initarg :email-template :initform
                         common-lisp:nil :type
                         (common-lisp:or template common-lisp:null) :accessor
                         struct-shape-template-configuration-email-template
                         :shape "Template" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (push-template :initarg :push-template :initform
                         common-lisp:nil :type
                         (common-lisp:or template common-lisp:null) :accessor
                         struct-shape-template-configuration-push-template
                         :shape "Template" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smstemplate :initarg :smstemplate :initform
                         common-lisp:nil :type
                         (common-lisp:or template common-lisp:null) :accessor
                         struct-shape-template-configuration-smstemplate :shape
                         "Template" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (voice-template :initarg :voice-template :initform
                         common-lisp:nil :type
                         (common-lisp:or template common-lisp:null) :accessor
                         struct-shape-template-configuration-voice-template
                         :shape "Template" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (in-app-template :initarg :in-app-template :initform
                         common-lisp:nil :type
                         (common-lisp:or template common-lisp:null) :accessor
                         struct-shape-template-configuration-in-app-template
                         :shape "Template" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-configuration 'make-template-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          template-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          template-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-template))
      (common-lisp:list
       (common-lisp:cons "EmailTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push-template))
      (common-lisp:list
       (common-lisp:cons "PushTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smstemplate))
      (common-lisp:list
       (common-lisp:cons "SMSTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-template))
      (common-lisp:list
       (common-lisp:cons "VoiceTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'in-app-template))
      (common-lisp:list
       (common-lisp:cons "InAppTemplate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          template-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template-create-message-body common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-create-message-body-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-create-message-body-message
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-create-message-body-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-create-message-body
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template-create-message-body
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-create-message-body
                    'make-template-create-message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          template-create-message-body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          template-create-message-body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          template-create-message-body))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-response-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-response-creation-date :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-template-response-tags :shape
                         "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-response-template-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor struct-shape-template-response-template-type
                         :shape "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-template-response-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-response 'make-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template-response))
   common-lisp:nil))
(common-lisp:deftype template-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass template-version-response common-lisp:nil
                       ((creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-version-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-version-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-version-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-version-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-version-response-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-version-response-template-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-version-response-version :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-version-response
                    'make-template-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          template-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          template-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          template-version-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template-versions-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-template-version-response
                                         common-lisp:null)
                         :accessor struct-shape-template-versions-response-item
                         :shape "ListOfTemplateVersionResponse" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-template-versions-response-message :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-versions-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-id :initarg :request-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-template-versions-response-request-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template-versions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template-versions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'template-versions-response
                    'make-template-versions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          template-versions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          template-versions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-id))
      (common-lisp:list
       (common-lisp:cons "RequestID"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          template-versions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass templates-response common-lisp:nil
                       ((item :initarg :item :initform
                         (common-lisp:error ":item is required") :type
                         (common-lisp:or list-of-template-response
                                         common-lisp:null)
                         :accessor struct-shape-templates-response-item :shape
                         "ListOfTemplateResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-templates-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-templates-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'templates-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'templates-response 'make-templates-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input templates-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input templates-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "Item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input templates-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (pinpoint-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)
      (request-id :initarg :request-id :initform common-lisp:nil :reader
       too-many-requests-exception-request-id)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message
                    'too-many-requests-exception-request-id)))
(common-lisp:progn
 (common-lisp:defclass treatment-resource common-lisp:nil
                       ((custom-delivery-configuration :initarg
                         :custom-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-treatment-resource-custom-delivery-configuration
                         :shape "CustomDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-treatment-resource-id :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-treatment-resource-message-configuration
                         :shape "MessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or schedule common-lisp:null)
                         :accessor struct-shape-treatment-resource-schedule
                         :shape "Schedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (size-percent :initarg :size-percent :initform
                         (common-lisp:error ":size-percent is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-treatment-resource-size-percent
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or campaign-state common-lisp:null)
                         :accessor struct-shape-treatment-resource-state :shape
                         "CampaignState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-treatment-resource-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (treatment-description :initarg :treatment-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-treatment-resource-treatment-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (treatment-name :initarg :treatment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-treatment-resource-treatment-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-treatment-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'treatment-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'treatment-resource 'make-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input treatment-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input treatment-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "CustomDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-percent))
      (common-lisp:list
       (common-lisp:cons "SizePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input treatment-resource))
   common-lisp:nil))
(common-lisp:deftype type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "ListOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-adm-channel-request common-lisp:nil
                       ((admchannel-request :initarg :admchannel-request
                         :initform
                         (common-lisp:error ":admchannel-request is required")
                         :type
                         (common-lisp:or admchannel-request common-lisp:null)
                         :accessor
                         struct-shape-update-adm-channel-request-admchannel-request
                         :shape "ADMChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-adm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-adm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-adm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-adm-channel-request
                    'make-update-adm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admchannel-request))
      (common-lisp:list
       (common-lisp:cons "ADMChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'admchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-adm-channel-response common-lisp:nil
                       ((admchannel-response :initarg :admchannel-response
                         :initform
                         (common-lisp:error ":admchannel-response is required")
                         :type
                         (common-lisp:or admchannel-response common-lisp:null)
                         :accessor
                         struct-shape-update-adm-channel-response-admchannel-response
                         :shape "ADMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-adm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-adm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-adm-channel-response
                    'make-update-adm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admchannel-response))
      (common-lisp:list
       (common-lisp:cons "ADMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'admchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-adm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-channel-request common-lisp:nil
                       ((apnschannel-request :initarg :apnschannel-request
                         :initform
                         (common-lisp:error ":apnschannel-request is required")
                         :type
                         (common-lisp:or apnschannel-request common-lisp:null)
                         :accessor
                         struct-shape-update-apns-channel-request-apnschannel-request
                         :shape "APNSChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-apns-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-apns-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-request
                    'make-update-apns-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'apnschannel-request))
      (common-lisp:list
       (common-lisp:cons "APNSChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-channel-response common-lisp:nil
                       ((apnschannel-response :initarg :apnschannel-response
                         :initform
                         (common-lisp:error
                          ":apnschannel-response is required")
                         :type
                         (common-lisp:or apnschannel-response common-lisp:null)
                         :accessor
                         struct-shape-update-apns-channel-response-apnschannel-response
                         :shape "APNSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-apns-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-channel-response
                    'make-update-apns-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnschannel-response))
      (common-lisp:list
       (common-lisp:cons "APNSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-sandbox-channel-request common-lisp:nil
                       ((apnssandbox-channel-request :initarg
                         :apnssandbox-channel-request :initform
                         (common-lisp:error
                          ":apnssandbox-channel-request is required")
                         :type
                         (common-lisp:or apnssandbox-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-sandbox-channel-request-apnssandbox-channel-request
                         :shape "APNSSandboxChannelRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-apns-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-request
                    'make-update-apns-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-request))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-sandbox-channel-response common-lisp:nil
                       ((apnssandbox-channel-response :initarg
                         :apnssandbox-channel-response :initform
                         (common-lisp:error
                          ":apnssandbox-channel-response is required")
                         :type
                         (common-lisp:or apnssandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-sandbox-channel-response-apnssandbox-channel-response
                         :shape "APNSSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-sandbox-channel-response
                    'make-update-apns-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnssandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-voip-channel-request common-lisp:nil
                       ((apnsvoip-channel-request :initarg
                         :apnsvoip-channel-request :initform
                         (common-lisp:error
                          ":apnsvoip-channel-request is required")
                         :type
                         (common-lisp:or apnsvoip-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-channel-request-apnsvoip-channel-request
                         :shape "APNSVoipChannelRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-voip-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-voip-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-voip-channel-request
                    'make-update-apns-voip-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-channel-request))
      (common-lisp:list
       (common-lisp:cons "APNSVoipChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-voip-channel-response common-lisp:nil
                       ((apnsvoip-channel-response :initarg
                         :apnsvoip-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-channel-response-apnsvoip-channel-response
                         :shape "APNSVoipChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-voip-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-voip-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-voip-channel-response
                    'make-update-apns-voip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-voip-sandbox-channel-request common-lisp:nil
                       ((apnsvoip-sandbox-channel-request :initarg
                         :apnsvoip-sandbox-channel-request :initform
                         (common-lisp:error
                          ":apnsvoip-sandbox-channel-request is required")
                         :type
                         (common-lisp:or apnsvoip-sandbox-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-sandbox-channel-request-apnsvoip-sandbox-channel-request
                         :shape "APNSVoipSandboxChannelRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-sandbox-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-voip-sandbox-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-voip-sandbox-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-voip-sandbox-channel-request
                    'make-update-apns-voip-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-request))
      (common-lisp:list
       (common-lisp:cons "APNSVoipSandboxChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-apns-voip-sandbox-channel-response
                       common-lisp:nil
                       ((apnsvoip-sandbox-channel-response :initarg
                         :apnsvoip-sandbox-channel-response :initform
                         (common-lisp:error
                          ":apnsvoip-sandbox-channel-response is required")
                         :type
                         (common-lisp:or apnsvoip-sandbox-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-apns-voip-sandbox-channel-response-apnsvoip-sandbox-channel-response
                         :shape "APNSVoipSandboxChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-apns-voip-sandbox-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-apns-voip-sandbox-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-apns-voip-sandbox-channel-response
                    'make-update-apns-voip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
      (common-lisp:list
       (common-lisp:cons "APNSVoipSandboxChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'apnsvoip-sandbox-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-apns-voip-sandbox-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-application-settings-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-application-settings-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (write-application-settings-request :initarg
                         :write-application-settings-request :initform
                         (common-lisp:error
                          ":write-application-settings-request is required")
                         :type
                         (common-lisp:or write-application-settings-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-application-settings-request-write-application-settings-request
                         :shape "WriteApplicationSettingsRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-application-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-request
                    'make-update-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-application-settings-request))
      (common-lisp:list
       (common-lisp:cons "WriteApplicationSettingsRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-application-settings-response common-lisp:nil
                       ((application-settings-resource :initarg
                         :application-settings-resource :initform
                         (common-lisp:error
                          ":application-settings-resource is required")
                         :type
                         (common-lisp:or application-settings-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-application-settings-response-application-settings-resource
                         :shape "ApplicationSettingsResource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-settings-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-application-settings-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-settings-response
                    'make-update-application-settings-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-settings-resource))
      (common-lisp:list
       (common-lisp:cons "ApplicationSettingsResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'application-settings-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-application-settings-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-attributes-request common-lisp:nil
                       ((blacklist :initarg :blacklist :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-update-attributes-request-blacklist
                         :shape "ListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-attributes-request
                    'make-update-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blacklist))
      (common-lisp:list
       (common-lisp:cons "Blacklist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-baidu-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-baidu-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (baidu-channel-request :initarg :baidu-channel-request
                         :initform
                         (common-lisp:error
                          ":baidu-channel-request is required")
                         :type
                         (common-lisp:or baidu-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-baidu-channel-request-baidu-channel-request
                         :shape "BaiduChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-baidu-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-baidu-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-baidu-channel-request
                    'make-update-baidu-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'baidu-channel-request))
      (common-lisp:list
       (common-lisp:cons "BaiduChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'baidu-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-baidu-channel-response common-lisp:nil
                       ((baidu-channel-response :initarg
                         :baidu-channel-response :initform
                         (common-lisp:error
                          ":baidu-channel-response is required")
                         :type
                         (common-lisp:or baidu-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-baidu-channel-response-baidu-channel-response
                         :shape "BaiduChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-baidu-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-baidu-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-baidu-channel-response
                    'make-update-baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'baidu-channel-response))
      (common-lisp:list
       (common-lisp:cons "BaiduChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'baidu-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-baidu-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-campaign-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-campaign-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-campaign-request-campaign-id
                         :shape "__string" :location "uri" :location-name
                         "campaign-id")
                        (write-campaign-request :initarg
                         :write-campaign-request :initform
                         (common-lisp:error
                          ":write-campaign-request is required")
                         :type
                         (common-lisp:or write-campaign-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-campaign-request-write-campaign-request
                         :shape "WriteCampaignRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-campaign-request 'make-update-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-campaign-request))
      (common-lisp:list
       (common-lisp:cons "WriteCampaignRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-campaign-response common-lisp:nil
                       ((campaign-response :initarg :campaign-response
                         :initform
                         (common-lisp:error ":campaign-response is required")
                         :type
                         (common-lisp:or campaign-response common-lisp:null)
                         :accessor
                         struct-shape-update-campaign-response-campaign-response
                         :shape "CampaignResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-campaign-response 'make-update-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-response))
      (common-lisp:list
       (common-lisp:cons "CampaignResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-campaign-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-email-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-email-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (email-channel-request :initarg :email-channel-request
                         :initform
                         (common-lisp:error
                          ":email-channel-request is required")
                         :type
                         (common-lisp:or email-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-email-channel-request-email-channel-request
                         :shape "EmailChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-email-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-email-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-request
                    'make-update-email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-request))
      (common-lisp:list
       (common-lisp:cons "EmailChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-email-channel-response common-lisp:nil
                       ((email-channel-response :initarg
                         :email-channel-response :initform
                         (common-lisp:error
                          ":email-channel-response is required")
                         :type
                         (common-lisp:or email-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-email-channel-response-email-channel-response
                         :shape "EmailChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-email-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-email-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-email-channel-response
                    'make-update-email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-channel-response))
      (common-lisp:list
       (common-lisp:cons "EmailChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-email-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-email-template-request common-lisp:nil
                       ((create-new-version :initarg :create-new-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-email-template-request-create-new-version
                         :shape "__boolean" :location "querystring"
                         :location-name "create-new-version")
                        (email-template-request :initarg
                         :email-template-request :initform
                         (common-lisp:error
                          ":email-template-request is required")
                         :type
                         (common-lisp:or email-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-email-template-request-email-template-request
                         :shape "EmailTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-email-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-email-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-email-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-email-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-email-template-request
                    'make-update-email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-template-request))
      (common-lisp:list
       (common-lisp:cons "EmailTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'email-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-email-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-email-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-email-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-email-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-email-template-response
                    'make-update-email-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-email-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (endpoint-id :initarg :endpoint-id :initform
                         (common-lisp:error ":endpoint-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-endpoint-request-endpoint-id
                         :shape "__string" :location "uri" :location-name
                         "endpoint-id")
                        (endpoint-request :initarg :endpoint-request :initform
                         (common-lisp:error ":endpoint-request is required")
                         :type
                         (common-lisp:or endpoint-request common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-request-endpoint-request
                         :shape "EndpointRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-request 'make-update-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-request))
      (common-lisp:list
       (common-lisp:cons "EndpointRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-endpoint-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-endpoint-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoint-response 'make-update-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoint-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-endpoints-batch-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-endpoints-batch-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (endpoint-batch-request :initarg
                         :endpoint-batch-request :initform
                         (common-lisp:error
                          ":endpoint-batch-request is required")
                         :type
                         (common-lisp:or endpoint-batch-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-endpoints-batch-request-endpoint-batch-request
                         :shape "EndpointBatchRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoints-batch-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-endpoints-batch-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-request
                    'make-update-endpoints-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-batch-request))
      (common-lisp:list
       (common-lisp:cons "EndpointBatchRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'endpoint-batch-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-endpoints-batch-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-endpoints-batch-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-endpoints-batch-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-endpoints-batch-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-endpoints-batch-response
                    'make-update-endpoints-batch-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-endpoints-batch-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-gcm-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-gcm-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (gcmchannel-request :initarg :gcmchannel-request
                         :initform
                         (common-lisp:error ":gcmchannel-request is required")
                         :type
                         (common-lisp:or gcmchannel-request common-lisp:null)
                         :accessor
                         struct-shape-update-gcm-channel-request-gcmchannel-request
                         :shape "GCMChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gcm-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-gcm-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-request
                    'make-update-gcm-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-request))
      (common-lisp:list
       (common-lisp:cons "GCMChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'gcmchannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-gcm-channel-response common-lisp:nil
                       ((gcmchannel-response :initarg :gcmchannel-response
                         :initform
                         (common-lisp:error ":gcmchannel-response is required")
                         :type
                         (common-lisp:or gcmchannel-response common-lisp:null)
                         :accessor
                         struct-shape-update-gcm-channel-response-gcmchannel-response
                         :shape "GCMChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gcm-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-gcm-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gcm-channel-response
                    'make-update-gcm-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gcmchannel-response))
      (common-lisp:list
       (common-lisp:cons "GCMChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'gcmchannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-gcm-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-in-app-template-request common-lisp:nil
                       ((create-new-version :initarg :create-new-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-in-app-template-request-create-new-version
                         :shape "__boolean" :location "querystring"
                         :location-name "create-new-version")
                        (in-app-template-request :initarg
                         :in-app-template-request :initform
                         (common-lisp:error
                          ":in-app-template-request is required")
                         :type
                         (common-lisp:or in-app-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-in-app-template-request-in-app-template-request
                         :shape "InAppTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-in-app-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-in-app-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-in-app-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-in-app-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-in-app-template-request
                    'make-update-in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'in-app-template-request))
      (common-lisp:list
       (common-lisp:cons "InAppTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'in-app-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-in-app-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-in-app-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-in-app-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-in-app-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-in-app-template-response
                    'make-update-in-app-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-in-app-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-journey-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-journey-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-journey-request-journey-id :shape
                         "__string" :location "uri" :location-name
                         "journey-id")
                        (write-journey-request :initarg :write-journey-request
                         :initform
                         (common-lisp:error
                          ":write-journey-request is required")
                         :type
                         (common-lisp:or write-journey-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-journey-request-write-journey-request
                         :shape "WriteJourneyRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-journey-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-journey-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-journey-request 'make-update-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-journey-request))
      (common-lisp:list
       (common-lisp:cons "WriteJourneyRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-journey-response common-lisp:nil
                       ((journey-response :initarg :journey-response :initform
                         (common-lisp:error ":journey-response is required")
                         :type
                         (common-lisp:or journey-response common-lisp:null)
                         :accessor
                         struct-shape-update-journey-response-journey-response
                         :shape "JourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-journey-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-journey-response 'make-update-journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-response))
      (common-lisp:list
       (common-lisp:cons "JourneyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-journey-state-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-journey-state-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (journey-id :initarg :journey-id :initform
                         (common-lisp:error ":journey-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-journey-state-request-journey-id
                         :shape "__string" :location "uri" :location-name
                         "journey-id")
                        (journey-state-request :initarg :journey-state-request
                         :initform
                         (common-lisp:error
                          ":journey-state-request is required")
                         :type
                         (common-lisp:or journey-state-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-journey-state-request-journey-state-request
                         :shape "JourneyStateRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-journey-state-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-journey-state-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-journey-state-request
                    'make-update-journey-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-state-request))
      (common-lisp:list
       (common-lisp:cons "JourneyStateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'journey-state-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-journey-state-response common-lisp:nil
                       ((journey-response :initarg :journey-response :initform
                         (common-lisp:error ":journey-response is required")
                         :type
                         (common-lisp:or journey-response common-lisp:null)
                         :accessor
                         struct-shape-update-journey-state-response-journey-response
                         :shape "JourneyResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-journey-state-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-journey-state-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-journey-state-response
                    'make-update-journey-state-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-response))
      (common-lisp:list
       (common-lisp:cons "JourneyResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'journey-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-journey-state-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-push-template-request common-lisp:nil
                       ((create-new-version :initarg :create-new-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-push-template-request-create-new-version
                         :shape "__boolean" :location "querystring"
                         :location-name "create-new-version")
                        (push-notification-template-request :initarg
                         :push-notification-template-request :initform
                         (common-lisp:error
                          ":push-notification-template-request is required")
                         :type
                         (common-lisp:or push-notification-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-push-template-request-push-notification-template-request
                         :shape "PushNotificationTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-push-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-push-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-push-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-push-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-push-template-request
                    'make-update-push-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'push-notification-template-request))
      (common-lisp:list
       (common-lisp:cons "PushNotificationTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'push-notification-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-push-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-push-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-push-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-push-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-push-template-response
                    'make-update-push-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-push-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-recommender-configuration common-lisp:nil
                       ((attributes :initarg :attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-attributes
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-recommender-configuration-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-recommender-configuration-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-id-type :initarg
                         :recommendation-provider-id-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-recommender-configuration-recommendation-provider-id-type
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-role-arn :initarg
                         :recommendation-provider-role-arn :initform
                         (common-lisp:error
                          ":recommendation-provider-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-recommendation-provider-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-provider-uri :initarg
                         :recommendation-provider-uri :initform
                         (common-lisp:error
                          ":recommendation-provider-uri is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-recommendation-provider-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-transformer-uri :initarg
                         :recommendation-transformer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-recommender-configuration-recommendation-transformer-uri
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-display-name :initarg
                         :recommendations-display-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-recommender-configuration-recommendations-display-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendations-per-message :initarg
                         :recommendations-per-message :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-recommendations-per-message
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recommender-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recommender-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recommender-configuration
                    'make-update-recommender-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'attributes))
      (common-lisp:list
       (common-lisp:cons "Attributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-id-type))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderIdType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-role-arn))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-provider-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationProviderUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-transformer-uri))
      (common-lisp:list
       (common-lisp:cons "RecommendationTransformerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-display-name))
      (common-lisp:list
       (common-lisp:cons "RecommendationsDisplayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendations-per-message))
      (common-lisp:list
       (common-lisp:cons "RecommendationsPerMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-recommender-configuration-request common-lisp:nil
                       ((recommender-id :initarg :recommender-id :initform
                         (common-lisp:error ":recommender-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-request-recommender-id
                         :shape "__string" :location "uri" :location-name
                         "recommender-id")
                        (update-recommender-configuration :initarg
                         :update-recommender-configuration :initform
                         (common-lisp:error
                          ":update-recommender-configuration is required")
                         :type
                         (common-lisp:or update-recommender-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-request-update-recommender-configuration
                         :shape "UpdateRecommenderConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recommender-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recommender-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recommender-configuration-request
                    'make-update-recommender-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'update-recommender-configuration))
      (common-lisp:list
       (common-lisp:cons "UpdateRecommenderConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'update-recommender-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-recommender-configuration-response
                       common-lisp:nil
                       ((recommender-configuration-response :initarg
                         :recommender-configuration-response :initform
                         (common-lisp:error
                          ":recommender-configuration-response is required")
                         :type
                         (common-lisp:or recommender-configuration-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recommender-configuration-response-recommender-configuration-response
                         :shape "RecommenderConfigurationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recommender-configuration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recommender-configuration-response
                    'make-update-recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommender-configuration-response))
      (common-lisp:list
       (common-lisp:cons "RecommenderConfigurationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'recommender-configuration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-recommender-configuration-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-segment-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-segment-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (segment-id :initarg :segment-id :initform
                         (common-lisp:error ":segment-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-segment-request-segment-id :shape
                         "__string" :location "uri" :location-name
                         "segment-id")
                        (write-segment-request :initarg :write-segment-request
                         :initform
                         (common-lisp:error
                          ":write-segment-request is required")
                         :type
                         (common-lisp:or write-segment-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-segment-request-write-segment-request
                         :shape "WriteSegmentRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-segment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-segment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-segment-request 'make-update-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'write-segment-request))
      (common-lisp:list
       (common-lisp:cons "WriteSegmentRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'write-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-segment-response common-lisp:nil
                       ((segment-response :initarg :segment-response :initform
                         (common-lisp:error ":segment-response is required")
                         :type
                         (common-lisp:or segment-response common-lisp:null)
                         :accessor
                         struct-shape-update-segment-response-segment-response
                         :shape "SegmentResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-segment-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-segment-response 'make-update-segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-response))
      (common-lisp:list
       (common-lisp:cons "SegmentResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'segment-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-segment-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-sms-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-sms-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (smschannel-request :initarg :smschannel-request
                         :initform
                         (common-lisp:error ":smschannel-request is required")
                         :type
                         (common-lisp:or smschannel-request common-lisp:null)
                         :accessor
                         struct-shape-update-sms-channel-request-smschannel-request
                         :shape "SMSChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sms-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sms-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-request
                    'make-update-sms-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-request))
      (common-lisp:list
       (common-lisp:cons "SMSChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'smschannel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-sms-channel-response common-lisp:nil
                       ((smschannel-response :initarg :smschannel-response
                         :initform
                         (common-lisp:error ":smschannel-response is required")
                         :type
                         (common-lisp:or smschannel-response common-lisp:null)
                         :accessor
                         struct-shape-update-sms-channel-response-smschannel-response
                         :shape "SMSChannelResponse" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sms-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sms-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sms-channel-response
                    'make-update-sms-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smschannel-response))
      (common-lisp:list
       (common-lisp:cons "SMSChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smschannel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-sms-template-request common-lisp:nil
                       ((create-new-version :initarg :create-new-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-sms-template-request-create-new-version
                         :shape "__boolean" :location "querystring"
                         :location-name "create-new-version")
                        (smstemplate-request :initarg :smstemplate-request
                         :initform
                         (common-lisp:error ":smstemplate-request is required")
                         :type
                         (common-lisp:or smstemplate-request common-lisp:null)
                         :accessor
                         struct-shape-update-sms-template-request-smstemplate-request
                         :shape "SMSTemplateRequest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-sms-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-sms-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sms-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sms-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sms-template-request
                    'make-update-sms-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smstemplate-request))
      (common-lisp:list
       (common-lisp:cons "SMSTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'smstemplate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-sms-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-sms-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-sms-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-sms-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-sms-template-response
                    'make-update-sms-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-sms-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-template-active-version-request common-lisp:nil
                       ((template-active-version-request :initarg
                         :template-active-version-request :initform
                         (common-lisp:error
                          ":template-active-version-request is required")
                         :type
                         (common-lisp:or template-active-version-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-template-active-version-request-template-active-version-request
                         :shape "TemplateActiveVersionRequest" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-template-active-version-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-template-active-version-request-template-type
                         :shape "__string" :location "uri" :location-name
                         "template-type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-template-active-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-template-active-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-template-active-version-request
                    'make-update-template-active-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-active-version-request))
      (common-lisp:list
       (common-lisp:cons "TemplateActiveVersionRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'template-active-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-template-active-version-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-template-active-version-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-template-active-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-template-active-version-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-template-active-version-response
                    'make-update-template-active-version-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-template-active-version-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-voice-channel-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-voice-channel-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (voice-channel-request :initarg :voice-channel-request
                         :initform
                         (common-lisp:error
                          ":voice-channel-request is required")
                         :type
                         (common-lisp:or voice-channel-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-channel-request-voice-channel-request
                         :shape "VoiceChannelRequest" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-voice-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-channel-request
                    'make-update-voice-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-channel-request))
      (common-lisp:list
       (common-lisp:cons "VoiceChannelRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-voice-channel-response common-lisp:nil
                       ((voice-channel-response :initarg
                         :voice-channel-response :initform
                         (common-lisp:error
                          ":voice-channel-response is required")
                         :type
                         (common-lisp:or voice-channel-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-channel-response-voice-channel-response
                         :shape "VoiceChannelResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-channel-response
                    'make-update-voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-channel-response))
      (common-lisp:list
       (common-lisp:cons "VoiceChannelResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-channel-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-voice-template-request common-lisp:nil
                       ((create-new-version :initarg :create-new-version
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-update-voice-template-request-create-new-version
                         :shape "__boolean" :location "querystring"
                         :location-name "create-new-version")
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-voice-template-request-template-name
                         :shape "__string" :location "uri" :location-name
                         "template-name")
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-voice-template-request-version
                         :shape "__string" :location "querystring"
                         :location-name "version")
                        (voice-template-request :initarg
                         :voice-template-request :initform
                         (common-lisp:error
                          ":voice-template-request is required")
                         :type
                         (common-lisp:or voice-template-request
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-voice-template-request-voice-template-request
                         :shape "VoiceTemplateRequest" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-template-request
                    'make-update-voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'voice-template-request))
      (common-lisp:list
       (common-lisp:cons "VoiceTemplateRequest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-voice-template-response common-lisp:nil
                       ((message-body :initarg :message-body :initform
                         (common-lisp:error ":message-body is required") :type
                         (common-lisp:or message-body common-lisp:null)
                         :accessor
                         struct-shape-update-voice-template-response-message-body
                         :shape "MessageBody" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-voice-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-voice-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-voice-template-response
                    'make-update-voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-body))
      (common-lisp:list
       (common-lisp:cons "MessageBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'message-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-voice-template-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass verification-response common-lisp:nil
                       ((valid :initarg :valid :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-verification-response-valid
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verification-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'verification-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verification-response 'make-verification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verification-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verification-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'valid))
      (common-lisp:list
       (common-lisp:cons "Valid"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verification-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass verify-otpmessage-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-verify-otpmessage-request-application-id
                         :shape "__string" :location "uri" :location-name
                         "application-id")
                        (verify-otpmessage-request-parameters :initarg
                         :verify-otpmessage-request-parameters :initform
                         (common-lisp:error
                          ":verify-otpmessage-request-parameters is required")
                         :type
                         (common-lisp:or verify-otpmessage-request-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-verify-otpmessage-request-verify-otpmessage-request-parameters
                         :shape "VerifyOTPMessageRequestParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verify-otpmessage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'verify-otpmessage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verify-otpmessage-request
                    'make-verify-otpmessage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verify-otpmessage-request-parameters))
      (common-lisp:list
       (common-lisp:cons "VerifyOTPMessageRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'verify-otpmessage-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass verify-otpmessage-request-parameters common-lisp:nil
                       ((destination-identity :initarg :destination-identity
                         :initform
                         (common-lisp:error
                          ":destination-identity is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-verify-otpmessage-request-parameters-destination-identity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (otp :initarg :otp :initform
                         (common-lisp:error ":otp is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-verify-otpmessage-request-parameters-otp
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reference-id :initarg :reference-id :initform
                         (common-lisp:error ":reference-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-verify-otpmessage-request-parameters-reference-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verify-otpmessage-request-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'verify-otpmessage-request-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verify-otpmessage-request-parameters
                    'make-verify-otpmessage-request-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-identity))
      (common-lisp:list
       (common-lisp:cons "DestinationIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'otp))
      (common-lisp:list
       (common-lisp:cons "Otp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reference-id))
      (common-lisp:list
       (common-lisp:cons "ReferenceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-request-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass verify-otpmessage-response common-lisp:nil
                       ((verification-response :initarg :verification-response
                         :initform
                         (common-lisp:error
                          ":verification-response is required")
                         :type
                         (common-lisp:or verification-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-verify-otpmessage-response-verification-response
                         :shape "VerificationResponse" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-verify-otpmessage-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'verify-otpmessage-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'verify-otpmessage-response
                    'make-verify-otpmessage-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verification-response))
      (common-lisp:list
       (common-lisp:cons "VerificationResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input
                           'verification-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          verify-otpmessage-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass voice-channel-request common-lisp:nil
                       ((enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-voice-channel-request-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-channel-request 'make-voice-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-channel-response common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-application-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-voice-channel-response-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (has-credential :initarg :has-credential :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-voice-channel-response-has-credential
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (is-archived :initarg :is-archived :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-voice-channel-response-is-archived :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-by :initarg :last-modified-by :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-last-modified-by
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (platform :initarg :platform :initform
                         (common-lisp:error ":platform is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-channel-response-platform :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-voice-channel-response-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-channel-response 'make-voice-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-id))
      (common-lisp:list
       (common-lisp:cons "ApplicationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'has-credential))
      (common-lisp:list
       (common-lisp:cons "HasCredential"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-archived))
      (common-lisp:list
       (common-lisp:cons "IsArchived"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-by))
      (common-lisp:list
       (common-lisp:cons "LastModifiedBy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'platform))
      (common-lisp:list
       (common-lisp:cons "Platform"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-message common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-message-body :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-message-language-code :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (origination-number :initarg :origination-number
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-message-origination-number :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (substitutions :initarg :substitutions :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-list-of-string
                                         common-lisp:null)
                         :accessor struct-shape-voice-message-substitutions
                         :shape "MapOfListOf__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-id :initarg :voice-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-voice-message-voice-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'voice-message 'make-voice-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input voice-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input voice-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination-number))
      (common-lisp:list
       (common-lisp:cons "OriginationNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'substitutions))
      (common-lisp:list
       (common-lisp:cons "Substitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input voice-message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-template-request common-lisp:nil
                       ((body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-request-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-request-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-request-language-code
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-voice-template-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-request-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-id :initarg :voice-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-voice-template-request-voice-id
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-template-request 'make-voice-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-template-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-body :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         (common-lisp:error ":creation-date is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-substitutions :initarg :default-substitutions
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-default-substitutions
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-language-code
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform
                         (common-lisp:error ":last-modified-date is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-voice-template-response-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-voice-template-response-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-description :initarg :template-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-template-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-name :initarg :template-name :initform
                         (common-lisp:error ":template-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-voice-template-response-template-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-type :initarg :template-type :initform
                         (common-lisp:error ":template-type is required") :type
                         (common-lisp:or template-type common-lisp:null)
                         :accessor
                         struct-shape-voice-template-response-template-type
                         :shape "TemplateType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-voice-template-response-version
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-id :initarg :voice-id :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-voice-template-response-voice-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-template-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-template-response 'make-voice-template-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-substitutions))
      (common-lisp:list
       (common-lisp:cons "DefaultSubstitutions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-description))
      (common-lisp:list
       (common-lisp:cons "TemplateDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-name))
      (common-lisp:list
       (common-lisp:cons "TemplateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-type))
      (common-lisp:list
       (common-lisp:cons "TemplateType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "Version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-template-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass wait-activity common-lisp:nil
                       ((next-activity :initarg :next-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-wait-activity-next-activity :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-time :initarg :wait-time :initform
                         common-lisp:nil :type
                         (common-lisp:or wait-time common-lisp:null) :accessor
                         struct-shape-wait-activity-wait-time :shape "WaitTime"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-wait-activity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'wait-activity
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'wait-activity 'make-wait-activity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wait-activity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wait-activity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-activity))
      (common-lisp:list
       (common-lisp:cons "NextActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-time))
      (common-lisp:list
       (common-lisp:cons "WaitTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wait-activity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass wait-time common-lisp:nil
                       ((wait-for :initarg :wait-for :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-wait-time-wait-for :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-until :initarg :wait-until :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-wait-time-wait-until :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-wait-time
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'wait-time
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'wait-time 'make-wait-time))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input wait-time))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input wait-time))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-for))
      (common-lisp:list
       (common-lisp:cons "WaitFor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-until))
      (common-lisp:list
       (common-lisp:cons "WaitUntil"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input wait-time))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-application-settings-request common-lisp:nil
                       ((campaign-hook :initarg :campaign-hook :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-hook common-lisp:null)
                         :accessor
                         struct-shape-write-application-settings-request-campaign-hook
                         :shape "CampaignHook" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cloud-watch-metrics-enabled :initarg
                         :cloud-watch-metrics-enabled :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-application-settings-request-cloud-watch-metrics-enabled
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type
                         (common-lisp:or campaign-limits common-lisp:null)
                         :accessor
                         struct-shape-write-application-settings-request-limits
                         :shape "CampaignLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-write-application-settings-request-quiet-time
                         :shape "QuietTime" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-limits :initarg :journey-limits :initform
                         common-lisp:nil :type
                         (common-lisp:or application-settings-journey-limits
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-application-settings-request-journey-limits
                         :shape "ApplicationSettingsJourneyLimits" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-application-settings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'write-application-settings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-application-settings-request
                    'make-write-application-settings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-hook))
      (common-lisp:list
       (common-lisp:cons "CampaignHook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "CloudWatchMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'journey-limits))
      (common-lisp:list
       (common-lisp:cons "JourneyLimits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-application-settings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-campaign-request common-lisp:nil
                       ((additional-treatments :initarg :additional-treatments
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-write-treatment-resource
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-additional-treatments
                         :shape "ListOfWriteTreatmentResource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (custom-delivery-configuration :initarg
                         :custom-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-custom-delivery-configuration
                         :shape "CustomDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-campaign-request-description :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (holdout-percent :initarg :holdout-percent :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-holdout-percent
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hook :initarg :hook :initform common-lisp:nil :type
                         (common-lisp:or campaign-hook common-lisp:null)
                         :accessor struct-shape-write-campaign-request-hook
                         :shape "CampaignHook" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (is-paused :initarg :is-paused :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-is-paused :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type
                         (common-lisp:or campaign-limits common-lisp:null)
                         :accessor struct-shape-write-campaign-request-limits
                         :shape "CampaignLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-message-configuration
                         :shape "MessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-campaign-request-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or schedule common-lisp:null)
                         :accessor struct-shape-write-campaign-request-schedule
                         :shape "Schedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (segment-id :initarg :segment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-campaign-request-segment-id :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-version :initarg :segment-version :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-segment-version
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-write-campaign-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags")
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-campaign-request-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (treatment-description :initarg :treatment-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-campaign-request-treatment-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (treatment-name :initarg :treatment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-campaign-request-treatment-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (priority :initarg :priority :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor struct-shape-write-campaign-request-priority
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'write-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-campaign-request 'make-write-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'additional-treatments))
      (common-lisp:list
       (common-lisp:cons "AdditionalTreatments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "CustomDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'holdout-percent))
      (common-lisp:list
       (common-lisp:cons "HoldoutPercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hook))
      (common-lisp:list
       (common-lisp:cons "Hook"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'is-paused))
      (common-lisp:list
       (common-lisp:cons "IsPaused"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-id))
      (common-lisp:list
       (common-lisp:cons "SegmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-version))
      (common-lisp:list
       (common-lisp:cons "SegmentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'priority))
      (common-lisp:list
       (common-lisp:cons "Priority"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-event-stream common-lisp:nil
                       ((destination-stream-arn :initarg
                         :destination-stream-arn :initform
                         (common-lisp:error
                          ":destination-stream-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-write-event-stream-destination-stream-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-event-stream-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-event-stream
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'write-event-stream
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-event-stream 'make-write-event-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input write-event-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input write-event-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DestinationStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input write-event-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-journey-request common-lisp:nil
                       ((activities :initarg :activities :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-activity common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-activities :shape
                         "MapOfActivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (creation-date :initarg :creation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-journey-request-creation-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-date :initarg :last-modified-date
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-journey-request-last-modified-date
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limits :initarg :limits :initform common-lisp:nil
                         :type (common-lisp:or journey-limits common-lisp:null)
                         :accessor struct-shape-write-journey-request-limits
                         :shape "JourneyLimits" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (local-time :initarg :local-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-local-time :shape
                         "__boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-journey-request-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (quiet-time :initarg :quiet-time :initform
                         common-lisp:nil :type
                         (common-lisp:or quiet-time common-lisp:null) :accessor
                         struct-shape-write-journey-request-quiet-time :shape
                         "QuietTime" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (refresh-frequency :initarg :refresh-frequency
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-journey-request-refresh-frequency
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type
                         (common-lisp:or journey-schedule common-lisp:null)
                         :accessor struct-shape-write-journey-request-schedule
                         :shape "JourneySchedule" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-activity :initarg :start-activity :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-journey-request-start-activity
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-condition :initarg :start-condition :initform
                         common-lisp:nil :type
                         (common-lisp:or start-condition common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-start-condition
                         :shape "StartCondition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or state common-lisp:null) :accessor
                         struct-shape-write-journey-request-state :shape
                         "State" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (wait-for-quiet-time :initarg :wait-for-quiet-time
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-wait-for-quiet-time
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (refresh-on-segment-update :initarg
                         :refresh-on-segment-update :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-refresh-on-segment-update
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (journey-channel-settings :initarg
                         :journey-channel-settings :initform common-lisp:nil
                         :type
                         (common-lisp:or journey-channel-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-journey-channel-settings
                         :shape "JourneyChannelSettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sending-schedule :initarg :sending-schedule :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-sending-schedule
                         :shape "__boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (open-hours :initarg :open-hours :initform
                         common-lisp:nil :type
                         (common-lisp:or open-hours common-lisp:null) :accessor
                         struct-shape-write-journey-request-open-hours :shape
                         "OpenHours" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (closed-days :initarg :closed-days :initform
                         common-lisp:nil :type
                         (common-lisp:or closed-days common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-closed-days :shape
                         "ClosedDays" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timezone-estimation-methods :initarg
                         :timezone-estimation-methods :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          list-of-timezone-estimation-methods-element
                          common-lisp:null)
                         :accessor
                         struct-shape-write-journey-request-timezone-estimation-methods
                         :shape "ListOf__TimezoneEstimationMethodsElement"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-journey-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'write-journey-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-journey-request 'make-write-journey-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-journey-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-journey-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activities))
      (common-lisp:list
       (common-lisp:cons "Activities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-date))
      (common-lisp:list
       (common-lisp:cons "CreationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-date))
      (common-lisp:list
       (common-lisp:cons "LastModifiedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limits))
      (common-lisp:list
       (common-lisp:cons "Limits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'local-time))
      (common-lisp:list
       (common-lisp:cons "LocalTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quiet-time))
      (common-lisp:list
       (common-lisp:cons "QuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'refresh-frequency))
      (common-lisp:list
       (common-lisp:cons "RefreshFrequency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-activity))
      (common-lisp:list
       (common-lisp:cons "StartActivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-condition))
      (common-lisp:list
       (common-lisp:cons "StartCondition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'wait-for-quiet-time))
      (common-lisp:list
       (common-lisp:cons "WaitForQuietTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'refresh-on-segment-update))
      (common-lisp:list
       (common-lisp:cons "RefreshOnSegmentUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'journey-channel-settings))
      (common-lisp:list
       (common-lisp:cons "JourneyChannelSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-schedule))
      (common-lisp:list
       (common-lisp:cons "SendingSchedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'open-hours))
      (common-lisp:list
       (common-lisp:cons "OpenHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'closed-days))
      (common-lisp:list
       (common-lisp:cons "ClosedDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'timezone-estimation-methods))
      (common-lisp:list
       (common-lisp:cons "TimezoneEstimationMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-journey-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-segment-request common-lisp:nil
                       ((dimensions :initarg :dimensions :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-dimensions common-lisp:null)
                         :accessor
                         struct-shape-write-segment-request-dimensions :shape
                         "SegmentDimensions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-segment-request-name :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (segment-groups :initarg :segment-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or segment-group-list common-lisp:null)
                         :accessor
                         struct-shape-write-segment-request-segment-groups
                         :shape "SegmentGroupList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string common-lisp:null)
                         :accessor struct-shape-write-segment-request-tags
                         :shape "MapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-segment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'write-segment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-segment-request 'make-write-segment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimensions))
      (common-lisp:list
       (common-lisp:cons "Dimensions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-groups))
      (common-lisp:list
       (common-lisp:cons "SegmentGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-segment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass write-treatment-resource common-lisp:nil
                       ((custom-delivery-configuration :initarg
                         :custom-delivery-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or custom-delivery-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-treatment-resource-custom-delivery-configuration
                         :shape "CustomDeliveryConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (message-configuration :initarg :message-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or message-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-treatment-resource-message-configuration
                         :shape "MessageConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (schedule :initarg :schedule :initform common-lisp:nil
                         :type (common-lisp:or schedule common-lisp:null)
                         :accessor
                         struct-shape-write-treatment-resource-schedule :shape
                         "Schedule" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (size-percent :initarg :size-percent :initform
                         (common-lisp:error ":size-percent is required") :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-write-treatment-resource-size-percent
                         :shape "__integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (template-configuration :initarg
                         :template-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or template-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-write-treatment-resource-template-configuration
                         :shape "TemplateConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (treatment-description :initarg :treatment-description
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-treatment-resource-treatment-description
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (treatment-name :initarg :treatment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-write-treatment-resource-treatment-name
                         :shape "__string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-write-treatment-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'write-treatment-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'write-treatment-resource 'make-write-treatment-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-delivery-configuration))
      (common-lisp:list
       (common-lisp:cons "CustomDeliveryConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'message-configuration))
      (common-lisp:list
       (common-lisp:cons "MessageConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule))
      (common-lisp:list
       (common-lisp:cons "Schedule"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'size-percent))
      (common-lisp:list
       (common-lisp:cons "SizePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'template-configuration))
      (common-lisp:list
       (common-lisp:cons "TemplateConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'treatment-description))
      (common-lisp:list
       (common-lisp:cons "TreatmentDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'treatment-name))
      (common-lisp:list
       (common-lisp:cons "TreatmentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          write-treatment-resource))
   common-lisp:nil))
(common-lisp:deftype |__EndpointTypesElement| () 'common-lisp:string)
(common-lisp:deftype |__TimezoneEstimationMethodsElement| ()
  'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype list-of-activity-response ()
   '(trivial-types:proper-list activity-response))
 (common-lisp:defun make-list-of-activity-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list activity-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-application-response ()
   '(trivial-types:proper-list application-response))
 (common-lisp:defun make-list-of-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-campaign-response ()
   '(trivial-types:proper-list campaign-response))
 (common-lisp:defun make-list-of-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list campaign-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-batch-item ()
   '(trivial-types:proper-list endpoint-batch-item))
 (common-lisp:defun make-list-of-endpoint-batch-item
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-batch-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-response ()
   '(trivial-types:proper-list endpoint-response))
 (common-lisp:defun make-list-of-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-export-job-response ()
   '(trivial-types:proper-list export-job-response))
 (common-lisp:defun make-list-of-export-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list export-job-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-import-job-response ()
   '(trivial-types:proper-list import-job-response))
 (common-lisp:defun make-list-of-import-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list import-job-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-in-app-message-campaign ()
   '(trivial-types:proper-list in-app-message-campaign))
 (common-lisp:defun make-list-of-in-app-message-campaign
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list in-app-message-campaign))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-in-app-message-content ()
   '(trivial-types:proper-list in-app-message-content))
 (common-lisp:defun make-list-of-in-app-message-content
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list in-app-message-content))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-journey-response ()
   '(trivial-types:proper-list journey-response))
 (common-lisp:defun make-list-of-journey-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list journey-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-journey-run-response ()
   '(trivial-types:proper-list journey-run-response))
 (common-lisp:defun make-list-of-journey-run-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list journey-run-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-multi-conditional-branch ()
   '(trivial-types:proper-list multi-conditional-branch))
 (common-lisp:defun make-list-of-multi-conditional-branch
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            multi-conditional-branch))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-random-split-entry ()
   '(trivial-types:proper-list random-split-entry))
 (common-lisp:defun make-list-of-random-split-entry
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list random-split-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-recommender-configuration-response ()
   '(trivial-types:proper-list recommender-configuration-response))
 (common-lisp:defun make-list-of-recommender-configuration-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommender-configuration-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-result-row ()
   '(trivial-types:proper-list result-row))
 (common-lisp:defun make-list-of-result-row
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list result-row))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-result-row-value ()
   '(trivial-types:proper-list result-row-value))
 (common-lisp:defun make-list-of-result-row-value
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list result-row-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-dimensions ()
   '(trivial-types:proper-list segment-dimensions))
 (common-lisp:defun make-list-of-segment-dimensions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-dimensions))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-group ()
   '(trivial-types:proper-list segment-group))
 (common-lisp:defun make-list-of-segment-group
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-group))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-reference ()
   '(trivial-types:proper-list segment-reference))
 (common-lisp:defun make-list-of-segment-reference
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-reference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-segment-response ()
   '(trivial-types:proper-list segment-response))
 (common-lisp:defun make-list-of-segment-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list segment-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-simple-condition ()
   '(trivial-types:proper-list simple-condition))
 (common-lisp:defun make-list-of-simple-condition
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list simple-condition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-template-response ()
   '(trivial-types:proper-list template-response))
 (common-lisp:defun make-list-of-template-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list template-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-template-version-response ()
   '(trivial-types:proper-list template-version-response))
 (common-lisp:defun make-list-of-template-version-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            template-version-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-treatment-resource ()
   '(trivial-types:proper-list treatment-resource))
 (common-lisp:defun make-list-of-treatment-resource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-write-treatment-resource ()
   '(trivial-types:proper-list write-treatment-resource))
 (common-lisp:defun make-list-of-write-treatment-resource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            write-treatment-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-types-element ()
   '(trivial-types:proper-list |__EndpointTypesElement|))
 (common-lisp:defun make-list-of-endpoint-types-element
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__EndpointTypesElement|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-timezone-estimation-methods-element ()
   '(trivial-types:proper-list |__TimezoneEstimationMethodsElement|))
 (common-lisp:defun make-list-of-timezone-estimation-methods-element
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__TimezoneEstimationMethodsElement|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-list-of-string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype map-of-activity () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-activity (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-address-configuration () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-address-configuration
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-attribute-dimension () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-attribute-dimension
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-channel-response () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-channel-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-endpoint-message-result ()
   'common-lisp:hash-table)
 (common-lisp:defun make-map-of-endpoint-message-result
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-endpoint-send-configuration ()
   'common-lisp:hash-table)
 (common-lisp:defun make-map-of-endpoint-send-configuration
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-event () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-event (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-event-item-response () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-event-item-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-events-batch () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-events-batch
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-item-response () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-item-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-message-result () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-message-result
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-metric-dimension () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-metric-dimension
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-double () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-double (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-integer () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-integer (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-list-of-string () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-list-of-string
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-map-of-endpoint-message-result ()
   'common-lisp:hash-table)
 (common-lisp:defun make-map-of-map-of-endpoint-message-result
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:deftype day-of-week () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype list-of-open-hours-rules ()
   '(trivial-types:proper-list open-hours-rule))
 (common-lisp:defun make-list-of-open-hours-rules
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list open-hours-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass open-hours-rule common-lisp:nil
                       ((start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-open-hours-rule-start-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-open-hours-rule-end-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-open-hours-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'open-hours-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'open-hours-rule 'make-open-hours-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input open-hours-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input open-hours-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input open-hours-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype map-of-list-of-open-hours-rules ()
   'common-lisp:hash-table)
 (common-lisp:defun make-map-of-list-of-open-hours-rules
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass open-hours common-lisp:nil
                       ((email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or map-of-list-of-open-hours-rules
                                         common-lisp:null)
                         :accessor struct-shape-open-hours-email :shape
                         "MapOfListOfOpenHoursRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sms :initarg :sms :initform common-lisp:nil :type
                         (common-lisp:or map-of-list-of-open-hours-rules
                                         common-lisp:null)
                         :accessor struct-shape-open-hours-sms :shape
                         "MapOfListOfOpenHoursRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (push :initarg :push :initform common-lisp:nil :type
                         (common-lisp:or map-of-list-of-open-hours-rules
                                         common-lisp:null)
                         :accessor struct-shape-open-hours-push :shape
                         "MapOfListOfOpenHoursRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice :initarg :voice :initform common-lisp:nil :type
                         (common-lisp:or map-of-list-of-open-hours-rules
                                         common-lisp:null)
                         :accessor struct-shape-open-hours-voice :shape
                         "MapOfListOfOpenHoursRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom :initarg :custom :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-list-of-open-hours-rules
                                         common-lisp:null)
                         :accessor struct-shape-open-hours-custom :shape
                         "MapOfListOfOpenHoursRules" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-open-hours
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'open-hours
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'open-hours 'make-open-hours))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input open-hours))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input open-hours))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "EMAIL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms))
      (common-lisp:list
       (common-lisp:cons "SMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push))
      (common-lisp:list
       (common-lisp:cons "PUSH"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice))
      (common-lisp:list
       (common-lisp:cons "VOICE"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom))
      (common-lisp:list
       (common-lisp:cons "CUSTOM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input open-hours))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass closed-days-rule common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-closed-days-rule-name :shape "__string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-date-time :initarg :start-date-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-closed-days-rule-start-date-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-date-time :initarg :end-date-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-closed-days-rule-end-date-time :shape
                         "__string" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-closed-days-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'closed-days-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'closed-days-rule 'make-closed-days-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input closed-days-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input closed-days-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date-time))
      (common-lisp:list
       (common-lisp:cons "StartDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date-time))
      (common-lisp:list
       (common-lisp:cons "EndDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input closed-days-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-closed-days-rules ()
   '(trivial-types:proper-list closed-days-rule))
 (common-lisp:defun make-list-of-closed-days-rules
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list closed-days-rule))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass closed-days common-lisp:nil
                       ((email :initarg :email :initform common-lisp:nil :type
                         (common-lisp:or list-of-closed-days-rules
                                         common-lisp:null)
                         :accessor struct-shape-closed-days-email :shape
                         "ListOfClosedDaysRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sms :initarg :sms :initform common-lisp:nil :type
                         (common-lisp:or list-of-closed-days-rules
                                         common-lisp:null)
                         :accessor struct-shape-closed-days-sms :shape
                         "ListOfClosedDaysRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (push :initarg :push :initform common-lisp:nil :type
                         (common-lisp:or list-of-closed-days-rules
                                         common-lisp:null)
                         :accessor struct-shape-closed-days-push :shape
                         "ListOfClosedDaysRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice :initarg :voice :initform common-lisp:nil :type
                         (common-lisp:or list-of-closed-days-rules
                                         common-lisp:null)
                         :accessor struct-shape-closed-days-voice :shape
                         "ListOfClosedDaysRules" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (custom :initarg :custom :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-closed-days-rules
                                         common-lisp:null)
                         :accessor struct-shape-closed-days-custom :shape
                         "ListOfClosedDaysRules" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-closed-days
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'closed-days
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'closed-days 'make-closed-days))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input closed-days))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input closed-days))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email))
      (common-lisp:list
       (common-lisp:cons "EMAIL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sms))
      (common-lisp:list
       (common-lisp:cons "SMS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'push))
      (common-lisp:list
       (common-lisp:cons "PUSH"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice))
      (common-lisp:list
       (common-lisp:cons "VOICE"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom))
      (common-lisp:list
       (common-lisp:cons "CUSTOM"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input closed-days))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-application-request)
   (common-lisp:declare (common-lisp:ignorable create-application-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/apps"
                                                        "CreateApp"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-app))
(common-lisp:progn
 (common-lisp:defun create-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateCampaign"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-campaign))
(common-lisp:progn
 (common-lisp:defun create-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-template-request template-name)
   (common-lisp:declare
    (common-lisp:ignorable email-template-request template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "CreateEmailTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-email-template))
(common-lisp:progn
 (common-lisp:defun create-export-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id export-job-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id export-job-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-export-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/export"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateExportJob"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-export-job))
(common-lisp:progn
 (common-lisp:defun create-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id import-job-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id import-job-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateImportJob"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-import-job))
(common-lisp:progn
 (common-lisp:defun create-in-app-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key in-app-template-request template-name)
   (common-lisp:declare
    (common-lisp:ignorable in-app-template-request template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-in-app-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/inapp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "CreateInAppTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-in-app-template))
(common-lisp:progn
 (common-lisp:defun create-journey
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-journey-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-journey-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-journey-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateJourney"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-journey))
(common-lisp:progn
 (common-lisp:defun create-push-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key push-notification-template-request
                     template-name)
   (common-lisp:declare
    (common-lisp:ignorable push-notification-template-request template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-push-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/push"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "CreatePushTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-push-template))
(common-lisp:progn
 (common-lisp:defun create-recommender-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-recommender-configuration)
   (common-lisp:declare
    (common-lisp:ignorable create-recommender-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-recommender-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/recommenders"
                                                        "CreateRecommenderConfiguration"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-recommender-configuration))
(common-lisp:progn
 (common-lisp:defun create-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "CreateSegment"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-segment))
(common-lisp:progn
 (common-lisp:defun create-sms-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key smstemplate-request template-name)
   (common-lisp:declare
    (common-lisp:ignorable smstemplate-request template-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-sms-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "CreateSmsTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-sms-template))
(common-lisp:progn
 (common-lisp:defun create-voice-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name voice-template-request)
   (common-lisp:declare
    (common-lisp:ignorable template-name voice-template-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-voice-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "CreateVoiceTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-voice-template))
(common-lisp:progn
 (common-lisp:defun delete-adm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-adm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/adm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteAdmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-adm-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-apns-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-voip-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-apns-voip-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsVoipChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-apns-voip-channel))
(common-lisp:progn
 (common-lisp:defun delete-apns-voip-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-apns-voip-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApnsVoipSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-apns-voip-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun delete-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteApp"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-app))
(common-lisp:progn
 (common-lisp:defun delete-baidu-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-baidu-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/baidu"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteBaiduChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-baidu-channel))
(common-lisp:progn
 (common-lisp:defun delete-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "DeleteCampaign"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-campaign))
(common-lisp:progn
 (common-lisp:defun delete-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteEmailChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-email-channel))
(common-lisp:progn
 (common-lisp:defun delete-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteEmailTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-email-template))
(common-lisp:progn
 (common-lisp:defun delete-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id)
   (common-lisp:declare (common-lisp:ignorable application-id endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "DeleteEndpoint"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteEventStream"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-event-stream))
(common-lisp:progn
 (common-lisp:defun delete-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteGcmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-gcm-channel))
(common-lisp:progn
 (common-lisp:defun delete-in-app-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-in-app-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/inapp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteInAppTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-in-app-template))
(common-lisp:progn
 (common-lisp:defun delete-journey
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id)
   (common-lisp:declare (common-lisp:ignorable application-id journey-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-journey-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "DeleteJourney"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-journey))
(common-lisp:progn
 (common-lisp:defun delete-push-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-push-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/push"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeletePushTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-push-template))
(common-lisp:progn
 (common-lisp:defun delete-recommender-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recommender-id)
   (common-lisp:declare (common-lisp:ignorable recommender-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-recommender-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommenders/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommender-id))))
                                                        "DeleteRecommenderConfiguration"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-recommender-configuration))
(common-lisp:progn
 (common-lisp:defun delete-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "DeleteSegment"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-segment))
(common-lisp:progn
 (common-lisp:defun delete-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteSmsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sms-channel))
(common-lisp:progn
 (common-lisp:defun delete-sms-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-sms-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteSmsTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-sms-template))
(common-lisp:progn
 (common-lisp:defun delete-user-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id user-id)
   (common-lisp:declare (common-lisp:ignorable application-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-user-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "DeleteUserEndpoints"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-user-endpoints))
(common-lisp:progn
 (common-lisp:defun delete-voice-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "DeleteVoiceChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-channel))
(common-lisp:progn
 (common-lisp:defun delete-voice-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-voice-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "DeleteVoiceTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-voice-template))
(common-lisp:progn
 (common-lisp:defun get-adm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-adm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/adm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetAdmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-adm-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apns-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-sandbox-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-voip-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apns-voip-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsVoipChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apns-voip-channel))
(common-lisp:progn
 (common-lisp:defun get-apns-voip-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-apns-voip-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApnsVoipSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apns-voip-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun get-app
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-app-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApp"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-app))
(common-lisp:progn
 (common-lisp:defun get-application-date-range-kpi
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id end-time kpi-name
                     next-token page-size start-time)
   (common-lisp:declare
    (common-lisp:ignorable application-id end-time kpi-name next-token
     page-size start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-application-date-range-kpi-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/kpis/daterange/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'kpi-name))))
                                                        "GetApplicationDateRangeKpi"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-date-range-kpi))
(common-lisp:progn
 (common-lisp:defun get-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-settings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetApplicationSettings"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application-settings))
(common-lisp:progn
 (common-lisp:defun get-apps
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-size token)
   (common-lisp:declare (common-lisp:ignorable page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-apps-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/apps"
                                                        "GetApps"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-apps))
(common-lisp:progn
 (common-lisp:defun get-baidu-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-baidu-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/baidu"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetBaiduChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-baidu-channel))
(common-lisp:progn
 (common-lisp:defun get-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id)
   (common-lisp:declare (common-lisp:ignorable application-id campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaign"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaign))
(common-lisp:progn
 (common-lisp:defun get-campaign-activities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-activities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/activities"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaignActivities"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaign-activities))
(common-lisp:progn
 (common-lisp:defun get-campaign-date-range-kpi
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id end-time
                     kpi-name next-token page-size start-time)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id end-time kpi-name
     next-token page-size start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-campaign-date-range-kpi-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/kpis/daterange/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'kpi-name))))
                                                        "GetCampaignDateRangeKpi"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaign-date-range-kpi))
(common-lisp:progn
 (common-lisp:defun get-campaign-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetCampaignVersion"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaign-version))
(common-lisp:progn
 (common-lisp:defun get-campaign-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaign-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetCampaignVersions"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaign-versions))
(common-lisp:progn
 (common-lisp:defun get-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-campaigns-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetCampaigns"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-campaigns))
(common-lisp:progn
 (common-lisp:defun get-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetChannels"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-channels))
(common-lisp:progn
 (common-lisp:defun get-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetEmailChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-email-channel))
(common-lisp:progn
 (common-lisp:defun get-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetEmailTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-email-template))
(common-lisp:progn
 (common-lisp:defun get-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id)
   (common-lisp:declare (common-lisp:ignorable application-id endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "GetEndpoint"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-endpoint))
(common-lisp:progn
 (common-lisp:defun get-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetEventStream"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-event-stream))
(common-lisp:progn
 (common-lisp:defun get-export-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id job-id)
   (common-lisp:declare (common-lisp:ignorable application-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/export/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetExportJob"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-export-job))
(common-lisp:progn
 (common-lisp:defun get-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/export"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetExportJobs"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-export-jobs))
(common-lisp:progn
 (common-lisp:defun get-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetGcmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-gcm-channel))
(common-lisp:progn
 (common-lisp:defun get-import-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id job-id)
   (common-lisp:declare (common-lisp:ignorable application-id job-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'job-id))))
                                                        "GetImportJob"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-import-job))
(common-lisp:progn
 (common-lisp:defun get-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetImportJobs"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-in-app-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id)
   (common-lisp:declare (common-lisp:ignorable application-id endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-in-app-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A/inappmessages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "GetInAppMessages"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-in-app-messages))
(common-lisp:progn
 (common-lisp:defun get-in-app-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-in-app-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/inapp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetInAppTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-in-app-template))
(common-lisp:progn
 (common-lisp:defun get-journey
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id)
   (common-lisp:declare (common-lisp:ignorable application-id journey-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-journey-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "GetJourney"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey))
(common-lisp:progn
 (common-lisp:defun get-journey-date-range-kpi
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id end-time journey-id
                     kpi-name next-token page-size start-time)
   (common-lisp:declare
    (common-lisp:ignorable application-id end-time journey-id kpi-name
     next-token page-size start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-journey-date-range-kpi-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/kpis/daterange/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'kpi-name))))
                                                        "GetJourneyDateRangeKpi"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-date-range-kpi))
(common-lisp:progn
 (common-lisp:defun get-journey-execution-activity-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-activity-id
                     journey-id next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-activity-id journey-id
     next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-journey-execution-activity-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/activities/~A/execution-metrics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-activity-id))))
                                                        "GetJourneyExecutionActivityMetrics"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-execution-activity-metrics))
(common-lisp:progn
 (common-lisp:defun get-journey-execution-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id next-token
                     page-size)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-id next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-journey-execution-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/execution-metrics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "GetJourneyExecutionMetrics"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-execution-metrics))
(common-lisp:progn
 (common-lisp:defun get-journey-run-execution-activity-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-activity-id
                     journey-id next-token page-size run-id)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-activity-id journey-id
     next-token page-size run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-journey-run-execution-activity-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/runs/~A/activities/~A/execution-metrics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'run-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-activity-id))))
                                                        "GetJourneyRunExecutionActivityMetrics"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-run-execution-activity-metrics))
(common-lisp:progn
 (common-lisp:defun get-journey-run-execution-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id next-token
                     page-size run-id)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-id next-token page-size
     run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-journey-run-execution-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/runs/~A/execution-metrics"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'run-id))))
                                                        "GetJourneyRunExecutionMetrics"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-run-execution-metrics))
(common-lisp:progn
 (common-lisp:defun get-journey-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id page-size
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-journey-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/runs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "GetJourneyRuns"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-journey-runs))
(common-lisp:progn
 (common-lisp:defun get-push-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-push-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/push"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetPushTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-push-template))
(common-lisp:progn
 (common-lisp:defun get-recommender-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recommender-id)
   (common-lisp:declare (common-lisp:ignorable recommender-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommender-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommenders/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommender-id))))
                                                        "GetRecommenderConfiguration"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommender-configuration))
(common-lisp:progn
 (common-lisp:defun get-recommender-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key page-size token)
   (common-lisp:declare (common-lisp:ignorable page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommender-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/recommenders"
                                                        "GetRecommenderConfigurations"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommender-configurations))
(common-lisp:progn
 (common-lisp:defun get-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id)
   (common-lisp:declare (common-lisp:ignorable application-id segment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegment"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segment))
(common-lisp:progn
 (common-lisp:defun get-segment-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-export-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/jobs/export"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegmentExportJobs"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segment-export-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment-import-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-import-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/jobs/import"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegmentImportJobs"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segment-import-jobs))
(common-lisp:progn
 (common-lisp:defun get-segment-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id version)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-version-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'version))))
                                                        "GetSegmentVersion"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segment-version))
(common-lisp:progn
 (common-lisp:defun get-segment-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size segment-id
                     token)
   (common-lisp:declare
    (common-lisp:ignorable application-id page-size segment-id token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segment-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "GetSegmentVersions"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segment-versions))
(common-lisp:progn
 (common-lisp:defun get-segments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-segments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetSegments"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-segments))
(common-lisp:progn
 (common-lisp:defun get-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetSmsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sms-channel))
(common-lisp:progn
 (common-lisp:defun get-sms-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sms-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetSmsTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sms-template))
(common-lisp:progn
 (common-lisp:defun get-user-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id user-id)
   (common-lisp:declare (common-lisp:ignorable application-id user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-user-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/users/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'user-id))))
                                                        "GetUserEndpoints"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-user-endpoints))
(common-lisp:progn
 (common-lisp:defun get-voice-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id)
   (common-lisp:declare (common-lisp:ignorable application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "GetVoiceChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-channel))
(common-lisp:progn
 (common-lisp:defun get-voice-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-name version)
   (common-lisp:declare (common-lisp:ignorable template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-voice-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "GetVoiceTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-voice-template))
(common-lisp:progn
 (common-lisp:defun list-journeys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id page-size token)
   (common-lisp:declare (common-lisp:ignorable application-id page-size token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-journeys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "ListJourneys"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-journeys))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-template-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size template-name
                     template-type)
   (common-lisp:declare
    (common-lisp:ignorable next-token page-size template-name template-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-template-versions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/~A/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-type))))
                                                        "ListTemplateVersions"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-template-versions))
(common-lisp:progn
 (common-lisp:defun list-templates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size prefix
                     template-type)
   (common-lisp:declare
    (common-lisp:ignorable next-token page-size prefix template-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-templates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/templates"
                                                        "ListTemplates"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-templates))
(common-lisp:progn
 (common-lisp:defun phone-number-validate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key number-validate-request)
   (common-lisp:declare (common-lisp:ignorable number-validate-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-phone-number-validate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/phone/number/validate"
                                                        "PhoneNumberValidate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'phone-number-validate))
(common-lisp:progn
 (common-lisp:defun put-event-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id write-event-stream)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-event-stream))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-event-stream-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/eventstream"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "PutEventStream"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-event-stream))
(common-lisp:progn
 (common-lisp:defun put-events
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id events-request)
   (common-lisp:declare (common-lisp:ignorable application-id events-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-events-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/events"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "PutEvents"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-events))
(common-lisp:progn
 (common-lisp:defun remove-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id attribute-type
                     update-attributes-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id attribute-type
     update-attributes-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-attributes-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/attributes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'attribute-type))))
                                                        "RemoveAttributes"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'remove-attributes))
(common-lisp:progn
 (common-lisp:defun send-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id message-request)
   (common-lisp:declare (common-lisp:ignorable application-id message-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/messages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "SendMessages"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-messages))
(common-lisp:progn
 (common-lisp:defun send-otpmessage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     send-otpmessage-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable application-id send-otpmessage-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-otpmessage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/otp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "SendOTPMessage"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-otpmessage))
(common-lisp:progn
 (common-lisp:defun send-users-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     send-users-message-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id send-users-message-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-users-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/users-messages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "SendUsersMessages"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-users-messages))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags-model)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags-model))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-adm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key admchannel-request application-id)
   (common-lisp:declare
    (common-lisp:ignorable admchannel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-adm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/adm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateAdmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-adm-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnschannel-request application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnschannel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-apns-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-apns-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnssandbox-channel-request
                     application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnssandbox-channel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-apns-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-apns-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-voip-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnsvoip-channel-request application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnsvoip-channel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-apns-voip-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsVoipChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-apns-voip-channel))
(common-lisp:progn
 (common-lisp:defun update-apns-voip-sandbox-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key apnsvoip-sandbox-channel-request
                     application-id)
   (common-lisp:declare
    (common-lisp:ignorable apnsvoip-sandbox-channel-request application-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-apns-voip-sandbox-channel-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/apns_voip_sandbox"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApnsVoipSandboxChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-apns-voip-sandbox-channel))
(common-lisp:progn
 (common-lisp:defun update-application-settings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     write-application-settings-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id write-application-settings-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-application-settings-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/settings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateApplicationSettings"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-application-settings))
(common-lisp:progn
 (common-lisp:defun update-baidu-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id baidu-channel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id baidu-channel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-baidu-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/baidu"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateBaiduChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-baidu-channel))
(common-lisp:progn
 (common-lisp:defun update-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id campaign-id
                     write-campaign-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id campaign-id write-campaign-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-campaign-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "UpdateCampaign"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-campaign))
(common-lisp:progn
 (common-lisp:defun update-email-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id email-channel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id email-channel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-email-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateEmailChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-email-channel))
(common-lisp:progn
 (common-lisp:defun update-email-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-new-version email-template-request
                     template-name version)
   (common-lisp:declare
    (common-lisp:ignorable create-new-version email-template-request
     template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-email-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/email"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateEmailTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-email-template))
(common-lisp:progn
 (common-lisp:defun update-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-id
                     endpoint-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-id endpoint-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'endpoint-id))))
                                                        "UpdateEndpoint"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-endpoint))
(common-lisp:progn
 (common-lisp:defun update-endpoints-batch
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id endpoint-batch-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id endpoint-batch-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-endpoints-batch-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/endpoints"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateEndpointsBatch"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-endpoints-batch))
(common-lisp:progn
 (common-lisp:defun update-gcm-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id gcmchannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id gcmchannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gcm-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/gcm"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateGcmChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-gcm-channel))
(common-lisp:progn
 (common-lisp:defun update-in-app-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-new-version
                     in-app-template-request template-name version)
   (common-lisp:declare
    (common-lisp:ignorable create-new-version in-app-template-request
     template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-in-app-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/inapp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateInAppTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-in-app-template))
(common-lisp:progn
 (common-lisp:defun update-journey
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id
                     write-journey-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-id write-journey-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-journey-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "UpdateJourney"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-journey))
(common-lisp:progn
 (common-lisp:defun update-journey-state
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id journey-id
                     journey-state-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id journey-id journey-state-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-journey-state-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/journeys/~A/state"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'journey-id))))
                                                        "UpdateJourneyState"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-journey-state))
(common-lisp:progn
 (common-lisp:defun update-push-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-new-version
                     push-notification-template-request template-name version)
   (common-lisp:declare
    (common-lisp:ignorable create-new-version
     push-notification-template-request template-name version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-push-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/push"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdatePushTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-push-template))
(common-lisp:progn
 (common-lisp:defun update-recommender-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recommender-id
                     update-recommender-configuration)
   (common-lisp:declare
    (common-lisp:ignorable recommender-id update-recommender-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-recommender-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/recommenders/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'recommender-id))))
                                                        "UpdateRecommenderConfiguration"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-recommender-configuration))
(common-lisp:progn
 (common-lisp:defun update-segment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id segment-id
                     write-segment-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id segment-id write-segment-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-segment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/segments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'segment-id))))
                                                        "UpdateSegment"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-segment))
(common-lisp:progn
 (common-lisp:defun update-sms-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id smschannel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id smschannel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sms-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateSmsChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sms-channel))
(common-lisp:progn
 (common-lisp:defun update-sms-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-new-version smstemplate-request
                     template-name version)
   (common-lisp:declare
    (common-lisp:ignorable create-new-version smstemplate-request template-name
     version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-sms-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/sms"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateSmsTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-sms-template))
(common-lisp:progn
 (common-lisp:defun update-template-active-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key template-active-version-request
                     template-name template-type)
   (common-lisp:declare
    (common-lisp:ignorable template-active-version-request template-name
     template-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-template-active-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/~A/active-version"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-type))))
                                                        "UpdateTemplateActiveVersion"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-template-active-version))
(common-lisp:progn
 (common-lisp:defun update-voice-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id voice-channel-request)
   (common-lisp:declare
    (common-lisp:ignorable application-id voice-channel-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/channels/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "UpdateVoiceChannel"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-channel))
(common-lisp:progn
 (common-lisp:defun update-voice-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key create-new-version template-name version
                     voice-template-request)
   (common-lisp:declare
    (common-lisp:ignorable create-new-version template-name version
     voice-template-request))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-voice-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/templates/~A/voice"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'template-name))))
                                                        "UpdateVoiceTemplate"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-voice-template))
(common-lisp:progn
 (common-lisp:defun verify-otpmessage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id
                     verify-otpmessage-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable application-id
     verify-otpmessage-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-verify-otpmessage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/apps/~A/verify-otp"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'application-id))))
                                                        "VerifyOTPMessage"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'verify-otpmessage))
