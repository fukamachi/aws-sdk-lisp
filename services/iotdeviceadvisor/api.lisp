;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/iotdeviceadvisor/api (:use)
                             (:nicknames #:aws/iotdeviceadvisor)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iotdeviceadvisor/api)
(common-lisp:progn
 (common-lisp:define-condition iotdeviceadvisor-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iotdeviceadvisor-error))
(common-lisp:progn
 (common-lisp:defclass iotdeviceadvisor-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iotdeviceadvisor"
                        :api-version "2020-09-18" :host-prefix
                        "api.iotdeviceadvisor" :signing-name "iotdeviceadvisor"
                        :global-host common-lisp:nil))
 (common-lisp:export 'iotdeviceadvisor-request))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:deftype authentication-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-suite-definition-request common-lisp:nil
                       ((suite-definition-configuration :initarg
                         :suite-definition-configuration :initform
                         (common-lisp:error
                          ":suitedefinitionconfiguration is required")
                         :type
                         (common-lisp:or suite-definition-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-suite-definition-request-suite-definition-configuration
                         :shape "SuiteDefinitionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-suite-definition-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-suite-definition-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-suite-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-suite-definition-request
                    'make-create-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-suite-definition-response common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-suite-definition-response-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-arn :initarg :suite-definition-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-create-suite-definition-response-suite-definition-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-definition-name :initarg :suite-definition-name
                         :initform common-lisp:nil :type
                         (common-lisp:or suite-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-suite-definition-response-suite-definition-name
                         :shape "SuiteDefinitionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-create-suite-definition-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-suite-definition-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-suite-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-suite-definition-response
                    'make-create-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-suite-definition-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-delete-suite-definition-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-suite-definition-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-suite-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-suite-definition-request
                    'make-delete-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-suite-definition-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-suite-definition-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-suite-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-suite-definition-response
                    'make-delete-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass device-under-test common-lisp:nil
                       ((thing-arn :initarg :thing-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-device-under-test-thing-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-device-under-test-certificate-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-role-arn :initarg :device-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-device-under-test-device-role-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-device-under-test
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'device-under-test
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'device-under-test 'make-device-under-test))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input device-under-test))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input device-under-test))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'thing-arn))
      (common-lisp:list
       (common-lisp:cons "thingArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-role-arn))
      (common-lisp:list
       (common-lisp:cons "deviceRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input device-under-test))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype device-under-test-list ()
   '(trivial-types:proper-list device-under-test))
 (common-lisp:defun make-device-under-test-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list device-under-test))
   aws-sdk/generator/shape::members))
(common-lisp:deftype endpoint () 'common-lisp:string)
(common-lisp:deftype error-reason () 'common-lisp:string)
(common-lisp:deftype failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-endpoint-request common-lisp:nil
                       ((thing-arn :initarg :thing-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-get-endpoint-request-thing-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "thingArn")
                        (certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-request-certificate-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "certificateArn")
                        (device-role-arn :initarg :device-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-request-device-role-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "deviceRoleArn")
                        (authentication-method :initarg :authentication-method
                         :initform common-lisp:nil :type
                         (common-lisp:or authentication-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-endpoint-request-authentication-method
                         :shape "AuthenticationMethod" :location "querystring"
                         :location-name "authenticationMethod"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-request 'make-get-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-endpoint-response common-lisp:nil
                       ((endpoint :initarg :endpoint :initform common-lisp:nil
                         :type (common-lisp:or endpoint common-lisp:null)
                         :accessor struct-shape-get-endpoint-response-endpoint
                         :shape "Endpoint" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-endpoint-response 'make-get-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-definition-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-definition-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-definition-request-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         "querystring" :location-name
                         "suiteDefinitionVersion"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-definition-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-suite-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-definition-request
                    'make-get-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-definition-response common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-definition-response-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-arn :initarg :suite-definition-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-suite-definition-response-suite-definition-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-definition-response-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (latest-version :initarg :latest-version :initform
                         common-lisp:nil :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-definition-response-latest-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (suite-definition-configuration :initarg
                         :suite-definition-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or suite-definition-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-definition-response-suite-definition-configuration
                         :shape "SuiteDefinitionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-suite-definition-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-at :initarg :last-modified-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-suite-definition-response-last-modified-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-suite-definition-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-definition-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-suite-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-definition-response
                    'make-get-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-version))
      (common-lisp:list
       (common-lisp:cons "latestVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-at))
      (common-lisp:list
       (common-lisp:cons "lastModifiedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-run-report-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-report-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-run-id :initarg :suite-run-id :initform
                         (common-lisp:error ":suiterunid is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-report-request-suite-run-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteRunId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-run-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-suite-run-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-report-request
                    'make-get-suite-run-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-run-report-response common-lisp:nil
                       ((qualification-report-download-url :initarg
                         :qualification-report-download-url :initform
                         common-lisp:nil :type
                         (common-lisp:or qualification-report-download-url
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-report-response-qualification-report-download-url
                         :shape "QualificationReportDownloadUrl" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-run-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-suite-run-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-report-response
                    'make-get-suite-run-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'qualification-report-download-url))
      (common-lisp:list
       (common-lisp:cons "qualificationReportDownloadUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-run-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-run-id :initarg :suite-run-id :initform
                         (common-lisp:error ":suiterunid is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-request-suite-run-id :shape
                         "UUID" :location "uri" :location-name "suiteRunId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-run-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-suite-run-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-request 'make-get-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-suite-run-response common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-response-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-response-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (suite-run-id :initarg :suite-run-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-suite-run-response-suite-run-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-run-arn :initarg :suite-run-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-response-suite-run-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-run-configuration :initarg
                         :suite-run-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-run-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-response-suite-run-configuration
                         :shape "SuiteRunConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (test-result :initarg :test-result :initform
                         common-lisp:nil :type
                         (common-lisp:or test-result common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-response-test-result :shape
                         "TestResult" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-suite-run-response-start-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-get-suite-run-response-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-run-status common-lisp:null)
                         :accessor struct-shape-get-suite-run-response-status
                         :shape "SuiteRunStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (error-reason :initarg :error-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or error-reason common-lisp:null)
                         :accessor
                         struct-shape-get-suite-run-response-error-reason
                         :shape "ErrorReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-suite-run-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-suite-run-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-suite-run-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-suite-run-response 'make-get-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-arn))
      (common-lisp:list
       (common-lisp:cons "suiteRunArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-run-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-result))
      (common-lisp:list
       (common-lisp:cons "testResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-reason))
      (common-lisp:list
       (common-lisp:cons "errorReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass group-result common-lisp:nil
                       ((group-id :initarg :group-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-group-result-group-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (group-name :initarg :group-name :initform
                         common-lisp:nil :type
                         (common-lisp:or group-name common-lisp:null) :accessor
                         struct-shape-group-result-group-name :shape
                         "GroupName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tests :initarg :tests :initform common-lisp:nil :type
                         (common-lisp:or test-case-runs common-lisp:null)
                         :accessor struct-shape-group-result-tests :shape
                         "TestCaseRuns" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-group-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'group-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'group-result 'make-group-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input group-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input group-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "groupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-name))
      (common-lisp:list
       (common-lisp:cons "groupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tests))
      (common-lisp:list
       (common-lisp:cons "tests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input group-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype group-result-list ()
   '(trivial-types:proper-list group-result))
 (common-lisp:defun make-group-result-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list group-result))
   aws-sdk/generator/shape::members))
(common-lisp:deftype intended-for-qualification-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype is-long-duration-test-boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass list-suite-definitions-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-suite-definitions-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-suite-definitions-request-next-token
                         :shape "Token" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-suite-definitions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-suite-definitions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-suite-definitions-request
                    'make-list-suite-definitions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-suite-definitions-response common-lisp:nil
                       ((suite-definition-information-list :initarg
                         :suite-definition-information-list :initform
                         common-lisp:nil :type
                         (common-lisp:or suite-definition-information-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-suite-definitions-response-suite-definition-information-list
                         :shape "SuiteDefinitionInformationList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-suite-definitions-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-suite-definitions-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-suite-definitions-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-suite-definitions-response
                    'make-list-suite-definitions-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-information-list))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionInformationList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-definitions-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-suite-runs-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-list-suite-runs-request-suite-definition-id
                         :shape "UUID" :location "querystring" :location-name
                         "suiteDefinitionId")
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-suite-runs-request-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         "querystring" :location-name "suiteDefinitionVersion")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-suite-runs-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-suite-runs-request-next-token :shape
                         "Token" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-suite-runs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-suite-runs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-suite-runs-request 'make-list-suite-runs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-suite-runs-response common-lisp:nil
                       ((suite-runs-list :initarg :suite-runs-list :initform
                         common-lisp:nil :type
                         (common-lisp:or suite-runs-list common-lisp:null)
                         :accessor
                         struct-shape-list-suite-runs-response-suite-runs-list
                         :shape "SuiteRunsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or token common-lisp:null) :accessor
                         struct-shape-list-suite-runs-response-next-token
                         :shape "Token" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-suite-runs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-suite-runs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-suite-runs-response 'make-list-suite-runs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-runs-list))
      (common-lisp:list
       (common-lisp:cons "suiteRunsList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-suite-runs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "uri"
                         :location-name "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype log-url () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype parallel-run () 'common-lisp:boolean)
(common-lisp:deftype protocol () 'common-lisp:string)
(common-lisp:deftype qualification-report-download-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype root-group () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype selected-test-list () '(trivial-types:proper-list uuid))
 (common-lisp:defun make-selected-test-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list uuid))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass start-suite-run-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-start-suite-run-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-suite-run-request-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (suite-run-configuration :initarg
                         :suite-run-configuration :initform
                         (common-lisp:error
                          ":suiterunconfiguration is required")
                         :type
                         (common-lisp:or suite-run-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-start-suite-run-request-suite-run-configuration
                         :shape "SuiteRunConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-start-suite-run-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-suite-run-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-suite-run-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-suite-run-request 'make-start-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-run-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteRunConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-suite-run-response common-lisp:nil
                       ((suite-run-id :initarg :suite-run-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-start-suite-run-response-suite-run-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-run-arn :initarg :suite-run-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-start-suite-run-response-suite-run-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-start-suite-run-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint :initarg :endpoint :initform common-lisp:nil
                         :type (common-lisp:or endpoint common-lisp:null)
                         :accessor
                         struct-shape-start-suite-run-response-endpoint :shape
                         "Endpoint" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-suite-run-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-suite-run-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-suite-run-response 'make-start-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-arn))
      (common-lisp:list
       (common-lisp:cons "suiteRunArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint))
      (common-lisp:list
       (common-lisp:cons "endpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stop-suite-run-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-stop-suite-run-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-run-id :initarg :suite-run-id :initform
                         (common-lisp:error ":suiterunid is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-stop-suite-run-request-suite-run-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteRunId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-suite-run-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-suite-run-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-suite-run-request 'make-stop-suite-run-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stop-suite-run-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stop-suite-run-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stop-suite-run-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stop-suite-run-response 'make-stop-suite-run-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          stop-suite-run-response))
   common-lisp:nil))
(common-lisp:deftype string128 () 'common-lisp:string)
(common-lisp:deftype string256 () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass suite-definition-configuration common-lisp:nil
                       ((suite-definition-name :initarg :suite-definition-name
                         :initform
                         (common-lisp:error ":suitedefinitionname is required")
                         :type
                         (common-lisp:or suite-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-suite-definition-name
                         :shape "SuiteDefinitionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (devices :initarg :devices :initform common-lisp:nil
                         :type
                         (common-lisp:or device-under-test-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-devices
                         :shape "DeviceUnderTestList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (intended-for-qualification :initarg
                         :intended-for-qualification :initform common-lisp:nil
                         :type
                         (common-lisp:or intended-for-qualification-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-intended-for-qualification
                         :shape "IntendedForQualificationBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (is-long-duration-test :initarg :is-long-duration-test
                         :initform common-lisp:nil :type
                         (common-lisp:or is-long-duration-test-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-is-long-duration-test
                         :shape "IsLongDurationTestBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (root-group :initarg :root-group :initform
                         (common-lisp:error ":rootgroup is required") :type
                         (common-lisp:or root-group common-lisp:null) :accessor
                         struct-shape-suite-definition-configuration-root-group
                         :shape "RootGroup" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-permission-role-arn :initarg
                         :device-permission-role-arn :initform
                         (common-lisp:error
                          ":devicepermissionrolearn is required")
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-device-permission-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or protocol common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-configuration-protocol
                         :shape "Protocol" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-suite-definition-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'suite-definition-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'suite-definition-configuration
                    'make-suite-definition-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'devices))
      (common-lisp:list
       (common-lisp:cons "devices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'intended-for-qualification))
      (common-lisp:list
       (common-lisp:cons "intendedForQualification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-long-duration-test))
      (common-lisp:list
       (common-lisp:cons "isLongDurationTest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-group))
      (common-lisp:list
       (common-lisp:cons "rootGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'device-permission-role-arn))
      (common-lisp:list
       (common-lisp:cons "devicePermissionRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass suite-definition-information common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-suite-definition-information-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-name :initarg :suite-definition-name
                         :initform common-lisp:nil :type
                         (common-lisp:or suite-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-information-suite-definition-name
                         :shape "SuiteDefinitionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-devices :initarg :default-devices :initform
                         common-lisp:nil :type
                         (common-lisp:or device-under-test-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-information-default-devices
                         :shape "DeviceUnderTestList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (intended-for-qualification :initarg
                         :intended-for-qualification :initform common-lisp:nil
                         :type
                         (common-lisp:or intended-for-qualification-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-information-intended-for-qualification
                         :shape "IntendedForQualificationBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (is-long-duration-test :initarg :is-long-duration-test
                         :initform common-lisp:nil :type
                         (common-lisp:or is-long-duration-test-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-information-is-long-duration-test
                         :shape "IsLongDurationTestBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (protocol :initarg :protocol :initform common-lisp:nil
                         :type (common-lisp:or protocol common-lisp:null)
                         :accessor
                         struct-shape-suite-definition-information-protocol
                         :shape "Protocol" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-suite-definition-information-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-suite-definition-information
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'suite-definition-information
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'suite-definition-information
                    'make-suite-definition-information))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-devices))
      (common-lisp:list
       (common-lisp:cons "defaultDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'intended-for-qualification))
      (common-lisp:list
       (common-lisp:cons "intendedForQualification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'is-long-duration-test))
      (common-lisp:list
       (common-lisp:cons "isLongDurationTest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'protocol))
      (common-lisp:list
       (common-lisp:cons "protocol"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-definition-information))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype suite-definition-information-list ()
   '(trivial-types:proper-list suite-definition-information))
 (common-lisp:defun make-suite-definition-information-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            suite-definition-information))
   aws-sdk/generator/shape::members))
(common-lisp:deftype suite-definition-name () 'common-lisp:string)
(common-lisp:deftype suite-definition-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass suite-run-configuration common-lisp:nil
                       ((primary-device :initarg :primary-device :initform
                         (common-lisp:error ":primarydevice is required") :type
                         (common-lisp:or device-under-test common-lisp:null)
                         :accessor
                         struct-shape-suite-run-configuration-primary-device
                         :shape "DeviceUnderTest" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (selected-test-list :initarg :selected-test-list
                         :initform common-lisp:nil :type
                         (common-lisp:or selected-test-list common-lisp:null)
                         :accessor
                         struct-shape-suite-run-configuration-selected-test-list
                         :shape "SelectedTestList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (parallel-run :initarg :parallel-run :initform
                         common-lisp:nil :type
                         (common-lisp:or parallel-run common-lisp:null)
                         :accessor
                         struct-shape-suite-run-configuration-parallel-run
                         :shape "ParallelRun" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-suite-run-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'suite-run-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'suite-run-configuration 'make-suite-run-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'primary-device))
      (common-lisp:list
       (common-lisp:cons "primaryDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selected-test-list))
      (common-lisp:list
       (common-lisp:cons "selectedTestList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parallel-run))
      (common-lisp:list
       (common-lisp:cons "parallelRun"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass suite-run-information common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-suite-run-information-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-run-information-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (suite-definition-name :initarg :suite-definition-name
                         :initform common-lisp:nil :type
                         (common-lisp:or suite-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-suite-run-information-suite-definition-name
                         :shape "SuiteDefinitionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-run-id :initarg :suite-run-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-suite-run-information-suite-run-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-suite-run-information-created-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (started-at :initarg :started-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-suite-run-information-started-at :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-at :initarg :end-at :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-suite-run-information-end-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-run-status common-lisp:null)
                         :accessor struct-shape-suite-run-information-status
                         :shape "SuiteRunStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (passed :initarg :passed :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-run-result-count
                                         common-lisp:null)
                         :accessor struct-shape-suite-run-information-passed
                         :shape "SuiteRunResultCount" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failed :initarg :failed :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-run-result-count
                                         common-lisp:null)
                         :accessor struct-shape-suite-run-information-failed
                         :shape "SuiteRunResultCount" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-suite-run-information
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'suite-run-information
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'suite-run-information 'make-suite-run-information))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-run-id))
      (common-lisp:list
       (common-lisp:cons "suiteRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'started-at))
      (common-lisp:list
       (common-lisp:cons "startedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-at))
      (common-lisp:list
       (common-lisp:cons "endAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'passed))
      (common-lisp:list
       (common-lisp:cons "passed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failed))
      (common-lisp:list
       (common-lisp:cons "failed"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          suite-run-information))
   common-lisp:nil))
(common-lisp:deftype suite-run-result-count () 'common-lisp:integer)
(common-lisp:deftype suite-run-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype suite-runs-list ()
   '(trivial-types:proper-list suite-run-information))
 (common-lisp:defun make-suite-runs-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list suite-run-information))
   aws-sdk/generator/shape::members))
(common-lisp:deftype system-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list string128))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string128))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "AmazonResourceName" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype test-case-definition-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass test-case-run common-lisp:nil
                       ((test-case-run-id :initarg :test-case-run-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-test-case-run-test-case-run-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (test-case-definition-id :initarg
                         :test-case-definition-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-test-case-run-test-case-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (test-case-definition-name :initarg
                         :test-case-definition-name :initform common-lisp:nil
                         :type
                         (common-lisp:or test-case-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-case-run-test-case-definition-name
                         :shape "TestCaseDefinitionName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-test-case-run-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-test-case-run-start-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor struct-shape-test-case-run-end-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (log-url :initarg :log-url :initform common-lisp:nil
                         :type (common-lisp:or log-url common-lisp:null)
                         :accessor struct-shape-test-case-run-log-url :shape
                         "LogUrl" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type (common-lisp:or warnings common-lisp:null)
                         :accessor struct-shape-test-case-run-warnings :shape
                         "Warnings" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (failure :initarg :failure :initform common-lisp:nil
                         :type (common-lisp:or failure common-lisp:null)
                         :accessor struct-shape-test-case-run-failure :shape
                         "Failure" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (test-scenarios :initarg :test-scenarios :initform
                         common-lisp:nil :type
                         (common-lisp:or test-case-scenarios-list
                                         common-lisp:null)
                         :accessor struct-shape-test-case-run-test-scenarios
                         :shape "TestCaseScenariosList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-case-run
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-case-run
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'test-case-run 'make-test-case-run))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-case-run))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-case-run))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-case-run-id))
      (common-lisp:list
       (common-lisp:cons "testCaseRunId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-definition-id))
      (common-lisp:list
       (common-lisp:cons "testCaseDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-definition-name))
      (common-lisp:list
       (common-lisp:cons "testCaseDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-url))
      (common-lisp:list
       (common-lisp:cons "logUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure))
      (common-lisp:list
       (common-lisp:cons "failure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'test-scenarios))
      (common-lisp:list
       (common-lisp:cons "testScenarios"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-case-run))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype test-case-runs ()
   '(trivial-types:proper-list test-case-run))
 (common-lisp:defun make-test-case-runs
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list test-case-run))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass test-case-scenario common-lisp:nil
                       ((test-case-scenario-id :initarg :test-case-scenario-id
                         :initform common-lisp:nil :type
                         (common-lisp:or test-case-scenario-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-case-scenario-test-case-scenario-id
                         :shape "TestCaseScenarioId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (test-case-scenario-type :initarg
                         :test-case-scenario-type :initform common-lisp:nil
                         :type
                         (common-lisp:or test-case-scenario-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-case-scenario-test-case-scenario-type
                         :shape "TestCaseScenarioType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or test-case-scenario-status
                                         common-lisp:null)
                         :accessor struct-shape-test-case-scenario-status
                         :shape "TestCaseScenarioStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (failure :initarg :failure :initform common-lisp:nil
                         :type (common-lisp:or failure common-lisp:null)
                         :accessor struct-shape-test-case-scenario-failure
                         :shape "Failure" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (system-message :initarg :system-message :initform
                         common-lisp:nil :type
                         (common-lisp:or system-message common-lisp:null)
                         :accessor
                         struct-shape-test-case-scenario-system-message :shape
                         "SystemMessage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-case-scenario
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-case-scenario
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-case-scenario 'make-test-case-scenario))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-case-scenario))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-case-scenario))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-scenario-id))
      (common-lisp:list
       (common-lisp:cons "testCaseScenarioId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'test-case-scenario-type))
      (common-lisp:list
       (common-lisp:cons "testCaseScenarioType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure))
      (common-lisp:list
       (common-lisp:cons "failure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-message))
      (common-lisp:list
       (common-lisp:cons "systemMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-case-scenario))
   common-lisp:nil))
(common-lisp:deftype test-case-scenario-id () 'common-lisp:string)
(common-lisp:deftype test-case-scenario-status () 'common-lisp:string)
(common-lisp:deftype test-case-scenario-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype test-case-scenarios-list ()
   '(trivial-types:proper-list test-case-scenario))
 (common-lisp:defun make-test-case-scenarios-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list test-case-scenario))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass test-result common-lisp:nil
                       ((groups :initarg :groups :initform common-lisp:nil
                         :type
                         (common-lisp:or group-result-list common-lisp:null)
                         :accessor struct-shape-test-result-groups :shape
                         "GroupResultList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'test-result 'make-test-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input test-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input test-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'groups))
      (common-lisp:list
       (common-lisp:cons "groups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input test-result))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype token () 'common-lisp:string)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "uri"
                         :location-name "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-suite-definition-request common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform
                         (common-lisp:error ":suitedefinitionid is required")
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-update-suite-definition-request-suite-definition-id
                         :shape "UUID" :location "uri" :location-name
                         "suiteDefinitionId")
                        (suite-definition-configuration :initarg
                         :suite-definition-configuration :initform
                         (common-lisp:error
                          ":suitedefinitionconfiguration is required")
                         :type
                         (common-lisp:or suite-definition-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-suite-definition-request-suite-definition-configuration
                         :shape "SuiteDefinitionConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-suite-definition-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-suite-definition-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-suite-definition-request
                    'make-update-suite-definition-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-configuration))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-suite-definition-response common-lisp:nil
                       ((suite-definition-id :initarg :suite-definition-id
                         :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-update-suite-definition-response-suite-definition-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (suite-definition-arn :initarg :suite-definition-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-update-suite-definition-response-suite-definition-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-definition-name :initarg :suite-definition-name
                         :initform common-lisp:nil :type
                         (common-lisp:or suite-definition-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-suite-definition-response-suite-definition-name
                         :shape "SuiteDefinitionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (suite-definition-version :initarg
                         :suite-definition-version :initform common-lisp:nil
                         :type
                         (common-lisp:or suite-definition-version
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-suite-definition-response-suite-definition-version
                         :shape "SuiteDefinitionVersion" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-suite-definition-response-created-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-at :initarg :last-updated-at :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-update-suite-definition-response-last-updated-at
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-suite-definition-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-suite-definition-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-suite-definition-response
                    'make-update-suite-definition-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'suite-definition-id))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-arn))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-name))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suite-definition-version))
      (common-lisp:list
       (common-lisp:cons "suiteDefinitionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "createdAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-at))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-suite-definition-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (iotdeviceadvisor-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:deftype warnings () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        "/suiteDefinitions" "CreateSuiteDefinition"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-suite-definition))
(common-lisp:progn
 (common-lisp:defun delete-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id)
   (common-lisp:declare (common-lisp:ignorable suite-definition-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "DeleteSuiteDefinition"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-suite-definition))
(common-lisp:progn
 (common-lisp:defun get-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-arn certificate-arn device-role-arn
                     authentication-method)
   (common-lisp:declare
    (common-lisp:ignorable thing-arn certificate-arn device-role-arn
     authentication-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/endpoint" "GetEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-endpoint))
(common-lisp:progn
 (common-lisp:defun get-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "GetSuiteDefinition"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-suite-definition))
(common-lisp:progn
 (common-lisp:defun get-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "GetSuiteRun"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-suite-run))
(common-lisp:progn
 (common-lisp:defun get-suite-run-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-suite-run-report-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A/report"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "GetSuiteRunReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-suite-run-report))
(common-lisp:progn
 (common-lisp:defun list-suite-definitions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-suite-definitions-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/suiteDefinitions" "ListSuiteDefinitions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-suite-definitions))
(common-lisp:progn
 (common-lisp:defun list-suite-runs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version
     max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-suite-runs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        "/suiteRuns" "ListSuiteRuns"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-suite-runs))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun start-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-version suite-run-configuration tags)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-version
     suite-run-configuration tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A/suiteRuns"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "StartSuiteRun"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-suite-run))
(common-lisp:progn
 (common-lisp:defun stop-suite-run
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id suite-run-id)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-run-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-stop-suite-run-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/suiteDefinitions/~A/suiteRuns/~A/stop"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-run-id))))
        "StopSuiteRun"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'stop-suite-run))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-suite-definition
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key suite-definition-id
                     suite-definition-configuration)
   (common-lisp:declare
    (common-lisp:ignorable suite-definition-id suite-definition-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-suite-definition-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'iotdeviceadvisor-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/suiteDefinitions/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'suite-definition-id))))
        "UpdateSuiteDefinition"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-suite-definition))
