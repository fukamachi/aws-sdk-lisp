;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/chatbot/api (:use)
                             (:nicknames #:aws/chatbot)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/chatbot/api)
(common-lisp:progn
 (common-lisp:define-condition chatbot-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'chatbot-error))
(common-lisp:progn
 (common-lisp:defclass chatbot-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "chatbot" :api-version
                        "2017-10-11" :host-prefix "chatbot" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'chatbot-request))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("CreateChimeWebhookConfigurationException"
     . create-chime-webhook-configuration-exception)
    ("CreateSlackChannelConfigurationException"
     . create-slack-channel-configuration-exception)
    ("CreateTeamsChannelConfigurationException"
     . create-teams-channel-configuration-exception)
    ("DeleteChimeWebhookConfigurationException"
     . delete-chime-webhook-configuration-exception)
    ("DeleteMicrosoftTeamsUserIdentityException"
     . delete-microsoft-teams-user-identity-exception)
    ("DeleteSlackChannelConfigurationException"
     . delete-slack-channel-configuration-exception)
    ("DeleteSlackUserIdentityException" . delete-slack-user-identity-exception)
    ("DeleteSlackWorkspaceAuthorizationFault"
     . delete-slack-workspace-authorization-fault)
    ("DeleteTeamsChannelConfigurationException"
     . delete-teams-channel-configuration-exception)
    ("DeleteTeamsConfiguredTeamException"
     . delete-teams-configured-team-exception)
    ("DescribeChimeWebhookConfigurationsException"
     . describe-chime-webhook-configurations-exception)
    ("DescribeSlackChannelConfigurationsException"
     . describe-slack-channel-configurations-exception)
    ("DescribeSlackUserIdentitiesException"
     . describe-slack-user-identities-exception)
    ("DescribeSlackWorkspacesException" . describe-slack-workspaces-exception)
    ("GetAccountPreferencesException" . get-account-preferences-exception)
    ("GetTeamsChannelConfigurationException"
     . get-teams-channel-configuration-exception)
    ("InvalidParameterException" . invalid-parameter-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("ListMicrosoftTeamsConfiguredTeamsException"
     . list-microsoft-teams-configured-teams-exception)
    ("ListMicrosoftTeamsUserIdentitiesException"
     . list-microsoft-teams-user-identities-exception)
    ("ListTeamsChannelConfigurationsException"
     . list-teams-channel-configurations-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("UpdateAccountPreferencesException"
     . update-account-preferences-exception)
    ("UpdateChimeWebhookConfigurationException"
     . update-chime-webhook-configuration-exception)
    ("UpdateSlackChannelConfigurationException"
     . update-slack-channel-configuration-exception)
    ("UpdateTeamsChannelConfigurationException"
     . update-teams-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass account-preferences common-lisp:nil
                       ((user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-preferences-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-data-collection-enabled :initarg
                         :training-data-collection-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-preferences-training-data-collection-enabled
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-preferences 'make-account-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-collection-enabled))
      (common-lisp:list
       (common-lisp:cons "TrainingDataCollectionEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account-preferences))
   common-lisp:nil))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype aws-user-identity () 'common-lisp:string)
(common-lisp:deftype boolean-account-preference () 'common-lisp:boolean)
(common-lisp:deftype chat-configuration-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass chime-webhook-configuration common-lisp:nil
                       ((webhook-description :initarg :webhook-description
                         :initform
                         (common-lisp:error ":webhook-description is required")
                         :type
                         (common-lisp:or chime-webhook-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-chime-webhook-configuration-webhook-description
                         :shape "ChimeWebhookDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-chime-webhook-configuration-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-chime-webhook-configuration-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         (common-lisp:error ":sns-topic-arns is required")
                         :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-chime-webhook-configuration-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-chime-webhook-configuration-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-chime-webhook-configuration-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-chime-webhook-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'chime-webhook-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'chime-webhook-configuration
                    'make-chime-webhook-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          chime-webhook-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          chime-webhook-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'webhook-description))
      (common-lisp:list
       (common-lisp:cons "WebhookDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          chime-webhook-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype chime-webhook-configuration-list ()
   '(trivial-types:proper-list chime-webhook-configuration))
 (common-lisp:defun make-chime-webhook-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            chime-webhook-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype chime-webhook-description () 'common-lisp:string)
(common-lisp:deftype chime-webhook-url () 'common-lisp:string)
(common-lisp:deftype configuration-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass configured-team common-lisp:nil
                       ((tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenant-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-configured-team-tenant-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (team-id :initarg :team-id :initform
                         (common-lisp:error ":team-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-configured-team-team-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (team-name :initarg :team-name :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-configured-team-team-name :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configured-team
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configured-team
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'configured-team 'make-configured-team))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input configured-team))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input configured-team))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "TenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-name))
      (common-lisp:list
       (common-lisp:cons "TeamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input configured-team))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype configured-teams-list ()
   '(trivial-types:proper-list configured-team))
 (common-lisp:defun make-configured-teams-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configured-team))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'conflict-exception)))
(common-lisp:progn
 (common-lisp:define-condition create-chime-webhook-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-chime-webhook-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass create-chime-webhook-configuration-request
                       common-lisp:nil
                       ((webhook-description :initarg :webhook-description
                         :initform
                         (common-lisp:error ":webhook-description is required")
                         :type
                         (common-lisp:or chime-webhook-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-request-webhook-description
                         :shape "ChimeWebhookDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (webhook-url :initarg :webhook-url :initform
                         (common-lisp:error ":webhook-url is required") :type
                         (common-lisp:or chime-webhook-url common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-request-webhook-url
                         :shape "ChimeWebhookUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         (common-lisp:error ":sns-topic-arns is required")
                         :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-chime-webhook-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform
                         (common-lisp:error ":configuration-name is required")
                         :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-request-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-chime-webhook-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-chime-webhook-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-chime-webhook-configuration-request
                    'make-create-chime-webhook-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'webhook-description))
      (common-lisp:list
       (common-lisp:cons "WebhookDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'webhook-url))
      (common-lisp:list
       (common-lisp:cons "WebhookUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-chime-webhook-configuration-result
                       common-lisp:nil
                       ((webhook-configuration :initarg :webhook-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-webhook-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-chime-webhook-configuration-result-webhook-configuration
                         :shape "ChimeWebhookConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-chime-webhook-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-chime-webhook-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-chime-webhook-configuration-result
                    'make-create-chime-webhook-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'webhook-configuration))
      (common-lisp:list
       (common-lisp:cons "WebhookConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-chime-webhook-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition create-slack-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-slack-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass create-slack-channel-configuration-request
                       common-lisp:nil
                       ((slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-slack-team-id
                         :shape "SlackTeamId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-id :initarg :slack-channel-id :initform
                         (common-lisp:error ":slack-channel-id is required")
                         :type
                         (common-lisp:or slack-channel-id common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-slack-channel-id
                         :shape "SlackChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-name :initarg :slack-channel-name
                         :initform common-lisp:nil :type
                         (common-lisp:or slack-channel-display-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-slack-channel-name
                         :shape "SlackChannelDisplayName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-slack-channel-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform
                         (common-lisp:error ":configuration-name is required")
                         :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-request-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-slack-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-slack-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-slack-channel-configuration-request
                    'make-create-slack-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-id))
      (common-lisp:list
       (common-lisp:cons "SlackChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-name))
      (common-lisp:list
       (common-lisp:cons "SlackChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-slack-channel-configuration-result
                       common-lisp:nil
                       ((channel-configuration :initarg :channel-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or slack-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-slack-channel-configuration-result-channel-configuration
                         :shape "SlackChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-slack-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-slack-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-slack-channel-configuration-result
                    'make-create-slack-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-slack-channel-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition create-teams-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'create-teams-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass create-teams-channel-configuration-request
                       common-lisp:nil
                       ((channel-id :initarg :channel-id :initform
                         (common-lisp:error ":channel-id is required") :type
                         (common-lisp:or teams-channel-id common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-channel-id
                         :shape "TeamsChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or teams-channel-name common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-channel-name
                         :shape "TeamsChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform
                         (common-lisp:error ":team-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-teams-channel-configuration-request-team-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (team-name :initarg :team-name :initform
                         common-lisp:nil :type
                         (common-lisp:or team-name common-lisp:null) :accessor
                         struct-shape-create-teams-channel-configuration-request-team-name
                         :shape "TeamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenant-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-teams-channel-configuration-request-tenant-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-teams-channel-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform
                         (common-lisp:error ":configuration-name is required")
                         :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-request-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-teams-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-teams-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-teams-channel-configuration-request
                    'make-create-teams-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-name))
      (common-lisp:list
       (common-lisp:cons "TeamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "TenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-teams-channel-configuration-result
                       common-lisp:nil
                       ((channel-configuration :initarg :channel-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or teams-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-teams-channel-configuration-result-channel-configuration
                         :shape "TeamsChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-teams-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-teams-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-teams-channel-configuration-result
                    'make-create-teams-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-teams-channel-configuration-result))
   common-lisp:nil))
(common-lisp:deftype customer-cw-log-level () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition delete-chime-webhook-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-chime-webhook-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-chime-webhook-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-chime-webhook-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-chime-webhook-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-chime-webhook-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-chime-webhook-configuration-request
                    'make-delete-chime-webhook-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-chime-webhook-configuration-result
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-chime-webhook-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-chime-webhook-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-chime-webhook-configuration-result
                    'make-delete-chime-webhook-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chime-webhook-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-microsoft-teams-user-identity-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-microsoft-teams-user-identity-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-microsoft-teams-user-identity-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-microsoft-teams-user-identity-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":user-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-delete-microsoft-teams-user-identity-request-user-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-microsoft-teams-user-identity-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-microsoft-teams-user-identity-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-microsoft-teams-user-identity-request
                    'make-delete-microsoft-teams-user-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-microsoft-teams-user-identity-result
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-microsoft-teams-user-identity-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-microsoft-teams-user-identity-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-microsoft-teams-user-identity-result
                    'make-delete-microsoft-teams-user-identity-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-microsoft-teams-user-identity-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-slack-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-slack-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-slack-channel-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-slack-channel-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-channel-configuration-request
                    'make-delete-slack-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-slack-channel-configuration-result
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-channel-configuration-result
                    'make-delete-slack-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-channel-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-slack-user-identity-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'delete-slack-user-identity-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-slack-user-identity-request common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-slack-user-identity-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor
                         struct-shape-delete-slack-user-identity-request-slack-team-id
                         :shape "SlackTeamId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-user-id :initarg :slack-user-id :initform
                         (common-lisp:error ":slack-user-id is required") :type
                         (common-lisp:or slack-user-id common-lisp:null)
                         :accessor
                         struct-shape-delete-slack-user-identity-request-slack-user-id
                         :shape "SlackUserId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-user-identity-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-user-identity-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-user-identity-request
                    'make-delete-slack-user-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-user-id))
      (common-lisp:list
       (common-lisp:cons "SlackUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-slack-user-identity-result common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-user-identity-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-user-identity-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-user-identity-result
                    'make-delete-slack-user-identity-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-user-identity-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-slack-workspace-authorization-fault
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-slack-workspace-authorization-fault)))
(common-lisp:progn
 (common-lisp:defclass delete-slack-workspace-authorization-request
                       common-lisp:nil
                       ((slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor
                         struct-shape-delete-slack-workspace-authorization-request-slack-team-id
                         :shape "SlackTeamId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-workspace-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-workspace-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-workspace-authorization-request
                    'make-delete-slack-workspace-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-slack-workspace-authorization-result
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-slack-workspace-authorization-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-slack-workspace-authorization-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-slack-workspace-authorization-result
                    'make-delete-slack-workspace-authorization-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-slack-workspace-authorization-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-teams-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-teams-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-teams-channel-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-teams-channel-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-teams-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-teams-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-teams-channel-configuration-request
                    'make-delete-teams-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-teams-channel-configuration-result
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-teams-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-teams-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-teams-channel-configuration-result
                    'make-delete-teams-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-channel-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition delete-teams-configured-team-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'delete-teams-configured-team-exception)))
(common-lisp:progn
 (common-lisp:defclass delete-teams-configured-team-request common-lisp:nil
                       ((team-id :initarg :team-id :initform
                         (common-lisp:error ":team-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-delete-teams-configured-team-request-team-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-teams-configured-team-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-teams-configured-team-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-teams-configured-team-request
                    'make-delete-teams-configured-team-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-teams-configured-team-result common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-teams-configured-team-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-teams-configured-team-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-teams-configured-team-result
                    'make-delete-teams-configured-team-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-teams-configured-team-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition describe-chime-webhook-configurations-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-chime-webhook-configurations-exception)))
(common-lisp:progn
 (common-lisp:defclass describe-chime-webhook-configurations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-chime-webhook-configurations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-chime-webhook-configurations-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-chime-webhook-configurations-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-chime-webhook-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-chime-webhook-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-chime-webhook-configurations-request
                    'make-describe-chime-webhook-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-chime-webhook-configurations-result
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-chime-webhook-configurations-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (webhook-configurations :initarg
                         :webhook-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or chime-webhook-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-chime-webhook-configurations-result-webhook-configurations
                         :shape "ChimeWebhookConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-chime-webhook-configurations-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-chime-webhook-configurations-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-chime-webhook-configurations-result
                    'make-describe-chime-webhook-configurations-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'webhook-configurations))
      (common-lisp:list
       (common-lisp:cons "WebhookConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chime-webhook-configurations-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition describe-slack-channel-configurations-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-slack-channel-configurations-exception)))
(common-lisp:progn
 (common-lisp:defclass describe-slack-channel-configurations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-channel-configurations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-channel-configurations-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-channel-configurations-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-channel-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-channel-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-channel-configurations-request
                    'make-describe-slack-channel-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-slack-channel-configurations-result
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-channel-configurations-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-configurations :initarg
                         :slack-channel-configurations :initform
                         common-lisp:nil :type
                         (common-lisp:or slack-channel-configuration-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-channel-configurations-result-slack-channel-configurations
                         :shape "SlackChannelConfigurationList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-channel-configurations-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-channel-configurations-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-channel-configurations-result
                    'make-describe-slack-channel-configurations-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'slack-channel-configurations))
      (common-lisp:list
       (common-lisp:cons "SlackChannelConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-channel-configurations-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition describe-slack-user-identities-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'describe-slack-user-identities-exception)))
(common-lisp:progn
 (common-lisp:defclass describe-slack-user-identities-request common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-user-identities-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-user-identities-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-user-identities-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-user-identities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-user-identities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-user-identities-request
                    'make-describe-slack-user-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-slack-user-identities-result common-lisp:nil
                       ((slack-user-identities :initarg :slack-user-identities
                         :initform common-lisp:nil :type
                         (common-lisp:or slack-user-identities-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-user-identities-result-slack-user-identities
                         :shape "SlackUserIdentitiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-user-identities-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-user-identities-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-user-identities-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-user-identities-result
                    'make-describe-slack-user-identities-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'slack-user-identities))
      (common-lisp:list
       (common-lisp:cons "SlackUserIdentities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-user-identities-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition describe-slack-workspaces-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'describe-slack-workspaces-exception)))
(common-lisp:progn
 (common-lisp:defclass describe-slack-workspaces-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-workspaces-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-workspaces-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-workspaces-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-workspaces-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-workspaces-request
                    'make-describe-slack-workspaces-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-slack-workspaces-result common-lisp:nil
                       ((slack-workspaces :initarg :slack-workspaces :initform
                         common-lisp:nil :type
                         (common-lisp:or slack-workspaces-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-workspaces-result-slack-workspaces
                         :shape "SlackWorkspacesList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-describe-slack-workspaces-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-slack-workspaces-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-slack-workspaces-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-slack-workspaces-result
                    'make-describe-slack-workspaces-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-workspaces))
      (common-lisp:list
       (common-lisp:cons "SlackWorkspaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-slack-workspaces-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition get-account-preferences-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'get-account-preferences-exception)))
(common-lisp:progn
 (common-lisp:defclass get-account-preferences-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-preferences-request
                    'make-get-account-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-preferences-result common-lisp:nil
                       ((account-preferences :initarg :account-preferences
                         :initform common-lisp:nil :type
                         (common-lisp:or account-preferences common-lisp:null)
                         :accessor
                         struct-shape-get-account-preferences-result-account-preferences
                         :shape "AccountPreferences" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-preferences-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-account-preferences-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-preferences-result
                    'make-get-account-preferences-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-preferences))
      (common-lisp:list
       (common-lisp:cons "AccountPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-account-preferences-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition get-teams-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'get-teams-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass get-teams-channel-configuration-request common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-teams-channel-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-teams-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-teams-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-teams-channel-configuration-request
                    'make-get-teams-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-teams-channel-configuration-result common-lisp:nil
                       ((channel-configuration :initarg :channel-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or teams-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-teams-channel-configuration-result-channel-configuration
                         :shape "TeamsChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-teams-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-teams-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-teams-channel-configuration-result
                    'make-get-teams-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-teams-channel-configuration-result))
   common-lisp:nil))
(common-lisp:deftype guardrail-policy-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype guardrail-policy-arn-list ()
   '(trivial-types:proper-list guardrail-policy-arn))
 (common-lisp:defun make-guardrail-policy-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list guardrail-policy-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-parameter-exception)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'invalid-request-exception)))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:define-condition list-microsoft-teams-configured-teams-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-configured-teams-exception)))
(common-lisp:progn
 (common-lisp:defclass list-microsoft-teams-configured-teams-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-configured-teams-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-configured-teams-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-microsoft-teams-configured-teams-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-microsoft-teams-configured-teams-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-configured-teams-request
                    'make-list-microsoft-teams-configured-teams-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-microsoft-teams-configured-teams-result
                       common-lisp:nil
                       ((configured-teams :initarg :configured-teams :initform
                         common-lisp:nil :type
                         (common-lisp:or configured-teams-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-configured-teams-result-configured-teams
                         :shape "ConfiguredTeamsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-configured-teams-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-microsoft-teams-configured-teams-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-microsoft-teams-configured-teams-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-configured-teams-result
                    'make-list-microsoft-teams-configured-teams-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configured-teams))
      (common-lisp:list
       (common-lisp:cons "ConfiguredTeams"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-configured-teams-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition list-microsoft-teams-user-identities-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-user-identities-exception)))
(common-lisp:progn
 (common-lisp:defclass list-microsoft-teams-user-identities-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-user-identities-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-user-identities-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-user-identities-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-microsoft-teams-user-identities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-microsoft-teams-user-identities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-user-identities-request
                    'make-list-microsoft-teams-user-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-microsoft-teams-user-identities-result
                       common-lisp:nil
                       ((teams-user-identities :initarg :teams-user-identities
                         :initform common-lisp:nil :type
                         (common-lisp:or teams-user-identities-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-user-identities-result-teams-user-identities
                         :shape "TeamsUserIdentitiesList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-microsoft-teams-user-identities-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-microsoft-teams-user-identities-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-microsoft-teams-user-identities-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-microsoft-teams-user-identities-result
                    'make-list-microsoft-teams-user-identities-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'teams-user-identities))
      (common-lisp:list
       (common-lisp:cons "TeamsUserIdentities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-microsoft-teams-user-identities-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition list-teams-channel-configurations-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'list-teams-channel-configurations-exception)))
(common-lisp:progn
 (common-lisp:defclass list-teams-channel-configurations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-teams-channel-configurations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-teams-channel-configurations-request-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-list-teams-channel-configurations-request-team-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-teams-channel-configurations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-teams-channel-configurations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-teams-channel-configurations-request
                    'make-list-teams-channel-configurations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-teams-channel-configurations-result common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or pagination-token common-lisp:null)
                         :accessor
                         struct-shape-list-teams-channel-configurations-result-next-token
                         :shape "PaginationToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-channel-configurations :initarg
                         :team-channel-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or team-channel-configurations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-teams-channel-configurations-result-team-channel-configurations
                         :shape "TeamChannelConfigurationsList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-teams-channel-configurations-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-teams-channel-configurations-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-teams-channel-configurations-result
                    'make-list-teams-channel-configurations-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'team-channel-configurations))
      (common-lisp:list
       (common-lisp:cons "TeamChannelConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-teams-channel-configurations-result))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype pagination-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'resource-not-found-exception)))
(common-lisp:progn
 (common-lisp:defclass slack-channel-configuration common-lisp:nil
                       ((slack-team-name :initarg :slack-team-name :initform
                         (common-lisp:error ":slack-team-name is required")
                         :type
                         (common-lisp:or slack-team-name common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-slack-team-name
                         :shape "SlackTeamName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-slack-team-id
                         :shape "SlackTeamId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-id :initarg :slack-channel-id :initform
                         (common-lisp:error ":slack-channel-id is required")
                         :type
                         (common-lisp:or slack-channel-id common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-slack-channel-id
                         :shape "SlackChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-name :initarg :slack-channel-name
                         :initform
                         (common-lisp:error ":slack-channel-name is required")
                         :type
                         (common-lisp:or slack-channel-display-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-slack-channel-name
                         :shape "SlackChannelDisplayName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-slack-channel-configuration-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         (common-lisp:error ":sns-topic-arns is required")
                         :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-channel-configuration-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-slack-channel-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'slack-channel-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'slack-channel-configuration
                    'make-slack-channel-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          slack-channel-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          slack-channel-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-name))
      (common-lisp:list
       (common-lisp:cons "SlackTeamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-id))
      (common-lisp:list
       (common-lisp:cons "SlackChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-name))
      (common-lisp:list
       (common-lisp:cons "SlackChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          slack-channel-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype slack-channel-configuration-list ()
   '(trivial-types:proper-list slack-channel-configuration))
 (common-lisp:defun make-slack-channel-configuration-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            slack-channel-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype slack-channel-display-name () 'common-lisp:string)
(common-lisp:deftype slack-channel-id () 'common-lisp:string)
(common-lisp:deftype slack-team-id () 'common-lisp:string)
(common-lisp:deftype slack-team-name () 'common-lisp:string)
(common-lisp:deftype slack-user-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype slack-user-identities-list ()
   '(trivial-types:proper-list slack-user-identity))
 (common-lisp:defun make-slack-user-identities-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slack-user-identity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass slack-user-identity common-lisp:nil
                       ((iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-slack-user-identity-iam-role-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-slack-user-identity-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor
                         struct-shape-slack-user-identity-slack-team-id :shape
                         "SlackTeamId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (slack-user-id :initarg :slack-user-id :initform
                         (common-lisp:error ":slack-user-id is required") :type
                         (common-lisp:or slack-user-id common-lisp:null)
                         :accessor
                         struct-shape-slack-user-identity-slack-user-id :shape
                         "SlackUserId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (aws-user-identity :initarg :aws-user-identity
                         :initform common-lisp:nil :type
                         (common-lisp:or aws-user-identity common-lisp:null)
                         :accessor
                         struct-shape-slack-user-identity-aws-user-identity
                         :shape "AwsUserIdentity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-slack-user-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'slack-user-identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'slack-user-identity 'make-slack-user-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slack-user-identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slack-user-identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-user-id))
      (common-lisp:list
       (common-lisp:cons "SlackUserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-user-identity))
      (common-lisp:list
       (common-lisp:cons "AwsUserIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slack-user-identity))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass slack-workspace common-lisp:nil
                       ((slack-team-id :initarg :slack-team-id :initform
                         (common-lisp:error ":slack-team-id is required") :type
                         (common-lisp:or slack-team-id common-lisp:null)
                         :accessor struct-shape-slack-workspace-slack-team-id
                         :shape "SlackTeamId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-team-name :initarg :slack-team-name :initform
                         (common-lisp:error ":slack-team-name is required")
                         :type
                         (common-lisp:or slack-team-name common-lisp:null)
                         :accessor struct-shape-slack-workspace-slack-team-name
                         :shape "SlackTeamName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-slack-workspace
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'slack-workspace
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'slack-workspace 'make-slack-workspace))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input slack-workspace))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input slack-workspace))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-id))
      (common-lisp:list
       (common-lisp:cons "SlackTeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-team-name))
      (common-lisp:list
       (common-lisp:cons "SlackTeamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input slack-workspace))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype slack-workspaces-list ()
   '(trivial-types:proper-list slack-workspace))
 (common-lisp:defun make-slack-workspaces-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list slack-workspace))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype sns-topic-arn-list () '(trivial-types:proper-list arn))
 (common-lisp:defun make-sns-topic-arn-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype team-channel-configurations-list ()
   '(trivial-types:proper-list teams-channel-configuration))
 (common-lisp:defun make-team-channel-configurations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            teams-channel-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype team-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass teams-channel-configuration common-lisp:nil
                       ((channel-id :initarg :channel-id :initform
                         (common-lisp:error ":channel-id is required") :type
                         (common-lisp:or teams-channel-id common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-channel-id
                         :shape "TeamsChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or teams-channel-name common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-channel-name
                         :shape "TeamsChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform
                         (common-lisp:error ":team-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-teams-channel-configuration-team-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (team-name :initarg :team-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-teams-channel-configuration-team-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tenant-id :initarg :tenant-id :initform
                         (common-lisp:error ":tenant-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-teams-channel-configuration-tenant-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-teams-channel-configuration-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         (common-lisp:error ":sns-topic-arns is required")
                         :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-name :initarg :configuration-name
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-name common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-configuration-name
                         :shape "ConfigurationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-teams-channel-configuration-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-teams-channel-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'teams-channel-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'teams-channel-configuration
                    'make-teams-channel-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          teams-channel-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          teams-channel-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-name))
      (common-lisp:list
       (common-lisp:cons "TeamName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tenant-id))
      (common-lisp:list
       (common-lisp:cons "TenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          teams-channel-configuration))
   common-lisp:nil))
(common-lisp:deftype teams-channel-id () 'common-lisp:string)
(common-lisp:deftype teams-channel-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype teams-user-identities-list ()
   '(trivial-types:proper-list teams-user-identity))
 (common-lisp:defun make-teams-user-identities-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list teams-user-identity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass teams-user-identity common-lisp:nil
                       ((iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-teams-user-identity-iam-role-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-teams-user-identity-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (team-id :initarg :team-id :initform
                         (common-lisp:error ":team-id is required") :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-teams-user-identity-team-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-teams-user-identity-user-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (aws-user-identity :initarg :aws-user-identity
                         :initform common-lisp:nil :type
                         (common-lisp:or aws-user-identity common-lisp:null)
                         :accessor
                         struct-shape-teams-user-identity-aws-user-identity
                         :shape "AwsUserIdentity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (teams-channel-id :initarg :teams-channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or teams-channel-id common-lisp:null)
                         :accessor
                         struct-shape-teams-user-identity-teams-channel-id
                         :shape "TeamsChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (teams-tenant-id :initarg :teams-tenant-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-teams-user-identity-teams-tenant-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-teams-user-identity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'teams-user-identity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'teams-user-identity 'make-teams-user-identity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input teams-user-identity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input teams-user-identity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'team-id))
      (common-lisp:list
       (common-lisp:cons "TeamId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "UserId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'aws-user-identity))
      (common-lisp:list
       (common-lisp:cons "AwsUserIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'teams-channel-id))
      (common-lisp:list
       (common-lisp:cons "TeamsChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'teams-tenant-id))
      (common-lisp:list
       (common-lisp:cons "TeamsTenantId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input teams-user-identity))
   common-lisp:nil))
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition update-account-preferences-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'update-account-preferences-exception)))
(common-lisp:progn
 (common-lisp:defclass update-account-preferences-request common-lisp:nil
                       ((user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-account-preferences-request-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (training-data-collection-enabled :initarg
                         :training-data-collection-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-account-preferences-request-training-data-collection-enabled
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-preferences-request
                    'make-update-account-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'training-data-collection-enabled))
      (common-lisp:list
       (common-lisp:cons "TrainingDataCollectionEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-preferences-result common-lisp:nil
                       ((account-preferences :initarg :account-preferences
                         :initform common-lisp:nil :type
                         (common-lisp:or account-preferences common-lisp:null)
                         :accessor
                         struct-shape-update-account-preferences-result-account-preferences
                         :shape "AccountPreferences" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-preferences-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-account-preferences-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-preferences-result
                    'make-update-account-preferences-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-preferences))
      (common-lisp:list
       (common-lisp:cons "AccountPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-preferences-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition update-chime-webhook-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-chime-webhook-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass update-chime-webhook-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (webhook-description :initarg :webhook-description
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-webhook-description
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-request-webhook-description
                         :shape "ChimeWebhookDescription" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (webhook-url :initarg :webhook-url :initform
                         common-lisp:nil :type
                         (common-lisp:or chime-webhook-url common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-request-webhook-url
                         :shape "ChimeWebhookUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-chime-webhook-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-chime-webhook-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-chime-webhook-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-chime-webhook-configuration-request
                    'make-update-chime-webhook-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'webhook-description))
      (common-lisp:list
       (common-lisp:cons "WebhookDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'webhook-url))
      (common-lisp:list
       (common-lisp:cons "WebhookUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-chime-webhook-configuration-result
                       common-lisp:nil
                       ((webhook-configuration :initarg :webhook-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or chime-webhook-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-chime-webhook-configuration-result-webhook-configuration
                         :shape "ChimeWebhookConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-chime-webhook-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-chime-webhook-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-chime-webhook-configuration-result
                    'make-update-chime-webhook-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'webhook-configuration))
      (common-lisp:list
       (common-lisp:cons "WebhookConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chime-webhook-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition update-slack-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-slack-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass update-slack-channel-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (slack-channel-id :initarg :slack-channel-id :initform
                         (common-lisp:error ":slack-channel-id is required")
                         :type
                         (common-lisp:or slack-channel-id common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-slack-channel-id
                         :shape "SlackChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (slack-channel-name :initarg :slack-channel-name
                         :initform common-lisp:nil :type
                         (common-lisp:or slack-channel-display-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-slack-channel-name
                         :shape "SlackChannelDisplayName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-slack-channel-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-request-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-slack-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-slack-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-slack-channel-configuration-request
                    'make-update-slack-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-id))
      (common-lisp:list
       (common-lisp:cons "SlackChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'slack-channel-name))
      (common-lisp:list
       (common-lisp:cons "SlackChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-slack-channel-configuration-result
                       common-lisp:nil
                       ((channel-configuration :initarg :channel-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or slack-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-slack-channel-configuration-result-channel-configuration
                         :shape "SlackChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-slack-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-slack-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-slack-channel-configuration-result
                    'make-update-slack-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-slack-channel-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition update-teams-channel-configuration-exception
     (chatbot-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'update-teams-channel-configuration-exception)))
(common-lisp:progn
 (common-lisp:defclass update-teams-channel-configuration-request
                       common-lisp:nil
                       ((chat-configuration-arn :initarg
                         :chat-configuration-arn :initform
                         (common-lisp:error
                          ":chat-configuration-arn is required")
                         :type
                         (common-lisp:or chat-configuration-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-chat-configuration-arn
                         :shape "ChatConfigurationArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (channel-id :initarg :channel-id :initform
                         (common-lisp:error ":channel-id is required") :type
                         (common-lisp:or teams-channel-id common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-channel-id
                         :shape "TeamsChannelId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (channel-name :initarg :channel-name :initform
                         common-lisp:nil :type
                         (common-lisp:or teams-channel-name common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-channel-name
                         :shape "TeamsChannelName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sns-topic-arns :initarg :sns-topic-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-topic-arn-list common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-sns-topic-arns
                         :shape "SnsTopicArnList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-update-teams-channel-configuration-request-iam-role-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or customer-cw-log-level
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-logging-level
                         :shape "CustomerCwLogLevel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guardrail-policy-arns :initarg :guardrail-policy-arns
                         :initform common-lisp:nil :type
                         (common-lisp:or guardrail-policy-arn-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-guardrail-policy-arns
                         :shape "GuardrailPolicyArnList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-authorization-required :initarg
                         :user-authorization-required :initform common-lisp:nil
                         :type
                         (common-lisp:or boolean-account-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-request-user-authorization-required
                         :shape "BooleanAccountPreference" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-teams-channel-configuration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-teams-channel-configuration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-teams-channel-configuration-request
                    'make-update-teams-channel-configuration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'chat-configuration-arn))
      (common-lisp:list
       (common-lisp:cons "ChatConfigurationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-name))
      (common-lisp:list
       (common-lisp:cons "ChannelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-topic-arns))
      (common-lisp:list
       (common-lisp:cons "SnsTopicArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "LoggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guardrail-policy-arns))
      (common-lisp:list
       (common-lisp:cons "GuardrailPolicyArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'user-authorization-required))
      (common-lisp:list
       (common-lisp:cons "UserAuthorizationRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-teams-channel-configuration-result
                       common-lisp:nil
                       ((channel-configuration :initarg :channel-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or teams-channel-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-teams-channel-configuration-result-channel-configuration
                         :shape "TeamsChannelConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-teams-channel-configuration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-teams-channel-configuration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-teams-channel-configuration-result
                    'make-update-teams-channel-configuration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'channel-configuration))
      (common-lisp:list
       (common-lisp:cons "ChannelConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-teams-channel-configuration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-chime-webhook-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key webhook-description webhook-url
                     sns-topic-arns iam-role-arn configuration-name
                     logging-level)
   (common-lisp:declare
    (common-lisp:ignorable webhook-description webhook-url sns-topic-arns
     iam-role-arn configuration-name logging-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-chime-webhook-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/create-chime-webhook-configuration"
                                                        "CreateChimeWebhookConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-chime-webhook-configuration))
(common-lisp:progn
 (common-lisp:defun create-microsoft-teams-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-id channel-name team-id team-name
                     tenant-id sns-topic-arns iam-role-arn configuration-name
                     logging-level guardrail-policy-arns
                     user-authorization-required)
   (common-lisp:declare
    (common-lisp:ignorable channel-id channel-name team-id team-name tenant-id
     sns-topic-arns iam-role-arn configuration-name logging-level
     guardrail-policy-arns user-authorization-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-teams-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/create-ms-teams-channel-configuration"
                                                        "CreateMicrosoftTeamsChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-microsoft-teams-channel-configuration))
(common-lisp:progn
 (common-lisp:defun create-slack-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key slack-team-id slack-channel-id
                     slack-channel-name sns-topic-arns iam-role-arn
                     configuration-name logging-level guardrail-policy-arns
                     user-authorization-required)
   (common-lisp:declare
    (common-lisp:ignorable slack-team-id slack-channel-id slack-channel-name
     sns-topic-arns iam-role-arn configuration-name logging-level
     guardrail-policy-arns user-authorization-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-slack-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/create-slack-channel-configuration"
                                                        "CreateSlackChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-slack-channel-configuration))
(common-lisp:progn
 (common-lisp:defun delete-chime-webhook-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn)
   (common-lisp:declare (common-lisp:ignorable chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-chime-webhook-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-chime-webhook-configuration"
                                                        "DeleteChimeWebhookConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-chime-webhook-configuration))
(common-lisp:progn
 (common-lisp:defun delete-microsoft-teams-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn)
   (common-lisp:declare (common-lisp:ignorable chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-teams-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-ms-teams-channel-configuration"
                                                        "DeleteMicrosoftTeamsChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-microsoft-teams-channel-configuration))
(common-lisp:progn
 (common-lisp:defun delete-microsoft-teams-configured-team
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key team-id)
   (common-lisp:declare (common-lisp:ignorable team-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-teams-configured-team-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-ms-teams-configured-teams"
                                                        "DeleteMicrosoftTeamsConfiguredTeam"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-microsoft-teams-configured-team))
(common-lisp:progn
 (common-lisp:defun delete-microsoft-teams-user-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn user-id)
   (common-lisp:declare (common-lisp:ignorable chat-configuration-arn user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-microsoft-teams-user-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-ms-teams-user-identity"
                                                        "DeleteMicrosoftTeamsUserIdentity"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-microsoft-teams-user-identity))
(common-lisp:progn
 (common-lisp:defun delete-slack-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn)
   (common-lisp:declare (common-lisp:ignorable chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-slack-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-slack-channel-configuration"
                                                        "DeleteSlackChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-slack-channel-configuration))
(common-lisp:progn
 (common-lisp:defun delete-slack-user-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn slack-team-id
                     slack-user-id)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn slack-team-id slack-user-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-slack-user-identity-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-slack-user-identity"
                                                        "DeleteSlackUserIdentity"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-slack-user-identity))
(common-lisp:progn
 (common-lisp:defun delete-slack-workspace-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key slack-team-id)
   (common-lisp:declare (common-lisp:ignorable slack-team-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-slack-workspace-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/delete-slack-workspace-authorization"
                                                        "DeleteSlackWorkspaceAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-slack-workspace-authorization))
(common-lisp:progn
 (common-lisp:defun describe-chime-webhook-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     chat-configuration-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-chime-webhook-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describe-chime-webhook-configurations"
                                                        "DescribeChimeWebhookConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-chime-webhook-configurations))
(common-lisp:progn
 (common-lisp:defun describe-slack-channel-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     chat-configuration-arn)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-slack-channel-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describe-slack-channel-configurations"
                                                        "DescribeSlackChannelConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-slack-channel-configurations))
(common-lisp:progn
 (common-lisp:defun describe-slack-user-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-slack-user-identities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describe-slack-user-identities"
                                                        "DescribeSlackUserIdentities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-slack-user-identities))
(common-lisp:progn
 (common-lisp:defun describe-slack-workspaces
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-slack-workspaces-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/describe-slack-workspaces"
                                                        "DescribeSlackWorkspaces"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-slack-workspaces))
(common-lisp:progn
 (common-lisp:defun get-account-preferences ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'chatbot-request :method "POST" :path
                                "/get-account-preferences" :operation
                                "GetAccountPreferences"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account-preferences))
(common-lisp:progn
 (common-lisp:defun get-microsoft-teams-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn)
   (common-lisp:declare (common-lisp:ignorable chat-configuration-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-teams-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/get-ms-teams-channel-configuration"
                                                        "GetMicrosoftTeamsChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-microsoft-teams-channel-configuration))
(common-lisp:progn
 (common-lisp:defun list-microsoft-teams-channel-configurations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token team-id)
   (common-lisp:declare (common-lisp:ignorable max-results next-token team-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-teams-channel-configurations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/list-ms-teams-channel-configurations"
                                                        "ListMicrosoftTeamsChannelConfigurations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-microsoft-teams-channel-configurations))
(common-lisp:progn
 (common-lisp:defun list-microsoft-teams-configured-teams
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-microsoft-teams-configured-teams-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/list-ms-teams-configured-teams"
                                                        "ListMicrosoftTeamsConfiguredTeams"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-microsoft-teams-configured-teams))
(common-lisp:progn
 (common-lisp:defun list-microsoft-teams-user-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-microsoft-teams-user-identities-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/list-ms-teams-user-identities"
                                                        "ListMicrosoftTeamsUserIdentities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-microsoft-teams-user-identities))
(common-lisp:progn
 (common-lisp:defun update-account-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-authorization-required
                     training-data-collection-enabled)
   (common-lisp:declare
    (common-lisp:ignorable user-authorization-required
     training-data-collection-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-account-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/update-account-preferences"
                                                        "UpdateAccountPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-account-preferences))
(common-lisp:progn
 (common-lisp:defun update-chime-webhook-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn
                     webhook-description webhook-url sns-topic-arns
                     iam-role-arn logging-level)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn webhook-description
     webhook-url sns-topic-arns iam-role-arn logging-level))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-chime-webhook-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/update-chime-webhook-configuration"
                                                        "UpdateChimeWebhookConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-chime-webhook-configuration))
(common-lisp:progn
 (common-lisp:defun update-microsoft-teams-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn channel-id
                     channel-name sns-topic-arns iam-role-arn logging-level
                     guardrail-policy-arns user-authorization-required)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn channel-id channel-name
     sns-topic-arns iam-role-arn logging-level guardrail-policy-arns
     user-authorization-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-teams-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/update-ms-teams-channel-configuration"
                                                        "UpdateMicrosoftTeamsChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-microsoft-teams-channel-configuration))
(common-lisp:progn
 (common-lisp:defun update-slack-channel-configuration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key chat-configuration-arn slack-channel-id
                     slack-channel-name sns-topic-arns iam-role-arn
                     logging-level guardrail-policy-arns
                     user-authorization-required)
   (common-lisp:declare
    (common-lisp:ignorable chat-configuration-arn slack-channel-id
     slack-channel-name sns-topic-arns iam-role-arn logging-level
     guardrail-policy-arns user-authorization-required))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-slack-channel-configuration-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'chatbot-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/update-slack-channel-configuration"
                                                        "UpdateSlackChannelConfiguration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-slack-channel-configuration))
