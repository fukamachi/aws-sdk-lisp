;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/pinpoint-email/api
  (:use)
  (:nicknames #:aws/pinpoint-email)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/pinpoint-email/api)
(common-lisp:progn
 (common-lisp:define-condition pinpoint-email-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'pinpoint-email-error))
(common-lisp:progn
 (common-lisp:defclass pinpoint-email-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "pinpoint-email"
                        :api-version "2018-07-26" :host-prefix "email"
                        :signing-name "ses" :global-host common-lisp:nil))
 (common-lisp:export 'pinpoint-email-request))
(common-lisp:defvar *error-map*
  '(("AccountSuspendedException" . account-suspended-exception)
    ("AlreadyExistsException" . already-exists-exception)
    ("BadRequestException" . bad-request-exception)
    ("ConcurrentModificationException" . concurrent-modification-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MailFromDomainNotVerifiedException"
     . mail-from-domain-not-verified-exception)
    ("MessageRejected" . message-rejected)
    ("NotFoundException" . not-found-exception)
    ("SendingPausedException" . sending-paused-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition account-suspended-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'account-suspended-exception)))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'already-exists-exception)))
(common-lisp:deftype amazon-resource-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'bad-request-exception)))
(common-lisp:deftype behavior-on-mx-failure () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-entries ()
   '(trivial-types:proper-list blacklist-entry))
 (common-lisp:defun make-blacklist-entries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-entry))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass blacklist-entry common-lisp:nil
                       ((rbl-name :initarg :rbl-name :initform common-lisp:nil
                         :type (common-lisp:or rbl-name common-lisp:null)
                         :accessor struct-shape-blacklist-entry-rbl-name :shape
                         "RblName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (listing-time :initarg :listing-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-blacklist-entry-listing-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or blacklisting-description
                                         common-lisp:null)
                         :accessor struct-shape-blacklist-entry-description
                         :shape "BlacklistingDescription" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-blacklist-entry
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'blacklist-entry
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'blacklist-entry 'make-blacklist-entry))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input blacklist-entry))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rbl-name))
      (common-lisp:list
       (common-lisp:cons "RblName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'listing-time))
      (common-lisp:list
       (common-lisp:cons "ListingTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input blacklist-entry))
   common-lisp:nil))
(common-lisp:deftype blacklist-item-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype blacklist-item-names ()
   '(trivial-types:proper-list blacklist-item-name))
 (common-lisp:defun make-blacklist-item-names
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list blacklist-item-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype blacklist-report () 'common-lisp:hash-table)
 (common-lisp:defun make-blacklist-report (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype blacklisting-description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass body common-lisp:nil
                       ((text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or content common-lisp:null) :accessor
                         struct-shape-body-text :shape "Content" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (html :initarg :html :initform common-lisp:nil :type
                         (common-lisp:or content common-lisp:null) :accessor
                         struct-shape-body-html :shape "Content" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-body (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'body
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'body 'make-body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input body))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'html))
      (common-lisp:list
       (common-lisp:cons "Html"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input body))
   common-lisp:nil))
(common-lisp:deftype campaign-id () 'common-lisp:string)
(common-lisp:deftype charset () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass cloud-watch-destination common-lisp:nil
                       ((dimension-configurations :initarg
                         :dimension-configurations :initform
                         (common-lisp:error
                          ":dimension-configurations is required")
                         :type
                         (common-lisp:or cloud-watch-dimension-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-cloud-watch-destination-dimension-configurations
                         :shape "CloudWatchDimensionConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cloud-watch-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cloud-watch-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-destination 'make-cloud-watch-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-configurations))
      (common-lisp:list
       (common-lisp:cons "DimensionConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cloud-watch-dimension-configuration common-lisp:nil
                       ((dimension-name :initarg :dimension-name :initform
                         (common-lisp:error ":dimension-name is required")
                         :type (common-lisp:or dimension-name common-lisp:null)
                         :accessor
                         struct-shape-cloud-watch-dimension-configuration-dimension-name
                         :shape "DimensionName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dimension-value-source :initarg
                         :dimension-value-source :initform
                         (common-lisp:error
                          ":dimension-value-source is required")
                         :type
                         (common-lisp:or dimension-value-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-cloud-watch-dimension-configuration-dimension-value-source
                         :shape "DimensionValueSource" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-dimension-value :initarg
                         :default-dimension-value :initform
                         (common-lisp:error
                          ":default-dimension-value is required")
                         :type
                         (common-lisp:or default-dimension-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-cloud-watch-dimension-configuration-default-dimension-value
                         :shape "DefaultDimensionValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cloud-watch-dimension-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'cloud-watch-dimension-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-dimension-configuration
                    'make-cloud-watch-dimension-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension-name))
      (common-lisp:list
       (common-lisp:cons "DimensionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dimension-value-source))
      (common-lisp:list
       (common-lisp:cons "DimensionValueSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-dimension-value))
      (common-lisp:list
       (common-lisp:cons "DefaultDimensionValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-dimension-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cloud-watch-dimension-configurations ()
   '(trivial-types:proper-list cloud-watch-dimension-configuration))
 (common-lisp:defun make-cloud-watch-dimension-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cloud-watch-dimension-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition concurrent-modification-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'concurrent-modification-exception)))
(common-lisp:deftype configuration-set-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype configuration-set-name-list ()
   '(trivial-types:proper-list configuration-set-name))
 (common-lisp:defun make-configuration-set-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list configuration-set-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass content common-lisp:nil
                       ((data :initarg :data :initform
                         (common-lisp:error ":data is required") :type
                         (common-lisp:or message-data common-lisp:null)
                         :accessor struct-shape-content-data :shape
                         "MessageData" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (charset :initarg :charset :initform common-lisp:nil
                         :type (common-lisp:or charset common-lisp:null)
                         :accessor struct-shape-content-charset :shape
                         "Charset" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'content
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'content 'make-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'charset))
      (common-lisp:list
       (common-lisp:cons "Charset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input content))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (event-destination-name :initarg
                         :event-destination-name :initform
                         (common-lisp:error
                          ":event-destination-name is required")
                         :type
                         (common-lisp:or event-destination-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-event-destination-name
                         :shape "EventDestinationName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-destination :initarg :event-destination
                         :initform
                         (common-lisp:error ":event-destination is required")
                         :type
                         (common-lisp:or event-destination-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-event-destination
                         :shape "EventDestinationDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-destination-name))
      (common-lisp:list
       (common-lisp:cons "EventDestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-request common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-configuration-set-name
                         :shape "ConfigurationSetName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tracking-options :initarg :tracking-options :initform
                         common-lisp:nil :type
                         (common-lisp:or tracking-options common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-tracking-options
                         :shape "TrackingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delivery-options :initarg :delivery-options :initform
                         common-lisp:nil :type
                         (common-lisp:or delivery-options common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-delivery-options
                         :shape "DeliveryOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reputation-options :initarg :reputation-options
                         :initform common-lisp:nil :type
                         (common-lisp:or reputation-options common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-reputation-options
                         :shape "ReputationOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sending-options :initarg :sending-options :initform
                         common-lisp:nil :type
                         (common-lisp:or sending-options common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-sending-options
                         :shape "SendingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-configuration-set-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-dedicated-ip-pool-request common-lisp:nil
                       ((pool-name :initarg :pool-name :initform
                         (common-lisp:error ":pool-name is required") :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-create-dedicated-ip-pool-request-pool-name
                         :shape "PoolName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-dedicated-ip-pool-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-dedicated-ip-pool-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-dedicated-ip-pool-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-request
                    'make-create-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-dedicated-ip-pool-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-dedicated-ip-pool-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-dedicated-ip-pool-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-dedicated-ip-pool-response
                    'make-create-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deliverability-test-report-request
                       common-lisp:nil
                       ((report-name :initarg :report-name :initform
                         common-lisp:nil :type
                         (common-lisp:or report-name common-lisp:null)
                         :accessor
                         struct-shape-create-deliverability-test-report-request-report-name
                         :shape "ReportName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-email-address :initarg :from-email-address
                         :initform
                         (common-lisp:error ":from-email-address is required")
                         :type (common-lisp:or email-address common-lisp:null)
                         :accessor
                         struct-shape-create-deliverability-test-report-request-from-email-address
                         :shape "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or email-content common-lisp:null)
                         :accessor
                         struct-shape-create-deliverability-test-report-request-content
                         :shape "EmailContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-deliverability-test-report-request-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deliverability-test-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-deliverability-test-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-request
                    'make-create-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deliverability-test-report-response
                       common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         (common-lisp:error ":report-id is required") :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-create-deliverability-test-report-response-report-id
                         :shape "ReportId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deliverability-test-status :initarg
                         :deliverability-test-status :initform
                         (common-lisp:error
                          ":deliverability-test-status is required")
                         :type
                         (common-lisp:or deliverability-test-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deliverability-test-report-response-deliverability-test-status
                         :shape "DeliverabilityTestStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deliverability-test-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-deliverability-test-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deliverability-test-report-response
                    'make-create-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-email-identity-request common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-create-email-identity-request-email-identity
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-email-identity-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-email-identity-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-email-identity-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-request
                    'make-create-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identity))
      (common-lisp:list
       (common-lisp:cons "EmailIdentity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-email-identity-response common-lisp:nil
                       ((identity-type :initarg :identity-type :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-type common-lisp:null)
                         :accessor
                         struct-shape-create-email-identity-response-identity-type
                         :shape "IdentityType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (verified-for-sending-status :initarg
                         :verified-for-sending-status :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-create-email-identity-response-verified-for-sending-status
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dkim-attributes :initarg :dkim-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or dkim-attributes common-lisp:null)
                         :accessor
                         struct-shape-create-email-identity-response-dkim-attributes
                         :shape "DkimAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-email-identity-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-email-identity-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-email-identity-response
                    'make-create-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype custom-redirect-domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass daily-volume common-lisp:nil
                       ((start-date :initarg :start-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-daily-volume-start-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-statistics :initarg :volume-statistics
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-statistics common-lisp:null)
                         :accessor struct-shape-daily-volume-volume-statistics
                         :shape "VolumeStatistics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-isp-placements :initarg :domain-isp-placements
                         :initform common-lisp:nil :type
                         (common-lisp:or domain-isp-placements
                                         common-lisp:null)
                         :accessor
                         struct-shape-daily-volume-domain-isp-placements :shape
                         "DomainIspPlacements" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-daily-volume
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'daily-volume
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'daily-volume 'make-daily-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input daily-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "StartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input daily-volume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype daily-volumes ()
   '(trivial-types:proper-list daily-volume))
 (common-lisp:defun make-daily-volumes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list daily-volume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass dedicated-ip common-lisp:nil
                       ((ip :initarg :ip :initform
                         (common-lisp:error ":ip is required") :type
                         (common-lisp:or ip common-lisp:null) :accessor
                         struct-shape-dedicated-ip-ip :shape "Ip" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (warmup-status :initarg :warmup-status :initform
                         (common-lisp:error ":warmup-status is required") :type
                         (common-lisp:or warmup-status common-lisp:null)
                         :accessor struct-shape-dedicated-ip-warmup-status
                         :shape "WarmupStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (warmup-percentage :initarg :warmup-percentage
                         :initform
                         (common-lisp:error ":warmup-percentage is required")
                         :type
                         (common-lisp:or percentage100wrapper common-lisp:null)
                         :accessor struct-shape-dedicated-ip-warmup-percentage
                         :shape "Percentage100Wrapper" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (pool-name :initarg :pool-name :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-dedicated-ip-pool-name :shape "PoolName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dedicated-ip
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dedicated-ip
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dedicated-ip 'make-dedicated-ip))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dedicated-ip))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip))
      (common-lisp:list
       (common-lisp:cons "Ip"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-status))
      (common-lisp:list
       (common-lisp:cons "WarmupStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dedicated-ip))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype dedicated-ip-list ()
   '(trivial-types:proper-list dedicated-ip))
 (common-lisp:defun make-dedicated-ip-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dedicated-ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype default-dimension-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-event-destination-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (event-destination-name :initarg
                         :event-destination-name :initform
                         (common-lisp:error
                          ":event-destination-name is required")
                         :type
                         (common-lisp:or event-destination-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-event-destination-request-event-destination-name
                         :shape "EventDestinationName" :location "uri"
                         :location-name "EventDestinationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-request common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-dedicated-ip-pool-request common-lisp:nil
                       ((pool-name :initarg :pool-name :initform
                         (common-lisp:error ":pool-name is required") :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-delete-dedicated-ip-pool-request-pool-name
                         :shape "PoolName" :location "uri" :location-name
                         "PoolName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-dedicated-ip-pool-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-dedicated-ip-pool-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-request
                    'make-delete-dedicated-ip-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-dedicated-ip-pool-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-dedicated-ip-pool-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-dedicated-ip-pool-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-dedicated-ip-pool-response
                    'make-delete-dedicated-ip-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-dedicated-ip-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-email-identity-request common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-delete-email-identity-request-email-identity
                         :shape "Identity" :location "uri" :location-name
                         "EmailIdentity"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-identity-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-email-identity-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-request
                    'make-delete-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-email-identity-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-email-identity-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-email-identity-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-email-identity-response
                    'make-delete-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype deliverability-dashboard-account-status ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass deliverability-test-report common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         common-lisp:nil :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-deliverability-test-report-report-id
                         :shape "ReportId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (report-name :initarg :report-name :initform
                         common-lisp:nil :type
                         (common-lisp:or report-name common-lisp:null)
                         :accessor
                         struct-shape-deliverability-test-report-report-name
                         :shape "ReportName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type
                         (common-lisp:or deliverability-test-subject
                                         common-lisp:null)
                         :accessor
                         struct-shape-deliverability-test-report-subject :shape
                         "DeliverabilityTestSubject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-email-address :initarg :from-email-address
                         :initform common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor
                         struct-shape-deliverability-test-report-from-email-address
                         :shape "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (create-date :initarg :create-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deliverability-test-report-create-date
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deliverability-test-status :initarg
                         :deliverability-test-status :initform common-lisp:nil
                         :type
                         (common-lisp:or deliverability-test-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-deliverability-test-report-deliverability-test-status
                         :shape "DeliverabilityTestStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deliverability-test-report
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deliverability-test-report
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deliverability-test-report
                    'make-deliverability-test-report))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-id))
      (common-lisp:list
       (common-lisp:cons "ReportId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'report-name))
      (common-lisp:list
       (common-lisp:cons "ReportName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'create-date))
      (common-lisp:list
       (common-lisp:cons "CreateDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-status))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deliverability-test-report))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deliverability-test-reports ()
   '(trivial-types:proper-list deliverability-test-report))
 (common-lisp:defun make-deliverability-test-reports
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            deliverability-test-report))
   aws-sdk/generator/shape::members))
(common-lisp:deftype deliverability-test-status () 'common-lisp:string)
(common-lisp:deftype deliverability-test-subject () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delivery-options common-lisp:nil
                       ((tls-policy :initarg :tls-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-policy common-lisp:null) :accessor
                         struct-shape-delivery-options-tls-policy :shape
                         "TlsPolicy" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sending-pool-name :initarg :sending-pool-name
                         :initform common-lisp:nil :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-delivery-options-sending-pool-name :shape
                         "PoolName" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delivery-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delivery-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delivery-options 'make-delivery-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delivery-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delivery-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass destination common-lisp:nil
                       ((to-addresses :initarg :to-addresses :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address-list common-lisp:null)
                         :accessor struct-shape-destination-to-addresses :shape
                         "EmailAddressList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cc-addresses :initarg :cc-addresses :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address-list common-lisp:null)
                         :accessor struct-shape-destination-cc-addresses :shape
                         "EmailAddressList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bcc-addresses :initarg :bcc-addresses :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address-list common-lisp:null)
                         :accessor struct-shape-destination-bcc-addresses
                         :shape "EmailAddressList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'destination 'make-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'to-addresses))
      (common-lisp:list
       (common-lisp:cons "ToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cc-addresses))
      (common-lisp:list
       (common-lisp:cons "CcAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bcc-addresses))
      (common-lisp:list
       (common-lisp:cons "BccAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input destination))
   common-lisp:nil))
(common-lisp:deftype dimension-name () 'common-lisp:string)
(common-lisp:deftype dimension-value-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass dkim-attributes common-lisp:nil
                       ((signing-enabled :initarg :signing-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-dkim-attributes-signing-enabled :shape
                         "Enabled" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or dkim-status common-lisp:null)
                         :accessor struct-shape-dkim-attributes-status :shape
                         "DkimStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tokens :initarg :tokens :initform common-lisp:nil
                         :type (common-lisp:or dns-token-list common-lisp:null)
                         :accessor struct-shape-dkim-attributes-tokens :shape
                         "DnsTokenList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dkim-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dkim-attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dkim-attributes 'make-dkim-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dkim-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tokens))
      (common-lisp:list
       (common-lisp:cons "Tokens"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dkim-attributes))
   common-lisp:nil))
(common-lisp:deftype dkim-status () 'common-lisp:string)
(common-lisp:deftype dns-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype dns-token-list () '(trivial-types:proper-list dns-token))
 (common-lisp:defun make-dns-token-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list dns-token))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass domain-deliverability-campaign common-lisp:nil
                       ((campaign-id :initarg :campaign-id :initform
                         common-lisp:nil :type
                         (common-lisp:or campaign-id common-lisp:null)
                         :accessor
                         struct-shape-domain-deliverability-campaign-campaign-id
                         :shape "CampaignId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (image-url :initarg :image-url :initform
                         common-lisp:nil :type
                         (common-lisp:or image-url common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-image-url
                         :shape "ImageUrl" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subject :initarg :subject :initform common-lisp:nil
                         :type (common-lisp:or subject common-lisp:null)
                         :accessor
                         struct-shape-domain-deliverability-campaign-subject
                         :shape "Subject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (from-address :initarg :from-address :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-from-address
                         :shape "Identity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sending-ips :initarg :sending-ips :initform
                         common-lisp:nil :type
                         (common-lisp:or ip-list common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-sending-ips
                         :shape "IpList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (first-seen-date-time :initarg :first-seen-date-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-first-seen-date-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-seen-date-time :initarg :last-seen-date-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-last-seen-date-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbox-count :initarg :inbox-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-inbox-count
                         :shape "Volume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (spam-count :initarg :spam-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-spam-count
                         :shape "Volume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-rate :initarg :read-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-read-rate
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delete-rate :initarg :delete-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-delete-rate
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-delete-rate :initarg :read-delete-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-read-delete-rate
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (projected-volume :initarg :projected-volume :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-projected-volume
                         :shape "Volume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (esps :initarg :esps :initform common-lisp:nil :type
                         (common-lisp:or esps common-lisp:null) :accessor
                         struct-shape-domain-deliverability-campaign-esps
                         :shape "Esps" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-deliverability-campaign
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'domain-deliverability-campaign
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-campaign
                    'make-domain-deliverability-campaign))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-id))
      (common-lisp:list
       (common-lisp:cons "CampaignId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'image-url))
      (common-lisp:list
       (common-lisp:cons "ImageUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-address))
      (common-lisp:list
       (common-lisp:cons "FromAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-ips))
      (common-lisp:list
       (common-lisp:cons "SendingIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'first-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "FirstSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-seen-date-time))
      (common-lisp:list
       (common-lisp:cons "LastSeenDateTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-count))
      (common-lisp:list
       (common-lisp:cons "InboxCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-count))
      (common-lisp:list
       (common-lisp:cons "SpamCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate))
      (common-lisp:list
       (common-lisp:cons "ReadRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delete-rate))
      (common-lisp:list
       (common-lisp:cons "DeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-delete-rate))
      (common-lisp:list
       (common-lisp:cons "ReadDeleteRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-volume))
      (common-lisp:list
       (common-lisp:cons "ProjectedVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'esps))
      (common-lisp:list
       (common-lisp:cons "Esps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-campaign))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-campaign-list ()
   '(trivial-types:proper-list domain-deliverability-campaign))
 (common-lisp:defun make-domain-deliverability-campaign-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-campaign))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass domain-deliverability-tracking-option common-lisp:nil
                       ((domain :initarg :domain :initform common-lisp:nil
                         :type (common-lisp:or domain common-lisp:null)
                         :accessor
                         struct-shape-domain-deliverability-tracking-option-domain
                         :shape "Domain" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscription-start-date :initarg
                         :subscription-start-date :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-domain-deliverability-tracking-option-subscription-start-date
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbox-placement-tracking-option :initarg
                         :inbox-placement-tracking-option :initform
                         common-lisp:nil :type
                         (common-lisp:or inbox-placement-tracking-option
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-deliverability-tracking-option-inbox-placement-tracking-option
                         :shape "InboxPlacementTrackingOption" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-deliverability-tracking-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'domain-deliverability-tracking-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-deliverability-tracking-option
                    'make-domain-deliverability-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain))
      (common-lisp:list
       (common-lisp:cons "Domain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-start-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inbox-placement-tracking-option))
      (common-lisp:list
       (common-lisp:cons "InboxPlacementTrackingOption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          domain-deliverability-tracking-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-deliverability-tracking-options ()
   '(trivial-types:proper-list domain-deliverability-tracking-option))
 (common-lisp:defun make-domain-deliverability-tracking-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            domain-deliverability-tracking-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass domain-isp-placement common-lisp:nil
                       ((isp-name :initarg :isp-name :initform common-lisp:nil
                         :type (common-lisp:or isp-name common-lisp:null)
                         :accessor struct-shape-domain-isp-placement-isp-name
                         :shape "IspName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbox-raw-count :initarg :inbox-raw-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-domain-isp-placement-inbox-raw-count
                         :shape "Volume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (spam-raw-count :initarg :spam-raw-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-domain-isp-placement-spam-raw-count
                         :shape "Volume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (inbox-percentage :initarg :inbox-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-domain-isp-placement-inbox-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (spam-percentage :initarg :spam-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-domain-isp-placement-spam-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-isp-placement
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-isp-placement
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'domain-isp-placement 'make-domain-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype domain-isp-placements ()
   '(trivial-types:proper-list domain-isp-placement))
 (common-lisp:defun make-domain-isp-placements
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:deftype email-address () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype email-address-list ()
   '(trivial-types:proper-list email-address))
 (common-lisp:defun make-email-address-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list email-address))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass email-content common-lisp:nil
                       ((simple :initarg :simple :initform common-lisp:nil
                         :type (common-lisp:or message common-lisp:null)
                         :accessor struct-shape-email-content-simple :shape
                         "Message" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (raw :initarg :raw :initform common-lisp:nil :type
                         (common-lisp:or raw-message common-lisp:null)
                         :accessor struct-shape-email-content-raw :shape
                         "RawMessage" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template :initarg :template :initform common-lisp:nil
                         :type (common-lisp:or template common-lisp:null)
                         :accessor struct-shape-email-content-template :shape
                         "Template" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-email-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'email-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'email-content 'make-email-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input email-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'simple))
      (common-lisp:list
       (common-lisp:cons "Simple"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'raw))
      (common-lisp:list
       (common-lisp:cons "Raw"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template))
      (common-lisp:list
       (common-lisp:cons "Template"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input email-content))
   common-lisp:nil))
(common-lisp:deftype enabled () 'common-lisp:boolean)
(common-lisp:deftype esp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype esps () '(trivial-types:proper-list esp))
 (common-lisp:defun make-esps
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list esp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass event-destination common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or event-destination-name
                                         common-lisp:null)
                         :accessor struct-shape-event-destination-name :shape
                         "EventDestinationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor struct-shape-event-destination-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (matching-event-types :initarg :matching-event-types
                         :initform
                         (common-lisp:error
                          ":matching-event-types is required")
                         :type (common-lisp:or event-types common-lisp:null)
                         :accessor
                         struct-shape-event-destination-matching-event-types
                         :shape "EventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kinesis-firehose-destination :initarg
                         :kinesis-firehose-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or kinesis-firehose-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-kinesis-firehose-destination
                         :shape "KinesisFirehoseDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cloud-watch-destination :initarg
                         :cloud-watch-destination :initform common-lisp:nil
                         :type
                         (common-lisp:or cloud-watch-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-cloud-watch-destination
                         :shape "CloudWatchDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sns-destination :initarg :sns-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-sns-destination :shape
                         "SnsDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pinpoint-destination :initarg :pinpoint-destination
                         :initform common-lisp:nil :type
                         (common-lisp:or pinpoint-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-pinpoint-destination
                         :shape "PinpointDestination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-destination-definition common-lisp:nil
                       ((enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (matching-event-types :initarg :matching-event-types
                         :initform common-lisp:nil :type
                         (common-lisp:or event-types common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-matching-event-types
                         :shape "EventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kinesis-firehose-destination :initarg
                         :kinesis-firehose-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or kinesis-firehose-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-kinesis-firehose-destination
                         :shape "KinesisFirehoseDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cloud-watch-destination :initarg
                         :cloud-watch-destination :initform common-lisp:nil
                         :type
                         (common-lisp:or cloud-watch-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-cloud-watch-destination
                         :shape "CloudWatchDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (sns-destination :initarg :sns-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-sns-destination
                         :shape "SnsDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pinpoint-destination :initarg :pinpoint-destination
                         :initform common-lisp:nil :type
                         (common-lisp:or pinpoint-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-pinpoint-destination
                         :shape "PinpointDestination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-destination-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-destination-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-destination-definition
                    'make-event-destination-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pinpoint-destination))
      (common-lisp:list
       (common-lisp:cons "PinpointDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   common-lisp:nil))
(common-lisp:deftype event-destination-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun make-event-destinations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun make-event-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype general-enforcement-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-account-request common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-response common-lisp:nil
                       ((send-quota :initarg :send-quota :initform
                         common-lisp:nil :type
                         (common-lisp:or send-quota common-lisp:null) :accessor
                         struct-shape-get-account-response-send-quota :shape
                         "SendQuota" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sending-enabled :initarg :sending-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-get-account-response-sending-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dedicated-ip-auto-warmup-enabled :initarg
                         :dedicated-ip-auto-warmup-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-get-account-response-dedicated-ip-auto-warmup-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enforcement-status :initarg :enforcement-status
                         :initform common-lisp:nil :type
                         (common-lisp:or general-enforcement-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-account-response-enforcement-status
                         :shape "GeneralEnforcementStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (production-access-enabled :initarg
                         :production-access-enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-get-account-response-production-access-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-response 'make-get-account-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'send-quota))
      (common-lisp:list
       (common-lisp:cons "SendQuota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'dedicated-ip-auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpAutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enforcement-status))
      (common-lisp:list
       (common-lisp:cons "EnforcementStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'production-access-enabled))
      (common-lisp:list
       (common-lisp:cons "ProductionAccessEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-blacklist-reports-request common-lisp:nil
                       ((blacklist-item-names :initarg :blacklist-item-names
                         :initform
                         (common-lisp:error
                          ":blacklist-item-names is required")
                         :type
                         (common-lisp:or blacklist-item-names common-lisp:null)
                         :accessor
                         struct-shape-get-blacklist-reports-request-blacklist-item-names
                         :shape "BlacklistItemNames" :location "querystring"
                         :location-name "BlacklistItemNames"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-blacklist-reports-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-blacklist-reports-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-request
                    'make-get-blacklist-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-blacklist-reports-response common-lisp:nil
                       ((blacklist-report :initarg :blacklist-report :initform
                         (common-lisp:error ":blacklist-report is required")
                         :type
                         (common-lisp:or blacklist-report common-lisp:null)
                         :accessor
                         struct-shape-get-blacklist-reports-response-blacklist-report
                         :shape "BlacklistReport" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-blacklist-reports-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-blacklist-reports-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-blacklist-reports-response
                    'make-get-blacklist-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'blacklist-report))
      (common-lisp:list
       (common-lisp:cons "BlacklistReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-blacklist-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-event-destinations-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-event-destinations-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-event-destinations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-event-destinations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-request
                    'make-get-configuration-set-event-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-event-destinations-response
                       common-lisp:nil
                       ((event-destinations :initarg :event-destinations
                         :initform common-lisp:nil :type
                         (common-lisp:or event-destinations common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-event-destinations-response-event-destinations
                         :shape "EventDestinations" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-event-destinations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-event-destinations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-response
                    'make-get-configuration-set-event-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destinations))
      (common-lisp:list
       (common-lisp:cons "EventDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-request common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-request
                    'make-get-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-response common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform common-lisp:nil
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-response-configuration-set-name
                         :shape "ConfigurationSetName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tracking-options :initarg :tracking-options :initform
                         common-lisp:nil :type
                         (common-lisp:or tracking-options common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-response-tracking-options
                         :shape "TrackingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delivery-options :initarg :delivery-options :initform
                         common-lisp:nil :type
                         (common-lisp:or delivery-options common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-response-delivery-options
                         :shape "DeliveryOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reputation-options :initarg :reputation-options
                         :initform common-lisp:nil :type
                         (common-lisp:or reputation-options common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-response-reputation-options
                         :shape "ReputationOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sending-options :initarg :sending-options :initform
                         common-lisp:nil :type
                         (common-lisp:or sending-options common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-response-sending-options
                         :shape "SendingOptions" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-get-configuration-set-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-response
                    'make-get-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracking-options))
      (common-lisp:list
       (common-lisp:cons "TrackingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-options))
      (common-lisp:list
       (common-lisp:cons "DeliveryOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reputation-options))
      (common-lisp:list
       (common-lisp:cons "ReputationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-options))
      (common-lisp:list
       (common-lisp:cons "SendingOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-dedicated-ip-request common-lisp:nil
                       ((ip :initarg :ip :initform
                         (common-lisp:error ":ip is required") :type
                         (common-lisp:or ip common-lisp:null) :accessor
                         struct-shape-get-dedicated-ip-request-ip :shape "Ip"
                         :location "uri" :location-name "IP"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dedicated-ip-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-dedicated-ip-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-request 'make-get-dedicated-ip-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-dedicated-ip-response common-lisp:nil
                       ((dedicated-ip :initarg :dedicated-ip :initform
                         common-lisp:nil :type
                         (common-lisp:or dedicated-ip common-lisp:null)
                         :accessor
                         struct-shape-get-dedicated-ip-response-dedicated-ip
                         :shape "DedicatedIp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dedicated-ip-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-dedicated-ip-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ip-response
                    'make-get-dedicated-ip-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip))
      (common-lisp:list
       (common-lisp:cons "DedicatedIp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ip-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-dedicated-ips-request common-lisp:nil
                       ((pool-name :initarg :pool-name :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-get-dedicated-ips-request-pool-name
                         :shape "PoolName" :location "querystring"
                         :location-name "PoolName")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-dedicated-ips-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-get-dedicated-ips-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dedicated-ips-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-dedicated-ips-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-request
                    'make-get-dedicated-ips-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-dedicated-ips-response common-lisp:nil
                       ((dedicated-ips :initarg :dedicated-ips :initform
                         common-lisp:nil :type
                         (common-lisp:or dedicated-ip-list common-lisp:null)
                         :accessor
                         struct-shape-get-dedicated-ips-response-dedicated-ips
                         :shape "DedicatedIpList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-dedicated-ips-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-dedicated-ips-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-dedicated-ips-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-dedicated-ips-response
                    'make-get-dedicated-ips-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ips))
      (common-lisp:list
       (common-lisp:cons "DedicatedIps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-dedicated-ips-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deliverability-dashboard-options-request
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deliverability-dashboard-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deliverability-dashboard-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-request
                    'make-get-deliverability-dashboard-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deliverability-dashboard-options-response
                       common-lisp:nil
                       ((dashboard-enabled :initarg :dashboard-enabled
                         :initform
                         (common-lisp:error ":dashboard-enabled is required")
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-dashboard-options-response-dashboard-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscription-expiry-date :initarg
                         :subscription-expiry-date :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-dashboard-options-response-subscription-expiry-date
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-status :initarg :account-status :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          deliverability-dashboard-account-status
                          common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-dashboard-options-response-account-status
                         :shape "DeliverabilityDashboardAccountStatus"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (active-subscribed-domains :initarg
                         :active-subscribed-domains :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-deliverability-tracking-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-dashboard-options-response-active-subscribed-domains
                         :shape "DomainDeliverabilityTrackingOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (pending-expiration-subscribed-domains :initarg
                         :pending-expiration-subscribed-domains :initform
                         common-lisp:nil :type
                         (common-lisp:or domain-deliverability-tracking-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-dashboard-options-response-pending-expiration-subscribed-domains
                         :shape "DomainDeliverabilityTrackingOptions" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deliverability-dashboard-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deliverability-dashboard-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-dashboard-options-response
                    'make-get-deliverability-dashboard-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'subscription-expiry-date))
      (common-lisp:list
       (common-lisp:cons "SubscriptionExpiryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-status))
      (common-lisp:list
       (common-lisp:cons "AccountStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "ActiveSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pending-expiration-subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "PendingExpirationSubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-dashboard-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deliverability-test-report-request common-lisp:nil
                       ((report-id :initarg :report-id :initform
                         (common-lisp:error ":report-id is required") :type
                         (common-lisp:or report-id common-lisp:null) :accessor
                         struct-shape-get-deliverability-test-report-request-report-id
                         :shape "ReportId" :location "uri" :location-name
                         "ReportId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deliverability-test-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deliverability-test-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-request
                    'make-get-deliverability-test-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deliverability-test-report-response common-lisp:nil
                       ((deliverability-test-report :initarg
                         :deliverability-test-report :initform
                         (common-lisp:error
                          ":deliverability-test-report is required")
                         :type
                         (common-lisp:or deliverability-test-report
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-test-report-response-deliverability-test-report
                         :shape "DeliverabilityTestReport" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (overall-placement :initarg :overall-placement
                         :initform
                         (common-lisp:error ":overall-placement is required")
                         :type
                         (common-lisp:or placement-statistics common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-test-report-response-overall-placement
                         :shape "PlacementStatistics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (isp-placements :initarg :isp-placements :initform
                         (common-lisp:error ":isp-placements is required")
                         :type (common-lisp:or isp-placements common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-test-report-response-isp-placements
                         :shape "IspPlacements" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type
                         (common-lisp:or message-content common-lisp:null)
                         :accessor
                         struct-shape-get-deliverability-test-report-response-message
                         :shape "MessageContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-get-deliverability-test-report-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deliverability-test-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-deliverability-test-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deliverability-test-report-response
                    'make-get-deliverability-test-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-report))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-placement))
      (common-lisp:list
       (common-lisp:cons "OverallPlacement"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-placements))
      (common-lisp:list
       (common-lisp:cons "IspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "Message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deliverability-test-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-deliverability-campaign-request
                       common-lisp:nil
                       ((campaign-id :initarg :campaign-id :initform
                         (common-lisp:error ":campaign-id is required") :type
                         (common-lisp:or campaign-id common-lisp:null)
                         :accessor
                         struct-shape-get-domain-deliverability-campaign-request-campaign-id
                         :shape "CampaignId" :location "uri" :location-name
                         "CampaignId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-deliverability-campaign-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-domain-deliverability-campaign-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-request
                    'make-get-domain-deliverability-campaign-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-deliverability-campaign-response
                       common-lisp:nil
                       ((domain-deliverability-campaign :initarg
                         :domain-deliverability-campaign :initform
                         (common-lisp:error
                          ":domain-deliverability-campaign is required")
                         :type
                         (common-lisp:or domain-deliverability-campaign
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-domain-deliverability-campaign-response-domain-deliverability-campaign
                         :shape "DomainDeliverabilityCampaign" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-deliverability-campaign-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-domain-deliverability-campaign-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-deliverability-campaign-response
                    'make-get-domain-deliverability-campaign-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaign))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaign"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-deliverability-campaign-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-statistics-report-request common-lisp:nil
                       ((domain :initarg :domain :initform
                         (common-lisp:error ":domain is required") :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-get-domain-statistics-report-request-domain
                         :shape "Identity" :location "uri" :location-name
                         "Domain")
                        (start-date :initarg :start-date :initform
                         (common-lisp:error ":start-date is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-domain-statistics-report-request-start-date
                         :shape "Timestamp" :location "querystring"
                         :location-name "StartDate")
                        (end-date :initarg :end-date :initform
                         (common-lisp:error ":end-date is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-domain-statistics-report-request-end-date
                         :shape "Timestamp" :location "querystring"
                         :location-name "EndDate"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-statistics-report-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-domain-statistics-report-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-request
                    'make-get-domain-statistics-report-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-statistics-report-response common-lisp:nil
                       ((overall-volume :initarg :overall-volume :initform
                         (common-lisp:error ":overall-volume is required")
                         :type (common-lisp:or overall-volume common-lisp:null)
                         :accessor
                         struct-shape-get-domain-statistics-report-response-overall-volume
                         :shape "OverallVolume" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (daily-volumes :initarg :daily-volumes :initform
                         (common-lisp:error ":daily-volumes is required") :type
                         (common-lisp:or daily-volumes common-lisp:null)
                         :accessor
                         struct-shape-get-domain-statistics-report-response-daily-volumes
                         :shape "DailyVolumes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-statistics-report-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-domain-statistics-report-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-statistics-report-response
                    'make-get-domain-statistics-report-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'overall-volume))
      (common-lisp:list
       (common-lisp:cons "OverallVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'daily-volumes))
      (common-lisp:list
       (common-lisp:cons "DailyVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-statistics-report-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-email-identity-request common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-request-email-identity
                         :shape "Identity" :location "uri" :location-name
                         "EmailIdentity"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-identity-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-identity-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-request
                    'make-get-email-identity-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-email-identity-response common-lisp:nil
                       ((identity-type :initarg :identity-type :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-type common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-response-identity-type
                         :shape "IdentityType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (feedback-forwarding-status :initarg
                         :feedback-forwarding-status :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-response-feedback-forwarding-status
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (verified-for-sending-status :initarg
                         :verified-for-sending-status :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-response-verified-for-sending-status
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dkim-attributes :initarg :dkim-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or dkim-attributes common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-response-dkim-attributes
                         :shape "DkimAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mail-from-attributes :initarg :mail-from-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or mail-from-attributes common-lisp:null)
                         :accessor
                         struct-shape-get-email-identity-response-mail-from-attributes
                         :shape "MailFromAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-get-email-identity-response-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-email-identity-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-email-identity-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-email-identity-response
                    'make-get-email-identity-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-status))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'verified-for-sending-status))
      (common-lisp:list
       (common-lisp:cons "VerifiedForSendingStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-attributes))
      (common-lisp:list
       (common-lisp:cons "DkimAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-attributes))
      (common-lisp:list
       (common-lisp:cons "MailFromAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-email-identity-response))
   common-lisp:nil))
(common-lisp:deftype identity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass identity-info common-lisp:nil
                       ((identity-type :initarg :identity-type :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-type common-lisp:null)
                         :accessor struct-shape-identity-info-identity-type
                         :shape "IdentityType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identity-name :initarg :identity-name :initform
                         common-lisp:nil :type
                         (common-lisp:or identity common-lisp:null) :accessor
                         struct-shape-identity-info-identity-name :shape
                         "Identity" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sending-enabled :initarg :sending-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-identity-info-sending-enabled :shape
                         "Enabled" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-identity-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'identity-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'identity-info 'make-identity-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input identity-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-type))
      (common-lisp:list
       (common-lisp:cons "IdentityType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-name))
      (common-lisp:list
       (common-lisp:cons "IdentityName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input identity-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype identity-info-list ()
   '(trivial-types:proper-list identity-info))
 (common-lisp:defun make-identity-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list identity-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype identity-type () 'common-lisp:string)
(common-lisp:deftype image-url () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass inbox-placement-tracking-option common-lisp:nil
                       ((global :initarg :global :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-inbox-placement-tracking-option-global
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tracked-isps :initarg :tracked-isps :initform
                         common-lisp:nil :type
                         (common-lisp:or isp-name-list common-lisp:null)
                         :accessor
                         struct-shape-inbox-placement-tracking-option-tracked-isps
                         :shape "IspNameList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-inbox-placement-tracking-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'inbox-placement-tracking-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'inbox-placement-tracking-option
                    'make-inbox-placement-tracking-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'global))
      (common-lisp:list
       (common-lisp:cons "Global"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracked-isps))
      (common-lisp:list
       (common-lisp:cons "TrackedIsps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inbox-placement-tracking-option))
   common-lisp:nil))
(common-lisp:deftype ip () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ip-list () '(trivial-types:proper-list ip))
 (common-lisp:defun make-ip-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ip))
   aws-sdk/generator/shape::members))
(common-lisp:deftype isp-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype isp-name-list () '(trivial-types:proper-list isp-name))
 (common-lisp:defun make-isp-name-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass isp-placement common-lisp:nil
                       ((isp-name :initarg :isp-name :initform common-lisp:nil
                         :type (common-lisp:or isp-name common-lisp:null)
                         :accessor struct-shape-isp-placement-isp-name :shape
                         "IspName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (placement-statistics :initarg :placement-statistics
                         :initform common-lisp:nil :type
                         (common-lisp:or placement-statistics common-lisp:null)
                         :accessor
                         struct-shape-isp-placement-placement-statistics :shape
                         "PlacementStatistics" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-isp-placement
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'isp-placement
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'isp-placement 'make-isp-placement))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input isp-placement))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'isp-name))
      (common-lisp:list
       (common-lisp:cons "IspName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'placement-statistics))
      (common-lisp:list
       (common-lisp:cons "PlacementStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input isp-placement))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype isp-placements ()
   '(trivial-types:proper-list isp-placement))
 (common-lisp:defun make-isp-placements
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list isp-placement))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass kinesis-firehose-destination common-lisp:nil
                       ((iam-role-arn :initarg :iam-role-arn :initform
                         (common-lisp:error ":iam-role-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-kinesis-firehose-destination-iam-role-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (delivery-stream-arn :initarg :delivery-stream-arn
                         :initform
                         (common-lisp:error ":delivery-stream-arn is required")
                         :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-kinesis-firehose-destination-delivery-stream-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-kinesis-firehose-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'kinesis-firehose-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DeliveryStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   common-lisp:nil))
(common-lisp:deftype last-fresh-start () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'limit-exceeded-exception)))
(common-lisp:progn
 (common-lisp:defclass list-configuration-sets-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-configuration-sets-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-configuration-sets-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-sets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-sets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-request
                    'make-list-configuration-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configuration-sets-response common-lisp:nil
                       ((configuration-sets :initarg :configuration-sets
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-set-name-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-sets-response-configuration-sets
                         :shape "ConfigurationSetNameList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-configuration-sets-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-sets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-sets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-response
                    'make-list-configuration-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-sets))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-dedicated-ip-pools-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-dedicated-ip-pools-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-dedicated-ip-pools-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-dedicated-ip-pools-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dedicated-ip-pools-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-request
                    'make-list-dedicated-ip-pools-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-dedicated-ip-pools-response common-lisp:nil
                       ((dedicated-ip-pools :initarg :dedicated-ip-pools
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-dedicated-ip-pools
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-dedicated-ip-pools-response-dedicated-ip-pools
                         :shape "ListOfDedicatedIpPools" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-dedicated-ip-pools-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-dedicated-ip-pools-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-dedicated-ip-pools-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-dedicated-ip-pools-response
                    'make-list-dedicated-ip-pools-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dedicated-ip-pools))
      (common-lisp:list
       (common-lisp:cons "DedicatedIpPools"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-dedicated-ip-pools-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deliverability-test-reports-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-deliverability-test-reports-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-deliverability-test-reports-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-deliverability-test-reports-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-deliverability-test-reports-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-request
                    'make-list-deliverability-test-reports-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-deliverability-test-reports-response
                       common-lisp:nil
                       ((deliverability-test-reports :initarg
                         :deliverability-test-reports :initform
                         (common-lisp:error
                          ":deliverability-test-reports is required")
                         :type
                         (common-lisp:or deliverability-test-reports
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-deliverability-test-reports-response-deliverability-test-reports
                         :shape "DeliverabilityTestReports" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-deliverability-test-reports-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-deliverability-test-reports-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-deliverability-test-reports-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-deliverability-test-reports-response
                    'make-list-deliverability-test-reports-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deliverability-test-reports))
      (common-lisp:list
       (common-lisp:cons "DeliverabilityTestReports"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-deliverability-test-reports-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-domain-deliverability-campaigns-request
                       common-lisp:nil
                       ((start-date :initarg :start-date :initform
                         (common-lisp:error ":start-date is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-domain-deliverability-campaigns-request-start-date
                         :shape "Timestamp" :location "querystring"
                         :location-name "StartDate")
                        (end-date :initarg :end-date :initform
                         (common-lisp:error ":end-date is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-domain-deliverability-campaigns-request-end-date
                         :shape "Timestamp" :location "querystring"
                         :location-name "EndDate")
                        (subscribed-domain :initarg :subscribed-domain
                         :initform
                         (common-lisp:error ":subscribed-domain is required")
                         :type (common-lisp:or domain common-lisp:null)
                         :accessor
                         struct-shape-list-domain-deliverability-campaigns-request-subscribed-domain
                         :shape "Domain" :location "uri" :location-name
                         "SubscribedDomain")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-domain-deliverability-campaigns-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-domain-deliverability-campaigns-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-domain-deliverability-campaigns-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-domain-deliverability-campaigns-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-request
                    'make-list-domain-deliverability-campaigns-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-domain-deliverability-campaigns-response
                       common-lisp:nil
                       ((domain-deliverability-campaigns :initarg
                         :domain-deliverability-campaigns :initform
                         (common-lisp:error
                          ":domain-deliverability-campaigns is required")
                         :type
                         (common-lisp:or domain-deliverability-campaign-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-domain-deliverability-campaigns-response-domain-deliverability-campaigns
                         :shape "DomainDeliverabilityCampaignList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-domain-deliverability-campaigns-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-domain-deliverability-campaigns-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-domain-deliverability-campaigns-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-domain-deliverability-campaigns-response
                    'make-list-domain-deliverability-campaigns-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-deliverability-campaigns))
      (common-lisp:list
       (common-lisp:cons "DomainDeliverabilityCampaigns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-domain-deliverability-campaigns-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-email-identities-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-email-identities-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or max-items common-lisp:null) :accessor
                         struct-shape-list-email-identities-request-page-size
                         :shape "MaxItems" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-email-identities-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-email-identities-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-request
                    'make-list-email-identities-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-email-identities-response common-lisp:nil
                       ((email-identities :initarg :email-identities :initform
                         common-lisp:nil :type
                         (common-lisp:or identity-info-list common-lisp:null)
                         :accessor
                         struct-shape-list-email-identities-response-email-identities
                         :shape "IdentityInfoList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-email-identities-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-email-identities-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-email-identities-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-email-identities-response
                    'make-list-email-identities-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-identities))
      (common-lisp:list
       (common-lisp:cons "EmailIdentities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-email-identities-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype list-of-dedicated-ip-pools ()
   '(trivial-types:proper-list pool-name))
 (common-lisp:defun make-list-of-dedicated-ip-pools
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pool-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "ResourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mail-from-attributes common-lisp:nil
                       ((mail-from-domain :initarg :mail-from-domain :initform
                         (common-lisp:error ":mail-from-domain is required")
                         :type
                         (common-lisp:or mail-from-domain-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-mail-from-attributes-mail-from-domain
                         :shape "MailFromDomainName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mail-from-domain-status :initarg
                         :mail-from-domain-status :initform
                         (common-lisp:error
                          ":mail-from-domain-status is required")
                         :type
                         (common-lisp:or mail-from-domain-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-mail-from-attributes-mail-from-domain-status
                         :shape "MailFromDomainStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (behavior-on-mx-failure :initarg
                         :behavior-on-mx-failure :initform
                         (common-lisp:error
                          ":behavior-on-mx-failure is required")
                         :type
                         (common-lisp:or behavior-on-mx-failure
                                         common-lisp:null)
                         :accessor
                         struct-shape-mail-from-attributes-behavior-on-mx-failure
                         :shape "BehaviorOnMxFailure" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mail-from-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mail-from-attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mail-from-attributes 'make-mail-from-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mail-from-domain-status))
      (common-lisp:list
       (common-lisp:cons "MailFromDomainStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mail-from-attributes))
   common-lisp:nil))
(common-lisp:deftype mail-from-domain-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition mail-from-domain-not-verified-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export
  (common-lisp:list 'mail-from-domain-not-verified-exception)))
(common-lisp:deftype mail-from-domain-status () 'common-lisp:string)
(common-lisp:deftype max24hour-send () 'common-lisp:double-float)
(common-lisp:deftype max-items () 'common-lisp:integer)
(common-lisp:deftype max-send-rate () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass message common-lisp:nil
                       ((subject :initarg :subject :initform
                         (common-lisp:error ":subject is required") :type
                         (common-lisp:or content common-lisp:null) :accessor
                         struct-shape-message-subject :shape "Content"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or body common-lisp:null) :accessor
                         struct-shape-message-body :shape "Body" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subject))
      (common-lisp:list
       (common-lisp:cons "Subject"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:deftype message-content () 'common-lisp:string)
(common-lisp:deftype message-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition message-rejected
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'message-rejected)))
(common-lisp:progn
 (common-lisp:defclass message-tag common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or message-tag-name common-lisp:null)
                         :accessor struct-shape-message-tag-name :shape
                         "MessageTagName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or message-tag-value common-lisp:null)
                         :accessor struct-shape-message-tag-value :shape
                         "MessageTagValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message-tag
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message-tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message-tag 'make-message-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message-tag))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype message-tag-list ()
   '(trivial-types:proper-list message-tag))
 (common-lisp:defun make-message-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype message-tag-name () 'common-lisp:string)
(common-lisp:deftype message-tag-value () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'not-found-exception)))
(common-lisp:deftype outbound-message-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass overall-volume common-lisp:nil
                       ((volume-statistics :initarg :volume-statistics
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-statistics common-lisp:null)
                         :accessor
                         struct-shape-overall-volume-volume-statistics :shape
                         "VolumeStatistics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-rate-percent :initarg :read-rate-percent
                         :initform common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-overall-volume-read-rate-percent :shape
                         "Percentage" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (domain-isp-placements :initarg :domain-isp-placements
                         :initform common-lisp:nil :type
                         (common-lisp:or domain-isp-placements
                                         common-lisp:null)
                         :accessor
                         struct-shape-overall-volume-domain-isp-placements
                         :shape "DomainIspPlacements" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-overall-volume
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'overall-volume
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'overall-volume 'make-overall-volume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input overall-volume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-statistics))
      (common-lisp:list
       (common-lisp:cons "VolumeStatistics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-rate-percent))
      (common-lisp:list
       (common-lisp:cons "ReadRatePercent"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-isp-placements))
      (common-lisp:list
       (common-lisp:cons "DomainIspPlacements"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input overall-volume))
   common-lisp:nil))
(common-lisp:deftype percentage () 'common-lisp:double-float)
(common-lisp:deftype percentage100wrapper () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass pinpoint-destination common-lisp:nil
                       ((application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-pinpoint-destination-application-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pinpoint-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pinpoint-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'pinpoint-destination 'make-pinpoint-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pinpoint-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass placement-statistics common-lisp:nil
                       ((inbox-percentage :initarg :inbox-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-placement-statistics-inbox-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (spam-percentage :initarg :spam-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-placement-statistics-spam-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (missing-percentage :initarg :missing-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-placement-statistics-missing-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (spf-percentage :initarg :spf-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-placement-statistics-spf-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (dkim-percentage :initarg :dkim-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or percentage common-lisp:null) :accessor
                         struct-shape-placement-statistics-dkim-percentage
                         :shape "Percentage" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-placement-statistics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'placement-statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'placement-statistics 'make-placement-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input placement-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-percentage))
      (common-lisp:list
       (common-lisp:cons "InboxPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-percentage))
      (common-lisp:list
       (common-lisp:cons "SpamPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'missing-percentage))
      (common-lisp:list
       (common-lisp:cons "MissingPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spf-percentage))
      (common-lisp:list
       (common-lisp:cons "SpfPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dkim-percentage))
      (common-lisp:list
       (common-lisp:cons "DkimPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input placement-statistics))
   common-lisp:nil))
(common-lisp:deftype pool-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-account-dedicated-ip-warmup-attributes-request
                       common-lisp:nil
                       ((auto-warmup-enabled :initarg :auto-warmup-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-put-account-dedicated-ip-warmup-attributes-request-auto-warmup-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-dedicated-ip-warmup-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-account-dedicated-ip-warmup-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-request
                    'make-put-account-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auto-warmup-enabled))
      (common-lisp:list
       (common-lisp:cons "AutoWarmupEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-account-dedicated-ip-warmup-attributes-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-dedicated-ip-warmup-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-account-dedicated-ip-warmup-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-dedicated-ip-warmup-attributes-response
                    'make-put-account-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-account-sending-attributes-request common-lisp:nil
                       ((sending-enabled :initarg :sending-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-put-account-sending-attributes-request-sending-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-sending-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-account-sending-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-request
                    'make-put-account-sending-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-account-sending-attributes-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-account-sending-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-account-sending-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-account-sending-attributes-response
                    'make-put-account-sending-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-account-sending-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-delivery-options-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-delivery-options-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (tls-policy :initarg :tls-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-policy common-lisp:null) :accessor
                         struct-shape-put-configuration-set-delivery-options-request-tls-policy
                         :shape "TlsPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sending-pool-name :initarg :sending-pool-name
                         :initform common-lisp:nil :type
                         (common-lisp:or sending-pool-name common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-delivery-options-request-sending-pool-name
                         :shape "SendingPoolName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-delivery-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-delivery-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-request
                    'make-put-configuration-set-delivery-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-policy))
      (common-lisp:list
       (common-lisp:cons "TlsPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-pool-name))
      (common-lisp:list
       (common-lisp:cons "SendingPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-delivery-options-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-delivery-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-delivery-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-delivery-options-response
                    'make-put-configuration-set-delivery-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-delivery-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-reputation-options-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-reputation-options-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (reputation-metrics-enabled :initarg
                         :reputation-metrics-enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-reputation-options-request-reputation-metrics-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-reputation-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-reputation-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-request
                    'make-put-configuration-set-reputation-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-reputation-options-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-reputation-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-reputation-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-reputation-options-response
                    'make-put-configuration-set-reputation-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-reputation-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-sending-options-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-sending-options-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (sending-enabled :initarg :sending-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-put-configuration-set-sending-options-request-sending-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-sending-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-sending-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-request
                    'make-put-configuration-set-sending-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-sending-options-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-sending-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-sending-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-sending-options-response
                    'make-put-configuration-set-sending-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-sending-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-tracking-options-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-tracking-options-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (custom-redirect-domain :initarg
                         :custom-redirect-domain :initform common-lisp:nil
                         :type
                         (common-lisp:or custom-redirect-domain
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-configuration-set-tracking-options-request-custom-redirect-domain
                         :shape "CustomRedirectDomain" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-tracking-options-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-tracking-options-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-request
                    'make-put-configuration-set-tracking-options-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-configuration-set-tracking-options-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-configuration-set-tracking-options-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-configuration-set-tracking-options-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-configuration-set-tracking-options-response
                    'make-put-configuration-set-tracking-options-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-configuration-set-tracking-options-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-dedicated-ip-in-pool-request common-lisp:nil
                       ((ip :initarg :ip :initform
                         (common-lisp:error ":ip is required") :type
                         (common-lisp:or ip common-lisp:null) :accessor
                         struct-shape-put-dedicated-ip-in-pool-request-ip
                         :shape "Ip" :location "uri" :location-name "IP")
                        (destination-pool-name :initarg :destination-pool-name
                         :initform
                         (common-lisp:error
                          ":destination-pool-name is required")
                         :type (common-lisp:or pool-name common-lisp:null)
                         :accessor
                         struct-shape-put-dedicated-ip-in-pool-request-destination-pool-name
                         :shape "PoolName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-dedicated-ip-in-pool-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-dedicated-ip-in-pool-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-request
                    'make-put-dedicated-ip-in-pool-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-pool-name))
      (common-lisp:list
       (common-lisp:cons "DestinationPoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-dedicated-ip-in-pool-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-dedicated-ip-in-pool-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-dedicated-ip-in-pool-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-in-pool-response
                    'make-put-dedicated-ip-in-pool-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-in-pool-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-dedicated-ip-warmup-attributes-request
                       common-lisp:nil
                       ((ip :initarg :ip :initform
                         (common-lisp:error ":ip is required") :type
                         (common-lisp:or ip common-lisp:null) :accessor
                         struct-shape-put-dedicated-ip-warmup-attributes-request-ip
                         :shape "Ip" :location "uri" :location-name "IP")
                        (warmup-percentage :initarg :warmup-percentage
                         :initform
                         (common-lisp:error ":warmup-percentage is required")
                         :type
                         (common-lisp:or percentage100wrapper common-lisp:null)
                         :accessor
                         struct-shape-put-dedicated-ip-warmup-attributes-request-warmup-percentage
                         :shape "Percentage100Wrapper" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-dedicated-ip-warmup-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-dedicated-ip-warmup-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-request
                    'make-put-dedicated-ip-warmup-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warmup-percentage))
      (common-lisp:list
       (common-lisp:cons "WarmupPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-dedicated-ip-warmup-attributes-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-dedicated-ip-warmup-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-dedicated-ip-warmup-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-dedicated-ip-warmup-attributes-response
                    'make-put-dedicated-ip-warmup-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-dedicated-ip-warmup-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-deliverability-dashboard-option-request
                       common-lisp:nil
                       ((dashboard-enabled :initarg :dashboard-enabled
                         :initform
                         (common-lisp:error ":dashboard-enabled is required")
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-put-deliverability-dashboard-option-request-dashboard-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (subscribed-domains :initarg :subscribed-domains
                         :initform common-lisp:nil :type
                         (common-lisp:or domain-deliverability-tracking-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-deliverability-dashboard-option-request-subscribed-domains
                         :shape "DomainDeliverabilityTrackingOptions" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-deliverability-dashboard-option-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-deliverability-dashboard-option-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-request
                    'make-put-deliverability-dashboard-option-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dashboard-enabled))
      (common-lisp:list
       (common-lisp:cons "DashboardEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscribed-domains))
      (common-lisp:list
       (common-lisp:cons "SubscribedDomains"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-deliverability-dashboard-option-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-deliverability-dashboard-option-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-deliverability-dashboard-option-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-deliverability-dashboard-option-response
                    'make-put-deliverability-dashboard-option-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-deliverability-dashboard-option-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-dkim-attributes-request
                       common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-dkim-attributes-request-email-identity
                         :shape "Identity" :location "uri" :location-name
                         "EmailIdentity")
                        (signing-enabled :initarg :signing-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-put-email-identity-dkim-attributes-request-signing-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-dkim-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-dkim-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-request
                    'make-put-email-identity-dkim-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'signing-enabled))
      (common-lisp:list
       (common-lisp:cons "SigningEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-dkim-attributes-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-dkim-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-dkim-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-dkim-attributes-response
                    'make-put-email-identity-dkim-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-dkim-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-feedback-attributes-request
                       common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-feedback-attributes-request-email-identity
                         :shape "Identity" :location "uri" :location-name
                         "EmailIdentity")
                        (email-forwarding-enabled :initarg
                         :email-forwarding-enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-feedback-attributes-request-email-forwarding-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-feedback-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-feedback-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-request
                    'make-put-email-identity-feedback-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'email-forwarding-enabled))
      (common-lisp:list
       (common-lisp:cons "EmailForwardingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-feedback-attributes-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-feedback-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-feedback-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-feedback-attributes-response
                    'make-put-email-identity-feedback-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-feedback-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-mail-from-attributes-request
                       common-lisp:nil
                       ((email-identity :initarg :email-identity :initform
                         (common-lisp:error ":email-identity is required")
                         :type (common-lisp:or identity common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-mail-from-attributes-request-email-identity
                         :shape "Identity" :location "uri" :location-name
                         "EmailIdentity")
                        (mail-from-domain :initarg :mail-from-domain :initform
                         common-lisp:nil :type
                         (common-lisp:or mail-from-domain-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-mail-from-attributes-request-mail-from-domain
                         :shape "MailFromDomainName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (behavior-on-mx-failure :initarg
                         :behavior-on-mx-failure :initform common-lisp:nil
                         :type
                         (common-lisp:or behavior-on-mx-failure
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-email-identity-mail-from-attributes-request-behavior-on-mx-failure
                         :shape "BehaviorOnMxFailure" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-mail-from-attributes-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-mail-from-attributes-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-request
                    'make-put-email-identity-mail-from-attributes-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mail-from-domain))
      (common-lisp:list
       (common-lisp:cons "MailFromDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'behavior-on-mx-failure))
      (common-lisp:list
       (common-lisp:cons "BehaviorOnMxFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-email-identity-mail-from-attributes-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-email-identity-mail-from-attributes-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-email-identity-mail-from-attributes-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-email-identity-mail-from-attributes-response
                    'make-put-email-identity-mail-from-attributes-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-email-identity-mail-from-attributes-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass raw-message common-lisp:nil
                       ((data :initarg :data :initform
                         (common-lisp:error ":data is required") :type
                         (common-lisp:or raw-message-data common-lisp:null)
                         :accessor struct-shape-raw-message-data :shape
                         "RawMessageData" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-raw-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'raw-message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'raw-message 'make-raw-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input raw-message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data))
      (common-lisp:list
       (common-lisp:cons "Data"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input raw-message))
   common-lisp:nil))
(common-lisp:deftype raw-message-data ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype rbl-name () 'common-lisp:string)
(common-lisp:deftype report-id () 'common-lisp:string)
(common-lisp:deftype report-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass reputation-options common-lisp:nil
                       ((reputation-metrics-enabled :initarg
                         :reputation-metrics-enabled :initform common-lisp:nil
                         :type (common-lisp:or enabled common-lisp:null)
                         :accessor
                         struct-shape-reputation-options-reputation-metrics-enabled
                         :shape "Enabled" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-fresh-start :initarg :last-fresh-start :initform
                         common-lisp:nil :type
                         (common-lisp:or last-fresh-start common-lisp:null)
                         :accessor
                         struct-shape-reputation-options-last-fresh-start
                         :shape "LastFreshStart" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reputation-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reputation-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reputation-options 'make-reputation-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reputation-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reputation-metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "ReputationMetricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-fresh-start))
      (common-lisp:list
       (common-lisp:cons "LastFreshStart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reputation-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-email-request common-lisp:nil
                       ((from-email-address :initarg :from-email-address
                         :initform common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor
                         struct-shape-send-email-request-from-email-address
                         :shape "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination :initarg :destination :initform
                         (common-lisp:error ":destination is required") :type
                         (common-lisp:or destination common-lisp:null)
                         :accessor struct-shape-send-email-request-destination
                         :shape "Destination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reply-to-addresses :initarg :reply-to-addresses
                         :initform common-lisp:nil :type
                         (common-lisp:or email-address-list common-lisp:null)
                         :accessor
                         struct-shape-send-email-request-reply-to-addresses
                         :shape "EmailAddressList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (feedback-forwarding-email-address :initarg
                         :feedback-forwarding-email-address :initform
                         common-lisp:nil :type
                         (common-lisp:or email-address common-lisp:null)
                         :accessor
                         struct-shape-send-email-request-feedback-forwarding-email-address
                         :shape "EmailAddress" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content :initarg :content :initform
                         (common-lisp:error ":content is required") :type
                         (common-lisp:or email-content common-lisp:null)
                         :accessor struct-shape-send-email-request-content
                         :shape "EmailContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (email-tags :initarg :email-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or message-tag-list common-lisp:null)
                         :accessor struct-shape-send-email-request-email-tags
                         :shape "MessageTagList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-set-name :initarg
                         :configuration-set-name :initform common-lisp:nil
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-email-request-configuration-set-name
                         :shape "ConfigurationSetName" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-email-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-email-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-email-request 'make-send-email-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from-email-address))
      (common-lisp:list
       (common-lisp:cons "FromEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'reply-to-addresses))
      (common-lisp:list
       (common-lisp:cons "ReplyToAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'feedback-forwarding-email-address))
      (common-lisp:list
       (common-lisp:cons "FeedbackForwardingEmailAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'email-tags))
      (common-lisp:list
       (common-lisp:cons "EmailTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-email-response common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or outbound-message-id common-lisp:null)
                         :accessor struct-shape-send-email-response-message-id
                         :shape "OutboundMessageId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-email-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-email-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-email-response 'make-send-email-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-email-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-email-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-quota common-lisp:nil
                       ((max24hour-send :initarg :max24hour-send :initform
                         common-lisp:nil :type
                         (common-lisp:or max24hour-send common-lisp:null)
                         :accessor struct-shape-send-quota-max24hour-send
                         :shape "Max24HourSend" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-send-rate :initarg :max-send-rate :initform
                         common-lisp:nil :type
                         (common-lisp:or max-send-rate common-lisp:null)
                         :accessor struct-shape-send-quota-max-send-rate :shape
                         "MaxSendRate" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sent-last24hours :initarg :sent-last24hours :initform
                         common-lisp:nil :type
                         (common-lisp:or sent-last24hours common-lisp:null)
                         :accessor struct-shape-send-quota-sent-last24hours
                         :shape "SentLast24Hours" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-quota
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-quota
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'send-quota 'make-send-quota))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input send-quota))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max24hour-send))
      (common-lisp:list
       (common-lisp:cons "Max24HourSend"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-send-rate))
      (common-lisp:list
       (common-lisp:cons "MaxSendRate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sent-last24hours))
      (common-lisp:list
       (common-lisp:cons "SentLast24Hours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input send-quota))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sending-options common-lisp:nil
                       ((sending-enabled :initarg :sending-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or enabled common-lisp:null) :accessor
                         struct-shape-sending-options-sending-enabled :shape
                         "Enabled" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sending-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sending-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sending-options 'make-sending-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sending-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sending-enabled))
      (common-lisp:list
       (common-lisp:cons "SendingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sending-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition sending-paused-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'sending-paused-exception)))
(common-lisp:deftype sending-pool-name () 'common-lisp:string)
(common-lisp:deftype sent-last24hours () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass sns-destination common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         (common-lisp:error ":topic-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor struct-shape-sns-destination-topic-arn
                         :shape "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sns-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sns-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sns-destination 'make-sns-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sns-destination))
   common-lisp:nil))
(common-lisp:deftype subject () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "AmazonResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass template common-lisp:nil
                       ((template-arn :initarg :template-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or template-arn common-lisp:null)
                         :accessor struct-shape-template-template-arn :shape
                         "TemplateArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (template-data :initarg :template-data :initform
                         common-lisp:nil :type
                         (common-lisp:or template-data common-lisp:null)
                         :accessor struct-shape-template-template-data :shape
                         "TemplateData" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-arn))
      (common-lisp:list
       (common-lisp:cons "TemplateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'template-data))
      (common-lisp:list
       (common-lisp:cons "TemplateData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:deftype template-arn () 'common-lisp:string)
(common-lisp:deftype template-data () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype tls-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (pinpoint-email-error)
     common-lisp:nil)
 (common-lisp:export (common-lisp:list 'too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:defclass tracking-options common-lisp:nil
                       ((custom-redirect-domain :initarg
                         :custom-redirect-domain :initform
                         (common-lisp:error
                          ":custom-redirect-domain is required")
                         :type
                         (common-lisp:or custom-redirect-domain
                                         common-lisp:null)
                         :accessor
                         struct-shape-tracking-options-custom-redirect-domain
                         :shape "CustomRedirectDomain" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tracking-options
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tracking-options
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tracking-options 'make-tracking-options))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tracking-options))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'custom-redirect-domain))
      (common-lisp:list
       (common-lisp:cons "CustomRedirectDomain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tracking-options))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or amazon-resource-name common-lisp:null)
                         :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "AmazonResourceName" :location "querystring"
                         :location-name "ResourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "TagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type
                         (common-lisp:or configuration-set-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-configuration-set-name
                         :shape "ConfigurationSetName" :location "uri"
                         :location-name "ConfigurationSetName")
                        (event-destination-name :initarg
                         :event-destination-name :initform
                         (common-lisp:error
                          ":event-destination-name is required")
                         :type
                         (common-lisp:or event-destination-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-event-destination-name
                         :shape "EventDestinationName" :location "uri"
                         :location-name "EventDestinationName")
                        (event-destination :initarg :event-destination
                         :initform
                         (common-lisp:error ":event-destination is required")
                         :type
                         (common-lisp:or event-destination-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-event-destination
                         :shape "EventDestinationDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:deftype volume () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass volume-statistics common-lisp:nil
                       ((inbox-raw-count :initarg :inbox-raw-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-volume-statistics-inbox-raw-count :shape
                         "Volume" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (spam-raw-count :initarg :spam-raw-count :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-volume-statistics-spam-raw-count :shape
                         "Volume" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (projected-inbox :initarg :projected-inbox :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-volume-statistics-projected-inbox :shape
                         "Volume" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (projected-spam :initarg :projected-spam :initform
                         common-lisp:nil :type
                         (common-lisp:or volume common-lisp:null) :accessor
                         struct-shape-volume-statistics-projected-spam :shape
                         "Volume" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-statistics
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-statistics
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volume-statistics 'make-volume-statistics))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-statistics))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inbox-raw-count))
      (common-lisp:list
       (common-lisp:cons "InboxRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'spam-raw-count))
      (common-lisp:list
       (common-lisp:cons "SpamRawCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-inbox))
      (common-lisp:list
       (common-lisp:cons "ProjectedInbox"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-spam))
      (common-lisp:list
       (common-lisp:cons "ProjectedSpam"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-statistics))
   common-lisp:nil))
(common-lisp:deftype warmup-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tracking-options
                     delivery-options reputation-options sending-options tags)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tracking-options
     delivery-options reputation-options sending-options tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/configuration-sets"
                                                        "CreateConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "CreateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun create-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name tags)
   (common-lisp:declare (common-lisp:ignorable pool-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/dedicated-ip-pools"
                                                        "CreateDedicatedIpPool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun create-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-name from-email-address content
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable report-name from-email-address content tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/deliverability-dashboard/test"
                                                        "CreateDeliverabilityTestReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun create-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity tags)
   (common-lisp:declare (common-lisp:ignorable email-identity tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/identities"
                                                        "CreateEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-email-identity))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "DeleteConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "DeleteConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-dedicated-ip-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name)
   (common-lisp:declare (common-lisp:ignorable pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-dedicated-ip-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ip-pools/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'pool-name))))
                                                        "DeleteDedicatedIpPool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-dedicated-ip-pool))
(common-lisp:progn
 (common-lisp:defun delete-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "DeleteEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-email-identity))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'pinpoint-email-request :method "GET" :path
                                "/v1/email/account" :operation "GetAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-blacklist-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key blacklist-item-names)
   (common-lisp:declare (common-lisp:ignorable blacklist-item-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-blacklist-reports-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/deliverability-dashboard/blacklist-report"
                                                        "GetBlacklistReports"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-blacklist-reports))
(common-lisp:progn
 (common-lisp:defun get-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-configuration-set))
(common-lisp:progn
 (common-lisp:defun get-configuration-set-event-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configuration-set-event-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSetEventDestinations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-configuration-set-event-destinations))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ip
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip)
   (common-lisp:declare (common-lisp:ignorable ip))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ip-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "GetDedicatedIp"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-dedicated-ip))
(common-lisp:progn
 (common-lisp:defun get-dedicated-ips
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name next-token page-size)
   (common-lisp:declare (common-lisp:ignorable pool-name next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-dedicated-ips-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/dedicated-ips"
                                                        "GetDedicatedIps"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-dedicated-ips))
(common-lisp:progn
 (common-lisp:defun get-deliverability-dashboard-options ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'pinpoint-email-request :method "GET" :path
                                "/v1/email/deliverability-dashboard" :operation
                                "GetDeliverabilityDashboardOptions"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-deliverability-dashboard-options))
(common-lisp:progn
 (common-lisp:defun get-deliverability-test-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key report-id)
   (common-lisp:declare (common-lisp:ignorable report-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-deliverability-test-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/test-reports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'report-id))))
                                                        "GetDeliverabilityTestReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deliverability-test-report))
(common-lisp:progn
 (common-lisp:defun get-domain-deliverability-campaign
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-id)
   (common-lisp:declare (common-lisp:ignorable campaign-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-deliverability-campaign-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/campaigns/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'campaign-id))))
                                                        "GetDomainDeliverabilityCampaign"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-deliverability-campaign))
(common-lisp:progn
 (common-lisp:defun get-domain-statistics-report
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain start-date end-date)
   (common-lisp:declare (common-lisp:ignorable domain start-date end-date))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-domain-statistics-report-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/statistics-report/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain))))
                                                        "GetDomainStatisticsReport"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-statistics-report))
(common-lisp:progn
 (common-lisp:defun get-email-identity
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity)
   (common-lisp:declare (common-lisp:ignorable email-identity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-email-identity-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "GetEmailIdentity"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-email-identity))
(common-lisp:progn
 (common-lisp:defun list-configuration-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configuration-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/configuration-sets"
                                                        "ListConfigurationSets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-configuration-sets))
(common-lisp:progn
 (common-lisp:defun list-dedicated-ip-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-dedicated-ip-pools-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/dedicated-ip-pools"
                                                        "ListDedicatedIpPools"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-dedicated-ip-pools))
(common-lisp:progn
 (common-lisp:defun list-deliverability-test-reports
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-deliverability-test-reports-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/deliverability-dashboard/test-reports"
                                                        "ListDeliverabilityTestReports"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-deliverability-test-reports))
(common-lisp:progn
 (common-lisp:defun list-domain-deliverability-campaigns
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key start-date end-date subscribed-domain
                     next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable start-date end-date subscribed-domain next-token
     page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-domain-deliverability-campaigns-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/deliverability-dashboard/domains/~A/campaigns"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'subscribed-domain))))
                                                        "ListDomainDeliverabilityCampaigns"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-domain-deliverability-campaigns))
(common-lisp:progn
 (common-lisp:defun list-email-identities
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-email-identities-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/email/identities"
                                                        "ListEmailIdentities"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-email-identities))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/v1/email/tags"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun put-account-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key auto-warmup-enabled)
   (common-lisp:declare (common-lisp:ignorable auto-warmup-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/account/dedicated-ips/warmup"
                                                        "PutAccountDedicatedIpWarmupAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-account-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-account-sending-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key sending-enabled)
   (common-lisp:declare (common-lisp:ignorable sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-account-sending-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/account/sending"
                                                        "PutAccountSendingAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-account-sending-attributes))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-delivery-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name tls-policy
                     sending-pool-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name tls-policy
     sending-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-delivery-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/delivery-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetDeliveryOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-configuration-set-delivery-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-reputation-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     reputation-metrics-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name reputation-metrics-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-reputation-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/reputation-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetReputationOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-configuration-set-reputation-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-sending-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name sending-enabled)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name sending-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-sending-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/sending"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetSendingOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-configuration-set-sending-options))
(common-lisp:progn
 (common-lisp:defun put-configuration-set-tracking-options
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     custom-redirect-domain)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name custom-redirect-domain))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-configuration-set-tracking-options-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/tracking-options"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "PutConfigurationSetTrackingOptions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-configuration-set-tracking-options))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-in-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip destination-pool-name)
   (common-lisp:declare (common-lisp:ignorable ip destination-pool-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-dedicated-ip-in-pool-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A/pool"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpInPool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-dedicated-ip-in-pool))
(common-lisp:progn
 (common-lisp:defun put-dedicated-ip-warmup-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key ip warmup-percentage)
   (common-lisp:declare (common-lisp:ignorable ip warmup-percentage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-dedicated-ip-warmup-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/dedicated-ips/~A/warmup"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ip))))
                                                        "PutDedicatedIpWarmupAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-dedicated-ip-warmup-attributes))
(common-lisp:progn
 (common-lisp:defun put-deliverability-dashboard-option
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key dashboard-enabled subscribed-domains)
   (common-lisp:declare
    (common-lisp:ignorable dashboard-enabled subscribed-domains))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-deliverability-dashboard-option-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        "/v1/email/deliverability-dashboard"
                                                        "PutDeliverabilityDashboardOption"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-deliverability-dashboard-option))
(common-lisp:progn
 (common-lisp:defun put-email-identity-dkim-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity signing-enabled)
   (common-lisp:declare (common-lisp:ignorable email-identity signing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-dkim-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/dkim"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityDkimAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-email-identity-dkim-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-feedback-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity email-forwarding-enabled)
   (common-lisp:declare
    (common-lisp:ignorable email-identity email-forwarding-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-feedback-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/feedback"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityFeedbackAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-email-identity-feedback-attributes))
(common-lisp:progn
 (common-lisp:defun put-email-identity-mail-from-attributes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key email-identity mail-from-domain
                     behavior-on-mx-failure)
   (common-lisp:declare
    (common-lisp:ignorable email-identity mail-from-domain
     behavior-on-mx-failure))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-email-identity-mail-from-attributes-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/identities/~A/mail-from"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'email-identity))))
                                                        "PutEmailIdentityMailFromAttributes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-email-identity-mail-from-attributes))
(common-lisp:progn
 (common-lisp:defun send-email
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key from-email-address destination
                     reply-to-addresses feedback-forwarding-email-address
                     content email-tags configuration-set-name)
   (common-lisp:declare
    (common-lisp:ignorable from-email-address destination reply-to-addresses
     feedback-forwarding-email-address content email-tags
     configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-email-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/email/outbound-emails"
                                                        "SendEmail"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-email))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/v1/email/tags"
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        "/v1/email/tags"
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name event-destination)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name
     event-destination))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'pinpoint-email-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/email/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "UpdateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-configuration-set-event-destination))
