;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/apigateway/api (:use)
                             (:nicknames #:aws/apigateway)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/apigateway/api)
(common-lisp:progn
 (common-lisp:define-condition apigateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'apigateway-error))
(common-lisp:progn
 (common-lisp:defclass apigateway-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "apigateway" :api-version
                        "2015-07-09" :host-prefix "apigateway" :signing-name
                        common-lisp:nil :global-host common-lisp:nil))
 (common-lisp:export 'apigateway-request))
(common-lisp:defvar *error-map*
  '(("BadRequestException" . bad-request-exception)
    ("ConflictException" . conflict-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnauthorizedException" . unauthorized-exception)))
(common-lisp:progn
 (common-lisp:defclass access-log-settings common-lisp:nil
                       ((format :initarg :format :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-access-log-settings-format
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-arn :initarg :destination-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-access-log-settings-destination-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-access-log-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'access-log-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'access-log-settings 'make-access-log-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input access-log-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'format))
      (common-lisp:list
       (common-lisp:cons "format"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination-arn))
      (common-lisp:list
       (common-lisp:cons "destinationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input access-log-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass account common-lisp:nil
                       ((cloudwatch-role-arn :initarg :cloudwatch-role-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-cloudwatch-role-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (throttle-settings :initarg :throttle-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor struct-shape-account-throttle-settings
                         :shape "ThrottleSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (features :initarg :features :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-account-features :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-key-version :initarg :api-key-version :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-account-api-key-version :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'account 'make-account))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input account))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cloudwatch-role-arn))
      (common-lisp:list
       (common-lisp:cons "cloudwatchRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle-settings))
      (common-lisp:list
       (common-lisp:cons "throttleSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'features))
      (common-lisp:list
       (common-lisp:cons "features"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-version))
      (common-lisp:list
       (common-lisp:cons "apiKeyVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input account))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-key common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-key-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-key-value :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-key-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (customer-id :initarg :customer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-key-customer-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-key-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-api-key-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-api-key-created-date :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-api-key-last-updated-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage-keys :initarg :stage-keys :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-api-key-stage-keys :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-api-key-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-key 'make-api-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass api-key-ids common-lisp:nil
                       ((ids :initarg :ids :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-api-key-ids-ids :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-api-key-ids-warnings :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-key-ids
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-key-ids
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-key-ids 'make-api-key-ids))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-key-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-key-ids))
   common-lisp:nil))
(common-lisp:deftype api-key-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-keys common-lisp:nil
                       ((warnings :initarg :warnings :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-api-keys-warnings :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-api-keys-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-api-key common-lisp:null)
                         :accessor struct-shape-api-keys-items :shape
                         "ListOfApiKey" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-keys
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-keys
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-keys 'make-api-keys))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-keys))
   common-lisp:nil))
(common-lisp:deftype api-keys-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass api-stage common-lisp:nil
                       ((api-id :initarg :api-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-api-stage-api-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-api-stage-stage :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (throttle :initarg :throttle :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-api-stage-throttle-settings
                                         common-lisp:null)
                         :accessor struct-shape-api-stage-throttle :shape
                         "MapOfApiStageThrottleSettings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-api-stage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'api-stage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'api-stage 'make-api-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input api-stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-id))
      (common-lisp:list
       (common-lisp:cons "apiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input api-stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass authorizer common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor struct-shape-authorizer-type :shape
                         "AuthorizerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provider-arns :initarg :provider-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-arns common-lisp:null)
                         :accessor struct-shape-authorizer-provider-arns :shape
                         "ListOfARNs" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (auth-type :initarg :auth-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-auth-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-authorizer-uri :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorizer-credentials :initarg
                         :authorizer-credentials :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-authorizer-authorizer-credentials :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-identity-source :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-authorizer-identity-validation-expression
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-authorizer-authorizer-result-ttl-in-seconds
                         :shape "NullableInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorizer
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorizer
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorizer 'make-authorizer))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizer))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizer))
   common-lisp:nil))
(common-lisp:deftype authorizer-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass authorizers common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-authorizers-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-authorizer common-lisp:null)
                         :accessor struct-shape-authorizers-items :shape
                         "ListOfAuthorizer" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorizers
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorizers
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorizers 'make-authorizers))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorizers))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorizers))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass base-path-mapping common-lisp:nil
                       ((base-path :initarg :base-path :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-base-path-mapping-base-path :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rest-api-id :initarg :rest-api-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-base-path-mapping-rest-api-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-base-path-mapping-stage :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-base-path-mapping
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'base-path-mapping
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'base-path-mapping 'make-base-path-mapping))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mapping))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mapping))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass base-path-mappings common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-base-path-mappings-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-base-path-mapping
                                         common-lisp:null)
                         :accessor struct-shape-base-path-mappings-items :shape
                         "ListOfBasePathMapping" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-base-path-mappings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'base-path-mappings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'base-path-mappings 'make-base-path-mappings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input base-path-mappings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input base-path-mappings))
   common-lisp:nil))
(common-lisp:deftype blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:deftype cache-cluster-size () 'common-lisp:string)
(common-lisp:deftype cache-cluster-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass canary-settings common-lisp:nil
                       ((percent-traffic :initarg :percent-traffic :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-canary-settings-percent-traffic :shape
                         "Double" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-canary-settings-deployment-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage-variable-overrides :initarg
                         :stage-variable-overrides :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-canary-settings-stage-variable-overrides
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (use-stage-cache :initarg :use-stage-cache :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-canary-settings-use-stage-cache :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-canary-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'canary-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'canary-settings 'make-canary-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass client-certificate common-lisp:nil
                       ((client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-client-certificate-client-certificate-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-client-certificate-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pem-encoded-certificate :initarg
                         :pem-encoded-certificate :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-client-certificate-pem-encoded-certificate
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-client-certificate-created-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (expiration-date :initarg :expiration-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-client-certificate-expiration-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-client-certificate-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-client-certificate
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'client-certificate
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'client-certificate 'make-client-certificate))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificate))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'pem-encoded-certificate))
      (common-lisp:list
       (common-lisp:cons "pemEncodedCertificate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'expiration-date))
      (common-lisp:list
       (common-lisp:cons "expirationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificate))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass client-certificates common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-client-certificates-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-client-certificate
                                         common-lisp:null)
                         :accessor struct-shape-client-certificates-items
                         :shape "ListOfClientCertificate" :location
                         common-lisp:nil :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-client-certificates
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'client-certificates
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'client-certificates 'make-client-certificates))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input client-certificates))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input client-certificates))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype connection-type () 'common-lisp:string)
(common-lisp:deftype content-handling-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-api-key-request common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-api-key-request-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-api-key-request-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-create-api-key-request-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (generate-distinct-id :initarg :generate-distinct-id
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-api-key-request-generate-distinct-id
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-api-key-request-value :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage-keys :initarg :stage-keys :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-stage-keys common-lisp:null)
                         :accessor
                         struct-shape-create-api-key-request-stage-keys :shape
                         "ListOfStageKeys" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (customer-id :initarg :customer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-api-key-request-customer-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-api-key-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-api-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-api-key-request 'make-create-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'generate-distinct-id))
      (common-lisp:list
       (common-lisp:cons "generateDistinctId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-keys))
      (common-lisp:list
       (common-lisp:cons "stageKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'customer-id))
      (common-lisp:list
       (common-lisp:cons "customerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-authorizer-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or authorizer-type common-lisp:null)
                         :accessor struct-shape-create-authorizer-request-type
                         :shape "AuthorizerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provider-arns :initarg :provider-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-arns common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-provider-arns
                         :shape "ListOfARNs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auth-type :initarg :auth-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-auth-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorizer-uri :initarg :authorizer-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-authorizer-uri
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorizer-credentials :initarg
                         :authorizer-credentials :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-credentials
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identity-source :initarg :identity-source :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-identity-source
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (identity-validation-expression :initarg
                         :identity-validation-expression :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-authorizer-request-identity-validation-expression
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorizer-result-ttl-in-seconds :initarg
                         :authorizer-result-ttl-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-create-authorizer-request-authorizer-result-ttl-in-seconds
                         :shape "NullableInteger" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-authorizer-request
                    'make-create-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arns))
      (common-lisp:list
       (common-lisp:cons "providerARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'auth-type))
      (common-lisp:list
       (common-lisp:cons "authType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-uri))
      (common-lisp:list
       (common-lisp:cons "authorizerUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-credentials))
      (common-lisp:list
       (common-lisp:cons "authorizerCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identity-source))
      (common-lisp:list
       (common-lisp:cons "identitySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'identity-validation-expression))
      (common-lisp:list
       (common-lisp:cons "identityValidationExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorizer-result-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "authorizerResultTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-base-path-mapping-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-base-path-mapping-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (base-path :initarg :base-path :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-base-path-mapping-request-base-path
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-base-path-mapping-request-rest-api-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage :initarg :stage :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-base-path-mapping-request-stage
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-base-path-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-base-path-mapping-request
                    'make-create-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'base-path))
      (common-lisp:list
       (common-lisp:cons "basePath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage))
      (common-lisp:list
       (common-lisp:cons "stage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-deployment-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-deployment-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-deployment-request-stage-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage-description :initarg :stage-description
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-deployment-request-stage-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-deployment-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-cluster-enabled :initarg :cache-cluster-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-cache-cluster-enabled
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-cluster-size :initarg :cache-cluster-size
                         :initform common-lisp:nil :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-cache-cluster-size
                         :shape "CacheClusterSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (variables :initarg :variables :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-variables
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (canary-settings :initarg :canary-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or deployment-canary-settings
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-canary-settings
                         :shape "DeploymentCanarySettings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tracing-enabled :initarg :tracing-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-create-deployment-request-tracing-enabled
                         :shape "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-deployment-request
                    'make-create-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-description))
      (common-lisp:list
       (common-lisp:cons "stageDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-documentation-part-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-documentation-part-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (location :initarg :location :initform
                         (common-lisp:error ":location is required") :type
                         (common-lisp:or documentation-part-location
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-documentation-part-request-location
                         :shape "DocumentationPartLocation" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (properties :initarg :properties :initform
                         (common-lisp:error ":properties is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-documentation-part-request-properties
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-documentation-part-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-documentation-part-request
                    'make-create-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-documentation-version-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-documentation-version-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-version :initarg :documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-documentation-version-request-documentation-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-documentation-version-request-stage-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-documentation-version-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-documentation-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-documentation-version-request
                    'make-create-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-name :initarg :certificate-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-certificate-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-body :initarg :certificate-body :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-certificate-body
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-private-key :initarg
                         :certificate-private-key :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-certificate-private-key
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-chain :initarg :certificate-chain
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-certificate-chain
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-certificate-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (regional-certificate-name :initarg
                         :regional-certificate-name :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-regional-certificate-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (regional-certificate-arn :initarg
                         :regional-certificate-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-regional-certificate-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-configuration :initarg
                         :endpoint-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-endpoint-configuration
                         :shape "EndpointConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-domain-name-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-policy :initarg :security-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or security-policy common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-security-policy
                         :shape "SecurityPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication-input
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-domain-name-request-mutual-tls-authentication
                         :shape "MutualTlsAuthenticationInput" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ownership-verification-certificate-arn :initarg
                         :ownership-verification-certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-domain-name-request-ownership-verification-certificate-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-domain-name-request
                    'make-create-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-body))
      (common-lisp:list
       (common-lisp:cons "certificateBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-private-key))
      (common-lisp:list
       (common-lisp:cons "certificatePrivateKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-chain))
      (common-lisp:list
       (common-lisp:cons "certificateChain"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-model-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-model-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-model-request-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-model-request-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schema :initarg :schema :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-create-model-request-schema
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         (common-lisp:error ":contenttype is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-model-request-content-type :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-model-request 'make-create-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-request-validator-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-request-validator-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-request-validator-request-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (validate-request-body :initarg :validate-request-body
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-request-validator-request-validate-request-body
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (validate-request-parameters :initarg
                         :validate-request-parameters :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-request-validator-request-validate-request-parameters
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-request-validator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-request-validator-request
                    'make-create-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-resource-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (parent-id :initarg :parent-id :initform
                         (common-lisp:error ":parentid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-resource-request-parent-id :shape
                         "String" :location "uri" :location-name "parent_id")
                        (path-part :initarg :path-part :initform
                         (common-lisp:error ":pathpart is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-resource-request-path-part :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-resource-request 'make-create-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-rest-api-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-rest-api-request-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-rest-api-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-create-rest-api-request-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (clone-from :initarg :clone-from :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-rest-api-request-clone-from :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (binary-media-types :initarg :binary-media-types
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-create-rest-api-request-binary-media-types
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (minimum-compression-size :initarg
                         :minimum-compression-size :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-create-rest-api-request-minimum-compression-size
                         :shape "NullableInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-key-source :initarg :api-key-source :initform
                         common-lisp:nil :type
                         (common-lisp:or api-key-source-type common-lisp:null)
                         :accessor
                         struct-shape-create-rest-api-request-api-key-source
                         :shape "ApiKeySourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-configuration :initarg
                         :endpoint-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-rest-api-request-endpoint-configuration
                         :shape "EndpointConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-create-rest-api-request-policy
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-rest-api-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-rest-api-request-disable-execute-api-endpoint
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-rest-api-request 'make-create-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'clone-from))
      (common-lisp:list
       (common-lisp:cons "cloneFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-stage-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-stage-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-stage-request-stage-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-stage-request-deployment-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-stage-request-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-cluster-enabled :initarg :cache-cluster-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-stage-request-cache-cluster-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-cluster-size :initarg :cache-cluster-size
                         :initform common-lisp:nil :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-cache-cluster-size
                         :shape "CacheClusterSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (variables :initarg :variables :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-stage-request-variables
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (documentation-version :initarg :documentation-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-stage-request-documentation-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (canary-settings :initarg :canary-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or canary-settings common-lisp:null)
                         :accessor
                         struct-shape-create-stage-request-canary-settings
                         :shape "CanarySettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tracing-enabled :initarg :tracing-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-stage-request-tracing-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-stage-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-stage-request 'make-create-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-usage-plan-key-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-usage-plan-key-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId")
                        (key-id :initarg :key-id :initform
                         (common-lisp:error ":keyid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-usage-plan-key-request-key-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key-type :initarg :key-type :initform
                         (common-lisp:error ":keytype is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-usage-plan-key-request-key-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-usage-plan-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-key-request
                    'make-create-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-id))
      (common-lisp:list
       (common-lisp:cons "keyId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-type))
      (common-lisp:list
       (common-lisp:cons "keyType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-usage-plan-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-usage-plan-request-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-usage-plan-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-stages :initarg :api-stages :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-api-stage common-lisp:null)
                         :accessor
                         struct-shape-create-usage-plan-request-api-stages
                         :shape "ListOfApiStage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throttle :initarg :throttle :initform common-lisp:nil
                         :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor
                         struct-shape-create-usage-plan-request-throttle :shape
                         "ThrottleSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (quota :initarg :quota :initform common-lisp:nil :type
                         (common-lisp:or quota-settings common-lisp:null)
                         :accessor struct-shape-create-usage-plan-request-quota
                         :shape "QuotaSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-usage-plan-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-usage-plan-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-usage-plan-request
                    'make-create-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-vpc-link-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-vpc-link-request-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-create-vpc-link-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-arns :initarg :target-arns :initform
                         (common-lisp:error ":targetarns is required") :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-create-vpc-link-request-target-arns
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-create-vpc-link-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-vpc-link-request 'make-create-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-api-key-request common-lisp:nil
                       ((api-key :initarg :api-key :initform
                         (common-lisp:error ":apikey is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-api-key-request-api-key :shape
                         "String" :location "uri" :location-name "api_Key"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-api-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-api-key-request 'make-delete-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-authorizer-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-authorizer-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizerid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-authorizer-request-authorizer-id
                         :shape "String" :location "uri" :location-name
                         "authorizer_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-authorizer-request
                    'make-delete-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-base-path-mapping-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-base-path-mapping-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (base-path :initarg :base-path :initform
                         (common-lisp:error ":basepath is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-base-path-mapping-request-base-path
                         :shape "String" :location "uri" :location-name
                         "base_path"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-base-path-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-base-path-mapping-request
                    'make-delete-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-client-certificate-request common-lisp:nil
                       ((client-certificate-id :initarg :client-certificate-id
                         :initform
                         (common-lisp:error ":clientcertificateid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-client-certificate-request-client-certificate-id
                         :shape "String" :location "uri" :location-name
                         "clientcertificate_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-client-certificate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-client-certificate-request
                    'make-delete-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-deployment-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-deployment-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-deployment-request-deployment-id
                         :shape "String" :location "uri" :location-name
                         "deployment_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-deployment-request
                    'make-delete-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-documentation-part-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-documentation-part-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-part-id :initarg :documentation-part-id
                         :initform
                         (common-lisp:error ":documentationpartid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-documentation-part-request-documentation-part-id
                         :shape "String" :location "uri" :location-name
                         "part_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-documentation-part-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-part-request
                    'make-delete-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-documentation-version-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-documentation-version-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-version :initarg :documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-documentation-version-request-documentation-version
                         :shape "String" :location "uri" :location-name
                         "doc_version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-documentation-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-documentation-version-request
                    'make-delete-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-domain-name-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-domain-name-request
                    'make-delete-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-gateway-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (response-type :initarg :response-type :initform
                         (common-lisp:error ":responsetype is required") :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-gateway-response-request-response-type
                         :shape "GatewayResponseType" :location "uri"
                         :location-name "response_type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-gateway-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-response-request
                    'make-delete-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-integration-request
                    'make-delete-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-integration-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-integration-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-delete-integration-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-integration-response-request
                    'make-delete-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-method-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-request-resource-id :shape
                         "String" :location "uri" :location-name "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-request-http-method :shape
                         "String" :location "uri" :location-name
                         "http_method"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-method-request 'make-delete-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-method-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-method-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-delete-method-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-method-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-method-response-request
                    'make-delete-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-model-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-model-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (model-name :initarg :model-name :initform
                         (common-lisp:error ":modelname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-model-request-model-name :shape
                         "String" :location "uri" :location-name "model_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-model-request 'make-delete-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-request-validator-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-request-validator-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (request-validator-id :initarg :request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-delete-request-validator-request-request-validator-id
                         :shape "String" :location "uri" :location-name
                         "requestvalidator_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-request-validator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-request-validator-request
                    'make-delete-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-resource-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-resource-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-resource-request 'make-delete-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-rest-api-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-rest-api-request 'make-delete-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-stage-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-stage-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-stage-request-stage-name :shape
                         "String" :location "uri" :location-name "stage_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-stage-request 'make-delete-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-usage-plan-key-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-usage-plan-key-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId")
                        (key-id :initarg :key-id :initform
                         (common-lisp:error ":keyid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-usage-plan-key-request-key-id
                         :shape "String" :location "uri" :location-name
                         "keyId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-usage-plan-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-key-request
                    'make-delete-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-usage-plan-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-usage-plan-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-usage-plan-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-usage-plan-request
                    'make-delete-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-delete-vpc-link-request-vpc-link-id
                         :shape "String" :location "uri" :location-name
                         "vpclink_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-vpc-link-request 'make-delete-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deployment-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deployment-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deployment-created-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-summary :initarg :api-summary :initform
                         common-lisp:nil :type
                         (common-lisp:or path-to-map-of-method-snapshot
                                         common-lisp:null)
                         :accessor struct-shape-deployment-api-summary :shape
                         "PathToMapOfMethodSnapshot" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deployment 'make-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-summary))
      (common-lisp:list
       (common-lisp:cons "apiSummary"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployment-canary-settings common-lisp:nil
                       ((percent-traffic :initarg :percent-traffic :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-deployment-canary-settings-percent-traffic
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage-variable-overrides :initarg
                         :stage-variable-overrides :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-deployment-canary-settings-stage-variable-overrides
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (use-stage-cache :initarg :use-stage-cache :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-deployment-canary-settings-use-stage-cache
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-canary-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-canary-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-canary-settings
                    'make-deployment-canary-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'percent-traffic))
      (common-lisp:list
       (common-lisp:cons "percentTraffic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'stage-variable-overrides))
      (common-lisp:list
       (common-lisp:cons "stageVariableOverrides"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'use-stage-cache))
      (common-lisp:list
       (common-lisp:cons "useStageCache"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          deployment-canary-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass deployments common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-deployments-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-deployment common-lisp:null)
                         :accessor struct-shape-deployments-items :shape
                         "ListOfDeployment" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployments
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployments
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'deployments 'make-deployments))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployments))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployments))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-documentation-part-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location :initarg :location :initform common-lisp:nil
                         :type
                         (common-lisp:or documentation-part-location
                                         common-lisp:null)
                         :accessor struct-shape-documentation-part-location
                         :shape "DocumentationPartLocation" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (properties :initarg :properties :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-documentation-part-properties :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-part
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-part 'make-documentation-part))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-part))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location))
      (common-lisp:list
       (common-lisp:cons "location"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'properties))
      (common-lisp:list
       (common-lisp:cons "properties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-part))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part-ids common-lisp:nil
                       ((ids :initarg :ids :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-documentation-part-ids-ids
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-documentation-part-ids-warnings
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-part-ids
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part-ids
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-part-ids 'make-documentation-part-ids))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ids))
      (common-lisp:list
       (common-lisp:cons "ids"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-ids))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-part-location common-lisp:nil
                       ((type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or documentation-part-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-documentation-part-location-type :shape
                         "DocumentationPartType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-documentation-part-location-path :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (method :initarg :method :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-documentation-part-location-method :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          documentation-part-location-status-code
                          common-lisp:null)
                         :accessor
                         struct-shape-documentation-part-location-status-code
                         :shape "DocumentationPartLocationStatusCode" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-documentation-part-location-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-part-location
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-part-location
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-part-location
                    'make-documentation-part-location))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method))
      (common-lisp:list
       (common-lisp:cons "method"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-part-location))
   common-lisp:nil))
(common-lisp:deftype documentation-part-location-status-code ()
  'common-lisp:string)
(common-lisp:deftype documentation-part-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass documentation-parts common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-documentation-parts-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-documentation-part
                                         common-lisp:null)
                         :accessor struct-shape-documentation-parts-items
                         :shape "ListOfDocumentationPart" :location
                         common-lisp:nil :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-parts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-parts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-parts 'make-documentation-parts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input documentation-parts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input documentation-parts))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-version common-lisp:nil
                       ((version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-documentation-version-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-documentation-version-created-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-documentation-version-description :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-version
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-version
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-version 'make-documentation-version))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-version))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass documentation-versions common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-documentation-versions-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-documentation-version
                                         common-lisp:null)
                         :accessor struct-shape-documentation-versions-items
                         :shape "ListOfDocumentationVersion" :location
                         common-lisp:nil :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-documentation-versions
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'documentation-versions
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'documentation-versions 'make-documentation-versions))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          documentation-versions))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass domain-name common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-name-domain-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (certificate-name :initarg :certificate-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-name-certificate-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-name-certificate-arn :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (certificate-upload-date :initarg
                         :certificate-upload-date :initform common-lisp:nil
                         :type (common-lisp:or timestamp common-lisp:null)
                         :accessor
                         struct-shape-domain-name-certificate-upload-date
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (regional-domain-name :initarg :regional-domain-name
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-name-regional-domain-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (regional-hosted-zone-id :initarg
                         :regional-hosted-zone-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-regional-hosted-zone-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (regional-certificate-name :initarg
                         :regional-certificate-name :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-regional-certificate-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (regional-certificate-arn :initarg
                         :regional-certificate-arn :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-regional-certificate-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (distribution-domain-name :initarg
                         :distribution-domain-name :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-distribution-domain-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (distribution-hosted-zone-id :initarg
                         :distribution-hosted-zone-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-distribution-hosted-zone-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-configuration :initarg
                         :endpoint-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-name-endpoint-configuration :shape
                         "EndpointConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-name-status :initarg :domain-name-status
                         :initform common-lisp:nil :type
                         (common-lisp:or domain-name-status common-lisp:null)
                         :accessor struct-shape-domain-name-domain-name-status
                         :shape "DomainNameStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-name-status-message :initarg
                         :domain-name-status-message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-domain-name-domain-name-status-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (security-policy :initarg :security-policy :initform
                         common-lisp:nil :type
                         (common-lisp:or security-policy common-lisp:null)
                         :accessor struct-shape-domain-name-security-policy
                         :shape "SecurityPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-domain-name-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mutual-tls-authentication :initarg
                         :mutual-tls-authentication :initform common-lisp:nil
                         :type
                         (common-lisp:or mutual-tls-authentication
                                         common-lisp:null)
                         :accessor
                         struct-shape-domain-name-mutual-tls-authentication
                         :shape "MutualTlsAuthentication" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ownership-verification-certificate-arn :initarg
                         :ownership-verification-certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-domain-name-ownership-verification-certificate-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-name
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-name
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'domain-name 'make-domain-name))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-name))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "domainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-name))
      (common-lisp:list
       (common-lisp:cons "certificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "certificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'certificate-upload-date))
      (common-lisp:list
       (common-lisp:cons "certificateUploadDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-domain-name))
      (common-lisp:list
       (common-lisp:cons "regionalDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "regionalHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-name))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'regional-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "regionalCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-domain-name))
      (common-lisp:list
       (common-lisp:cons "distributionDomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'distribution-hosted-zone-id))
      (common-lisp:list
       (common-lisp:cons "distributionHostedZoneId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name-status))
      (common-lisp:list
       (common-lisp:cons "domainNameStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'domain-name-status-message))
      (common-lisp:list
       (common-lisp:cons "domainNameStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'security-policy))
      (common-lisp:list
       (common-lisp:cons "securityPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'mutual-tls-authentication))
      (common-lisp:list
       (common-lisp:cons "mutualTlsAuthentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ownership-verification-certificate-arn))
      (common-lisp:list
       (common-lisp:cons "ownershipVerificationCertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-name))
   common-lisp:nil))
(common-lisp:deftype domain-name-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass domain-names common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-domain-names-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-domain-name common-lisp:null)
                         :accessor struct-shape-domain-names-items :shape
                         "ListOfDomainName" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-domain-names
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'domain-names
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'domain-names 'make-domain-names))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input domain-names))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input domain-names))
   common-lisp:nil))
(common-lisp:deftype double () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass endpoint-configuration common-lisp:nil
                       ((types :initarg :types :initform common-lisp:nil :type
                         (common-lisp:or list-of-endpoint-type
                                         common-lisp:null)
                         :accessor struct-shape-endpoint-configuration-types
                         :shape "ListOfEndpointType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpc-endpoint-ids :initarg :vpc-endpoint-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-endpoint-configuration-vpc-endpoint-ids
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'endpoint-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-configuration 'make-endpoint-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'types))
      (common-lisp:list
       (common-lisp:cons "types"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpc-endpoint-ids))
      (common-lisp:list
       (common-lisp:cons "vpcEndpointIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-configuration))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass export-response common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-export-response-content-type :shape
                         "String" :location "header" :location-name
                         "Content-Type")
                        (content-disposition :initarg :content-disposition
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-export-response-content-disposition
                         :shape "String" :location "header" :location-name
                         "Content-Disposition")
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-export-response-body :shape "Blob"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'export-response 'make-export-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input export-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass flush-stage-authorizers-cache-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-flush-stage-authorizers-cache-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-flush-stage-authorizers-cache-request-stage-name
                         :shape "String" :location "uri" :location-name
                         "stage_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flush-stage-authorizers-cache-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'flush-stage-authorizers-cache-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flush-stage-authorizers-cache-request
                    'make-flush-stage-authorizers-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-authorizers-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass flush-stage-cache-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-flush-stage-cache-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-flush-stage-cache-request-stage-name
                         :shape "String" :location "uri" :location-name
                         "stage_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-flush-stage-cache-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'flush-stage-cache-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'flush-stage-cache-request
                    'make-flush-stage-cache-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          flush-stage-cache-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gateway-response common-lisp:nil
                       ((response-type :initarg :response-type :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor struct-shape-gateway-response-response-type
                         :shape "GatewayResponseType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor struct-shape-gateway-response-status-code
                         :shape "StatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-gateway-response-response-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-gateway-response-response-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-response :initarg :default-response :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-gateway-response-default-response :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gateway-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gateway-response 'make-gateway-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-type))
      (common-lisp:list
       (common-lisp:cons "responseType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-response))
      (common-lisp:list
       (common-lisp:cons "defaultResponse"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-response))
   common-lisp:nil))
(common-lisp:deftype gateway-response-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass gateway-responses common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-gateway-responses-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-gateway-response
                                         common-lisp:null)
                         :accessor struct-shape-gateway-responses-items :shape
                         "ListOfGatewayResponse" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gateway-responses
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-responses
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'gateway-responses 'make-gateway-responses))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-responses))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-responses))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass generate-client-certificate-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-generate-client-certificate-request-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-generate-client-certificate-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-generate-client-certificate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'generate-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'generate-client-certificate-request
                    'make-generate-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          generate-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-account-request common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-account-request 'make-get-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-key-request common-lisp:nil
                       ((api-key :initarg :api-key :initform
                         (common-lisp:error ":apikey is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-api-key-request-api-key :shape
                         "String" :location "uri" :location-name "api_Key")
                        (include-value :initarg :include-value :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-get-api-key-request-include-value :shape
                         "NullableBoolean" :location "querystring"
                         :location-name "includeValue"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-key-request 'make-get-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-api-keys-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-api-keys-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-api-keys-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit")
                        (name-query :initarg :name-query :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-api-keys-request-name-query :shape
                         "String" :location "querystring" :location-name
                         "name")
                        (customer-id :initarg :customer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-api-keys-request-customer-id :shape
                         "String" :location "querystring" :location-name
                         "customerId")
                        (include-values :initarg :include-values :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor
                         struct-shape-get-api-keys-request-include-values
                         :shape "NullableBoolean" :location "querystring"
                         :location-name "includeValues"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-api-keys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-api-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-api-keys-request 'make-get-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-api-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizer-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-authorizer-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizerid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-authorizer-request-authorizer-id
                         :shape "String" :location "uri" :location-name
                         "authorizer_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizer-request 'make-get-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-authorizers-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-authorizers-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-authorizers-request-position :shape
                         "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-authorizers-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-authorizers-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-authorizers-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-authorizers-request 'make-get-authorizers-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-authorizers-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-base-path-mapping-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-base-path-mapping-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (base-path :initarg :base-path :initform
                         (common-lisp:error ":basepath is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-base-path-mapping-request-base-path
                         :shape "String" :location "uri" :location-name
                         "base_path"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-base-path-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mapping-request
                    'make-get-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-base-path-mappings-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-base-path-mappings-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-base-path-mappings-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-base-path-mappings-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-base-path-mappings-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-base-path-mappings-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-base-path-mappings-request
                    'make-get-base-path-mappings-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-base-path-mappings-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-client-certificate-request common-lisp:nil
                       ((client-certificate-id :initarg :client-certificate-id
                         :initform
                         (common-lisp:error ":clientcertificateid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-client-certificate-request-client-certificate-id
                         :shape "String" :location "uri" :location-name
                         "clientcertificate_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-client-certificate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-client-certificate-request
                    'make-get-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-client-certificates-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-client-certificates-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-client-certificates-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-client-certificates-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-client-certificates-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-client-certificates-request
                    'make-get-client-certificates-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-client-certificates-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployment-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-deployment-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-deployment-request-deployment-id
                         :shape "String" :location "uri" :location-name
                         "deployment_id")
                        (embed :initarg :embed :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-get-deployment-request-embed
                         :shape "ListOfString" :location "querystring"
                         :location-name "embed"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployment-request 'make-get-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployments-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-deployments-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-deployments-request-position :shape
                         "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-deployments-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-part-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-part-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-part-id :initarg :documentation-part-id
                         :initform
                         (common-lisp:error ":documentationpartid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-part-request-documentation-part-id
                         :shape "String" :location "uri" :location-name
                         "part_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-documentation-part-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-documentation-part-request
                    'make-get-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-parts-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-parts-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or documentation-part-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-parts-request-type
                         :shape "DocumentationPartType" :location "querystring"
                         :location-name "type")
                        (name-query :initarg :name-query :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-parts-request-name-query
                         :shape "String" :location "querystring" :location-name
                         "name")
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-parts-request-path
                         :shape "String" :location "querystring" :location-name
                         "path")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-parts-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-parts-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit")
                        (location-status :initarg :location-status :initform
                         common-lisp:nil :type
                         (common-lisp:or location-status-type common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-parts-request-location-status
                         :shape "LocationStatusType" :location "querystring"
                         :location-name "locationStatus"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-documentation-parts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-parts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-documentation-parts-request
                    'make-get-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-parts-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-version-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-version-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-version :initarg :documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-version-request-documentation-version
                         :shape "String" :location "uri" :location-name
                         "doc_version"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-documentation-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-documentation-version-request
                    'make-get-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-documentation-versions-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-documentation-versions-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-versions-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-documentation-versions-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-documentation-versions-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-documentation-versions-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-documentation-versions-request
                    'make-get-documentation-versions-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-documentation-versions-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-domain-name-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-name-request 'make-get-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-domain-names-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-domain-names-request-position :shape
                         "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-domain-names-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-domain-names-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-domain-names-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-domain-names-request 'make-get-domain-names-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-domain-names-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-export-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-export-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-export-request-stage-name :shape
                         "String" :location "uri" :location-name "stage_name")
                        (export-type :initarg :export-type :initform
                         (common-lisp:error ":exporttype is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-export-request-export-type :shape
                         "String" :location "uri" :location-name "export_type")
                        (parameters :initarg :parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-get-export-request-parameters
                         :shape "MapOfStringToString" :location "querystring"
                         :location-name common-lisp:nil)
                        (accepts :initarg :accepts :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-export-request-accepts
                         :shape "String" :location "header" :location-name
                         "Accept"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-export-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-export-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-export-request 'make-get-export-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accepts))
      (common-lisp:cons "Accept" aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-export-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-export-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-gateway-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (response-type :initarg :response-type :initform
                         (common-lisp:error ":responsetype is required") :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-gateway-response-request-response-type
                         :shape "GatewayResponseType" :location "uri"
                         :location-name "response_type"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-gateway-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-gateway-response-request
                    'make-get-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-gateway-responses-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-gateway-responses-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-gateway-responses-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-gateway-responses-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-gateway-responses-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-gateway-responses-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-gateway-responses-request
                    'make-get-gateway-responses-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-gateway-responses-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-request 'make-get-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-integration-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-integration-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-get-integration-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-integration-response-request
                    'make-get-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-method-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-request-resource-id :shape
                         "String" :location "uri" :location-name "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-request-http-method :shape
                         "String" :location "uri" :location-name
                         "http_method"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-method-request 'make-get-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-method-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-method-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-get-method-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-method-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-method-response-request
                    'make-get-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-model-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (model-name :initarg :model-name :initform
                         (common-lisp:error ":modelname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-model-request-model-name :shape
                         "String" :location "uri" :location-name "model_name")
                        (flatten :initarg :flatten :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-get-model-request-flatten
                         :shape "Boolean" :location "querystring"
                         :location-name "flatten"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-request 'make-get-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-model-template-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-model-template-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (model-name :initarg :model-name :initform
                         (common-lisp:error ":modelname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-model-template-request-model-name
                         :shape "String" :location "uri" :location-name
                         "model_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-model-template-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-model-template-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-model-template-request
                    'make-get-model-template-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-model-template-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-models-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-models-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-models-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-models-request-limit :shape
                         "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-models-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-models-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-models-request 'make-get-models-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-models-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-models-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-request-validator-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-request-validator-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (request-validator-id :initarg :request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-request-validator-request-request-validator-id
                         :shape "String" :location "uri" :location-name
                         "requestvalidator_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-request-validator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-request-validator-request
                    'make-get-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-request-validators-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-request-validators-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-request-validators-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-request-validators-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-request-validators-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-request-validators-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-request-validators-request
                    'make-get-request-validators-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-request-validators-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-resource-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-resource-request-resource-id :shape
                         "String" :location "uri" :location-name "resource_id")
                        (embed :initarg :embed :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-get-resource-request-embed
                         :shape "ListOfString" :location "querystring"
                         :location-name "embed"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-request 'make-get-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resources-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-resources-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-resources-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-resources-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit")
                        (embed :initarg :embed :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-get-resources-request-embed
                         :shape "ListOfString" :location "querystring"
                         :location-name "embed"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resources-request 'make-get-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-rest-api-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-rest-api-request 'make-get-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-rest-apis-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-rest-apis-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-rest-apis-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-rest-apis-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-rest-apis-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-rest-apis-request 'make-get-rest-apis-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-rest-apis-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-sdk-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-sdk-request-stage-name :shape
                         "String" :location "uri" :location-name "stage_name")
                        (sdk-type :initarg :sdk-type :initform
                         (common-lisp:error ":sdktype is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-sdk-request-sdk-type :shape "String"
                         :location "uri" :location-name "sdk_type")
                        (parameters :initarg :parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-get-sdk-request-parameters
                         :shape "MapOfStringToString" :location "querystring"
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sdk-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'get-sdk-request 'make-get-sdk-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-type-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-sdk-type-request-id :shape "String"
                         :location "uri" :location-name "sdktype_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sdk-type-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-type-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sdk-type-request 'make-get-sdk-type-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-sdk-type-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-sdk-types-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-sdk-types-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-sdk-types-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-sdk-types-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-sdk-types-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-sdk-types-request 'make-get-sdk-types-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-sdk-types-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stage-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-stage-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-stage-request-stage-name :shape
                         "String" :location "uri" :location-name "stage_name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stage-request 'make-get-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-stages-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-stages-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-stages-request-deployment-id :shape
                         "String" :location "querystring" :location-name
                         "deploymentId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-stages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-stages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-stages-request 'make-get-stages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-stages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-stages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-tags-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-tags-request-resource-arn :shape
                         "String" :location "uri" :location-name
                         "resource_arn")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-tags-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-tags-request-limit :shape
                         "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-tags-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-tags-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-tags-request 'make-get-tags-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-tags-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-tags-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-key-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-plan-key-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId")
                        (key-id :initarg :key-id :initform
                         (common-lisp:error ":keyid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-plan-key-request-key-id :shape
                         "String" :location "uri" :location-name "keyId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-plan-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-key-request
                    'make-get-usage-plan-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-keys-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-plan-keys-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-usage-plan-keys-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-get-usage-plan-keys-request-limit :shape
                         "NullableInteger" :location "querystring"
                         :location-name "limit")
                        (name-query :initarg :name-query :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-plan-keys-request-name-query
                         :shape "String" :location "querystring" :location-name
                         "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-plan-keys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-keys-request
                    'make-get-usage-plan-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-keys-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plan-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-plan-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-plan-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-plan-request 'make-get-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-plans-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-get-usage-plans-request-position :shape
                         "String" :location "querystring" :location-name
                         "position")
                        (key-id :initarg :key-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-usage-plans-request-key-id
                         :shape "String" :location "querystring" :location-name
                         "keyId")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-usage-plans-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-plans-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-plans-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-plans-request 'make-get-usage-plans-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-usage-plans-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-usage-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-request-usage-plan-id :shape
                         "String" :location "uri" :location-name "usageplanId")
                        (key-id :initarg :key-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-usage-request-key-id :shape
                         "String" :location "querystring" :location-name
                         "keyId")
                        (start-date :initarg :start-date :initform
                         (common-lisp:error ":startdate is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-request-start-date :shape
                         "String" :location "querystring" :location-name
                         "startDate")
                        (end-date :initarg :end-date :initform
                         (common-lisp:error ":enddate is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-usage-request-end-date :shape
                         "String" :location "querystring" :location-name
                         "endDate")
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-usage-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-usage-request-limit :shape
                         "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-usage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-usage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-usage-request 'make-get-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-get-vpc-link-request-vpc-link-id :shape
                         "String" :location "uri" :location-name "vpclink_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-link-request 'make-get-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-vpc-links-request common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-get-vpc-links-request-position
                         :shape "String" :location "querystring" :location-name
                         "position")
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor struct-shape-get-vpc-links-request-limit
                         :shape "NullableInteger" :location "querystring"
                         :location-name "limit"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-vpc-links-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-vpc-links-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-vpc-links-request 'make-get-vpc-links-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-vpc-links-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass import-api-keys-request common-lisp:nil
                       ((body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-import-api-keys-request-body :shape
                         "Blob" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (format :initarg :format :initform
                         (common-lisp:error ":format is required") :type
                         (common-lisp:or api-keys-format common-lisp:null)
                         :accessor struct-shape-import-api-keys-request-format
                         :shape "ApiKeysFormat" :location "querystring"
                         :location-name "format")
                        (fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-import-api-keys-request-fail-on-warnings
                         :shape "Boolean" :location "querystring"
                         :location-name "failonwarnings"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-api-keys-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-api-keys-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-api-keys-request 'make-import-api-keys-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          import-api-keys-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass import-documentation-parts-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-import-documentation-parts-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or put-mode common-lisp:null) :accessor
                         struct-shape-import-documentation-parts-request-mode
                         :shape "PutMode" :location "querystring"
                         :location-name "mode")
                        (fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-import-documentation-parts-request-fail-on-warnings
                         :shape "Boolean" :location "querystring"
                         :location-name "failonwarnings")
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-import-documentation-parts-request-body
                         :shape "Blob" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-documentation-parts-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'import-documentation-parts-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-documentation-parts-request
                    'make-import-documentation-parts-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          import-documentation-parts-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass import-rest-api-request common-lisp:nil
                       ((fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-import-rest-api-request-fail-on-warnings
                         :shape "Boolean" :location "querystring"
                         :location-name "failonwarnings")
                        (parameters :initarg :parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-import-rest-api-request-parameters :shape
                         "MapOfStringToString" :location "querystring"
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-import-rest-api-request-body :shape
                         "Blob" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-import-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'import-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'import-rest-api-request 'make-import-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          import-rest-api-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype integer () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass integration common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor struct-shape-integration-type :shape
                         "IntegrationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-http-method :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (uri :initarg :uri :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-uri :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor struct-shape-integration-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-connection-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (credentials :initarg :credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-credentials :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-integration-request-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-integration-request-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-passthrough-behavior :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content-handling :initarg :content-handling :initform
                         common-lisp:nil :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor struct-shape-integration-content-handling
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-integration-timeout-in-millis :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-namespace :initarg :cache-namespace :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-cache-namespace :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-key-parameters :initarg :cache-key-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-integration-cache-key-parameters :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (integration-responses :initarg :integration-responses
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-integration-response
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-integration-responses :shape
                         "MapOfIntegrationResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-integration-tls-config :shape "TlsConfig"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integration
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'integration 'make-integration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-responses))
      (common-lisp:list
       (common-lisp:cons "integrationResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass integration-response common-lisp:nil
                       ((status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-integration-response-status-code :shape
                         "StatusCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (selection-pattern :initarg :selection-pattern
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-integration-response-selection-pattern
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-response-response-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-response-response-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-handling :initarg :content-handling :initform
                         common-lisp:nil :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-integration-response-content-handling
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'integration-response 'make-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input integration-response))
   common-lisp:nil))
(common-lisp:deftype integration-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader limit-exceeded-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-retry-after-seconds
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:deftype list-of-arns ()
   '(trivial-types:proper-list provider-arn))
 (common-lisp:defun make-list-of-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list provider-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-key () '(trivial-types:proper-list api-key))
 (common-lisp:defun make-list-of-api-key
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-api-stage ()
   '(trivial-types:proper-list api-stage))
 (common-lisp:defun make-list-of-api-stage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list api-stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-authorizer ()
   '(trivial-types:proper-list authorizer))
 (common-lisp:defun make-list-of-authorizer
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list authorizer))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-base-path-mapping ()
   '(trivial-types:proper-list base-path-mapping))
 (common-lisp:defun make-list-of-base-path-mapping
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list base-path-mapping))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-client-certificate ()
   '(trivial-types:proper-list client-certificate))
 (common-lisp:defun make-list-of-client-certificate
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list client-certificate))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-deployment ()
   '(trivial-types:proper-list deployment))
 (common-lisp:defun make-list-of-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-part ()
   '(trivial-types:proper-list documentation-part))
 (common-lisp:defun make-list-of-documentation-part
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-part))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-documentation-version ()
   '(trivial-types:proper-list documentation-version))
 (common-lisp:defun make-list-of-documentation-version
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list documentation-version))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-domain-name ()
   '(trivial-types:proper-list domain-name))
 (common-lisp:defun make-list-of-domain-name
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list domain-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-endpoint-type ()
   '(trivial-types:proper-list endpoint-type))
 (common-lisp:defun make-list-of-endpoint-type
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list endpoint-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-gateway-response ()
   '(trivial-types:proper-list gateway-response))
 (common-lisp:defun make-list-of-gateway-response
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-response))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-long () '(trivial-types:proper-list long))
 (common-lisp:defun make-list-of-long
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-model () '(trivial-types:proper-list model))
 (common-lisp:defun make-list-of-model
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-patch-operation ()
   '(trivial-types:proper-list patch-operation))
 (common-lisp:defun make-list-of-patch-operation
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list patch-operation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-request-validator ()
   '(trivial-types:proper-list request-validator))
 (common-lisp:defun make-list-of-request-validator
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list request-validator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-resource ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun make-list-of-resource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-rest-api ()
   '(trivial-types:proper-list rest-api))
 (common-lisp:defun make-list-of-rest-api
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rest-api))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-configuration-property ()
   '(trivial-types:proper-list sdk-configuration-property))
 (common-lisp:defun make-list-of-sdk-configuration-property
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            sdk-configuration-property))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-sdk-type ()
   '(trivial-types:proper-list sdk-type))
 (common-lisp:defun make-list-of-sdk-type
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list sdk-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage () '(trivial-types:proper-list stage))
 (common-lisp:defun make-list-of-stage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-stage-keys ()
   '(trivial-types:proper-list stage-key))
 (common-lisp:defun make-list-of-stage-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list stage-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-string () '(trivial-types:proper-list string))
 (common-lisp:defun make-list-of-string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage ()
   '(trivial-types:proper-list list-of-long))
 (common-lisp:defun make-list-of-usage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-of-long))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan ()
   '(trivial-types:proper-list usage-plan))
 (common-lisp:defun make-list-of-usage-plan
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-usage-plan-key ()
   '(trivial-types:proper-list usage-plan-key))
 (common-lisp:defun make-list-of-usage-plan-key
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list usage-plan-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype list-of-vpc-link ()
   '(trivial-types:proper-list vpc-link))
 (common-lisp:defun make-list-of-vpc-link
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vpc-link))
   aws-sdk/generator/shape::members))
(common-lisp:deftype location-status-type () 'common-lisp:string)
(common-lisp:deftype long () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype map-of-api-stage-throttle-settings ()
   'common-lisp:hash-table)
 (common-lisp:defun make-map-of-api-stage-throttle-settings
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-integration-response () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-integration-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-key-usages () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-key-usages
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-method (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-response () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-method-response
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-settings () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-method-settings
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-method-snapshot () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-method-snapshot
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-boolean () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-string-to-boolean
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-list () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-string-to-list
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype map-of-string-to-string () 'common-lisp:hash-table)
 (common-lisp:defun make-map-of-string-to-string
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass method common-lisp:nil
                       ((http-method :initarg :http-method :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-http-method :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-authorization-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-authorizer-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or nullable-boolean common-lisp:null)
                         :accessor struct-shape-method-api-key-required :shape
                         "NullableBoolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-validator-id :initarg :request-validator-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-request-validator-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-operation-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor struct-shape-method-request-parameters
                         :shape "MapOfStringToBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-method-request-models :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (method-responses :initarg :method-responses :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-method-response
                                         common-lisp:null)
                         :accessor struct-shape-method-method-responses :shape
                         "MapOfMethodResponse" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (method-integration :initarg :method-integration
                         :initform common-lisp:nil :type
                         (common-lisp:or integration common-lisp:null)
                         :accessor struct-shape-method-method-integration
                         :shape "Integration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-method-authorization-scopes
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-method
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'method
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'method 'make-method))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'http-method))
      (common-lisp:list
       (common-lisp:cons "httpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-responses))
      (common-lisp:list
       (common-lisp:cons "methodResponses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-integration))
      (common-lisp:list
       (common-lisp:cons "methodIntegration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-response common-lisp:nil
                       ((status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor struct-shape-method-response-status-code
                         :shape "StatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-method-response-response-parameters
                         :shape "MapOfStringToBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-method-response-response-models
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-method-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'method-response 'make-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-setting common-lisp:nil
                       ((metrics-enabled :initarg :metrics-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-setting-metrics-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (logging-level :initarg :logging-level :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-setting-logging-level :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-trace-enabled :initarg :data-trace-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-setting-data-trace-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (throttling-burst-limit :initarg
                         :throttling-burst-limit :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-method-setting-throttling-burst-limit
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throttling-rate-limit :initarg :throttling-rate-limit
                         :initform common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-method-setting-throttling-rate-limit
                         :shape "Double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (caching-enabled :initarg :caching-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-setting-caching-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-ttl-in-seconds :initarg :cache-ttl-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-method-setting-cache-ttl-in-seconds
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-data-encrypted :initarg :cache-data-encrypted
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-setting-cache-data-encrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (require-authorization-for-cache-control :initarg
                         :require-authorization-for-cache-control :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-setting-require-authorization-for-cache-control
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (unauthorized-cache-control-header-strategy :initarg
                         :unauthorized-cache-control-header-strategy :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          unauthorized-cache-control-header-strategy
                          common-lisp:null)
                         :accessor
                         struct-shape-method-setting-unauthorized-cache-control-header-strategy
                         :shape "UnauthorizedCacheControlHeaderStrategy"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-method-setting
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'method-setting
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'method-setting 'make-method-setting))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-setting))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics-enabled))
      (common-lisp:list
       (common-lisp:cons "metricsEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'logging-level))
      (common-lisp:list
       (common-lisp:cons "loggingLevel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-trace-enabled))
      (common-lisp:list
       (common-lisp:cons "dataTraceEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-burst-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingBurstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'throttling-rate-limit))
      (common-lisp:list
       (common-lisp:cons "throttlingRateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caching-enabled))
      (common-lisp:list
       (common-lisp:cons "cachingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-ttl-in-seconds))
      (common-lisp:list
       (common-lisp:cons "cacheTtlInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-data-encrypted))
      (common-lisp:list
       (common-lisp:cons "cacheDataEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'require-authorization-for-cache-control))
      (common-lisp:list
       (common-lisp:cons "requireAuthorizationForCacheControl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'unauthorized-cache-control-header-strategy))
      (common-lisp:list
       (common-lisp:cons "unauthorizedCacheControlHeaderStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-setting))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass method-snapshot common-lisp:nil
                       ((authorization-type :initarg :authorization-type
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-method-snapshot-authorization-type :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-method-snapshot-api-key-required :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-method-snapshot
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'method-snapshot
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'method-snapshot 'make-method-snapshot))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input method-snapshot))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input method-snapshot))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass model common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-model-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-model-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-model-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schema :initarg :schema :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-model-schema :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-model-content-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:list
       (common-lisp:cons "contentType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass models common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-models-position :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-model common-lisp:null)
                         :accessor struct-shape-models-items :shape
                         "ListOfModel" :location common-lisp:nil :location-name
                         "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-models
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'models
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'models 'make-models))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input models))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input models))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication common-lisp:nil
                       ((truststore-uri :initarg :truststore-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-mutual-tls-authentication-truststore-uri
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (truststore-version :initarg :truststore-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-mutual-tls-authentication-truststore-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (truststore-warnings :initarg :truststore-warnings
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-mutual-tls-authentication-truststore-warnings
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mutual-tls-authentication
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mutual-tls-authentication
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication
                    'make-mutual-tls-authentication))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-warnings))
      (common-lisp:list
       (common-lisp:cons "truststoreWarnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mutual-tls-authentication-input common-lisp:nil
                       ((truststore-uri :initarg :truststore-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-mutual-tls-authentication-input-truststore-uri
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (truststore-version :initarg :truststore-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-mutual-tls-authentication-input-truststore-version
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mutual-tls-authentication-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'mutual-tls-authentication-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'mutual-tls-authentication-input
                    'make-mutual-tls-authentication-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-uri))
      (common-lisp:list
       (common-lisp:cons "truststoreUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'truststore-version))
      (common-lisp:list
       (common-lisp:cons "truststoreVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          mutual-tls-authentication-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:deftype nullable-boolean () 'common-lisp:boolean)
(common-lisp:deftype nullable-integer () 'common-lisp:integer)
(common-lisp:deftype op () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass patch-operation common-lisp:nil
                       ((op :initarg :op :initform common-lisp:nil :type
                         (common-lisp:or op common-lisp:null) :accessor
                         struct-shape-patch-operation-op :shape "Op" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-patch-operation-path :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-patch-operation-value :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (from :initarg :from :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-patch-operation-from :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-patch-operation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'patch-operation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'patch-operation 'make-patch-operation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input patch-operation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'op))
      (common-lisp:list
       (common-lisp:cons "op"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'from))
      (common-lisp:list
       (common-lisp:cons "from"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input patch-operation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype path-to-map-of-method-snapshot ()
   'common-lisp:hash-table)
 (common-lisp:defun make-path-to-map-of-method-snapshot
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-gateway-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-gateway-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (response-type :initarg :response-type :initform
                         (common-lisp:error ":responsetype is required") :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-gateway-response-request-response-type
                         :shape "GatewayResponseType" :location "uri"
                         :location-name "response_type")
                        (status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-put-gateway-response-request-status-code
                         :shape "StatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-gateway-response-request-response-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-gateway-response-request-response-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-gateway-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-gateway-response-request
                    'make-put-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-integration-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (type :initarg :type :initform
                         (common-lisp:error ":type is required") :type
                         (common-lisp:or integration-type common-lisp:null)
                         :accessor struct-shape-put-integration-request-type
                         :shape "IntegrationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (integration-http-method :initarg
                         :integration-http-method :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-integration-http-method
                         :shape "String" :location common-lisp:nil
                         :location-name "httpMethod")
                        (uri :initarg :uri :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-uri :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (connection-type :initarg :connection-type :initform
                         common-lisp:nil :type
                         (common-lisp:or connection-type common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-connection-type
                         :shape "ConnectionType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (connection-id :initarg :connection-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-connection-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (credentials :initarg :credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-credentials
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-request-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-templates :initarg :request-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-request-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (passthrough-behavior :initarg :passthrough-behavior
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-passthrough-behavior
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-namespace :initarg :cache-namespace :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-request-cache-namespace
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-key-parameters :initarg :cache-key-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-cache-key-parameters
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-handling :initarg :content-handling :initform
                         common-lisp:nil :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-content-handling
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (timeout-in-millis :initarg :timeout-in-millis
                         :initform common-lisp:nil :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-put-integration-request-timeout-in-millis
                         :shape "NullableInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tls-config :initarg :tls-config :initform
                         common-lisp:nil :type
                         (common-lisp:or tls-config common-lisp:null) :accessor
                         struct-shape-put-integration-request-tls-config :shape
                         "TlsConfig" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-integration-request 'make-put-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'integration-http-method))
      (common-lisp:list
       (common-lisp:cons "integrationHttpMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'uri))
      (common-lisp:list
       (common-lisp:cons "uri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-type))
      (common-lisp:list
       (common-lisp:cons "connectionType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'connection-id))
      (common-lisp:list
       (common-lisp:cons "connectionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'credentials))
      (common-lisp:list
       (common-lisp:cons "credentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-templates))
      (common-lisp:list
       (common-lisp:cons "requestTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'passthrough-behavior))
      (common-lisp:list
       (common-lisp:cons "passthroughBehavior"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-namespace))
      (common-lisp:list
       (common-lisp:cons "cacheNamespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-key-parameters))
      (common-lisp:list
       (common-lisp:cons "cacheKeyParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-millis))
      (common-lisp:list
       (common-lisp:cons "timeoutInMillis"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tls-config))
      (common-lisp:list
       (common-lisp:cons "tlsConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-integration-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-put-integration-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code")
                        (selection-pattern :initarg :selection-pattern
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-integration-response-request-selection-pattern
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-response-request-response-parameters
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (response-templates :initarg :response-templates
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-response-request-response-templates
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-handling :initarg :content-handling :initform
                         common-lisp:nil :type
                         (common-lisp:or content-handling-strategy
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-integration-response-request-content-handling
                         :shape "ContentHandlingStrategy" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-integration-response-request
                    'make-put-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'selection-pattern))
      (common-lisp:list
       (common-lisp:cons "selectionPattern"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-templates))
      (common-lisp:list
       (common-lisp:cons "responseTemplates"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-handling))
      (common-lisp:list
       (common-lisp:cons "contentHandling"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-method-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-resource-id :shape
                         "String" :location "uri" :location-name "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-http-method :shape
                         "String" :location "uri" :location-name "http_method")
                        (authorization-type :initarg :authorization-type
                         :initform
                         (common-lisp:error ":authorizationtype is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-put-method-request-authorization-type
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorizer-id :initarg :authorizer-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-authorizer-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-key-required :initarg :api-key-required :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-put-method-request-api-key-required
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operation-name :initarg :operation-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-operation-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (request-parameters :initarg :request-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-method-request-request-parameters
                         :shape "MapOfStringToBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (request-models :initarg :request-models :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-method-request-request-models :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (request-validator-id :initarg :request-validator-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-request-request-validator-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorization-scopes :initarg :authorization-scopes
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor
                         struct-shape-put-method-request-authorization-scopes
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-method-request 'make-put-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization-type))
      (common-lisp:list
       (common-lisp:cons "authorizationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorizer-id))
      (common-lisp:list
       (common-lisp:cons "authorizerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-required))
      (common-lisp:list
       (common-lisp:cons "apiKeyRequired"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operation-name))
      (common-lisp:list
       (common-lisp:cons "operationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-parameters))
      (common-lisp:list
       (common-lisp:cons "requestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-models))
      (common-lisp:list
       (common-lisp:cons "requestModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'request-validator-id))
      (common-lisp:list
       (common-lisp:cons "requestValidatorId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'authorization-scopes))
      (common-lisp:list
       (common-lisp:cons "authorizationScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-method-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-method-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-put-method-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code")
                        (response-parameters :initarg :response-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-boolean
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-method-response-request-response-parameters
                         :shape "MapOfStringToBoolean" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (response-models :initarg :response-models :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-method-response-request-response-models
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-method-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-method-response-request
                    'make-put-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-parameters))
      (common-lisp:list
       (common-lisp:cons "responseParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'response-models))
      (common-lisp:list
       (common-lisp:cons "responseModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-method-response-request))
   common-lisp:nil))
(common-lisp:deftype put-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass put-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-put-rest-api-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (mode :initarg :mode :initform common-lisp:nil :type
                         (common-lisp:or put-mode common-lisp:null) :accessor
                         struct-shape-put-rest-api-request-mode :shape
                         "PutMode" :location "querystring" :location-name
                         "mode")
                        (fail-on-warnings :initarg :fail-on-warnings :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-put-rest-api-request-fail-on-warnings
                         :shape "Boolean" :location "querystring"
                         :location-name "failonwarnings")
                        (parameters :initarg :parameters :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-put-rest-api-request-parameters
                         :shape "MapOfStringToString" :location "querystring"
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-put-rest-api-request-body :shape "Blob"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'put-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-rest-api-request 'make-put-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input put-rest-api-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype quota-period-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass quota-settings common-lisp:nil
                       ((limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-quota-settings-limit :shape "Integer"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (offset :initarg :offset :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor struct-shape-quota-settings-offset :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (period :initarg :period :initform common-lisp:nil
                         :type
                         (common-lisp:or quota-period-type common-lisp:null)
                         :accessor struct-shape-quota-settings-period :shape
                         "QuotaPeriodType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-quota-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'quota-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'quota-settings 'make-quota-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input quota-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'offset))
      (common-lisp:list
       (common-lisp:cons "offset"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input quota-settings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass request-validator common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-request-validator-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-request-validator-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (validate-request-body :initarg :validate-request-body
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-request-validator-validate-request-body
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (validate-request-parameters :initarg
                         :validate-request-parameters :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-request-validator-validate-request-parameters
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-request-validator
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'request-validator
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'request-validator 'make-request-validator))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validator))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-body))
      (common-lisp:list
       (common-lisp:cons "validateRequestBody"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'validate-request-parameters))
      (common-lisp:list
       (common-lisp:cons "validateRequestParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validator))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass request-validators common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-request-validators-position
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-request-validator
                                         common-lisp:null)
                         :accessor struct-shape-request-validators-items :shape
                         "ListOfRequestValidator" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-request-validators
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'request-validators
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'request-validators 'make-request-validators))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input request-validators))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input request-validators))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (parent-id :initarg :parent-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-parent-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (path-part :initarg :path-part :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-path-part :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-resource-path :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (resource-methods :initarg :resource-methods :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-method common-lisp:null)
                         :accessor struct-shape-resource-resource-methods
                         :shape "MapOfMethod" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'parent-id))
      (common-lisp:list
       (common-lisp:cons "parentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path-part))
      (common-lisp:list
       (common-lisp:cons "pathPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-methods))
      (common-lisp:list
       (common-lisp:cons "resourceMethods"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resources common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-resources-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-resource common-lisp:null)
                         :accessor struct-shape-resources-items :shape
                         "ListOfResource" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resources
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resources
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resources 'make-resources))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resources))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resources))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rest-api common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-rest-api-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-rest-api-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-rest-api-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-rest-api-created-date :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (version :initarg :version :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-rest-api-version :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (warnings :initarg :warnings :initform common-lisp:nil
                         :type (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-rest-api-warnings :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (binary-media-types :initarg :binary-media-types
                         :initform common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-rest-api-binary-media-types
                         :shape "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (minimum-compression-size :initarg
                         :minimum-compression-size :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-integer common-lisp:null)
                         :accessor
                         struct-shape-rest-api-minimum-compression-size :shape
                         "NullableInteger" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (api-key-source :initarg :api-key-source :initform
                         common-lisp:nil :type
                         (common-lisp:or api-key-source-type common-lisp:null)
                         :accessor struct-shape-rest-api-api-key-source :shape
                         "ApiKeySourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-configuration :initarg
                         :endpoint-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or endpoint-configuration
                                         common-lisp:null)
                         :accessor struct-shape-rest-api-endpoint-configuration
                         :shape "EndpointConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-rest-api-policy :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-rest-api-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disable-execute-api-endpoint :initarg
                         :disable-execute-api-endpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-rest-api-disable-execute-api-endpoint
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (root-resource-id :initarg :root-resource-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-rest-api-root-resource-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rest-api
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rest-api
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rest-api 'make-rest-api))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-api))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'version))
      (common-lisp:list
       (common-lisp:cons "version"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'warnings))
      (common-lisp:list
       (common-lisp:cons "warnings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'binary-media-types))
      (common-lisp:list
       (common-lisp:cons "binaryMediaTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'minimum-compression-size))
      (common-lisp:list
       (common-lisp:cons "minimumCompressionSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-key-source))
      (common-lisp:list
       (common-lisp:cons "apiKeySource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-configuration))
      (common-lisp:list
       (common-lisp:cons "endpointConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disable-execute-api-endpoint))
      (common-lisp:list
       (common-lisp:cons "disableExecuteApiEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-resource-id))
      (common-lisp:list
       (common-lisp:cons "rootResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-api))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rest-apis common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-rest-apis-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-rest-api common-lisp:null)
                         :accessor struct-shape-rest-apis-items :shape
                         "ListOfRestApi" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rest-apis
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rest-apis
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rest-apis 'make-rest-apis))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rest-apis))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rest-apis))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-configuration-property common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-configuration-property-name :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (friendly-name :initarg :friendly-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-configuration-property-friendly-name
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-configuration-property-description
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (required :initarg :required :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-sdk-configuration-property-required
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-value :initarg :default-value :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-configuration-property-default-value
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sdk-configuration-property
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-configuration-property
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'sdk-configuration-property
                    'make-sdk-configuration-property))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'required))
      (common-lisp:list
       (common-lisp:cons "required"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'default-value))
      (common-lisp:list
       (common-lisp:cons "defaultValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          sdk-configuration-property))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-response common-lisp:nil
                       ((content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-response-content-type :shape "String"
                         :location "header" :location-name "Content-Type")
                        (content-disposition :initarg :content-disposition
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-response-content-disposition :shape
                         "String" :location "header" :location-name
                         "Content-Disposition")
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or blob common-lisp:null) :accessor
                         struct-shape-sdk-response-body :shape "Blob" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sdk-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sdk-response 'make-sdk-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-disposition))
      (common-lisp:cons "Content-Disposition"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input sdk-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass sdk-type common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-type-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (friendly-name :initarg :friendly-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-type-friendly-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sdk-type-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (configuration-properties :initarg
                         :configuration-properties :initform common-lisp:nil
                         :type
                         (common-lisp:or list-of-sdk-configuration-property
                                         common-lisp:null)
                         :accessor
                         struct-shape-sdk-type-configuration-properties :shape
                         "ListOfSdkConfigurationProperty" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sdk-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sdk-type 'make-sdk-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'friendly-name))
      (common-lisp:list
       (common-lisp:cons "friendlyName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-properties))
      (common-lisp:list
       (common-lisp:cons "configurationProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sdk-types common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-sdk-types-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-sdk-type common-lisp:null)
                         :accessor struct-shape-sdk-types-items :shape
                         "ListOfSdkType" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sdk-types
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sdk-types
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sdk-types 'make-sdk-types))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sdk-types))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sdk-types))
   common-lisp:nil))
(common-lisp:deftype security-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader
       service-unavailable-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-retry-after-seconds
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass stage common-lisp:nil
                       ((deployment-id :initarg :deployment-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-deployment-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-client-certificate-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-stage-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-cluster-enabled :initarg :cache-cluster-enabled
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-stage-cache-cluster-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-cluster-size :initarg :cache-cluster-size
                         :initform common-lisp:nil :type
                         (common-lisp:or cache-cluster-size common-lisp:null)
                         :accessor struct-shape-stage-cache-cluster-size :shape
                         "CacheClusterSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-cluster-status :initarg :cache-cluster-status
                         :initform common-lisp:nil :type
                         (common-lisp:or cache-cluster-status common-lisp:null)
                         :accessor struct-shape-stage-cache-cluster-status
                         :shape "CacheClusterStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (method-settings :initarg :method-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-method-settings
                                         common-lisp:null)
                         :accessor struct-shape-stage-method-settings :shape
                         "MapOfMethodSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (variables :initarg :variables :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-stage-variables :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (documentation-version :initarg :documentation-version
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-documentation-version :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (access-log-settings :initarg :access-log-settings
                         :initform common-lisp:nil :type
                         (common-lisp:or access-log-settings common-lisp:null)
                         :accessor struct-shape-stage-access-log-settings
                         :shape "AccessLogSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (canary-settings :initarg :canary-settings :initform
                         common-lisp:nil :type
                         (common-lisp:or canary-settings common-lisp:null)
                         :accessor struct-shape-stage-canary-settings :shape
                         "CanarySettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tracing-enabled :initarg :tracing-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-stage-tracing-enabled :shape "Boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (web-acl-arn :initarg :web-acl-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-web-acl-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-stage-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-stage-created-date :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-updated-date :initarg :last-updated-date
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-stage-last-updated-date :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stage 'make-stage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-id))
      (common-lisp:list
       (common-lisp:cons "deploymentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-enabled))
      (common-lisp:list
       (common-lisp:cons "cacheClusterEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-cluster-size))
      (common-lisp:list
       (common-lisp:cons "cacheClusterSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-cluster-status))
      (common-lisp:list
       (common-lisp:cons "cacheClusterStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'method-settings))
      (common-lisp:list
       (common-lisp:cons "methodSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'variables))
      (common-lisp:list
       (common-lisp:cons "variables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'documentation-version))
      (common-lisp:list
       (common-lisp:cons "documentationVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-log-settings))
      (common-lisp:list
       (common-lisp:cons "accessLogSettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'canary-settings))
      (common-lisp:list
       (common-lisp:cons "canarySettings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tracing-enabled))
      (common-lisp:list
       (common-lisp:cons "tracingEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'web-acl-arn))
      (common-lisp:list
       (common-lisp:cons "webAclArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "createdDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-updated-date))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stage-key common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-key-rest-api-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (stage-name :initarg :stage-name :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-stage-key-stage-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stage-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stage-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stage-key 'make-stage-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stage-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rest-api-id))
      (common-lisp:list
       (common-lisp:cons "restApiId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-name))
      (common-lisp:list
       (common-lisp:cons "stageName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stage-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass stages common-lisp:nil
                       ((item :initarg :item :initform common-lisp:nil :type
                         (common-lisp:or list-of-stage common-lisp:null)
                         :accessor struct-shape-stages-item :shape
                         "ListOfStage" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stages
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stages
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'stages 'make-stages))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stages))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item))
      (common-lisp:list
       (common-lisp:cons "item"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stages))
   common-lisp:nil))
(common-lisp:deftype status-code () 'common-lisp:string)
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "String" :location "uri" :location-name
                         "resource_arn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tags common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-tags-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tags (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tags
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tags 'make-tags))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass template common-lisp:nil
                       ((value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-template-value :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-template
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'template
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'template 'make-template))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input template))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input template))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-authorizer-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizerid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-request-authorizer-id
                         :shape "String" :location "uri" :location-name
                         "authorizer_id")
                        (headers :initarg :headers :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-request-headers
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (multi-value-headers :initarg :multi-value-headers
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-request-multi-value-headers
                         :shape "MapOfStringToList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (path-with-query-string :initarg
                         :path-with-query-string :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-request-path-with-query-string
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-request-body
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-request-stage-variables
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (additional-context :initarg :additional-context
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-request-additional-context
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-invoke-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-invoke-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-request
                    'make-test-invoke-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'additional-context))
      (common-lisp:list
       (common-lisp:cons "additionalContext"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-authorizer-response common-lisp:nil
                       ((client-status :initarg :client-status :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-response-client-status
                         :shape "Integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log :initarg :log :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-response-log
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (latency :initarg :latency :initform common-lisp:nil
                         :type (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-response-latency
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (principal-id :initarg :principal-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-authorizer-response-principal-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (policy :initarg :policy :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-response-policy
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-response-authorization
                         :shape "MapOfStringToList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (claims :initarg :claims :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-authorizer-response-claims
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-invoke-authorizer-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'test-invoke-authorizer-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-invoke-authorizer-response
                    'make-test-invoke-authorizer-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-status))
      (common-lisp:list
       (common-lisp:cons "clientStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'principal-id))
      (common-lisp:list
       (common-lisp:cons "principalId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'policy))
      (common-lisp:list
       (common-lisp:cons "policy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'claims))
      (common-lisp:list
       (common-lisp:cons "claims"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-authorizer-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-method-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (path-with-query-string :initarg
                         :path-with-query-string :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-request-path-with-query-string
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-request-body :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (headers :initarg :headers :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-request-headers :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (multi-value-headers :initarg :multi-value-headers
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-request-multi-value-headers
                         :shape "MapOfStringToList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-certificate-id :initarg :client-certificate-id
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-request-client-certificate-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stage-variables :initarg :stage-variables :initform
                         common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-request-stage-variables
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-invoke-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-invoke-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-request
                    'make-test-invoke-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'path-with-query-string))
      (common-lisp:list
       (common-lisp:cons "pathWithQueryString"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-certificate-id))
      (common-lisp:list
       (common-lisp:cons "clientCertificateId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stage-variables))
      (common-lisp:list
       (common-lisp:cons "stageVariables"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass test-invoke-method-response common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or integer common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-response-status :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (body :initarg :body :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-response-body :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (headers :initarg :headers :initform common-lisp:nil
                         :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-response-headers
                         :shape "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (multi-value-headers :initarg :multi-value-headers
                         :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-test-invoke-method-response-multi-value-headers
                         :shape "MapOfStringToList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log :initarg :log :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-test-invoke-method-response-log :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (latency :initarg :latency :initform common-lisp:nil
                         :type (common-lisp:or long common-lisp:null) :accessor
                         struct-shape-test-invoke-method-response-latency
                         :shape "Long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-test-invoke-method-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'test-invoke-method-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'test-invoke-method-response
                    'make-test-invoke-method-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headers))
      (common-lisp:list
       (common-lisp:cons "headers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'multi-value-headers))
      (common-lisp:list
       (common-lisp:cons "multiValueHeaders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log))
      (common-lisp:list
       (common-lisp:cons "log"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latency))
      (common-lisp:list
       (common-lisp:cons "latency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          test-invoke-method-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass throttle-settings common-lisp:nil
                       ((burst-limit :initarg :burst-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or integer common-lisp:null) :accessor
                         struct-shape-throttle-settings-burst-limit :shape
                         "Integer" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rate-limit :initarg :rate-limit :initform
                         common-lisp:nil :type
                         (common-lisp:or double common-lisp:null) :accessor
                         struct-shape-throttle-settings-rate-limit :shape
                         "Double" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-throttle-settings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'throttle-settings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'throttle-settings 'make-throttle-settings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input throttle-settings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'burst-limit))
      (common-lisp:list
       (common-lisp:cons "burstLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rate-limit))
      (common-lisp:list
       (common-lisp:cons "rateLimit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input throttle-settings))
   common-lisp:nil))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tls-config common-lisp:nil
                       ((insecure-skip-verification :initarg
                         :insecure-skip-verification :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-tls-config-insecure-skip-verification
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tls-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tls-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tls-config 'make-tls-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tls-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'insecure-skip-verification))
      (common-lisp:list
       (common-lisp:cons "insecureSkipVerification"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tls-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (apigateway-error)
     ((retry-after-seconds :initarg :retry-after-seconds :initform
       common-lisp:nil :reader too-many-requests-exception-retry-after-seconds)
      (message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-retry-after-seconds
                    'too-many-requests-exception-message)))
(common-lisp:deftype unauthorized-cache-control-header-strategy ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (apigateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "String" :location "uri" :location-name
                         "resource_arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "ListOfString" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-account-request common-lisp:nil
                       ((patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-account-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-account-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-account-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-account-request 'make-update-account-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-account-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-api-key-request common-lisp:nil
                       ((api-key :initarg :api-key :initform
                         (common-lisp:error ":apikey is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-api-key-request-api-key :shape
                         "String" :location "uri" :location-name "api_Key")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-api-key-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-api-key-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-api-key-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-api-key-request 'make-update-api-key-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-api-key-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-authorizer-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-authorizer-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (authorizer-id :initarg :authorizer-id :initform
                         (common-lisp:error ":authorizerid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-authorizer-request-authorizer-id
                         :shape "String" :location "uri" :location-name
                         "authorizer_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-authorizer-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-authorizer-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-authorizer-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-authorizer-request
                    'make-update-authorizer-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-authorizer-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-base-path-mapping-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-base-path-mapping-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (base-path :initarg :base-path :initform
                         (common-lisp:error ":basepath is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-base-path-mapping-request-base-path
                         :shape "String" :location "uri" :location-name
                         "base_path")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-base-path-mapping-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-base-path-mapping-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-base-path-mapping-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-base-path-mapping-request
                    'make-update-base-path-mapping-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-base-path-mapping-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-client-certificate-request common-lisp:nil
                       ((client-certificate-id :initarg :client-certificate-id
                         :initform
                         (common-lisp:error ":clientcertificateid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-client-certificate-request-client-certificate-id
                         :shape "String" :location "uri" :location-name
                         "clientcertificate_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-client-certificate-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-client-certificate-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-client-certificate-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-client-certificate-request
                    'make-update-client-certificate-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-client-certificate-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-deployment-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-deployment-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (deployment-id :initarg :deployment-id :initform
                         (common-lisp:error ":deploymentid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-deployment-request-deployment-id
                         :shape "String" :location "uri" :location-name
                         "deployment_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-deployment-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-deployment-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-deployment-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-deployment-request
                    'make-update-deployment-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-deployment-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-documentation-part-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-documentation-part-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-part-id :initarg :documentation-part-id
                         :initform
                         (common-lisp:error ":documentationpartid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-documentation-part-request-documentation-part-id
                         :shape "String" :location "uri" :location-name
                         "part_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-documentation-part-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-documentation-part-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-documentation-part-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-documentation-part-request
                    'make-update-documentation-part-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-part-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-documentation-version-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-documentation-version-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (documentation-version :initarg :documentation-version
                         :initform
                         (common-lisp:error
                          ":documentationversion is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-documentation-version-request-documentation-version
                         :shape "String" :location "uri" :location-name
                         "doc_version")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-documentation-version-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-documentation-version-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-documentation-version-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-documentation-version-request
                    'make-update-documentation-version-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-documentation-version-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-domain-name-request common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domainname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-domain-name-request-domain-name
                         :shape "String" :location "uri" :location-name
                         "domain_name")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-domain-name-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-domain-name-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-domain-name-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-domain-name-request
                    'make-update-domain-name-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-domain-name-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-gateway-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (response-type :initarg :response-type :initform
                         (common-lisp:error ":responsetype is required") :type
                         (common-lisp:or gateway-response-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-response-request-response-type
                         :shape "GatewayResponseType" :location "uri"
                         :location-name "response_type")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-response-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gateway-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gateway-response-request
                    'make-update-gateway-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-request
                    'make-update-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-integration-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-integration-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-integration-response-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-integration-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-integration-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-integration-response-request
                    'make-update-integration-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-integration-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-method-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-request-resource-id :shape
                         "String" :location "uri" :location-name "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-request-http-method :shape
                         "String" :location "uri" :location-name "http_method")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-method-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-method-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-method-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-method-request 'make-update-method-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-method-response-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-response-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-response-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (http-method :initarg :http-method :initform
                         (common-lisp:error ":httpmethod is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-method-response-request-http-method
                         :shape "String" :location "uri" :location-name
                         "http_method")
                        (status-code :initarg :status-code :initform
                         (common-lisp:error ":statuscode is required") :type
                         (common-lisp:or status-code common-lisp:null)
                         :accessor
                         struct-shape-update-method-response-request-status-code
                         :shape "StatusCode" :location "uri" :location-name
                         "status_code")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-method-response-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-method-response-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-method-response-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-method-response-request
                    'make-update-method-response-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-method-response-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-model-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-model-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (model-name :initarg :model-name :initform
                         (common-lisp:error ":modelname is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-model-request-model-name :shape
                         "String" :location "uri" :location-name "model_name")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-model-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-model-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-model-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-model-request 'make-update-model-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-model-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-model-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-request-validator-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-request-validator-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (request-validator-id :initarg :request-validator-id
                         :initform
                         (common-lisp:error ":requestvalidatorid is required")
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-update-request-validator-request-request-validator-id
                         :shape "String" :location "uri" :location-name
                         "requestvalidator_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-request-validator-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-request-validator-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-request-validator-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-request-validator-request
                    'make-update-request-validator-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-request-validator-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-resource-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resourceid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-resource-request-resource-id
                         :shape "String" :location "uri" :location-name
                         "resource_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-resource-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-request 'make-update-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-rest-api-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-rest-api-request-rest-api-id
                         :shape "String" :location "uri" :location-name
                         "restapi_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-rest-api-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-rest-api-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-rest-api-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-rest-api-request 'make-update-rest-api-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-rest-api-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-stage-request common-lisp:nil
                       ((rest-api-id :initarg :rest-api-id :initform
                         (common-lisp:error ":restapiid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-stage-request-rest-api-id :shape
                         "String" :location "uri" :location-name "restapi_id")
                        (stage-name :initarg :stage-name :initform
                         (common-lisp:error ":stagename is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-stage-request-stage-name :shape
                         "String" :location "uri" :location-name "stage_name")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-stage-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-stage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-stage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-stage-request 'make-update-stage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-stage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-stage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-usage-plan-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-usage-plan-request-usage-plan-id
                         :shape "String" :location "uri" :location-name
                         "usageplanId")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-usage-plan-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-usage-plan-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-usage-plan-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-usage-plan-request
                    'make-update-usage-plan-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-usage-plan-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-usage-request common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         (common-lisp:error ":usageplanid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-usage-request-usage-plan-id :shape
                         "String" :location "uri" :location-name "usageplanId")
                        (key-id :initarg :key-id :initform
                         (common-lisp:error ":keyid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-usage-request-key-id :shape
                         "String" :location "uri" :location-name "keyId")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-usage-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-usage-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-usage-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-usage-request 'make-update-usage-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-usage-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-usage-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vpc-link-request common-lisp:nil
                       ((vpc-link-id :initarg :vpc-link-id :initform
                         (common-lisp:error ":vpclinkid is required") :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-update-vpc-link-request-vpc-link-id
                         :shape "String" :location "uri" :location-name
                         "vpclink_id")
                        (patch-operations :initarg :patch-operations :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-patch-operation
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-vpc-link-request-patch-operations
                         :shape "ListOfPatchOperation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vpc-link-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vpc-link-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vpc-link-request 'make-update-vpc-link-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'patch-operations))
      (common-lisp:list
       (common-lisp:cons "patchOperations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vpc-link-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage common-lisp:nil
                       ((usage-plan-id :initarg :usage-plan-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-usage-plan-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (start-date :initarg :start-date :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-start-date :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (end-date :initarg :end-date :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-usage-end-date :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-usage-position :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or map-of-key-usages common-lisp:null)
                         :accessor struct-shape-usage-items :shape
                         "MapOfKeyUsages" :location common-lisp:nil
                         :location-name "values"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage 'make-usage))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'usage-plan-id))
      (common-lisp:list
       (common-lisp:cons "usagePlanId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-date))
      (common-lisp:list
       (common-lisp:cons "startDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-date))
      (common-lisp:list
       (common-lisp:cons "endDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (api-stages :initarg :api-stages :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-api-stage common-lisp:null)
                         :accessor struct-shape-usage-plan-api-stages :shape
                         "ListOfApiStage" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (throttle :initarg :throttle :initform common-lisp:nil
                         :type
                         (common-lisp:or throttle-settings common-lisp:null)
                         :accessor struct-shape-usage-plan-throttle :shape
                         "ThrottleSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (quota :initarg :quota :initform common-lisp:nil :type
                         (common-lisp:or quota-settings common-lisp:null)
                         :accessor struct-shape-usage-plan-quota :shape
                         "QuotaSettings" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (product-code :initarg :product-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-product-code :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-usage-plan-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-plan
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-plan 'make-usage-plan))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'api-stages))
      (common-lisp:list
       (common-lisp:cons "apiStages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'throttle))
      (common-lisp:list
       (common-lisp:cons "throttle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'quota))
      (common-lisp:list
       (common-lisp:cons "quota"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'product-code))
      (common-lisp:list
       (common-lisp:cons "productCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan-key common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-key-id :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-key-type :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-key-value :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-usage-plan-key-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-plan-key
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan-key
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-plan-key 'make-usage-plan-key))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-key))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-key))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plan-keys common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-usage-plan-keys-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-usage-plan-key
                                         common-lisp:null)
                         :accessor struct-shape-usage-plan-keys-items :shape
                         "ListOfUsagePlanKey" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-plan-keys
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plan-keys
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-plan-keys 'make-usage-plan-keys))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plan-keys))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass usage-plans common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-usage-plans-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-usage-plan common-lisp:null)
                         :accessor struct-shape-usage-plans-items :shape
                         "ListOfUsagePlan" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-usage-plans
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'usage-plans
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'usage-plans 'make-usage-plans))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input usage-plans))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input usage-plans))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass vpc-link common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-vpc-link-id :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-vpc-link-name :shape "String" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-vpc-link-description :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-arns :initarg :target-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or list-of-string common-lisp:null)
                         :accessor struct-shape-vpc-link-target-arns :shape
                         "ListOfString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or vpc-link-status common-lisp:null)
                         :accessor struct-shape-vpc-link-status :shape
                         "VpcLinkStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-message :initarg :status-message :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-vpc-link-status-message :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or map-of-string-to-string
                                         common-lisp:null)
                         :accessor struct-shape-vpc-link-tags :shape
                         "MapOfStringToString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vpc-link
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-link
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vpc-link 'make-vpc-link))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-link))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arns))
      (common-lisp:list
       (common-lisp:cons "targetArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-message))
      (common-lisp:list
       (common-lisp:cons "statusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-link))
   common-lisp:nil))
(common-lisp:deftype vpc-link-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vpc-links common-lisp:nil
                       ((position :initarg :position :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-vpc-links-position :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (items :initarg :items :initform common-lisp:nil :type
                         (common-lisp:or list-of-vpc-link common-lisp:null)
                         :accessor struct-shape-vpc-links-items :shape
                         "ListOfVpcLink" :location common-lisp:nil
                         :location-name "item"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vpc-links
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vpc-links
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vpc-links 'make-vpc-links))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vpc-links))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'position))
      (common-lisp:list
       (common-lisp:cons "position"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'items))
      (common-lisp:list
       (common-lisp:cons "items"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vpc-links))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description enabled
                     generate-distinct-id value stage-keys customer-id tags)
   (common-lisp:declare
    (common-lisp:ignorable name description enabled generate-distinct-id value
     stage-keys customer-id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/apikeys"
                                                        "CreateApiKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-api-key))
(common-lisp:progn
 (common-lisp:defun create-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name type provider-arns
                     auth-type authorizer-uri authorizer-credentials
                     identity-source identity-validation-expression
                     authorizer-result-ttl-in-seconds)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name type provider-arns auth-type
     authorizer-uri authorizer-credentials identity-source
     identity-validation-expression authorizer-result-ttl-in-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-authorizer))
(common-lisp:progn
 (common-lisp:defun create-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path rest-api-id stage)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path rest-api-id stage))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "CreateBasePathMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun create-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name stage-description
                     description cache-cluster-enabled cache-cluster-size
                     variables canary-settings tracing-enabled)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name stage-description description
     cache-cluster-enabled cache-cluster-size variables canary-settings
     tracing-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-deployment))
(common-lisp:progn
 (common-lisp:defun create-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id location properties)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id location properties))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationPart"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-documentation-part))
(common-lisp:progn
 (common-lisp:defun create-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     stage-name description)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version stage-name
     description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateDocumentationVersion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-documentation-version))
(common-lisp:progn
 (common-lisp:defun create-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name certificate-name
                     certificate-body certificate-private-key certificate-chain
                     certificate-arn regional-certificate-name
                     regional-certificate-arn endpoint-configuration tags
                     security-policy mutual-tls-authentication
                     ownership-verification-certificate-arn)
   (common-lisp:declare
    (common-lisp:ignorable domain-name certificate-name certificate-body
     certificate-private-key certificate-chain certificate-arn
     regional-certificate-name regional-certificate-arn endpoint-configuration
     tags security-policy mutual-tls-authentication
     ownership-verification-certificate-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/domainnames"
                                                        "CreateDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-domain-name))
(common-lisp:progn
 (common-lisp:defun create-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name description schema
                     content-type)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name description schema content-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-model))
(common-lisp:progn
 (common-lisp:defun create-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id name validate-request-body
                     validate-request-parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id name validate-request-body
     validate-request-parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateRequestValidator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-request-validator))
(common-lisp:progn
 (common-lisp:defun create-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id parent-id path-part)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id parent-id path-part))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'parent-id))))
                                                        "CreateResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-resource))
(common-lisp:progn
 (common-lisp:defun create-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description version clone-from
                     binary-media-types minimum-compression-size api-key-source
                     endpoint-configuration policy tags
                     disable-execute-api-endpoint)
   (common-lisp:declare
    (common-lisp:ignorable name description version clone-from
     binary-media-types minimum-compression-size api-key-source
     endpoint-configuration policy tags disable-execute-api-endpoint))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/restapis"
                                                        "CreateRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-rest-api))
(common-lisp:progn
 (common-lisp:defun create-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name deployment-id
                     description cache-cluster-enabled cache-cluster-size
                     variables documentation-version canary-settings
                     tracing-enabled tags)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name deployment-id description
     cache-cluster-enabled cache-cluster-size variables documentation-version
     canary-settings tracing-enabled tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "CreateStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-stage))
(common-lisp:progn
 (common-lisp:defun create-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description api-stages throttle
                     quota tags)
   (common-lisp:declare
    (common-lisp:ignorable name description api-stages throttle quota tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/usageplans"
                                                        "CreateUsagePlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-usage-plan))
(common-lisp:progn
 (common-lisp:defun create-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id key-type)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id key-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "CreateUsagePlanKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun create-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description target-arns tags)
   (common-lisp:declare
    (common-lisp:ignorable name description target-arns tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/vpclinks"
                                                        "CreateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-vpc-link))
(common-lisp:progn
 (common-lisp:defun delete-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key)
   (common-lisp:declare (common-lisp:ignorable api-key))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "DeleteApiKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-api-key))
(common-lisp:progn
 (common-lisp:defun delete-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "DeleteAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-authorizer))
(common-lisp:progn
 (common-lisp:defun delete-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "DeleteBasePathMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun delete-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "DeleteClientCertificate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-client-certificate))
(common-lisp:progn
 (common-lisp:defun delete-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "DeleteDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-deployment))
(common-lisp:progn
 (common-lisp:defun delete-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "DeleteDocumentationPart"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-documentation-part))
(common-lisp:progn
 (common-lisp:defun delete-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "DeleteDocumentationVersion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-documentation-version))
(common-lisp:progn
 (common-lisp:defun delete-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "DeleteDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-domain-name))
(common-lisp:progn
 (common-lisp:defun delete-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "DeleteGatewayResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-gateway-response))
(common-lisp:progn
 (common-lisp:defun delete-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-integration))
(common-lisp:progn
 (common-lisp:defun delete-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-integration-response))
(common-lisp:progn
 (common-lisp:defun delete-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "DeleteMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-method))
(common-lisp:progn
 (common-lisp:defun delete-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "DeleteMethodResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-method-response))
(common-lisp:progn
 (common-lisp:defun delete-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "DeleteModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-model))
(common-lisp:progn
 (common-lisp:defun delete-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "DeleteRequestValidator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-request-validator))
(common-lisp:progn
 (common-lisp:defun delete-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "DeleteResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-resource))
(common-lisp:progn
 (common-lisp:defun delete-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "DeleteRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-rest-api))
(common-lisp:progn
 (common-lisp:defun delete-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "DeleteStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-stage))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "DeleteUsagePlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-usage-plan))
(common-lisp:progn
 (common-lisp:defun delete-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "DeleteUsagePlanKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun delete-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "DeleteVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-vpc-link))
(common-lisp:progn
 (common-lisp:defun flush-stage-authorizers-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-flush-stage-authorizers-cache-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageAuthorizersCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'flush-stage-authorizers-cache))
(common-lisp:progn
 (common-lisp:defun flush-stage-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-flush-stage-cache-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/cache/data"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "FlushStageCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'flush-stage-cache))
(common-lisp:progn
 (common-lisp:defun generate-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description tags)
   (common-lisp:declare (common-lisp:ignorable description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-generate-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/clientcertificates"
                                                        "GenerateClientCertificate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'generate-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-account ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'apigateway-request :method "GET" :path
                                "/account" :operation "GetAccount"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-account))
(common-lisp:progn
 (common-lisp:defun get-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key include-value)
   (common-lisp:declare (common-lisp:ignorable api-key include-value))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "GetApiKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-api-key))
(common-lisp:progn
 (common-lisp:defun get-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit name-query customer-id
                     include-values)
   (common-lisp:declare
    (common-lisp:ignorable position limit name-query customer-id
     include-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/apikeys"
                                                        "GetApiKeys"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-api-keys))
(common-lisp:progn
 (common-lisp:defun get-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id authorizer-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "GetAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-authorizer))
(common-lisp:progn
 (common-lisp:defun get-authorizers
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-authorizers-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetAuthorizers"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-authorizers))
(common-lisp:progn
 (common-lisp:defun get-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path)
   (common-lisp:declare (common-lisp:ignorable domain-name base-path))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "GetBasePathMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun get-base-path-mappings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name position limit)
   (common-lisp:declare (common-lisp:ignorable domain-name position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-base-path-mappings-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetBasePathMappings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-base-path-mappings))
(common-lisp:progn
 (common-lisp:defun get-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id)
   (common-lisp:declare (common-lisp:ignorable client-certificate-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificate-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "GetClientCertificate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-client-certificate))
(common-lisp:progn
 (common-lisp:defun get-client-certificates
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-client-certificates-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/clientcertificates"
                                                        "GetClientCertificates"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-client-certificates))
(common-lisp:progn
 (common-lisp:defun get-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "GetDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployment))
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDeployments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-part-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "GetDocumentationPart"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-documentation-part))
(common-lisp:progn
 (common-lisp:defun get-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id type name-query path position
                     limit location-status)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id type name-query path position limit
     location-status))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-documentation-parts-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationParts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-documentation-parts))
(common-lisp:progn
 (common-lisp:defun get-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "GetDocumentationVersion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-documentation-version))
(common-lisp:progn
 (common-lisp:defun get-documentation-versions
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-documentation-versions-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetDocumentationVersions"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-documentation-versions))
(common-lisp:progn
 (common-lisp:defun get-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name)
   (common-lisp:declare (common-lisp:ignorable domain-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "GetDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-name))
(common-lisp:progn
 (common-lisp:defun get-domain-names
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-domain-names-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/domainnames"
                                                        "GetDomainNames"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-domain-names))
(common-lisp:progn
 (common-lisp:defun get-export
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name export-type
                     parameters accepts)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name export-type parameters
     accepts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-export-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/exports/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'export-type))))
                                                        "GetExport")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-export))
(common-lisp:progn
 (common-lisp:defun get-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type)
   (common-lisp:declare (common-lisp:ignorable rest-api-id response-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "GetGatewayResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-gateway-response))
(common-lisp:progn
 (common-lisp:defun get-gateway-responses
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-gateway-responses-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetGatewayResponses"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-gateway-responses))
(common-lisp:progn
 (common-lisp:defun get-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integration))
(common-lisp:progn
 (common-lisp:defun get-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-integration-response))
(common-lisp:progn
 (common-lisp:defun get-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "GetMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-method))
(common-lisp:progn
 (common-lisp:defun get-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "GetMethodResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-method-response))
(common-lisp:progn
 (common-lisp:defun get-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name flatten)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name flatten))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-model))
(common-lisp:progn
 (common-lisp:defun get-model-template
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id model-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-model-template-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A/default_template"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "GetModelTemplate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-model-template))
(common-lisp:progn
 (common-lisp:defun get-models
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-models-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetModels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-models))
(common-lisp:progn
 (common-lisp:defun get-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "GetRequestValidator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-request-validator))
(common-lisp:progn
 (common-lisp:defun get-request-validators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit)
   (common-lisp:declare (common-lisp:ignorable rest-api-id position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-request-validators-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRequestValidators"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-request-validators))
(common-lisp:progn
 (common-lisp:defun get-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id embed)
   (common-lisp:declare (common-lisp:ignorable rest-api-id resource-id embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "GetResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource))
(common-lisp:progn
 (common-lisp:defun get-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id position limit embed)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id position limit embed))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resources))
(common-lisp:progn
 (common-lisp:defun get-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-rest-api))
(common-lisp:progn
 (common-lisp:defun get-rest-apis
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rest-apis-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/restapis"
                                                        "GetRestApis"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-rest-apis))
(common-lisp:progn
 (common-lisp:defun get-sdk
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name sdk-type
                     parameters)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name sdk-type parameters))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A/sdks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdk-type))))
                                                        "GetSdk")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sdk))
(common-lisp:progn
 (common-lisp:defun get-sdk-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-type-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/sdktypes/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'sdktype-id))))
                                                        "GetSdkType"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sdk-type))
(common-lisp:progn
 (common-lisp:defun get-sdk-types
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-sdk-types-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/sdktypes"
                                                        "GetSdkTypes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-sdk-types))
(common-lisp:progn
 (common-lisp:defun get-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name)
   (common-lisp:declare (common-lisp:ignorable rest-api-id stage-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "GetStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stage))
(common-lisp:progn
 (common-lisp:defun get-stages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id)
   (common-lisp:declare (common-lisp:ignorable rest-api-id deployment-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-stages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "GetStages"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-stages))
(common-lisp:progn
 (common-lisp:defun get-tags
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn position limit)
   (common-lisp:declare (common-lisp:ignorable resource-arn position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-tags-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "GetTags"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-tags))
(common-lisp:progn
 (common-lisp:defun get-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id start-date end-date
                     position limit)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id start-date end-date position
     limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage))
(common-lisp:progn
 (common-lisp:defun get-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-plan))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id key-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "GetUsagePlanKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-plan-key))
(common-lisp:progn
 (common-lisp:defun get-usage-plan-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id position limit name-query)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id position limit name-query))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plan-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "GetUsagePlanKeys"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-plan-keys))
(common-lisp:progn
 (common-lisp:defun get-usage-plans
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position key-id limit)
   (common-lisp:declare (common-lisp:ignorable position key-id limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-usage-plans-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/usageplans"
                                                        "GetUsagePlans"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-usage-plans))
(common-lisp:progn
 (common-lisp:defun get-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "GetVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-vpc-link))
(common-lisp:progn
 (common-lisp:defun get-vpc-links
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key position limit)
   (common-lisp:declare (common-lisp:ignorable position limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-vpc-links-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/vpclinks"
                                                        "GetVpcLinks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-vpc-links))
(common-lisp:progn
 (common-lisp:defun import-api-keys
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key body format fail-on-warnings)
   (common-lisp:declare (common-lisp:ignorable body format fail-on-warnings))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-api-keys-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/apikeys?mode=import"
                                                        "ImportApiKeys"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-api-keys))
(common-lisp:progn
 (common-lisp:defun import-documentation-parts
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-import-documentation-parts-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "ImportDocumentationParts"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-documentation-parts))
(common-lisp:progn
 (common-lisp:defun import-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key fail-on-warnings parameters body)
   (common-lisp:declare
    (common-lisp:ignorable fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-import-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/restapis?mode=import"
                                                        "ImportRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'import-rest-api))
(common-lisp:progn
 (common-lisp:defun put-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type status-code
                     response-parameters response-templates)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type status-code
     response-parameters response-templates))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "PutGatewayResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-gateway-response))
(common-lisp:progn
 (common-lisp:defun put-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method type
                     integration-http-method uri connection-type connection-id
                     credentials request-parameters request-templates
                     passthrough-behavior cache-namespace cache-key-parameters
                     content-handling timeout-in-millis tls-config)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method type
     integration-http-method uri connection-type connection-id credentials
     request-parameters request-templates passthrough-behavior cache-namespace
     cache-key-parameters content-handling timeout-in-millis tls-config))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-integration))
(common-lisp:progn
 (common-lisp:defun put-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code selection-pattern response-parameters
                     response-templates content-handling)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     selection-pattern response-parameters response-templates
     content-handling))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-integration-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-integration-response))
(common-lisp:progn
 (common-lisp:defun put-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     authorization-type authorizer-id api-key-required
                     operation-name request-parameters request-models
                     request-validator-id authorization-scopes)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     authorization-type authorizer-id api-key-required operation-name
     request-parameters request-models request-validator-id
     authorization-scopes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "PutMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-method))
(common-lisp:progn
 (common-lisp:defun put-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code response-parameters response-models)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     response-parameters response-models))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "PutMethodResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-method-response))
(common-lisp:progn
 (common-lisp:defun put-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id mode fail-on-warnings
                     parameters body)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id mode fail-on-warnings parameters body))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-put-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "PutRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-rest-api))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun test-invoke-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id headers
                     multi-value-headers path-with-query-string body
                     stage-variables additional-context)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id headers
     multi-value-headers path-with-query-string body stage-variables
     additional-context))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "TestInvokeAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'test-invoke-authorizer))
(common-lisp:progn
 (common-lisp:defun test-invoke-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     path-with-query-string body headers multi-value-headers
                     client-certificate-id stage-variables)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     path-with-query-string body headers multi-value-headers
     client-certificate-id stage-variables))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-test-invoke-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "TestInvokeMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'test-invoke-method))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-account
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key patch-operations)
   (common-lisp:declare (common-lisp:ignorable patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-account-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH" "/account"
                                                        "UpdateAccount"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-account))
(common-lisp:progn
 (common-lisp:defun update-api-key
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key api-key patch-operations)
   (common-lisp:declare (common-lisp:ignorable api-key patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-api-key-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/apikeys/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'api-key))))
                                                        "UpdateApiKey"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-api-key))
(common-lisp:progn
 (common-lisp:defun update-authorizer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id authorizer-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id authorizer-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-authorizer-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/authorizers/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'authorizer-id))))
                                                        "UpdateAuthorizer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-authorizer))
(common-lisp:progn
 (common-lisp:defun update-base-path-mapping
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name base-path patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable domain-name base-path patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-base-path-mapping-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A/basepathmappings/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'base-path))))
                                                        "UpdateBasePathMapping"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-base-path-mapping))
(common-lisp:progn
 (common-lisp:defun update-client-certificate
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-certificate-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable client-certificate-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-client-certificate-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/clientcertificates/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'clientcertificate-id))))
                                                        "UpdateClientCertificate"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-client-certificate))
(common-lisp:progn
 (common-lisp:defun update-deployment
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id deployment-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id deployment-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-deployment-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/deployments/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'deployment-id))))
                                                        "UpdateDeployment"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-deployment))
(common-lisp:progn
 (common-lisp:defun update-documentation-part
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-part-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-part-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-part-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/parts/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'part-id))))
                                                        "UpdateDocumentationPart"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-documentation-part))
(common-lisp:progn
 (common-lisp:defun update-documentation-version
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id documentation-version
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id documentation-version patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-documentation-version-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/documentation/versions/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'doc-version))))
                                                        "UpdateDocumentationVersion"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-documentation-version))
(common-lisp:progn
 (common-lisp:defun update-domain-name
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key domain-name patch-operations)
   (common-lisp:declare (common-lisp:ignorable domain-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-domain-name-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/domainnames/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'domain-name))))
                                                        "UpdateDomainName"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-domain-name))
(common-lisp:progn
 (common-lisp:defun update-gateway-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id response-type
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id response-type patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/gatewayresponses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'response-type))))
                                                        "UpdateGatewayResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-gateway-response))
(common-lisp:progn
 (common-lisp:defun update-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-integration))
(common-lisp:progn
 (common-lisp:defun update-integration-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-integration-response-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/integration/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateIntegrationResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-integration-response))
(common-lisp:progn
 (common-lisp:defun update-method
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))))
                                                        "UpdateMethod"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-method))
(common-lisp:progn
 (common-lisp:defun update-method-response
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id http-method
                     status-code patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id http-method status-code
     patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-method-response-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A/methods/~A/responses/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'http-method))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'status-code))))
                                                        "UpdateMethodResponse"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-method-response))
(common-lisp:progn
 (common-lisp:defun update-model
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id model-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id model-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-model-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/models/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'model-name))))
                                                        "UpdateModel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-model))
(common-lisp:progn
 (common-lisp:defun update-request-validator
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id request-validator-id
                     patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id request-validator-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-request-validator-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/requestvalidators/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'requestvalidator-id))))
                                                        "UpdateRequestValidator"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-request-validator))
(common-lisp:progn
 (common-lisp:defun update-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id resource-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id resource-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/resources/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-id))))
                                                        "UpdateResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-resource))
(common-lisp:progn
 (common-lisp:defun update-rest-api
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable rest-api-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rest-api-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))))
                                                        "UpdateRestApi"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-rest-api))
(common-lisp:progn
 (common-lisp:defun update-stage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key rest-api-id stage-name patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable rest-api-id stage-name patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-stage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/restapis/~A/stages/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'restapi-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'stage-name))))
                                                        "UpdateStage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-stage))
(common-lisp:progn
 (common-lisp:defun update-usage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id key-id patch-operations)
   (common-lisp:declare
    (common-lisp:ignorable usage-plan-id key-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A/keys/~A/usage"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'key-id))))
                                                        "UpdateUsage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-usage))
(common-lisp:progn
 (common-lisp:defun update-usage-plan
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key usage-plan-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable usage-plan-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-usage-plan-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/usageplans/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'usageplan-id))))
                                                        "UpdateUsagePlan"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-usage-plan))
(common-lisp:progn
 (common-lisp:defun update-vpc-link
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vpc-link-id patch-operations)
   (common-lisp:declare (common-lisp:ignorable vpc-link-id patch-operations))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vpc-link-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'apigateway-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/vpclinks/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'vpclink-id))))
                                                        "UpdateVpcLink"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-vpc-link))
