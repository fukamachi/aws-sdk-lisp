;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/sms-voice/api (:use)
                             (:nicknames #:aws/sms-voice)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sms-voice/api)
(common-lisp:progn
 (common-lisp:define-condition sms-voice-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sms-voice-error))
(common-lisp:progn
 (common-lisp:defclass sms-voice-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "sms-voice" :api-version
                        "2018-09-05" :host-prefix "sms-voice.pinpoint"
                        :signing-name "sms-voice" :global-host
                        common-lisp:nil))
 (common-lisp:export 'sms-voice-request))
(common-lisp:defvar *error-map*
  '(("AlreadyExistsException" . already-exists-exception)
    ("BadRequestException" . bad-request-exception)
    ("InternalServiceErrorException" . internal-service-error-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("NotFoundException" . not-found-exception)
    ("TooManyRequestsException" . too-many-requests-exception)))
(common-lisp:progn
 (common-lisp:define-condition already-exists-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       already-exists-exception-message)))
 (common-lisp:export
  (common-lisp:list 'already-exists-exception
                    'already-exists-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition bad-request-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       bad-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'bad-request-exception 'bad-request-exception-message)))
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass call-instructions-message-type common-lisp:nil
                       ((text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-call-instructions-message-type-text
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-call-instructions-message-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'call-instructions-message-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'call-instructions-message-type
                    'make-call-instructions-message-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          call-instructions-message-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cloud-watch-logs-destination common-lisp:nil
                       ((iam-role-arn :initarg :iam-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-cloud-watch-logs-destination-iam-role-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (log-group-arn :initarg :log-group-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-cloud-watch-logs-destination-log-group-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cloud-watch-logs-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cloud-watch-logs-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cloud-watch-logs-destination
                    'make-cloud-watch-logs-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-arn))
      (common-lisp:list
       (common-lisp:cons "LogGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cloud-watch-logs-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype configuration-sets ()
   '(trivial-types:proper-list word-characters-with-delimiters))
 (common-lisp:defun make-configuration-sets
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            word-characters-with-delimiters))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-configuration-set-name
                         :shape "__string" :location "uri" :location-name
                         "ConfigurationSetName")
                        (event-destination :initarg :event-destination
                         :initform common-lisp:nil :type
                         (common-lisp:or event-destination-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-event-destination
                         :shape "EventDestinationDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-destination-name :initarg
                         :event-destination-name :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-event-destination-request-event-destination-name
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-request
                    'make-create-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-destination-name))
      (common-lisp:list
       (common-lisp:cons "EventDestinationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-event-destination-response
                    'make-create-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-request common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform common-lisp:nil
                         :type
                         (common-lisp:or word-characters-with-delimiters
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-configuration-set-request-configuration-set-name
                         :shape "WordCharactersWithDelimiters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-request
                    'make-create-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-configuration-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-configuration-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-configuration-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-configuration-set-response
                    'make-create-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-event-destination-request-configuration-set-name
                         :shape "__string" :location "uri" :location-name
                         "ConfigurationSetName")
                        (event-destination-name :initarg
                         :event-destination-name :initform
                         (common-lisp:error
                          ":event-destination-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-event-destination-request-event-destination-name
                         :shape "__string" :location "uri" :location-name
                         "EventDestinationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-request
                    'make-delete-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-event-destination-response
                    'make-delete-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-request common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-configuration-set-request-configuration-set-name
                         :shape "__string" :location "uri" :location-name
                         "ConfigurationSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-request
                    'make-delete-configuration-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-configuration-set-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-configuration-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-configuration-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-configuration-set-response
                    'make-delete-configuration-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-configuration-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-destination common-lisp:nil
                       ((cloud-watch-logs-destination :initarg
                         :cloud-watch-logs-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or cloud-watch-logs-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-cloud-watch-logs-destination
                         :shape "CloudWatchLogsDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor struct-shape-event-destination-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kinesis-firehose-destination :initarg
                         :kinesis-firehose-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or kinesis-firehose-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-kinesis-firehose-destination
                         :shape "KinesisFirehoseDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (matching-event-types :initarg :matching-event-types
                         :initform common-lisp:nil :type
                         (common-lisp:or event-types common-lisp:null)
                         :accessor
                         struct-shape-event-destination-matching-event-types
                         :shape "EventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-event-destination-name :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (sns-destination :initarg :sns-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-sns-destination :shape
                         "SnsDestination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-destination 'make-event-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-destination-definition common-lisp:nil
                       ((cloud-watch-logs-destination :initarg
                         :cloud-watch-logs-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or cloud-watch-logs-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-cloud-watch-logs-destination
                         :shape "CloudWatchLogsDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enabled :initarg :enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kinesis-firehose-destination :initarg
                         :kinesis-firehose-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or kinesis-firehose-destination
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-kinesis-firehose-destination
                         :shape "KinesisFirehoseDestination" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (matching-event-types :initarg :matching-event-types
                         :initform common-lisp:nil :type
                         (common-lisp:or event-types common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-matching-event-types
                         :shape "EventTypes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sns-destination :initarg :sns-destination :initform
                         common-lisp:nil :type
                         (common-lisp:or sns-destination common-lisp:null)
                         :accessor
                         struct-shape-event-destination-definition-sns-destination
                         :shape "SnsDestination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-destination-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-destination-definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-destination-definition
                    'make-event-destination-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-logs-destination))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enabled))
      (common-lisp:list
       (common-lisp:cons "Enabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'kinesis-firehose-destination))
      (common-lisp:list
       (common-lisp:cons "KinesisFirehoseDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'matching-event-types))
      (common-lisp:list
       (common-lisp:cons "MatchingEventTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sns-destination))
      (common-lisp:list
       (common-lisp:cons "SnsDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-destination-definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-destinations ()
   '(trivial-types:proper-list event-destination))
 (common-lisp:defun make-event-destinations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-destination))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype event-types () '(trivial-types:proper-list event-type))
 (common-lisp:defun make-event-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-type))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-event-destinations-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-event-destinations-request-configuration-set-name
                         :shape "__string" :location "uri" :location-name
                         "ConfigurationSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-event-destinations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-event-destinations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-request
                    'make-get-configuration-set-event-destinations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-configuration-set-event-destinations-response
                       common-lisp:nil
                       ((event-destinations :initarg :event-destinations
                         :initform common-lisp:nil :type
                         (common-lisp:or event-destinations common-lisp:null)
                         :accessor
                         struct-shape-get-configuration-set-event-destinations-response-event-destinations
                         :shape "EventDestinations" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-configuration-set-event-destinations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-configuration-set-event-destinations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-configuration-set-event-destinations-response
                    'make-get-configuration-set-event-destinations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destinations))
      (common-lisp:list
       (common-lisp:cons "EventDestinations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-configuration-set-event-destinations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-service-error-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error-exception
                    'internal-service-error-exception-message)))
(common-lisp:progn
 (common-lisp:defclass kinesis-firehose-destination common-lisp:nil
                       ((delivery-stream-arn :initarg :delivery-stream-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-kinesis-firehose-destination-delivery-stream-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (iam-role-arn :initarg :iam-role-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-kinesis-firehose-destination-iam-role-arn
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-kinesis-firehose-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'kinesis-firehose-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'kinesis-firehose-destination
                    'make-kinesis-firehose-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'delivery-stream-arn))
      (common-lisp:list
       (common-lisp:cons "DeliveryStreamArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'iam-role-arn))
      (common-lisp:list
       (common-lisp:cons "IamRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          kinesis-firehose-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-configuration-sets-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-sets-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "NextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-configuration-sets-request-page-size
                         :shape "__string" :location "querystring"
                         :location-name "PageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-sets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-sets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-request
                    'make-list-configuration-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-configuration-sets-response common-lisp:nil
                       ((configuration-sets :initarg :configuration-sets
                         :initform common-lisp:nil :type
                         (common-lisp:or configuration-sets common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-sets-response-configuration-sets
                         :shape "ConfigurationSets" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token-string common-lisp:null)
                         :accessor
                         struct-shape-list-configuration-sets-response-next-token
                         :shape "NextTokenString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-configuration-sets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-configuration-sets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-configuration-sets-response
                    'make-list-configuration-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration-sets))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-configuration-sets-response))
   common-lisp:nil))
(common-lisp:deftype next-token-string () 'common-lisp:string)
(common-lisp:deftype non-empty-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass plain-text-message-type common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-plain-text-message-type-language-code
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-plain-text-message-type-text
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-id :initarg :voice-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-plain-text-message-type-voice-id :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-plain-text-message-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'plain-text-message-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'plain-text-message-type 'make-plain-text-message-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          plain-text-message-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ssmlmessage-type common-lisp:nil
                       ((language-code :initarg :language-code :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-ssmlmessage-type-language-code :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (text :initarg :text :initform common-lisp:nil :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor struct-shape-ssmlmessage-type-text :shape
                         "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (voice-id :initarg :voice-id :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor struct-shape-ssmlmessage-type-voice-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ssmlmessage-type
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ssmlmessage-type
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ssmlmessage-type 'make-ssmlmessage-type))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'language-code))
      (common-lisp:list
       (common-lisp:cons "LanguageCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'text))
      (common-lisp:list
       (common-lisp:cons "Text"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'voice-id))
      (common-lisp:list
       (common-lisp:cons "VoiceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ssmlmessage-type))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-voice-message-request common-lisp:nil
                       ((caller-id :initarg :caller-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-send-voice-message-request-caller-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (configuration-set-name :initarg
                         :configuration-set-name :initform common-lisp:nil
                         :type
                         (common-lisp:or word-characters-with-delimiters
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-voice-message-request-configuration-set-name
                         :shape "WordCharactersWithDelimiters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (content :initarg :content :initform common-lisp:nil
                         :type
                         (common-lisp:or voice-message-content
                                         common-lisp:null)
                         :accessor
                         struct-shape-send-voice-message-request-content :shape
                         "VoiceMessageContent" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (destination-phone-number :initarg
                         :destination-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-send-voice-message-request-destination-phone-number
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (origination-phone-number :initarg
                         :origination-phone-number :initform common-lisp:nil
                         :type
                         (common-lisp:or non-empty-string common-lisp:null)
                         :accessor
                         struct-shape-send-voice-message-request-origination-phone-number
                         :shape "NonEmptyString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-voice-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-voice-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-voice-message-request
                    'make-send-voice-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'caller-id))
      (common-lisp:list
       (common-lisp:cons "CallerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'configuration-set-name))
      (common-lisp:list
       (common-lisp:cons "ConfigurationSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content))
      (common-lisp:list
       (common-lisp:cons "Content"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'destination-phone-number))
      (common-lisp:list
       (common-lisp:cons "DestinationPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'origination-phone-number))
      (common-lisp:list
       (common-lisp:cons "OriginationPhoneNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass send-voice-message-response common-lisp:nil
                       ((message-id :initarg :message-id :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-send-voice-message-response-message-id
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-voice-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-voice-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-voice-message-response
                    'make-send-voice-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-id))
      (common-lisp:list
       (common-lisp:cons "MessageId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-voice-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass sns-destination common-lisp:nil
                       ((topic-arn :initarg :topic-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-sns-destination-topic-arn :shape "String"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-sns-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'sns-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'sns-destination 'make-sns-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input sns-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic-arn))
      (common-lisp:list
       (common-lisp:cons "TopicArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input sns-destination))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (sms-voice-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-configuration-set-event-destination-request
                       common-lisp:nil
                       ((configuration-set-name :initarg
                         :configuration-set-name :initform
                         (common-lisp:error
                          ":configuration-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-configuration-set-name
                         :shape "__string" :location "uri" :location-name
                         "ConfigurationSetName")
                        (event-destination :initarg :event-destination
                         :initform common-lisp:nil :type
                         (common-lisp:or event-destination-definition
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-event-destination
                         :shape "EventDestinationDefinition" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (event-destination-name :initarg
                         :event-destination-name :initform
                         (common-lisp:error
                          ":event-destination-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-configuration-set-event-destination-request-event-destination-name
                         :shape "__string" :location "uri" :location-name
                         "EventDestinationName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-set-event-destination-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configuration-set-event-destination-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-request
                    'make-update-configuration-set-event-destination-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-destination))
      (common-lisp:list
       (common-lisp:cons "EventDestination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-configuration-set-event-destination-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-configuration-set-event-destination-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-configuration-set-event-destination-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-configuration-set-event-destination-response
                    'make-update-configuration-set-event-destination-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-configuration-set-event-destination-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass voice-message-content common-lisp:nil
                       ((call-instructions-message :initarg
                         :call-instructions-message :initform common-lisp:nil
                         :type
                         (common-lisp:or call-instructions-message-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-message-content-call-instructions-message
                         :shape "CallInstructionsMessageType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (plain-text-message :initarg :plain-text-message
                         :initform common-lisp:nil :type
                         (common-lisp:or plain-text-message-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-voice-message-content-plain-text-message
                         :shape "PlainTextMessageType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (ssmlmessage :initarg :ssmlmessage :initform
                         common-lisp:nil :type
                         (common-lisp:or ssmlmessage-type common-lisp:null)
                         :accessor
                         struct-shape-voice-message-content-ssmlmessage :shape
                         "SSMLMessageType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-voice-message-content
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'voice-message-content
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'voice-message-content 'make-voice-message-content))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'call-instructions-message))
      (common-lisp:list
       (common-lisp:cons "CallInstructionsMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'plain-text-message))
      (common-lisp:list
       (common-lisp:cons "PlainTextMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ssmlmessage))
      (common-lisp:list
       (common-lisp:cons "SSMLMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          voice-message-content))
   common-lisp:nil))
(common-lisp:deftype word-characters-with-delimiters () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__timestampIso8601| () 'common-lisp:string)
(common-lisp:deftype |__timestampUnix| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/sms-voice/configuration-sets"
                                                        "CreateConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configuration-set))
(common-lisp:progn
 (common-lisp:defun create-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination
     event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/sms-voice/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "CreateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-configuration-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/sms-voice/configuration-sets/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "DeleteConfigurationSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configuration-set))
(common-lisp:progn
 (common-lisp:defun delete-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/sms-voice/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "DeleteConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-configuration-set-event-destination))
(common-lisp:progn
 (common-lisp:defun get-configuration-set-event-destinations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name)
   (common-lisp:declare (common-lisp:ignorable configuration-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-configuration-set-event-destinations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/sms-voice/configuration-sets/~A/event-destinations"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))))
                                                        "GetConfigurationSetEventDestinations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-configuration-set-event-destinations))
(common-lisp:progn
 (common-lisp:defun list-configuration-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token page-size)
   (common-lisp:declare (common-lisp:ignorable next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-configuration-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/v1/sms-voice/configuration-sets"
                                                        "ListConfigurationSets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-configuration-sets))
(common-lisp:progn
 (common-lisp:defun send-voice-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key caller-id configuration-set-name content
                     destination-phone-number origination-phone-number)
   (common-lisp:declare
    (common-lisp:ignorable caller-id configuration-set-name content
     destination-phone-number origination-phone-number))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-voice-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/v1/sms-voice/voice/message"
                                                        "SendVoiceMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-voice-message))
(common-lisp:progn
 (common-lisp:defun update-configuration-set-event-destination
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key configuration-set-name event-destination
                     event-destination-name)
   (common-lisp:declare
    (common-lisp:ignorable configuration-set-name event-destination
     event-destination-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-configuration-set-event-destination-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sms-voice-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/v1/sms-voice/configuration-sets/~A/event-destinations/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'configuration-set-name))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'event-destination-name))))
                                                        "UpdateConfigurationSetEventDestination"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-configuration-set-event-destination))
