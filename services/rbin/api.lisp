;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/rbin/api (:use)
                             (:nicknames #:aws/rbin)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/rbin/api)
(common-lisp:progn
 (common-lisp:define-condition rbin-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'rbin-error))
(common-lisp:progn
 (common-lisp:defclass rbin-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "rbin" :api-version
                        "2021-06-15" :host-prefix "rbin" :signing-name "rbin"
                        :global-host common-lisp:nil))
 (common-lisp:export 'rbin-request))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceQuotaExceededException" . service-quota-exceeded-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (rbin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       conflict-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message
                    'conflict-exception-reason)))
(common-lisp:deftype conflict-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-rule-request common-lisp:nil
                       ((retention-period :initarg :retention-period :initform
                         (common-lisp:error ":retention-period is required")
                         :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-create-rule-request-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-create-rule-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-rule-request-tags :shape "TagList"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-create-rule-request-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-create-rule-request-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-configuration :initarg :lock-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-rule-request-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-rule-request 'make-create-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-rule-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-create-rule-response-identifier
                         :shape "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-create-rule-response-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-rule-response-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-create-rule-response-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-create-rule-response-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-create-rule-response-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or rule-status common-lisp:null)
                         :accessor struct-shape-create-rule-response-status
                         :shape "RuleStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-configuration :initarg :lock-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-rule-response-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-create-rule-response-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-create-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-rule-response 'make-create-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-rule-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-delete-rule-request-identifier
                         :shape "RuleIdentifier" :location "uri" :location-name
                         "identifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-rule-request 'make-delete-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-rule-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-rule-response 'make-delete-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-rule-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-rule-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-get-rule-request-identifier
                         :shape "RuleIdentifier" :location "uri" :location-name
                         "identifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-rule-request 'make-get-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-rule-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-get-rule-response-identifier
                         :shape "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-get-rule-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor struct-shape-get-rule-response-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-get-rule-response-retention-period :shape
                         "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor struct-shape-get-rule-response-resource-tags
                         :shape "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or rule-status common-lisp:null)
                         :accessor struct-shape-get-rule-response-status :shape
                         "RuleStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (lock-configuration :initarg :lock-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-rule-response-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-get-rule-response-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (lock-end-time :initarg :lock-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time-stamp common-lisp:null) :accessor
                         struct-shape-get-rule-response-lock-end-time :shape
                         "TimeStamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-get-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-rule-response 'make-get-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-end-time))
      (common-lisp:list
       (common-lisp:cons "LockEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (rbin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-rules-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-rules-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rules-request-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-list-rules-request-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-list-rules-request-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-list-rules-request-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "MaxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-response common-lisp:nil
                       ((rules :initarg :rules :initform common-lisp:nil :type
                         (common-lisp:or rule-summary-list common-lisp:null)
                         :accessor struct-shape-list-rules-response-rules
                         :shape "RuleSummaryList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-rules-response-next-token :shape
                         "NextToken" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or rule-arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "RuleArn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lock-configuration common-lisp:nil
                       ((unlock-delay :initarg :unlock-delay :initform
                         (common-lisp:error ":unlock-delay is required") :type
                         (common-lisp:or unlock-delay common-lisp:null)
                         :accessor struct-shape-lock-configuration-unlock-delay
                         :shape "UnlockDelay" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lock-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lock-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lock-configuration 'make-lock-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lock-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lock-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unlock-delay))
      (common-lisp:list
       (common-lisp:cons "UnlockDelay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lock-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lock-rule-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-lock-rule-request-identifier
                         :shape "RuleIdentifier" :location "uri" :location-name
                         "identifier")
                        (lock-configuration :initarg :lock-configuration
                         :initform
                         (common-lisp:error ":lock-configuration is required")
                         :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-lock-rule-request-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lock-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lock-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lock-rule-request 'make-lock-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lock-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lock-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lock-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lock-rule-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-lock-rule-response-identifier
                         :shape "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-lock-rule-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-lock-rule-response-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-lock-rule-response-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-lock-rule-response-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or rule-status common-lisp:null)
                         :accessor struct-shape-lock-rule-response-status
                         :shape "RuleStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-configuration :initarg :lock-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-lock-rule-response-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-lock-rule-response-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-lock-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lock-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'lock-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lock-rule-response 'make-lock-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input lock-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input lock-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input lock-rule-response))
   common-lisp:nil))
(common-lisp:deftype lock-state () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (rbin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       resource-not-found-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message
                    'resource-not-found-exception-reason)))
(common-lisp:deftype resource-not-found-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass resource-tag common-lisp:nil
                       ((resource-tag-key :initarg :resource-tag-key :initform
                         (common-lisp:error ":resource-tag-key is required")
                         :type
                         (common-lisp:or resource-tag-key common-lisp:null)
                         :accessor struct-shape-resource-tag-resource-tag-key
                         :shape "ResourceTagKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tag-value :initarg :resource-tag-value
                         :initform common-lisp:nil :type
                         (common-lisp:or resource-tag-value common-lisp:null)
                         :accessor struct-shape-resource-tag-resource-tag-value
                         :shape "ResourceTagValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-tag
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource-tag 'make-resource-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tag-key))
      (common-lisp:list
       (common-lisp:cons "ResourceTagKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tag-value))
      (common-lisp:list
       (common-lisp:cons "ResourceTagValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-tag))
   common-lisp:nil))
(common-lisp:deftype resource-tag-key () 'common-lisp:string)
(common-lisp:deftype resource-tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-tags ()
   '(trivial-types:proper-list resource-tag))
 (common-lisp:defun make-resource-tags
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass retention-period common-lisp:nil
                       ((retention-period-value :initarg
                         :retention-period-value :initform
                         (common-lisp:error
                          ":retention-period-value is required")
                         :type
                         (common-lisp:or retention-period-value
                                         common-lisp:null)
                         :accessor
                         struct-shape-retention-period-retention-period-value
                         :shape "RetentionPeriodValue" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (retention-period-unit :initarg :retention-period-unit
                         :initform
                         (common-lisp:error
                          ":retention-period-unit is required")
                         :type
                         (common-lisp:or retention-period-unit
                                         common-lisp:null)
                         :accessor
                         struct-shape-retention-period-retention-period-unit
                         :shape "RetentionPeriodUnit" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retention-period
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retention-period
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retention-period 'make-retention-period))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input retention-period))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input retention-period))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-period-value))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriodValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-period-unit))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriodUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input retention-period))
   common-lisp:nil))
(common-lisp:deftype retention-period-unit () 'common-lisp:string)
(common-lisp:deftype retention-period-value () 'common-lisp:integer)
(common-lisp:deftype rule-arn () 'common-lisp:string)
(common-lisp:deftype rule-identifier () 'common-lisp:string)
(common-lisp:deftype rule-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass rule-summary common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-rule-summary-identifier :shape
                         "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-rule-summary-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor struct-shape-rule-summary-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-rule-summary-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-rule-summary-rule-arn :shape
                         "RuleArn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rule-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rule-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rule-summary 'make-rule-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype rule-summary-list ()
   '(trivial-types:proper-list rule-summary))
 (common-lisp:defun make-rule-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition service-quota-exceeded-exception
     (rbin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-quota-exceeded-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       service-quota-exceeded-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'service-quota-exceeded-exception
                    'service-quota-exceeded-exception-message
                    'service-quota-exceeded-exception-reason)))
(common-lisp:deftype service-quota-exceeded-exception-reason ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-list () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tag-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or rule-arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "RuleArn" :location "uri" :location-name
                         "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-list common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape
                         "TagList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:deftype time-stamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass unlock-delay common-lisp:nil
                       ((unlock-delay-value :initarg :unlock-delay-value
                         :initform
                         (common-lisp:error ":unlock-delay-value is required")
                         :type
                         (common-lisp:or unlock-delay-value common-lisp:null)
                         :accessor struct-shape-unlock-delay-unlock-delay-value
                         :shape "UnlockDelayValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (unlock-delay-unit :initarg :unlock-delay-unit
                         :initform
                         (common-lisp:error ":unlock-delay-unit is required")
                         :type
                         (common-lisp:or unlock-delay-unit common-lisp:null)
                         :accessor struct-shape-unlock-delay-unlock-delay-unit
                         :shape "UnlockDelayUnit" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unlock-delay
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unlock-delay
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'unlock-delay 'make-unlock-delay))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unlock-delay))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unlock-delay))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unlock-delay-value))
      (common-lisp:list
       (common-lisp:cons "UnlockDelayValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'unlock-delay-unit))
      (common-lisp:list
       (common-lisp:cons "UnlockDelayUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unlock-delay))
   common-lisp:nil))
(common-lisp:deftype unlock-delay-unit () 'common-lisp:string)
(common-lisp:deftype unlock-delay-value () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass unlock-rule-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-unlock-rule-request-identifier
                         :shape "RuleIdentifier" :location "uri" :location-name
                         "identifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unlock-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unlock-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unlock-rule-request 'make-unlock-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unlock-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unlock-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unlock-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass unlock-rule-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-unlock-rule-response-identifier
                         :shape "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-unlock-rule-response-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-unlock-rule-response-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-unlock-rule-response-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-unlock-rule-response-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or rule-status common-lisp:null)
                         :accessor struct-shape-unlock-rule-response-status
                         :shape "RuleStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-configuration :initarg :lock-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or lock-configuration common-lisp:null)
                         :accessor
                         struct-shape-unlock-rule-response-lock-configuration
                         :shape "LockConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-unlock-rule-response-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (lock-end-time :initarg :lock-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time-stamp common-lisp:null) :accessor
                         struct-shape-unlock-rule-response-lock-end-time :shape
                         "TimeStamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-unlock-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-unlock-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'unlock-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'unlock-rule-response 'make-unlock-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input unlock-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input unlock-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-configuration))
      (common-lisp:list
       (common-lisp:cons "LockConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-end-time))
      (common-lisp:list
       (common-lisp:cons "LockEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input unlock-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or rule-arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "RuleArn" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-rule-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-update-rule-request-identifier
                         :shape "RuleIdentifier" :location "uri" :location-name
                         "identifier")
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-update-rule-request-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-update-rule-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-update-rule-request-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-update-rule-request-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-rule-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-rule-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-rule-request 'make-update-rule-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-rule-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-rule-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-rule-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-rule-response common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or rule-identifier common-lisp:null)
                         :accessor struct-shape-update-rule-response-identifier
                         :shape "RuleIdentifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-period :initarg :retention-period :initform
                         common-lisp:nil :type
                         (common-lisp:or retention-period common-lisp:null)
                         :accessor
                         struct-shape-update-rule-response-retention-period
                         :shape "RetentionPeriod" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-rule-response-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-update-rule-response-resource-type :shape
                         "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-tags :initarg :resource-tags :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-tags common-lisp:null)
                         :accessor
                         struct-shape-update-rule-response-resource-tags :shape
                         "ResourceTags" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or rule-status common-lisp:null)
                         :accessor struct-shape-update-rule-response-status
                         :shape "RuleStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lock-state :initarg :lock-state :initform
                         common-lisp:nil :type
                         (common-lisp:or lock-state common-lisp:null) :accessor
                         struct-shape-update-rule-response-lock-state :shape
                         "LockState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (lock-end-time :initarg :lock-end-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time-stamp common-lisp:null) :accessor
                         struct-shape-update-rule-response-lock-end-time :shape
                         "TimeStamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rule-arn :initarg :rule-arn :initform common-lisp:nil
                         :type (common-lisp:or rule-arn common-lisp:null)
                         :accessor struct-shape-update-rule-response-rule-arn
                         :shape "RuleArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-rule-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-rule-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-rule-response 'make-update-rule-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-rule-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-rule-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "Identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-period))
      (common-lisp:list
       (common-lisp:cons "RetentionPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-tags))
      (common-lisp:list
       (common-lisp:cons "ResourceTags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-state))
      (common-lisp:list
       (common-lisp:cons "LockState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lock-end-time))
      (common-lisp:list
       (common-lisp:cons "LockEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-arn))
      (common-lisp:list
       (common-lisp:cons "RuleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-rule-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (rbin-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)
      (reason :initarg :reason :initform common-lisp:nil :reader
       validation-exception-reason)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message
                    'validation-exception-reason)))
(common-lisp:deftype validation-exception-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key retention-period description tags
                     resource-type resource-tags lock-configuration)
   (common-lisp:declare
    (common-lisp:ignorable retention-period description tags resource-type
     resource-tags lock-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/rules"
                                                        "CreateRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-rule))
(common-lisp:progn
 (common-lisp:defun delete-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "DeleteRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-rule))
(common-lisp:progn
 (common-lisp:defun get-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "GetRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-rule))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-type
                     resource-tags lock-state)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-type resource-tags
     lock-state))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/list-rules"
                                                        "ListRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun lock-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier lock-configuration)
   (common-lisp:declare (common-lisp:ignorable identifier lock-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-lock-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/rules/~A/lock"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "LockRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'lock-rule))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun unlock-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-unlock-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/rules/~A/unlock"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "UnlockRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'unlock-rule))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-rule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier retention-period description
                     resource-type resource-tags)
   (common-lisp:declare
    (common-lisp:ignorable identifier retention-period description
     resource-type resource-tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-rule-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'rbin-request
                                                        aws-sdk/generator/operation::input
                                                        "PATCH"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/rules/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'identifier))))
                                                        "UpdateRule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-rule))
