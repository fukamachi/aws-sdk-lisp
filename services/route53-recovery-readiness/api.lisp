;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/route53-recovery-readiness/api
                             (:use)
                             (:nicknames #:aws/route53-recovery-readiness)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/route53-recovery-readiness/api)
(common-lisp:progn
 (common-lisp:define-condition route53-recovery-readiness-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'route53-recovery-readiness-error))
(common-lisp:progn
 (common-lisp:defclass route53-recovery-readiness-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "route53-recovery-readiness"
                        :api-version "2019-12-02" :host-prefix
                        "route53-recovery-readiness" :signing-name
                        "route53-recovery-readiness" :global-host
                        common-lisp:nil))
 (common-lisp:export 'route53-recovery-readiness-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("ConflictException" . conflict-exception)
    ("InternalServerException" . internal-server-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ThrottlingException" . throttling-exception)
    ("ValidationException" . validation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass cell-output common-lisp:nil
                       ((cell-arn :initarg :cell-arn :initform
                         (common-lisp:error ":cell-arn is required") :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor struct-shape-cell-output-cell-arn :shape
                         "__stringMax256" :location common-lisp:nil
                         :location-name "cellArn")
                        (cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor struct-shape-cell-output-cell-name :shape
                         "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "cellName")
                        (cells :initarg :cells :initform
                         (common-lisp:error ":cells is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-cell-output-cells :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (parent-readiness-scopes :initarg
                         :parent-readiness-scopes :initform
                         (common-lisp:error
                          ":parent-readiness-scopes is required")
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-cell-output-parent-readiness-scopes
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "parentReadinessScopes")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-cell-output-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cell-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cell-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cell-output 'make-cell-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cell-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cell-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cell-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:progn
 (common-lisp:defclass create-cell-request common-lisp:nil
                       ((cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-cell-request-cell-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "cellName")
                        (cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-cell-request-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-cell-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cell-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-cell-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cell-request 'make-create-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-cell-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cell-response common-lisp:nil
                       ((cell-arn :initarg :cell-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor struct-shape-create-cell-response-cell-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "cellArn")
                        (cell-name :initarg :cell-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor struct-shape-create-cell-response-cell-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "cellName")
                        (cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-create-cell-response-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (parent-readiness-scopes :initarg
                         :parent-readiness-scopes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-cell-response-parent-readiness-scopes
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "parentReadinessScopes")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-cell-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cell-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-cell-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cell-response 'make-create-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cross-account-authorization-request
                       common-lisp:nil
                       ((cross-account-authorization :initarg
                         :cross-account-authorization :initform
                         (common-lisp:error
                          ":cross-account-authorization is required")
                         :type
                         (common-lisp:or cross-account-authorization
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-cross-account-authorization-request-cross-account-authorization
                         :shape "CrossAccountAuthorization" :location
                         common-lisp:nil :location-name
                         "crossAccountAuthorization"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cross-account-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-cross-account-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cross-account-authorization-request
                    'make-create-cross-account-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorization))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cross-account-authorization-response
                       common-lisp:nil
                       ((cross-account-authorization :initarg
                         :cross-account-authorization :initform common-lisp:nil
                         :type
                         (common-lisp:or cross-account-authorization
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-cross-account-authorization-response-cross-account-authorization
                         :shape "CrossAccountAuthorization" :location
                         common-lisp:nil :location-name
                         "crossAccountAuthorization"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cross-account-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-cross-account-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cross-account-authorization-response
                    'make-create-cross-account-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorization))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cross-account-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-readiness-check-request common-lisp:nil
                       ((readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-readiness-check-request-readiness-check-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "readinessCheckName")
                        (resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-readiness-check-request-resource-set-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "resourceSetName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-readiness-check-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-readiness-check-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-readiness-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-readiness-check-request
                    'make-create-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-readiness-check-response common-lisp:nil
                       ((readiness-check-arn :initarg :readiness-check-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-create-readiness-check-response-readiness-check-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "readinessCheckArn")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-readiness-check-response-readiness-check-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "readinessCheckName")
                        (resource-set :initarg :resource-set :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-readiness-check-response-resource-set
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSet")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-readiness-check-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-readiness-check-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-readiness-check-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-readiness-check-response
                    'make-create-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-recovery-group-request common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-recovery-group-request-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-recovery-group-request-recovery-group-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "recoveryGroupName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-recovery-group-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recovery-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recovery-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recovery-group-request
                    'make-create-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-recovery-group-response common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-recovery-group-response-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-arn :initarg :recovery-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-create-recovery-group-response-recovery-group-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "recoveryGroupArn")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-recovery-group-response-recovery-group-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "recoveryGroupName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-recovery-group-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-recovery-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-recovery-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-recovery-group-response
                    'make-create-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-set-request common-lisp:nil
                       ((resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-request-resource-set-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform
                         (common-lisp:error ":resource-set-type is required")
                         :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-request-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         (common-lisp:error ":resources is required") :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-request-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-resource-set-request-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-resource-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-resource-set-request
                    'make-create-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-resource-set-response common-lisp:nil
                       ((resource-set-arn :initarg :resource-set-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-response-resource-set-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "resourceSetArn")
                        (resource-set-name :initarg :resource-set-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-response-resource-set-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-response-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         struct-shape-create-resource-set-response-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-resource-set-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-resource-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-resource-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-resource-set-response
                    'make-create-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-resource-set-response))
   common-lisp:nil))
(common-lisp:deftype cross-account-authorization () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass dnstarget-resource common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dnstarget-resource-domain-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "domainName")
                        (hosted-zone-arn :initarg :hosted-zone-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dnstarget-resource-hosted-zone-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "hostedZoneArn")
                        (record-set-id :initarg :record-set-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dnstarget-resource-record-set-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "recordSetId")
                        (record-type :initarg :record-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dnstarget-resource-record-type :shape
                         "__string" :location common-lisp:nil :location-name
                         "recordType")
                        (target-resource :initarg :target-resource :initform
                         common-lisp:nil :type
                         (common-lisp:or target-resource common-lisp:null)
                         :accessor
                         struct-shape-dnstarget-resource-target-resource :shape
                         "TargetResource" :location common-lisp:nil
                         :location-name "targetResource"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dnstarget-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dnstarget-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'dnstarget-resource 'make-dnstarget-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hosted-zone-arn))
      (common-lisp:list
       (common-lisp:cons "HostedZoneArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-set-id))
      (common-lisp:list
       (common-lisp:cons "RecordSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-type))
      (common-lisp:list
       (common-lisp:cons "RecordType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-resource))
      (common-lisp:list
       (common-lisp:cons "TargetResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dnstarget-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cell-request common-lisp:nil
                       ((cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-cell-request-cell-name :shape
                         "__string" :location "uri" :location-name "cellName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cell-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-cell-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cell-request 'make-delete-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cross-account-authorization-request
                       common-lisp:nil
                       ((cross-account-authorization :initarg
                         :cross-account-authorization :initform
                         (common-lisp:error
                          ":cross-account-authorization is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-cross-account-authorization-request-cross-account-authorization
                         :shape "__string" :location "uri" :location-name
                         "crossAccountAuthorization"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cross-account-authorization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-cross-account-authorization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cross-account-authorization-request
                    'make-delete-cross-account-authorization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-cross-account-authorization-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-cross-account-authorization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-cross-account-authorization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-cross-account-authorization-response
                    'make-delete-cross-account-authorization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-cross-account-authorization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-readiness-check-request common-lisp:nil
                       ((readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-readiness-check-request-readiness-check-name
                         :shape "__string" :location "uri" :location-name
                         "readinessCheckName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-readiness-check-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-readiness-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-readiness-check-request
                    'make-delete-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recovery-group-request common-lisp:nil
                       ((recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-recovery-group-request-recovery-group-name
                         :shape "__string" :location "uri" :location-name
                         "recoveryGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recovery-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recovery-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recovery-group-request
                    'make-delete-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-resource-set-request common-lisp:nil
                       ((resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-delete-resource-set-request-resource-set-name
                         :shape "__string" :location "uri" :location-name
                         "resourceSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-resource-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-resource-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-resource-set-request
                    'make-delete-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-architecture-recommendations-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-architecture-recommendations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-architecture-recommendations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-architecture-recommendations-request-recovery-group-name
                         :shape "__string" :location "uri" :location-name
                         "recoveryGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-architecture-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-architecture-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-architecture-recommendations-request
                    'make-get-architecture-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-architecture-recommendations-response
                       common-lisp:nil
                       ((last-audit-timestamp :initarg :last-audit-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or last-audit-timestamp common-lisp:null)
                         :accessor
                         struct-shape-get-architecture-recommendations-response-last-audit-timestamp
                         :shape "LastAuditTimestamp" :location common-lisp:nil
                         :location-name "lastAuditTimestamp")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-architecture-recommendations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (recommendations :initarg :recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfRecommendation|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-architecture-recommendations-response-recommendations
                         :shape "__listOfRecommendation" :location
                         common-lisp:nil :location-name "recommendations"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-architecture-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-architecture-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-architecture-recommendations-response
                    'make-get-architecture-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-audit-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastAuditTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendations))
      (common-lisp:list
       (common-lisp:cons "Recommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-architecture-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cell-readiness-summary-request common-lisp:nil
                       ((cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-cell-readiness-summary-request-cell-name
                         :shape "__string" :location "uri" :location-name
                         "cellName")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-cell-readiness-summary-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-cell-readiness-summary-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-cell-readiness-summary-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-cell-readiness-summary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-cell-readiness-summary-request
                    'make-get-cell-readiness-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cell-readiness-summary-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-cell-readiness-summary-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (readiness :initarg :readiness :initform
                         common-lisp:nil :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-get-cell-readiness-summary-response-readiness
                         :shape "Readiness" :location common-lisp:nil
                         :location-name "readiness")
                        (readiness-checks :initarg :readiness-checks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfReadinessCheckSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-cell-readiness-summary-response-readiness-checks
                         :shape "__listOfReadinessCheckSummary" :location
                         common-lisp:nil :location-name "readinessChecks"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-cell-readiness-summary-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-cell-readiness-summary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-cell-readiness-summary-response
                    'make-get-cell-readiness-summary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-cell-readiness-summary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cell-request common-lisp:nil
                       ((cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-cell-request-cell-name :shape
                         "__string" :location "uri" :location-name "cellName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-cell-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-cell-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-cell-request 'make-get-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-cell-response common-lisp:nil
                       ((cell-arn :initarg :cell-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor struct-shape-get-cell-response-cell-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "cellArn")
                        (cell-name :initarg :cell-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor struct-shape-get-cell-response-cell-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "cellName")
                        (cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-get-cell-response-cells :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (parent-readiness-scopes :initarg
                         :parent-readiness-scopes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-cell-response-parent-readiness-scopes
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "parentReadinessScopes")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-cell-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-cell-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-cell-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-cell-response 'make-get-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input get-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input get-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input get-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-request common-lisp:nil
                       ((readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-request-readiness-check-name
                         :shape "__string" :location "uri" :location-name
                         "readinessCheckName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-readiness-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-request
                    'make-get-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-resource-status-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-resource-status-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-readiness-check-resource-status-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-resource-status-request-readiness-check-name
                         :shape "__string" :location "uri" :location-name
                         "readinessCheckName")
                        (resource-identifier :initarg :resource-identifier
                         :initform
                         (common-lisp:error ":resource-identifier is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-resource-status-request-resource-identifier
                         :shape "__string" :location "uri" :location-name
                         "resourceIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-resource-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-readiness-check-resource-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-resource-status-request
                    'make-get-readiness-check-resource-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-resource-status-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-readiness-check-resource-status-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (readiness :initarg :readiness :initform
                         common-lisp:nil :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-get-readiness-check-resource-status-response-readiness
                         :shape "Readiness" :location common-lisp:nil
                         :location-name "readiness")
                        (rules :initarg :rules :initform common-lisp:nil :type
                         (common-lisp:or |__listOfRuleResult| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-resource-status-response-rules
                         :shape "__listOfRuleResult" :location common-lisp:nil
                         :location-name "rules"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-resource-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-readiness-check-resource-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-resource-status-response
                    'make-get-readiness-check-resource-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-resource-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-response common-lisp:nil
                       ((readiness-check-arn :initarg :readiness-check-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-response-readiness-check-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "readinessCheckArn")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-response-readiness-check-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "readinessCheckName")
                        (resource-set :initarg :resource-set :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-response-resource-set
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSet")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-readiness-check-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-readiness-check-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-response
                    'make-get-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-status-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-status-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-readiness-check-status-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-status-request-readiness-check-name
                         :shape "__string" :location "uri" :location-name
                         "readinessCheckName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-readiness-check-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-status-request
                    'make-get-readiness-check-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-readiness-check-status-response common-lisp:nil
                       ((messages :initarg :messages :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfMessage| common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-status-response-messages
                         :shape "__listOfMessage" :location common-lisp:nil
                         :location-name "messages")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-readiness-check-status-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (readiness :initarg :readiness :initform
                         common-lisp:nil :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-get-readiness-check-status-response-readiness
                         :shape "Readiness" :location common-lisp:nil
                         :location-name "readiness")
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResourceResult|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-readiness-check-status-response-resources
                         :shape "__listOfResourceResult" :location
                         common-lisp:nil :location-name "resources"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-readiness-check-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-readiness-check-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-readiness-check-status-response
                    'make-get-readiness-check-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-readiness-check-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recovery-group-readiness-summary-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-readiness-summary-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-recovery-group-readiness-summary-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-readiness-summary-request-recovery-group-name
                         :shape "__string" :location "uri" :location-name
                         "recoveryGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recovery-group-readiness-summary-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recovery-group-readiness-summary-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-readiness-summary-request
                    'make-get-recovery-group-readiness-summary-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recovery-group-readiness-summary-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-get-recovery-group-readiness-summary-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (readiness :initarg :readiness :initform
                         common-lisp:nil :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-get-recovery-group-readiness-summary-response-readiness
                         :shape "Readiness" :location common-lisp:nil
                         :location-name "readiness")
                        (readiness-checks :initarg :readiness-checks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfReadinessCheckSummary|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-readiness-summary-response-readiness-checks
                         :shape "__listOfReadinessCheckSummary" :location
                         common-lisp:nil :location-name "readinessChecks"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recovery-group-readiness-summary-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recovery-group-readiness-summary-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-readiness-summary-response
                    'make-get-recovery-group-readiness-summary-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-readiness-summary-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recovery-group-request common-lisp:nil
                       ((recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-request-recovery-group-name
                         :shape "__string" :location "uri" :location-name
                         "recoveryGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recovery-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recovery-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-request
                    'make-get-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recovery-group-response common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-response-cells :shape
                         "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-arn :initarg :recovery-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-response-recovery-group-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "recoveryGroupArn")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recovery-group-response-recovery-group-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "recoveryGroupName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-recovery-group-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recovery-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recovery-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recovery-group-response
                    'make-get-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-set-request common-lisp:nil
                       ((resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-set-request-resource-set-name
                         :shape "__string" :location "uri" :location-name
                         "resourceSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-set-request 'make-get-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-resource-set-response common-lisp:nil
                       ((resource-set-arn :initarg :resource-set-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-set-response-resource-set-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "resourceSetArn")
                        (resource-set-name :initarg :resource-set-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-resource-set-response-resource-set-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-resource-set-response-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         struct-shape-get-resource-set-response-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-get-resource-set-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-resource-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-resource-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-resource-set-response
                    'make-get-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-resource-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:deftype last-audit-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-cells-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-cells-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-cells-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-cells-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-cells-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-cells-request 'make-list-cells-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-cells-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-cells-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-cells-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-cells-response common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOfCellOutput| common-lisp:null)
                         :accessor struct-shape-list-cells-response-cells
                         :shape "__listOfCellOutput" :location common-lisp:nil
                         :location-name "cells")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-cells-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-cells-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-cells-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-cells-response 'make-list-cells-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-cells-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-cells-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-cells-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-cross-account-authorizations-request
                       common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-cross-account-authorizations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-cross-account-authorizations-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-cross-account-authorizations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-cross-account-authorizations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-cross-account-authorizations-request
                    'make-list-cross-account-authorizations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-cross-account-authorizations-response
                       common-lisp:nil
                       ((cross-account-authorizations :initarg
                         :cross-account-authorizations :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfCrossAccountAuthorization|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-cross-account-authorizations-response-cross-account-authorizations
                         :shape "__listOfCrossAccountAuthorization" :location
                         common-lisp:nil :location-name
                         "crossAccountAuthorizations")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-cross-account-authorizations-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-cross-account-authorizations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-cross-account-authorizations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-cross-account-authorizations-response
                    'make-list-cross-account-authorizations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cross-account-authorizations))
      (common-lisp:list
       (common-lisp:cons "CrossAccountAuthorizations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-cross-account-authorizations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-readiness-checks-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-readiness-checks-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-readiness-checks-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-readiness-checks-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-readiness-checks-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-readiness-checks-request
                    'make-list-readiness-checks-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-readiness-checks-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-readiness-checks-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (readiness-checks :initarg :readiness-checks :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfReadinessCheckOutput|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-readiness-checks-response-readiness-checks
                         :shape "__listOfReadinessCheckOutput" :location
                         common-lisp:nil :location-name "readinessChecks"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-readiness-checks-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-readiness-checks-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-readiness-checks-response
                    'make-list-readiness-checks-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-checks))
      (common-lisp:list
       (common-lisp:cons "ReadinessChecks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-readiness-checks-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-recovery-groups-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-recovery-groups-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-recovery-groups-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recovery-groups-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-recovery-groups-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recovery-groups-request
                    'make-list-recovery-groups-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-recovery-groups-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-recovery-groups-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (recovery-groups :initarg :recovery-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfRecoveryGroupOutput|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-recovery-groups-response-recovery-groups
                         :shape "__listOfRecoveryGroupOutput" :location
                         common-lisp:nil :location-name "recoveryGroups"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-recovery-groups-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-recovery-groups-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-recovery-groups-response
                    'make-list-recovery-groups-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-groups))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-recovery-groups-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-sets-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-resource-sets-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-sets-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-sets-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-resource-sets-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-sets-request
                    'make-list-resource-sets-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-resource-sets-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-resource-sets-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (resource-sets :initarg :resource-sets :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResourceSetOutput|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-resource-sets-response-resource-sets
                         :shape "__listOfResourceSetOutput" :location
                         common-lisp:nil :location-name "resourceSets"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-resource-sets-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-resource-sets-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-resource-sets-response
                    'make-list-resource-sets-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-sets))
      (common-lisp:list
       (common-lisp:cons "ResourceSets"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-resource-sets-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-output common-lisp:nil
                       ((resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resource-type is required") :type
                         (common-lisp:or |__stringMax64| common-lisp:null)
                         :accessor struct-shape-list-rules-output-resource-type
                         :shape "__stringMax64" :location common-lisp:nil
                         :location-name "resourceType")
                        (rule-description :initarg :rule-description :initform
                         (common-lisp:error ":rule-description is required")
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-list-rules-output-rule-description :shape
                         "__stringMax256" :location common-lisp:nil
                         :location-name "ruleDescription")
                        (rule-id :initarg :rule-id :initform
                         (common-lisp:error ":rule-id is required") :type
                         (common-lisp:or |__stringMax64| common-lisp:null)
                         :accessor struct-shape-list-rules-output-rule-id
                         :shape "__stringMax64" :location common-lisp:nil
                         :location-name "ruleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-output 'make-list-rules-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "ResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-description))
      (common-lisp:list
       (common-lisp:cons "RuleDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-id))
      (common-lisp:list
       (common-lisp:cons "RuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor struct-shape-list-rules-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-rules-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken")
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-rules-request-resource-type :shape
                         "__string" :location "querystring" :location-name
                         "resourceType"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-request 'make-list-rules-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-rules-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-rules-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (rules :initarg :rules :initform common-lisp:nil :type
                         (common-lisp:or |__listOfListRulesOutput|
                                         common-lisp:null)
                         :accessor struct-shape-list-rules-response-rules
                         :shape "__listOfListRulesOutput" :location
                         common-lisp:nil :location-name "rules"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-rules-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-rules-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-rules-response 'make-list-rules-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-rules-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rules))
      (common-lisp:list
       (common-lisp:cons "Rules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-rules-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resources-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resources-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resources-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resources-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resources-request
                    'make-list-tags-for-resources-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resources-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-list-tags-for-resources-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resources-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resources-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resources-response
                    'make-list-tags-for-resources-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resources-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass message common-lisp:nil
                       ((message-text :initarg :message-text :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-message-message-text :shape "__string"
                         :location common-lisp:nil :location-name
                         "messageText"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-message
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'message
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'message 'make-message))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input message))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message-text))
      (common-lisp:list
       (common-lisp:cons "MessageText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input message))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass nlbresource common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-nlbresource-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-nlbresource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'nlbresource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'nlbresource 'make-nlbresource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nlbresource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nlbresource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nlbresource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass r53resource-record common-lisp:nil
                       ((domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-r53resource-record-domain-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "domainName")
                        (record-set-id :initarg :record-set-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-r53resource-record-record-set-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "recordSetId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-r53resource-record
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'r53resource-record
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'r53resource-record 'make-r53resource-record))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input r53resource-record))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input r53resource-record))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'record-set-id))
      (common-lisp:list
       (common-lisp:cons "RecordSetId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input r53resource-record))
   common-lisp:nil))
(common-lisp:deftype readiness () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass readiness-check-output common-lisp:nil
                       ((readiness-check-arn :initarg :readiness-check-arn
                         :initform
                         (common-lisp:error ":readiness-check-arn is required")
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-readiness-check-output-readiness-check-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "readinessCheckArn")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-readiness-check-output-readiness-check-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "readinessCheckName")
                        (resource-set :initarg :resource-set :initform
                         (common-lisp:error ":resource-set is required") :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-readiness-check-output-resource-set
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSet")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-readiness-check-output-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-readiness-check-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'readiness-check-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'readiness-check-output 'make-readiness-check-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass readiness-check-summary common-lisp:nil
                       ((readiness :initarg :readiness :initform
                         common-lisp:nil :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-readiness-check-summary-readiness :shape
                         "Readiness" :location common-lisp:nil :location-name
                         "readiness")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-readiness-check-summary-readiness-check-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "readinessCheckName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-readiness-check-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'readiness-check-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'readiness-check-summary 'make-readiness-check-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          readiness-check-summary))
   common-lisp:nil))
(common-lisp:deftype readiness-check-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommendation common-lisp:nil
                       ((recommendation-text :initarg :recommendation-text
                         :initform
                         (common-lisp:error ":recommendation-text is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-recommendation-recommendation-text :shape
                         "__string" :location common-lisp:nil :location-name
                         "recommendationText"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'recommendation 'make-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-text))
      (common-lisp:list
       (common-lisp:cons "RecommendationText"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recovery-group-output common-lisp:nil
                       ((cells :initarg :cells :initform
                         (common-lisp:error ":cells is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-recovery-group-output-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-arn :initarg :recovery-group-arn
                         :initform
                         (common-lisp:error ":recovery-group-arn is required")
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-recovery-group-output-recovery-group-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "recoveryGroupArn")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-recovery-group-output-recovery-group-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "recoveryGroupName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-recovery-group-output-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recovery-group-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recovery-group-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recovery-group-output 'make-recovery-group-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recovery-group-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource common-lisp:nil
                       ((component-id :initarg :component-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-resource-component-id :shape "__string"
                         :location common-lisp:nil :location-name
                         "componentId")
                        (dns-target-resource :initarg :dns-target-resource
                         :initform common-lisp:nil :type
                         (common-lisp:or dnstarget-resource common-lisp:null)
                         :accessor struct-shape-resource-dns-target-resource
                         :shape "DNSTargetResource" :location common-lisp:nil
                         :location-name "dnsTargetResource")
                        (readiness-scopes :initarg :readiness-scopes :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-resource-readiness-scopes
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "readinessScopes")
                        (resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-resource-resource-arn :shape "__string"
                         :location common-lisp:nil :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource 'make-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-id))
      (common-lisp:list
       (common-lisp:cons "ComponentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dns-target-resource))
      (common-lisp:list
       (common-lisp:cons "DnsTargetResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass resource-result common-lisp:nil
                       ((component-id :initarg :component-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-resource-result-component-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "componentId")
                        (last-checked-timestamp :initarg
                         :last-checked-timestamp :initform
                         (common-lisp:error
                          ":last-checked-timestamp is required")
                         :type
                         (common-lisp:or readiness-check-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-resource-result-last-checked-timestamp
                         :shape "ReadinessCheckTimestamp" :location
                         common-lisp:nil :location-name "lastCheckedTimestamp")
                        (readiness :initarg :readiness :initform
                         (common-lisp:error ":readiness is required") :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-resource-result-readiness :shape
                         "Readiness" :location common-lisp:nil :location-name
                         "readiness")
                        (resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-resource-result-resource-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'resource-result 'make-resource-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'component-id))
      (common-lisp:list
       (common-lisp:cons "ComponentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-checked-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastCheckedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass resource-set-output common-lisp:nil
                       ((resource-set-arn :initarg :resource-set-arn :initform
                         (common-lisp:error ":resource-set-arn is required")
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-resource-set-output-resource-set-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "resourceSetArn")
                        (resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-resource-set-output-resource-set-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform
                         (common-lisp:error ":resource-set-type is required")
                         :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-resource-set-output-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         (common-lisp:error ":resources is required") :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor struct-shape-resource-set-output-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-resource-set-output-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-resource-set-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'resource-set-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'resource-set-output 'make-resource-set-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input resource-set-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input resource-set-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input resource-set-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rule-result common-lisp:nil
                       ((last-checked-timestamp :initarg
                         :last-checked-timestamp :initform
                         (common-lisp:error
                          ":last-checked-timestamp is required")
                         :type
                         (common-lisp:or readiness-check-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-rule-result-last-checked-timestamp :shape
                         "ReadinessCheckTimestamp" :location common-lisp:nil
                         :location-name "lastCheckedTimestamp")
                        (messages :initarg :messages :initform
                         (common-lisp:error ":messages is required") :type
                         (common-lisp:or |__listOfMessage| common-lisp:null)
                         :accessor struct-shape-rule-result-messages :shape
                         "__listOfMessage" :location common-lisp:nil
                         :location-name "messages")
                        (readiness :initarg :readiness :initform
                         (common-lisp:error ":readiness is required") :type
                         (common-lisp:or readiness common-lisp:null) :accessor
                         struct-shape-rule-result-readiness :shape "Readiness"
                         :location common-lisp:nil :location-name "readiness")
                        (rule-id :initarg :rule-id :initform
                         (common-lisp:error ":rule-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rule-result-rule-id :shape "__string"
                         :location common-lisp:nil :location-name "ruleId"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rule-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'rule-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'rule-result 'make-rule-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input rule-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input rule-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-checked-timestamp))
      (common-lisp:list
       (common-lisp:cons "LastCheckedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'messages))
      (common-lisp:list
       (common-lisp:cons "Messages"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness))
      (common-lisp:list
       (common-lisp:cons "Readiness"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rule-id))
      (common-lisp:list
       (common-lisp:cons "RuleId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input rule-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass target-resource common-lisp:nil
                       ((nlbresource :initarg :nlbresource :initform
                         common-lisp:nil :type
                         (common-lisp:or nlbresource common-lisp:null)
                         :accessor struct-shape-target-resource-nlbresource
                         :shape "NLBResource" :location common-lisp:nil
                         :location-name "nLBResource")
                        (r53resource :initarg :r53resource :initform
                         common-lisp:nil :type
                         (common-lisp:or r53resource-record common-lisp:null)
                         :accessor struct-shape-target-resource-r53resource
                         :shape "R53ResourceRecord" :location common-lisp:nil
                         :location-name "r53Resource"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-target-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'target-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'target-resource 'make-target-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input target-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input target-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'nlbresource))
      (common-lisp:list
       (common-lisp:cons "NLBResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'r53resource))
      (common-lisp:list
       (common-lisp:cons "R53Resource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input target-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-cell-request common-lisp:nil
                       ((cell-name :initarg :cell-name :initform
                         (common-lisp:error ":cell-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-cell-request-cell-name :shape
                         "__string" :location "uri" :location-name "cellName")
                        (cells :initarg :cells :initform
                         (common-lisp:error ":cells is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-cell-request-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-cell-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-cell-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-cell-request 'make-update-cell-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-cell-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-cell-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-cell-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-cell-response common-lisp:nil
                       ((cell-arn :initarg :cell-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor struct-shape-update-cell-response-cell-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "cellArn")
                        (cell-name :initarg :cell-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor struct-shape-update-cell-response-cell-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "cellName")
                        (cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-update-cell-response-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (parent-readiness-scopes :initarg
                         :parent-readiness-scopes :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-cell-response-parent-readiness-scopes
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "parentReadinessScopes")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-cell-response-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-cell-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-cell-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-cell-response 'make-update-cell-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input update-cell-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input update-cell-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-arn))
      (common-lisp:list
       (common-lisp:cons "CellArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cell-name))
      (common-lisp:list
       (common-lisp:cons "CellName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'parent-readiness-scopes))
      (common-lisp:list
       (common-lisp:cons "ParentReadinessScopes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input update-cell-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-readiness-check-request common-lisp:nil
                       ((readiness-check-name :initarg :readiness-check-name
                         :initform
                         (common-lisp:error
                          ":readiness-check-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-readiness-check-request-readiness-check-name
                         :shape "__string" :location "uri" :location-name
                         "readinessCheckName")
                        (resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-readiness-check-request-resource-set-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "resourceSetName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-readiness-check-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-readiness-check-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-readiness-check-request
                    'make-update-readiness-check-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-readiness-check-response common-lisp:nil
                       ((readiness-check-arn :initarg :readiness-check-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-update-readiness-check-response-readiness-check-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "readinessCheckArn")
                        (readiness-check-name :initarg :readiness-check-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-readiness-check-response-readiness-check-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "readinessCheckName")
                        (resource-set :initarg :resource-set :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-readiness-check-response-resource-set
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSet")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-readiness-check-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-readiness-check-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-readiness-check-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-readiness-check-response
                    'make-update-readiness-check-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'readiness-check-arn))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'readiness-check-name))
      (common-lisp:list
       (common-lisp:cons "ReadinessCheckName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set))
      (common-lisp:list
       (common-lisp:cons "ResourceSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-readiness-check-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-recovery-group-request common-lisp:nil
                       ((cells :initarg :cells :initform
                         (common-lisp:error ":cells is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recovery-group-request-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform
                         (common-lisp:error ":recovery-group-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recovery-group-request-recovery-group-name
                         :shape "__string" :location "uri" :location-name
                         "recoveryGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recovery-group-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recovery-group-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recovery-group-request
                    'make-update-recovery-group-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-recovery-group-response common-lisp:nil
                       ((cells :initarg :cells :initform common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-recovery-group-response-cells
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "cells")
                        (recovery-group-arn :initarg :recovery-group-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-update-recovery-group-response-recovery-group-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "recoveryGroupArn")
                        (recovery-group-name :initarg :recovery-group-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-recovery-group-response-recovery-group-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "recoveryGroupName")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-recovery-group-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-recovery-group-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-recovery-group-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-recovery-group-response
                    'make-update-recovery-group-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cells))
      (common-lisp:list
       (common-lisp:cons "Cells"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-arn))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recovery-group-name))
      (common-lisp:list
       (common-lisp:cons "RecoveryGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-recovery-group-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-set-request common-lisp:nil
                       ((resource-set-name :initarg :resource-set-name
                         :initform
                         (common-lisp:error ":resource-set-name is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-request-resource-set-name
                         :shape "__string" :location "uri" :location-name
                         "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform
                         (common-lisp:error ":resource-set-type is required")
                         :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-request-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         (common-lisp:error ":resources is required") :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-request-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-set-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-set-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-set-request
                    'make-update-resource-set-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-resource-set-response common-lisp:nil
                       ((resource-set-arn :initarg :resource-set-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__stringMax256| common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-response-resource-set-arn
                         :shape "__stringMax256" :location common-lisp:nil
                         :location-name "resourceSetArn")
                        (resource-set-name :initarg :resource-set-name
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringMax64PatternAAZAZ09Z|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-response-resource-set-name
                         :shape "__stringMax64PatternAAZAZ09Z" :location
                         common-lisp:nil :location-name "resourceSetName")
                        (resource-set-type :initarg :resource-set-type
                         :initform common-lisp:nil :type
                         (common-lisp:or |__stringPatternAWSAZaZ09AZaZ09|
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-response-resource-set-type
                         :shape "__stringPatternAWSAZaZ09AZaZ09" :location
                         common-lisp:nil :location-name "resourceSetType")
                        (resources :initarg :resources :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfResource| common-lisp:null)
                         :accessor
                         struct-shape-update-resource-set-response-resources
                         :shape "__listOfResource" :location common-lisp:nil
                         :location-name "resources")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-resource-set-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-resource-set-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-resource-set-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-resource-set-response
                    'make-update-resource-set-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceSetArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-name))
      (common-lisp:list
       (common-lisp:cons "ResourceSetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-set-type))
      (common-lisp:list
       (common-lisp:cons "ResourceSetType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resources))
      (common-lisp:list
       (common-lisp:cons "Resources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-resource-set-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition validation-exception
     (route53-recovery-readiness-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'validation-exception 'validation-exception-message)))
(common-lisp:progn
 (common-lisp:deftype |__listOfCellOutput| ()
   '(trivial-types:proper-list cell-output))
 (common-lisp:defun make-__listofcelloutput
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cell-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfCrossAccountAuthorization| ()
   '(trivial-types:proper-list cross-account-authorization))
 (common-lisp:defun make-__listofcrossaccountauthorization
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            cross-account-authorization))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfListRulesOutput| ()
   '(trivial-types:proper-list list-rules-output))
 (common-lisp:defun make-__listoflistrulesoutput
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list list-rules-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfMessage| ()
   '(trivial-types:proper-list message))
 (common-lisp:defun make-__listofmessage
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list message))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfReadinessCheckOutput| ()
   '(trivial-types:proper-list readiness-check-output))
 (common-lisp:defun make-__listofreadinesscheckoutput
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list readiness-check-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfReadinessCheckSummary| ()
   '(trivial-types:proper-list readiness-check-summary))
 (common-lisp:defun make-__listofreadinesschecksummary
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list readiness-check-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRecommendation| ()
   '(trivial-types:proper-list recommendation))
 (common-lisp:defun make-__listofrecommendation
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRecoveryGroupOutput| ()
   '(trivial-types:proper-list recovery-group-output))
 (common-lisp:defun make-__listofrecoverygroupoutput
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recovery-group-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResource| ()
   '(trivial-types:proper-list resource))
 (common-lisp:defun make-__listofresource
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceResult| ()
   '(trivial-types:proper-list resource-result))
 (common-lisp:defun make-__listofresourceresult
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfResourceSetOutput| ()
   '(trivial-types:proper-list resource-set-output))
 (common-lisp:defun make-__listofresourcesetoutput
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-set-output))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfRuleResult| ()
   '(trivial-types:proper-list rule-result))
 (common-lisp:defun make-__listofruleresult
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list rule-result))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:deftype |__stringMax256| () 'common-lisp:string)
(common-lisp:deftype |__stringMax64| () 'common-lisp:string)
(common-lisp:deftype |__stringMax64PatternAAZAZ09Z| () 'common-lisp:string)
(common-lisp:deftype |__stringPatternAWSAZaZ09AZaZ09| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun create-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name cells tags)
   (common-lisp:declare (common-lisp:ignorable cell-name cells tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" "/cells" "CreateCell"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-cell))
(common-lisp:progn
 (common-lisp:defun create-cross-account-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cross-account-authorization)
   (common-lisp:declare (common-lisp:ignorable cross-account-authorization))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-cross-account-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" "/crossaccountauthorizations"
        "CreateCrossAccountAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-cross-account-authorization))
(common-lisp:progn
 (common-lisp:defun create-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name resource-set-name
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable readiness-check-name resource-set-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" "/readinesschecks" "CreateReadinessCheck"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-readiness-check))
(common-lisp:progn
 (common-lisp:defun create-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cells recovery-group-name tags)
   (common-lisp:declare (common-lisp:ignorable cells recovery-group-name tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" "/recoverygroups" "CreateRecoveryGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-recovery-group))
(common-lisp:progn
 (common-lisp:defun create-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name resource-set-type
                     resources tags)
   (common-lisp:declare
    (common-lisp:ignorable resource-set-name resource-set-type resources tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST" "/resourcesets" "CreateResourceSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-resource-set))
(common-lisp:progn
 (common-lisp:defun delete-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name)
   (common-lisp:declare (common-lisp:ignorable cell-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "DeleteCell"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-cell))
(common-lisp:progn
 (common-lisp:defun delete-cross-account-authorization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cross-account-authorization)
   (common-lisp:declare (common-lisp:ignorable cross-account-authorization))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-cross-account-authorization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/crossaccountauthorizations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cross-account-authorization))))
        "DeleteCrossAccountAuthorization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-cross-account-authorization))
(common-lisp:progn
 (common-lisp:defun delete-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name)
   (common-lisp:declare (common-lisp:ignorable readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "DeleteReadinessCheck"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-readiness-check))
(common-lisp:progn
 (common-lisp:defun delete-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "DeleteRecoveryGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-recovery-group))
(common-lisp:progn
 (common-lisp:defun delete-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name)
   (common-lisp:declare (common-lisp:ignorable resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "DeleteResourceSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-resource-set))
(common-lisp:progn
 (common-lisp:defun get-architecture-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     recovery-group-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-architecture-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/recoverygroups/~A/architectureRecommendations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetArchitectureRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-architecture-recommendations))
(common-lisp:progn
 (common-lisp:defun get-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name)
   (common-lisp:declare (common-lisp:ignorable cell-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "GetCell"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-cell))
(common-lisp:progn
 (common-lisp:defun get-cell-readiness-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable cell-name max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-cell-readiness-summary-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cellreadiness/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "GetCellReadinessSummary"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-cell-readiness-summary))
(common-lisp:progn
 (common-lisp:defun get-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name)
   (common-lisp:declare (common-lisp:ignorable readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "GetReadinessCheck"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-readiness-check))
(common-lisp:progn
 (common-lisp:defun get-readiness-check-resource-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     readiness-check-name resource-identifier)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token readiness-check-name
     resource-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-readiness-check-resource-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/readinesschecks/~A/resource/~A/status"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-identifier))))
        "GetReadinessCheckResourceStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-readiness-check-resource-status))
(common-lisp:progn
 (common-lisp:defun get-readiness-check-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     readiness-check-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token readiness-check-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-readiness-check-status-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A/status"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "GetReadinessCheckStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-readiness-check-status))
(common-lisp:progn
 (common-lisp:defun get-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetRecoveryGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recovery-group))
(common-lisp:progn
 (common-lisp:defun get-recovery-group-readiness-summary
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token
                     recovery-group-name)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recovery-group-readiness-summary-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroupreadiness/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "GetRecoveryGroupReadinessSummary"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recovery-group-readiness-summary))
(common-lisp:progn
 (common-lisp:defun get-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name)
   (common-lisp:declare (common-lisp:ignorable resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "GetResourceSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-resource-set))
(common-lisp:progn
 (common-lisp:defun list-cells
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-cells-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/cells" "ListCells"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-cells))
(common-lisp:progn
 (common-lisp:defun list-cross-account-authorizations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-cross-account-authorizations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/crossaccountauthorizations" "ListCrossAccountAuthorizations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-cross-account-authorizations))
(common-lisp:progn
 (common-lisp:defun list-readiness-checks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-readiness-checks-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/readinesschecks" "ListReadinessChecks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-readiness-checks))
(common-lisp:progn
 (common-lisp:defun list-recovery-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-recovery-groups-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/recoverygroups" "ListRecoveryGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-recovery-groups))
(common-lisp:progn
 (common-lisp:defun list-resource-sets
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-resource-sets-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/resourcesets" "ListResourceSets"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-resource-sets))
(common-lisp:progn
 (common-lisp:defun list-rules
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token resource-type)
   (common-lisp:declare
    (common-lisp:ignorable max-results next-token resource-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-rules-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET" "/rules" "ListRules"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-rules))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resources
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resources-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResources"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resources))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-cell
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cell-name cells)
   (common-lisp:declare (common-lisp:ignorable cell-name cells))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-cell-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/cells/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'cell-name))))
        "UpdateCell"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-cell))
(common-lisp:progn
 (common-lisp:defun update-readiness-check
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key readiness-check-name resource-set-name)
   (common-lisp:declare
    (common-lisp:ignorable readiness-check-name resource-set-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-readiness-check-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/readinesschecks/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'readiness-check-name))))
        "UpdateReadinessCheck"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-readiness-check))
(common-lisp:progn
 (common-lisp:defun update-recovery-group
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key cells recovery-group-name)
   (common-lisp:declare (common-lisp:ignorable cells recovery-group-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-recovery-group-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/recoverygroups/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'recovery-group-name))))
        "UpdateRecoveryGroup"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-recovery-group))
(common-lisp:progn
 (common-lisp:defun update-resource-set
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-set-name resource-set-type
                     resources)
   (common-lisp:declare
    (common-lisp:ignorable resource-set-name resource-set-type resources))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-resource-set-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'route53-recovery-readiness-request aws-sdk/generator/operation::input
        "PUT"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/resourcesets/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-set-name))))
        "UpdateResourceSet"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-resource-set))
