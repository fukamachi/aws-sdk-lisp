;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/runtime.sagemaker/api
  (:use)
  (:nicknames #:aws/runtime.sagemaker)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/runtime.sagemaker/api)
(common-lisp:progn
 (common-lisp:define-condition runtime.sagemaker-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'runtime.sagemaker-error))
(common-lisp:progn
 (common-lisp:defclass runtime.sagemaker-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "runtime.sagemaker"
                        :api-version "2017-05-13" :host-prefix
                        "runtime.sagemaker" :signing-name "sagemaker"
                        :global-host common-lisp:nil))
 (common-lisp:export 'runtime.sagemaker-request))
(common-lisp:defvar *error-map*
  '(("InternalDependencyException" . internal-dependency-exception)
    ("InternalFailure" . internal-failure)
    ("InternalStreamFailure" . internal-stream-failure)
    ("ModelError" . model-error)
    ("ModelNotReadyException" . model-not-ready-exception)
    ("ModelStreamError" . model-stream-error)
    ("ServiceUnavailable" . service-unavailable)
    ("ValidationError" . validation-error)))
(common-lisp:deftype body-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype custom-attributes-header () 'common-lisp:string)
(common-lisp:deftype enable-explanations-header () 'common-lisp:string)
(common-lisp:deftype endpoint-name () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype header () 'common-lisp:string)
(common-lisp:deftype inference-component-header () 'common-lisp:string)
(common-lisp:deftype inference-id () 'common-lisp:string)
(common-lisp:deftype input-location-header () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-dependency-exception
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-dependency-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-dependency-exception
                    'internal-dependency-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-failure
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure 'internal-failure-message)))
(common-lisp:progn
 (common-lisp:define-condition internal-stream-failure
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-stream-failure-message)))
 (common-lisp:export
  (common-lisp:list 'internal-stream-failure 'internal-stream-failure-message)))
(common-lisp:deftype invocation-timeout-seconds-header () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-async-input common-lisp:nil
                       ((endpoint-name :initarg :endpoint-name :initform
                         (common-lisp:error ":endpoint-name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-endpoint-name
                         :shape "EndpointName" :location "uri" :location-name
                         "EndpointName")
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-async-input-content-type
                         :shape "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-Content-Type")
                        (accept :initarg :accept :initform common-lisp:nil
                         :type (common-lisp:or header common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-accept :shape
                         "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-Accept")
                        (custom-attributes :initarg :custom-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-attributes-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-custom-attributes
                         :shape "CustomAttributesHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Custom-Attributes")
                        (inference-id :initarg :inference-id :initform
                         common-lisp:nil :type
                         (common-lisp:or inference-id common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-inference-id
                         :shape "InferenceId" :location "header" :location-name
                         "X-Amzn-SageMaker-Inference-Id")
                        (input-location :initarg :input-location :initform
                         (common-lisp:error ":input-location is required")
                         :type
                         (common-lisp:or input-location-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-input-location
                         :shape "InputLocationHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-InputLocation")
                        (request-ttlseconds :initarg :request-ttlseconds
                         :initform common-lisp:nil :type
                         (common-lisp:or request-ttlseconds-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-request-ttlseconds
                         :shape "RequestTTLSecondsHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-RequestTTLSeconds")
                        (invocation-timeout-seconds :initarg
                         :invocation-timeout-seconds :initform common-lisp:nil
                         :type
                         (common-lisp:or invocation-timeout-seconds-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-async-input-invocation-timeout-seconds
                         :shape "InvocationTimeoutSecondsHeader" :location
                         "header" :location-name
                         "X-Amzn-SageMaker-InvocationTimeoutSeconds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-async-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoke-endpoint-async-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-async-input
                    'make-invoke-endpoint-async-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "X-Amzn-SageMaker-Content-Type"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept))
      (common-lisp:cons "X-Amzn-SageMaker-Accept"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:cons "X-Amzn-SageMaker-Custom-Attributes"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inference-id))
      (common-lisp:cons "X-Amzn-SageMaker-Inference-Id"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-location))
      (common-lisp:cons "X-Amzn-SageMaker-InputLocation"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'request-ttlseconds))
      (common-lisp:cons "X-Amzn-SageMaker-RequestTTLSeconds"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invocation-timeout-seconds))
      (common-lisp:cons "X-Amzn-SageMaker-InvocationTimeoutSeconds"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-async-output common-lisp:nil
                       ((inference-id :initarg :inference-id :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-async-output-inference-id
                         :shape "Header" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (output-location :initarg :output-location :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-async-output-output-location
                         :shape "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-OutputLocation")
                        (failure-location :initarg :failure-location :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-async-output-failure-location
                         :shape "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-FailureLocation"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-async-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoke-endpoint-async-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-async-output
                    'make-invoke-endpoint-async-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'output-location))
      (common-lisp:cons "X-Amzn-SageMaker-OutputLocation"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-location))
      (common-lisp:cons "X-Amzn-SageMaker-FailureLocation"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inference-id))
      (common-lisp:list
       (common-lisp:cons "InferenceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-async-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-input common-lisp:nil
                       ((endpoint-name :initarg :endpoint-name :initform
                         (common-lisp:error ":endpoint-name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-endpoint-name
                         :shape "EndpointName" :location "uri" :location-name
                         "EndpointName")
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or body-blob common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-input-body :shape
                         "BodyBlob" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-input-content-type :shape
                         "Header" :location "header" :location-name
                         "Content-Type")
                        (accept :initarg :accept :initform common-lisp:nil
                         :type (common-lisp:or header common-lisp:null)
                         :accessor struct-shape-invoke-endpoint-input-accept
                         :shape "Header" :location "header" :location-name
                         "Accept")
                        (custom-attributes :initarg :custom-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-attributes-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-custom-attributes
                         :shape "CustomAttributesHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Custom-Attributes")
                        (target-model :initarg :target-model :initform
                         common-lisp:nil :type
                         (common-lisp:or target-model-header common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-target-model :shape
                         "TargetModelHeader" :location "header" :location-name
                         "X-Amzn-SageMaker-Target-Model")
                        (target-variant :initarg :target-variant :initform
                         common-lisp:nil :type
                         (common-lisp:or target-variant-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-target-variant
                         :shape "TargetVariantHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Target-Variant")
                        (target-container-hostname :initarg
                         :target-container-hostname :initform common-lisp:nil
                         :type
                         (common-lisp:or target-container-hostname-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-target-container-hostname
                         :shape "TargetContainerHostnameHeader" :location
                         "header" :location-name
                         "X-Amzn-SageMaker-Target-Container-Hostname")
                        (inference-id :initarg :inference-id :initform
                         common-lisp:nil :type
                         (common-lisp:or inference-id common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-inference-id :shape
                         "InferenceId" :location "header" :location-name
                         "X-Amzn-SageMaker-Inference-Id")
                        (enable-explanations :initarg :enable-explanations
                         :initform common-lisp:nil :type
                         (common-lisp:or enable-explanations-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-enable-explanations
                         :shape "EnableExplanationsHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Enable-Explanations")
                        (inference-component-name :initarg
                         :inference-component-name :initform common-lisp:nil
                         :type
                         (common-lisp:or inference-component-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-input-inference-component-name
                         :shape "InferenceComponentHeader" :location "header"
                         :location-name
                         "X-Amzn-SageMaker-Inference-Component"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoke-endpoint-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-input 'make-invoke-endpoint-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept))
      (common-lisp:cons "Accept" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:cons "X-Amzn-SageMaker-Custom-Attributes"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-model))
      (common-lisp:cons "X-Amzn-SageMaker-Target-Model"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-variant))
      (common-lisp:cons "X-Amzn-SageMaker-Target-Variant"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-container-hostname))
      (common-lisp:cons "X-Amzn-SageMaker-Target-Container-Hostname"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inference-id))
      (common-lisp:cons "X-Amzn-SageMaker-Inference-Id"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'enable-explanations))
      (common-lisp:cons "X-Amzn-SageMaker-Enable-Explanations"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inference-component-name))
      (common-lisp:cons "X-Amzn-SageMaker-Inference-Component"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-input))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-output common-lisp:nil
                       ((body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or body-blob common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-output-body :shape
                         "BodyBlob" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-output-content-type
                         :shape "Header" :location "header" :location-name
                         "Content-Type")
                        (invoked-production-variant :initarg
                         :invoked-production-variant :initform common-lisp:nil
                         :type (common-lisp:or header common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-output-invoked-production-variant
                         :shape "Header" :location "header" :location-name
                         "x-Amzn-Invoked-Production-Variant")
                        (custom-attributes :initarg :custom-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-attributes-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-output-custom-attributes
                         :shape "CustomAttributesHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Custom-Attributes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'invoke-endpoint-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-output 'make-invoke-endpoint-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invoked-production-variant))
      (common-lisp:cons "x-Amzn-Invoked-Production-Variant"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:cons "X-Amzn-SageMaker-Custom-Attributes"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-output))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-output))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-with-response-stream-input
                       common-lisp:nil
                       ((endpoint-name :initarg :endpoint-name :initform
                         (common-lisp:error ":endpoint-name is required") :type
                         (common-lisp:or endpoint-name common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-endpoint-name
                         :shape "EndpointName" :location "uri" :location-name
                         "EndpointName")
                        (body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or body-blob common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-body
                         :shape "BodyBlob" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-content-type
                         :shape "Header" :location "header" :location-name
                         "Content-Type")
                        (accept :initarg :accept :initform common-lisp:nil
                         :type (common-lisp:or header common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-accept
                         :shape "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-Accept")
                        (custom-attributes :initarg :custom-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-attributes-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-custom-attributes
                         :shape "CustomAttributesHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Custom-Attributes")
                        (target-variant :initarg :target-variant :initform
                         common-lisp:nil :type
                         (common-lisp:or target-variant-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-target-variant
                         :shape "TargetVariantHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Target-Variant")
                        (target-container-hostname :initarg
                         :target-container-hostname :initform common-lisp:nil
                         :type
                         (common-lisp:or target-container-hostname-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-target-container-hostname
                         :shape "TargetContainerHostnameHeader" :location
                         "header" :location-name
                         "X-Amzn-SageMaker-Target-Container-Hostname")
                        (inference-id :initarg :inference-id :initform
                         common-lisp:nil :type
                         (common-lisp:or inference-id common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-inference-id
                         :shape "InferenceId" :location "header" :location-name
                         "X-Amzn-SageMaker-Inference-Id")
                        (inference-component-name :initarg
                         :inference-component-name :initform common-lisp:nil
                         :type
                         (common-lisp:or inference-component-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-input-inference-component-name
                         :shape "InferenceComponentHeader" :location "header"
                         :location-name
                         "X-Amzn-SageMaker-Inference-Component"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-with-response-stream-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'invoke-endpoint-with-response-stream-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-with-response-stream-input
                    'make-invoke-endpoint-with-response-stream-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "Content-Type" aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'accept))
      (common-lisp:cons "X-Amzn-SageMaker-Accept"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:cons "X-Amzn-SageMaker-Custom-Attributes"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-variant))
      (common-lisp:cons "X-Amzn-SageMaker-Target-Variant"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'target-container-hostname))
      (common-lisp:cons "X-Amzn-SageMaker-Target-Container-Hostname"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'inference-id))
      (common-lisp:cons "X-Amzn-SageMaker-Inference-Id"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inference-component-name))
      (common-lisp:cons "X-Amzn-SageMaker-Inference-Component"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-input))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-input))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass invoke-endpoint-with-response-stream-output
                       common-lisp:nil
                       ((body :initarg :body :initform
                         (common-lisp:error ":body is required") :type
                         (common-lisp:or response-stream common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-output-body
                         :shape "ResponseStream" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or header common-lisp:null) :accessor
                         struct-shape-invoke-endpoint-with-response-stream-output-content-type
                         :shape "Header" :location "header" :location-name
                         "X-Amzn-SageMaker-Content-Type")
                        (invoked-production-variant :initarg
                         :invoked-production-variant :initform common-lisp:nil
                         :type (common-lisp:or header common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-output-invoked-production-variant
                         :shape "Header" :location "header" :location-name
                         "x-Amzn-Invoked-Production-Variant")
                        (custom-attributes :initarg :custom-attributes
                         :initform common-lisp:nil :type
                         (common-lisp:or custom-attributes-header
                                         common-lisp:null)
                         :accessor
                         struct-shape-invoke-endpoint-with-response-stream-output-custom-attributes
                         :shape "CustomAttributesHeader" :location "header"
                         :location-name "X-Amzn-SageMaker-Custom-Attributes"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-invoke-endpoint-with-response-stream-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'invoke-endpoint-with-response-stream-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'invoke-endpoint-with-response-stream-output
                    'make-invoke-endpoint-with-response-stream-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'content-type))
      (common-lisp:cons "X-Amzn-SageMaker-Content-Type"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'invoked-production-variant))
      (common-lisp:cons "x-Amzn-Invoked-Production-Variant"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'custom-attributes))
      (common-lisp:cons "X-Amzn-SageMaker-Custom-Attributes"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'body))
      (common-lisp:list
       (common-lisp:cons "Body"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-output))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'body))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          invoke-endpoint-with-response-stream-output))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype log-stream-arn () 'common-lisp:string)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition model-error
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       model-error-message)
      (original-status-code :initarg :original-status-code :initform
       common-lisp:nil :reader model-error-original-status-code)
      (original-message :initarg :original-message :initform common-lisp:nil
       :reader model-error-original-message)
      (log-stream-arn :initarg :log-stream-arn :initform common-lisp:nil
       :reader model-error-log-stream-arn)))
 (common-lisp:export
  (common-lisp:list 'model-error 'model-error-message
                    'model-error-original-status-code
                    'model-error-original-message 'model-error-log-stream-arn)))
(common-lisp:progn
 (common-lisp:define-condition model-not-ready-exception
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       model-not-ready-exception-message)))
 (common-lisp:export
  (common-lisp:list 'model-not-ready-exception
                    'model-not-ready-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition model-stream-error
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       model-stream-error-message)
      (error-code :initarg :error-code :initform common-lisp:nil :reader
       model-stream-error-error-code)))
 (common-lisp:export
  (common-lisp:list 'model-stream-error 'model-stream-error-message
                    'model-stream-error-error-code)))
(common-lisp:deftype part-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass payload-part common-lisp:nil
                       ((bytes :initarg :bytes :initform common-lisp:nil :type
                         (common-lisp:or part-blob common-lisp:null) :accessor
                         struct-shape-payload-part-bytes :shape "PartBlob"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-payload-part
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'payload-part
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'payload-part 'make-payload-part))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input payload-part))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input payload-part))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bytes))
      (common-lisp:list
       (common-lisp:cons "Bytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input payload-part))
   common-lisp:nil))
(common-lisp:deftype request-ttlseconds-header () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass response-stream common-lisp:nil
                       ((payload-part :initarg :payload-part :initform
                         common-lisp:nil :type
                         (common-lisp:or payload-part common-lisp:null)
                         :accessor struct-shape-response-stream-payload-part
                         :shape "PayloadPart" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-stream-error :initarg :model-stream-error
                         :initform common-lisp:nil :type
                         (common-lisp:or model-stream-error common-lisp:null)
                         :accessor
                         struct-shape-response-stream-model-stream-error :shape
                         "ModelStreamError" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (internal-stream-failure :initarg
                         :internal-stream-failure :initform common-lisp:nil
                         :type
                         (common-lisp:or internal-stream-failure
                                         common-lisp:null)
                         :accessor
                         struct-shape-response-stream-internal-stream-failure
                         :shape "InternalStreamFailure" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-response-stream
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'response-stream
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'response-stream 'make-response-stream))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input response-stream))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input response-stream))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-part))
      (common-lisp:list
       (common-lisp:cons "PayloadPart"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-stream-error))
      (common-lisp:list
       (common-lisp:cons "ModelStreamError"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'internal-stream-failure))
      (common-lisp:list
       (common-lisp:cons "InternalStreamFailure"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input response-stream))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable 'service-unavailable-message)))
(common-lisp:deftype status-code () 'common-lisp:integer)
(common-lisp:deftype target-container-hostname-header () 'common-lisp:string)
(common-lisp:deftype target-model-header () 'common-lisp:string)
(common-lisp:deftype target-variant-header () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition validation-error
     (runtime.sagemaker-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       validation-error-message)))
 (common-lisp:export
  (common-lisp:list 'validation-error 'validation-error-message)))
(common-lisp:progn
 (common-lisp:defun invoke-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-name body content-type accept
                     custom-attributes target-model target-variant
                     target-container-hostname inference-id enable-explanations
                     inference-component-name)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-name body content-type accept
     custom-attributes target-model target-variant target-container-hostname
     inference-id enable-explanations inference-component-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invoke-endpoint-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'runtime.sagemaker-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/endpoints/~A/invocations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-name))))
        "InvokeEndpoint")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'invoke-endpoint))
(common-lisp:progn
 (common-lisp:defun invoke-endpoint-async
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-name content-type accept
                     custom-attributes inference-id input-location
                     request-ttlseconds invocation-timeout-seconds)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-name content-type accept custom-attributes
     inference-id input-location request-ttlseconds
     invocation-timeout-seconds))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-invoke-endpoint-async-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'runtime.sagemaker-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/endpoints/~A/async-invocations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-name))))
        "InvokeEndpointAsync"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'invoke-endpoint-async))
(common-lisp:progn
 (common-lisp:defun invoke-endpoint-with-response-stream
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key endpoint-name body content-type accept
                     custom-attributes target-variant target-container-hostname
                     inference-id inference-component-name)
   (common-lisp:declare
    (common-lisp:ignorable endpoint-name body content-type accept
     custom-attributes target-variant target-container-hostname inference-id
     inference-component-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-invoke-endpoint-with-response-stream-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'runtime.sagemaker-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/endpoints/~A/invocations-response-stream"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'endpoint-name))))
        "InvokeEndpointWithResponseStream"))
      "structure" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'invoke-endpoint-with-response-stream))
