;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/compute-optimizer/api (:use)
                             (:nicknames #:aws/compute-optimizer)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/compute-optimizer/api)
(common-lisp:progn
 (common-lisp:define-condition compute-optimizer-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'compute-optimizer-error))
(common-lisp:progn
 (common-lisp:defclass compute-optimizer-request
                       (aws-sdk/json-request:json-request) common-lisp:nil
                       (:default-initargs :service "compute-optimizer"
                        :api-version "2019-11-01" :host-prefix
                        "compute-optimizer" :signing-name "compute-optimizer"
                        :global-host common-lisp:nil :target-prefix
                        "ComputeOptimizerService" :json-version "1.0"))
 (common-lisp:export 'compute-optimizer-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("InternalServerException" . internal-server-exception)
    ("InvalidParameterValueException" . invalid-parameter-value-exception)
    ("LimitExceededException" . limit-exceeded-exception)
    ("MissingAuthenticationToken" . missing-authentication-token)
    ("OptInRequiredException" . opt-in-required-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:defclass account-enrollment-status common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-account-enrollment-status-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor
                         struct-shape-account-enrollment-status-status :shape
                         "Status" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor
                         struct-shape-account-enrollment-status-status-reason
                         :shape "StatusReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-account-enrollment-status-last-updated-timestamp
                         :shape "LastUpdatedTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-account-enrollment-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'account-enrollment-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'account-enrollment-status
                    'make-account-enrollment-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          account-enrollment-status))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype account-enrollment-statuses ()
   '(trivial-types:proper-list account-enrollment-status))
 (common-lisp:defun make-account-enrollment-statuses
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            account-enrollment-status))
   aws-sdk/generator/shape::members))
(common-lisp:deftype account-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype account-ids () '(trivial-types:proper-list account-id))
 (common-lisp:defun make-account-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list account-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype auto-scaling-configuration () 'common-lisp:string)
(common-lisp:deftype auto-scaling-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-arns ()
   '(trivial-types:proper-list auto-scaling-group-arn))
 (common-lisp:defun make-auto-scaling-group-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list auto-scaling-group-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-configuration common-lisp:nil
                       ((desired-capacity :initarg :desired-capacity :initform
                         common-lisp:nil :type
                         (common-lisp:or desired-capacity common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-configuration-desired-capacity
                         :shape "DesiredCapacity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (min-size :initarg :min-size :initform common-lisp:nil
                         :type (common-lisp:or min-size common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-configuration-min-size
                         :shape "MinSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-size :initarg :max-size :initform common-lisp:nil
                         :type (common-lisp:or max-size common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-configuration-max-size
                         :shape "MaxSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-type :initarg :instance-type :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-configuration-instance-type
                         :shape "InstanceType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-scaling-group-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-configuration
                    'make-auto-scaling-group-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-capacity))
      (common-lisp:list
       (common-lisp:cons "desiredCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'min-size))
      (common-lisp:list
       (common-lisp:cons "minSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-size))
      (common-lisp:list
       (common-lisp:cons "maxSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-estimated-monthly-savings
                       common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-estimated-monthly-savings-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-auto-scaling-group-estimated-monthly-savings-value
                         :shape "Value" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-scaling-group-estimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-estimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-estimated-monthly-savings
                    'make-auto-scaling-group-estimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:deftype auto-scaling-group-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-recommendation common-lisp:nil
                       ((account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-auto-scaling-group-recommendation-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-scaling-group-arn :initarg
                         :auto-scaling-group-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or auto-scaling-group-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-auto-scaling-group-arn
                         :shape "AutoScalingGroupArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-scaling-group-name :initarg
                         :auto-scaling-group-name :initform common-lisp:nil
                         :type
                         (common-lisp:or auto-scaling-group-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-auto-scaling-group-name
                         :shape "AutoScalingGroupName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type (common-lisp:or finding common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-finding
                         :shape "Finding" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (utilization-metrics :initarg :utilization-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or utilization-metrics common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-utilization-metrics
                         :shape "UtilizationMetrics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :look-back-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-look-back-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-configuration :initarg :current-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or auto-scaling-group-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-current-configuration
                         :shape "AutoScalingGroupConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-options :initarg
                         :recommendation-options :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          auto-scaling-group-recommendation-options
                          common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-recommendation-options
                         :shape "AutoScalingGroupRecommendationOptions"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-performance-risk :initarg
                         :current-performance-risk :initform common-lisp:nil
                         :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-current-performance-risk
                         :shape "CurrentPerformanceRisk" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :effective-recommendation-preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or effective-recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-effective-recommendation-preferences
                         :shape "EffectiveRecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-inferred-workload-types
                         :shape "InferredWorkloadTypes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-instance-gpu-info :initarg
                         :current-instance-gpu-info :initform common-lisp:nil
                         :type (common-lisp:or gpu-info common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-current-instance-gpu-info
                         :shape "GpuInfo" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-scaling-group-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation
                    'make-auto-scaling-group-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arn))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-name))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-instance-gpu-info))
      (common-lisp:list
       (common-lisp:cons "currentInstanceGpuInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-recommendation-option common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or auto-scaling-group-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-configuration
                         :shape "AutoScalingGroupConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :projected-utilization-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or projected-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-projected-utilization-metrics
                         :shape "ProjectedUtilizationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (performance-risk :initarg :performance-risk :initform
                         common-lisp:nil :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-performance-risk
                         :shape "PerformanceRisk" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-auto-scaling-group-recommendation-option-rank
                         :shape "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (migration-effort :initarg :migration-effort :initform
                         common-lisp:nil :type
                         (common-lisp:or migration-effort common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-migration-effort
                         :shape "MigrationEffort" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-gpu-info :initarg :instance-gpu-info
                         :initform common-lisp:nil :type
                         (common-lisp:or gpu-info common-lisp:null) :accessor
                         struct-shape-auto-scaling-group-recommendation-option-instance-gpu-info
                         :shape "GpuInfo" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity-after-discounts :initarg
                         :savings-opportunity-after-discounts :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          auto-scaling-group-savings-opportunity-after-discounts
                          common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-recommendation-option-savings-opportunity-after-discounts
                         :shape
                         "AutoScalingGroupSavingsOpportunityAfterDiscounts"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-scaling-group-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-recommendation-option
                    'make-auto-scaling-group-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-gpu-info))
      (common-lisp:list
       (common-lisp:cons "instanceGpuInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-after-discounts))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityAfterDiscounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendation-options ()
   '(trivial-types:proper-list auto-scaling-group-recommendation-option))
 (common-lisp:defun make-auto-scaling-group-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype auto-scaling-group-recommendations ()
   '(trivial-types:proper-list auto-scaling-group-recommendation))
 (common-lisp:defun make-auto-scaling-group-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            auto-scaling-group-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass auto-scaling-group-savings-opportunity-after-discounts
                       common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-savings-opportunity-after-discounts-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          auto-scaling-group-estimated-monthly-savings
                          common-lisp:null)
                         :accessor
                         struct-shape-auto-scaling-group-savings-opportunity-after-discounts-estimated-monthly-savings
                         :shape "AutoScalingGroupEstimatedMonthlySavings"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-auto-scaling-group-savings-opportunity-after-discounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'auto-scaling-group-savings-opportunity-after-discounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'auto-scaling-group-savings-opportunity-after-discounts
                    'make-auto-scaling-group-savings-opportunity-after-discounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-savings-opportunity-after-discounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-savings-opportunity-after-discounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          auto-scaling-group-savings-opportunity-after-discounts))
   common-lisp:nil))
(common-lisp:deftype code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass container-configuration common-lisp:nil
                       ((container-name :initarg :container-name :initform
                         common-lisp:nil :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor
                         struct-shape-container-configuration-container-name
                         :shape "ContainerName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (memory-size-configuration :initarg
                         :memory-size-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or memory-size-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-container-configuration-memory-size-configuration
                         :shape "MemorySizeConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cpu :initarg :cpu :initform common-lisp:nil :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor struct-shape-container-configuration-cpu
                         :shape "NullableCpu" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-container-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'container-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'container-configuration 'make-container-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-configurations ()
   '(trivial-types:proper-list container-configuration))
 (common-lisp:defun make-container-configurations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list container-configuration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype container-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass container-recommendation common-lisp:nil
                       ((container-name :initarg :container-name :initform
                         common-lisp:nil :type
                         (common-lisp:or container-name common-lisp:null)
                         :accessor
                         struct-shape-container-recommendation-container-name
                         :shape "ContainerName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (memory-size-configuration :initarg
                         :memory-size-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or memory-size-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-container-recommendation-memory-size-configuration
                         :shape "MemorySizeConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (cpu :initarg :cpu :initform common-lisp:nil :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor struct-shape-container-recommendation-cpu
                         :shape "NullableCpu" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-container-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'container-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'container-recommendation 'make-container-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'container-name))
      (common-lisp:list
       (common-lisp:cons "containerName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-configuration))
      (common-lisp:list
       (common-lisp:cons "memorySizeConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          container-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype container-recommendations ()
   '(trivial-types:proper-list container-recommendation))
 (common-lisp:defun make-container-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            container-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype cpu-size () 'common-lisp:integer)
(common-lisp:deftype cpu-vendor-architecture () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype cpu-vendor-architectures ()
   '(trivial-types:proper-list cpu-vendor-architecture))
 (common-lisp:defun make-cpu-vendor-architectures
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cpu-vendor-architecture))
   aws-sdk/generator/shape::members))
(common-lisp:deftype creation-timestamp () 'common-lisp:string)
(common-lisp:deftype currency () 'common-lisp:string)
(common-lisp:deftype current-instance-type () 'common-lisp:string)
(common-lisp:deftype current-performance-risk () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass current-performance-risk-ratings common-lisp:nil
                       ((high :initarg :high :initform common-lisp:nil :type
                         (common-lisp:or high common-lisp:null) :accessor
                         struct-shape-current-performance-risk-ratings-high
                         :shape "High" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (medium :initarg :medium :initform common-lisp:nil
                         :type (common-lisp:or medium common-lisp:null)
                         :accessor
                         struct-shape-current-performance-risk-ratings-medium
                         :shape "Medium" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (low :initarg :low :initform common-lisp:nil :type
                         (common-lisp:or low common-lisp:null) :accessor
                         struct-shape-current-performance-risk-ratings-low
                         :shape "Low" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (very-low :initarg :very-low :initform common-lisp:nil
                         :type (common-lisp:or very-low common-lisp:null)
                         :accessor
                         struct-shape-current-performance-risk-ratings-very-low
                         :shape "VeryLow" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-current-performance-risk-ratings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'current-performance-risk-ratings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'current-performance-risk-ratings
                    'make-current-performance-risk-ratings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'high))
      (common-lisp:list
       (common-lisp:cons "high"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'medium))
      (common-lisp:list
       (common-lisp:cons "medium"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'low))
      (common-lisp:list
       (common-lisp:cons "low"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'very-low))
      (common-lisp:list
       (common-lisp:cons "veryLow"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          current-performance-risk-ratings))
   common-lisp:nil))
(common-lisp:deftype customizable-metric-headroom () 'common-lisp:string)
(common-lisp:deftype customizable-metric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass customizable-metric-parameters common-lisp:nil
                       ((threshold :initarg :threshold :initform
                         common-lisp:nil :type
                         (common-lisp:or customizable-metric-threshold
                                         common-lisp:null)
                         :accessor
                         struct-shape-customizable-metric-parameters-threshold
                         :shape "CustomizableMetricThreshold" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (headroom :initarg :headroom :initform common-lisp:nil
                         :type
                         (common-lisp:or customizable-metric-headroom
                                         common-lisp:null)
                         :accessor
                         struct-shape-customizable-metric-parameters-headroom
                         :shape "CustomizableMetricHeadroom" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-customizable-metric-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'customizable-metric-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'customizable-metric-parameters
                    'make-customizable-metric-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          customizable-metric-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          customizable-metric-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'threshold))
      (common-lisp:list
       (common-lisp:cons "threshold"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'headroom))
      (common-lisp:list
       (common-lisp:cons "headroom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          customizable-metric-parameters))
   common-lisp:nil))
(common-lisp:deftype customizable-metric-threshold () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-recommendation-preferences-request
                       common-lisp:nil
                       ((resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resourcetype is required") :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-delete-recommendation-preferences-request-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-delete-recommendation-preferences-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-preference-names :initarg
                         :recommendation-preference-names :initform
                         (common-lisp:error
                          ":recommendationpreferencenames is required")
                         :type
                         (common-lisp:or recommendation-preference-names
                                         common-lisp:null)
                         :accessor
                         struct-shape-delete-recommendation-preferences-request-recommendation-preference-names
                         :shape "RecommendationPreferenceNames" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recommendation-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-request
                    'make-delete-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preference-names))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferenceNames"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-recommendation-preferences-response
                       common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-recommendation-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-recommendation-preferences-response
                    'make-delete-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-recommendation-export-jobs-request
                       common-lisp:nil
                       ((job-ids :initarg :job-ids :initform common-lisp:nil
                         :type (common-lisp:or job-ids common-lisp:null)
                         :accessor
                         struct-shape-describe-recommendation-export-jobs-request-job-ids
                         :shape "JobIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or job-filters common-lisp:null)
                         :accessor
                         struct-shape-describe-recommendation-export-jobs-request-filters
                         :shape "JobFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-recommendation-export-jobs-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-describe-recommendation-export-jobs-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-recommendation-export-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-recommendation-export-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-request
                    'make-describe-recommendation-export-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-ids))
      (common-lisp:list
       (common-lisp:cons "jobIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-recommendation-export-jobs-response
                       common-lisp:nil
                       ((recommendation-export-jobs :initarg
                         :recommendation-export-jobs :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-export-jobs
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-recommendation-export-jobs-response-recommendation-export-jobs
                         :shape "RecommendationExportJobs" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-describe-recommendation-export-jobs-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-recommendation-export-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-recommendation-export-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-recommendation-export-jobs-response
                    'make-describe-recommendation-export-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-export-jobs))
      (common-lisp:list
       (common-lisp:cons "recommendationExportJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-recommendation-export-jobs-response))
   common-lisp:nil))
(common-lisp:deftype desired-capacity () 'common-lisp:integer)
(common-lisp:deftype destination-bucket () 'common-lisp:string)
(common-lisp:deftype destination-key () 'common-lisp:string)
(common-lisp:deftype destination-key-prefix () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ebseffective-recommendation-preferences common-lisp:nil
                       ((savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or ebssavings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-ebseffective-recommendation-preferences-savings-estimation-mode
                         :shape "EBSSavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebseffective-recommendation-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ebseffective-recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ebseffective-recommendation-preferences
                    'make-ebseffective-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebseffective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebseffective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebseffective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ebsestimated-monthly-savings common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-ebsestimated-monthly-savings-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-ebsestimated-monthly-savings-value :shape
                         "Value" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebsestimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ebsestimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ebsestimated-monthly-savings
                    'make-ebsestimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebsestimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebsestimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebsestimated-monthly-savings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ebsfilter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ebsfilter-name common-lisp:null)
                         :accessor struct-shape-ebsfilter-name :shape
                         "EBSFilterName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-ebsfilter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebsfilter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ebsfilter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ebsfilter 'make-ebsfilter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ebsfilter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ebsfilter))
   common-lisp:nil))
(common-lisp:deftype ebsfilter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ebsfilters () '(trivial-types:proper-list ebsfilter))
 (common-lisp:defun make-ebsfilters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsfilter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ebsfinding () 'common-lisp:string)
(common-lisp:deftype ebsmetric-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ebssavings-estimation-mode common-lisp:nil
                       ((source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or ebssavings-estimation-mode-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-ebssavings-estimation-mode-source :shape
                         "EBSSavingsEstimationModeSource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebssavings-estimation-mode
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ebssavings-estimation-mode
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ebssavings-estimation-mode
                    'make-ebssavings-estimation-mode))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-estimation-mode))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-estimation-mode))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-estimation-mode))
   common-lisp:nil))
(common-lisp:deftype ebssavings-estimation-mode-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ebssavings-opportunity-after-discounts common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-ebssavings-opportunity-after-discounts-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or ebsestimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-ebssavings-opportunity-after-discounts-estimated-monthly-savings
                         :shape "EBSEstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebssavings-opportunity-after-discounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ebssavings-opportunity-after-discounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ebssavings-opportunity-after-discounts
                    'make-ebssavings-opportunity-after-discounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-opportunity-after-discounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-opportunity-after-discounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebssavings-opportunity-after-discounts))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ebsutilization-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ebsmetric-name common-lisp:null)
                         :accessor struct-shape-ebsutilization-metric-name
                         :shape "EBSMetricName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor struct-shape-ebsutilization-metric-statistic
                         :shape "MetricStatistic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor struct-shape-ebsutilization-metric-value
                         :shape "MetricValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ebsutilization-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ebsutilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ebsutilization-metric 'make-ebsutilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ebsutilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ebsutilization-metrics ()
   '(trivial-types:proper-list ebsutilization-metric))
 (common-lisp:defun make-ebsutilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ebsutilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecseffective-recommendation-preferences common-lisp:nil
                       ((savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or ecssavings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecseffective-recommendation-preferences-savings-estimation-mode
                         :shape "ECSSavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecseffective-recommendation-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecseffective-recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecseffective-recommendation-preferences
                    'make-ecseffective-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecseffective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecseffective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecseffective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ecsestimated-monthly-savings common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-ecsestimated-monthly-savings-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-ecsestimated-monthly-savings-value :shape
                         "Value" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsestimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ecsestimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsestimated-monthly-savings
                    'make-ecsestimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsestimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsestimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsestimated-monthly-savings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ecssavings-estimation-mode common-lisp:nil
                       ((source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or ecssavings-estimation-mode-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecssavings-estimation-mode-source :shape
                         "ECSSavingsEstimationModeSource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecssavings-estimation-mode
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ecssavings-estimation-mode
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecssavings-estimation-mode
                    'make-ecssavings-estimation-mode))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-estimation-mode))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-estimation-mode))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-estimation-mode))
   common-lisp:nil))
(common-lisp:deftype ecssavings-estimation-mode-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ecssavings-opportunity-after-discounts common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecssavings-opportunity-after-discounts-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or ecsestimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecssavings-opportunity-after-discounts-estimated-monthly-savings
                         :shape "ECSEstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecssavings-opportunity-after-discounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecssavings-opportunity-after-discounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecssavings-opportunity-after-discounts
                    'make-ecssavings-opportunity-after-discounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-opportunity-after-discounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-opportunity-after-discounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecssavings-opportunity-after-discounts))
   common-lisp:nil))
(common-lisp:deftype ecsservice-launch-type () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-name () 'common-lisp:string)
(common-lisp:deftype ecsservice-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass ecsservice-projected-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-metric-name :shape
                         "ECSServiceMetricName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timestamps :initarg :timestamps :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamps common-lisp:null) :accessor
                         struct-shape-ecsservice-projected-metric-timestamps
                         :shape "Timestamps" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (upper-bound-values :initarg :upper-bound-values
                         :initform common-lisp:nil :type
                         (common-lisp:or metric-values common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-metric-upper-bound-values
                         :shape "MetricValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lower-bound-values :initarg :lower-bound-values
                         :initform common-lisp:nil :type
                         (common-lisp:or metric-values common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-metric-lower-bound-values
                         :shape "MetricValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-projected-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ecsservice-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-metric
                    'make-ecsservice-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-values))
      (common-lisp:list
       (common-lisp:cons "upperBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-values))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-metrics ()
   '(trivial-types:proper-list ecsservice-projected-metric))
 (common-lisp:defun make-ecsservice-projected-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-projected-utilization-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-utilization-metric-name
                         :shape "ECSServiceMetricName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or ecsservice-metric-statistic
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-utilization-metric-statistic
                         :shape "ECSServiceMetricStatistic" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lower-bound-value :initarg :lower-bound-value
                         :initform common-lisp:nil :type
                         (common-lisp:or lower-bound-value common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-utilization-metric-lower-bound-value
                         :shape "LowerBoundValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (upper-bound-value :initarg :upper-bound-value
                         :initform common-lisp:nil :type
                         (common-lisp:or upper-bound-value common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-projected-utilization-metric-upper-bound-value
                         :shape "UpperBoundValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-projected-utilization-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-projected-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-projected-utilization-metric
                    'make-ecsservice-projected-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lower-bound-value))
      (common-lisp:list
       (common-lisp:cons "lowerBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'upper-bound-value))
      (common-lisp:list
       (common-lisp:cons "upperBoundValue"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-projected-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-projected-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-projected-utilization-metric))
 (common-lisp:defun make-ecsservice-projected-utilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-projected-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation common-lisp:nil
                       ((service-arn :initarg :service-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or service-arn common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-service-arn
                         :shape "ServiceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-ecsservice-recommendation-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-service-configuration :initarg
                         :current-service-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or service-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-current-service-configuration
                         :shape "ServiceConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (utilization-metrics :initarg :utilization-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-utilization-metrics
                         :shape "ECSServiceUtilizationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lookback-period-in-days :initarg
                         :lookback-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-lookback-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (launch-type :initarg :launch-type :initform
                         common-lisp:nil :type
                         (common-lisp:or ecsservice-launch-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-launch-type
                         :shape "ECSServiceLaunchType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type
                         (common-lisp:or ecsservice-recommendation-finding
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-finding :shape
                         "ECSServiceRecommendationFinding" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding-reason-codes :initarg :finding-reason-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          ecsservice-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-finding-reason-codes
                         :shape "ECSServiceRecommendationFindingReasonCodes"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (service-recommendation-options :initarg
                         :service-recommendation-options :initform
                         common-lisp:nil :type
                         (common-lisp:or ecsservice-recommendation-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-service-recommendation-options
                         :shape "ECSServiceRecommendationOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-performance-risk :initarg
                         :current-performance-risk :initform common-lisp:nil
                         :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-current-performance-risk
                         :shape "CurrentPerformanceRisk" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-ecsservice-recommendation-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :effective-recommendation-preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          ecseffective-recommendation-preferences
                          common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-effective-recommendation-preferences
                         :shape "ECSEffectiveRecommendationPreferences"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ecsservice-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation
                    'make-ecsservice-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-service-configuration))
      (common-lisp:list
       (common-lisp:cons "currentServiceConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'launch-type))
      (common-lisp:list
       (common-lisp:cons "launchType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'service-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "serviceRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation-filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-recommendation-filter-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-filter-name
                         :shape "ECSServiceRecommendationFilterName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-recommendation-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommendation-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-filter
                    'make-ecsservice-recommendation-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype ecsservice-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-filters ()
   '(trivial-types:proper-list ecsservice-recommendation-filter))
 (common-lisp:defun make-ecsservice-recommendation-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ecsservice-recommendation-finding () 'common-lisp:string)
(common-lisp:deftype ecsservice-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list ecsservice-recommendation-finding-reason-code))
 (common-lisp:defun make-ecsservice-recommendation-finding-reason-codes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommendation-option common-lisp:nil
                       ((memory :initarg :memory :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-memory
                         :shape "NullableMemory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cpu :initarg :cpu :initform common-lisp:nil :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-cpu
                         :shape "NullableCpu" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :projected-utilization-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          ecsservice-projected-utilization-metrics
                          common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-projected-utilization-metrics
                         :shape "ECSServiceProjectedUtilizationMetrics"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (container-recommendations :initarg
                         :container-recommendations :initform common-lisp:nil
                         :type
                         (common-lisp:or container-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-container-recommendations
                         :shape "ContainerRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (savings-opportunity-after-discounts :initarg
                         :savings-opportunity-after-discounts :initform
                         common-lisp:nil :type
                         (common-lisp:or ecssavings-opportunity-after-discounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommendation-option-savings-opportunity-after-discounts
                         :shape "ECSSavingsOpportunityAfterDiscounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommendation-option
                    'make-ecsservice-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-recommendations))
      (common-lisp:list
       (common-lisp:cons "containerRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-after-discounts))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityAfterDiscounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendation-options ()
   '(trivial-types:proper-list ecsservice-recommendation-option))
 (common-lisp:defun make-ecsservice-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommendations ()
   '(trivial-types:proper-list ecsservice-recommendation))
 (common-lisp:defun make-ecsservice-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-recommended-option-projected-metric
                       common-lisp:nil
                       ((recommended-cpu-units :initarg :recommended-cpu-units
                         :initform common-lisp:nil :type
                         (common-lisp:or cpu-size common-lisp:null) :accessor
                         struct-shape-ecsservice-recommended-option-projected-metric-recommended-cpu-units
                         :shape "CpuSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommended-memory-size :initarg
                         :recommended-memory-size :initform common-lisp:nil
                         :type (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommended-option-projected-metric-recommended-memory-size
                         :shape "MemorySize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (projected-metrics :initarg :projected-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-projected-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-recommended-option-projected-metric-projected-metrics
                         :shape "ECSServiceProjectedMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-recommended-option-projected-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-recommended-option-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-recommended-option-projected-metric
                    'make-ecsservice-recommended-option-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-cpu-units))
      (common-lisp:list
       (common-lisp:cons "recommendedCpuUnits"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-memory-size))
      (common-lisp:list
       (common-lisp:cons "recommendedMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-recommended-option-projected-metrics ()
   '(trivial-types:proper-list ecsservice-recommended-option-projected-metric))
 (common-lisp:defun make-ecsservice-recommended-option-projected-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass ecsservice-utilization-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or ecsservice-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-utilization-metric-name :shape
                         "ECSServiceMetricName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or ecsservice-metric-statistic
                                         common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-utilization-metric-statistic
                         :shape "ECSServiceMetricStatistic" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor
                         struct-shape-ecsservice-utilization-metric-value
                         :shape "MetricValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ecsservice-utilization-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'ecsservice-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ecsservice-utilization-metric
                    'make-ecsservice-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          ecsservice-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype ecsservice-utilization-metrics ()
   '(trivial-types:proper-list ecsservice-utilization-metric))
 (common-lisp:defun make-ecsservice-utilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            ecsservice-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass effective-preferred-resource common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or preferred-resource-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-preferred-resource-name :shape
                         "PreferredResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-list :initarg :include-list :initform
                         common-lisp:nil :type
                         (common-lisp:or preferred-resource-values
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-preferred-resource-include-list
                         :shape "PreferredResourceValues" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (effective-include-list :initarg
                         :effective-include-list :initform common-lisp:nil
                         :type
                         (common-lisp:or preferred-resource-values
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-preferred-resource-effective-include-list
                         :shape "PreferredResourceValues" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (exclude-list :initarg :exclude-list :initform
                         common-lisp:nil :type
                         (common-lisp:or preferred-resource-values
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-preferred-resource-exclude-list
                         :shape "PreferredResourceValues" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-effective-preferred-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'effective-preferred-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'effective-preferred-resource
                    'make-effective-preferred-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-preferred-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-preferred-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-list))
      (common-lisp:list
       (common-lisp:cons "includeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-include-list))
      (common-lisp:list
       (common-lisp:cons "effectiveIncludeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exclude-list))
      (common-lisp:list
       (common-lisp:cons "excludeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-preferred-resource))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype effective-preferred-resources ()
   '(trivial-types:proper-list effective-preferred-resource))
 (common-lisp:defun make-effective-preferred-resources
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            effective-preferred-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass effective-recommendation-preferences common-lisp:nil
                       ((cpu-vendor-architectures :initarg
                         :cpu-vendor-architectures :initform common-lisp:nil
                         :type
                         (common-lisp:or cpu-vendor-architectures
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-cpu-vendor-architectures
                         :shape "CpuVendorArchitectures" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :enhanced-infrastructure-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-enhanced-infrastructure-metrics
                         :shape "EnhancedInfrastructureMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-inferred-workload-types
                         :shape "InferredWorkloadTypesPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (external-metrics-preference :initarg
                         :external-metrics-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-external-metrics-preference
                         :shape "ExternalMetricsPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (look-back-period :initarg :look-back-period :initform
                         common-lisp:nil :type
                         (common-lisp:or look-back-period-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-look-back-period
                         :shape "LookBackPeriodPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (utilization-preferences :initarg
                         :utilization-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or utilization-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-utilization-preferences
                         :shape "UtilizationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preferred-resources :initarg :preferred-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or effective-preferred-resources
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-preferred-resources
                         :shape "EffectivePreferredResources" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or instance-savings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-effective-recommendation-preferences-savings-estimation-mode
                         :shape "InstanceSavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-effective-recommendation-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'effective-recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'effective-recommendation-preferences
                    'make-effective-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'look-back-period))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'utilization-preferences))
      (common-lisp:list
       (common-lisp:cons "utilizationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferred-resources))
      (common-lisp:list
       (common-lisp:cons "preferredResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          effective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:deftype enhanced-infrastructure-metrics () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass enrollment-filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or enrollment-filter-name
                                         common-lisp:null)
                         :accessor struct-shape-enrollment-filter-name :shape
                         "EnrollmentFilterName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-enrollment-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-enrollment-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'enrollment-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'enrollment-filter 'make-enrollment-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input enrollment-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input enrollment-filter))
   common-lisp:nil))
(common-lisp:deftype enrollment-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype enrollment-filters ()
   '(trivial-types:proper-list enrollment-filter))
 (common-lisp:defun make-enrollment-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list enrollment-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass estimated-monthly-savings common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-estimated-monthly-savings-currency :shape
                         "Currency" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-estimated-monthly-savings-value :shape
                         "Value" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-estimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'estimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'estimated-monthly-savings
                    'make-estimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-auto-scaling-group-recommendations-request
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or filters common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-filters
                         :shape "Filters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-auto-scaling-group-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-fields-to-export
                         :shape "ExportableAutoScalingGroupFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-preferences :initarg
                         :recommendation-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-request-recommendation-preferences
                         :shape "RecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-auto-scaling-group-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-auto-scaling-group-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-request
                    'make-export-auto-scaling-group-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-auto-scaling-group-recommendations-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-auto-scaling-group-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-auto-scaling-group-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-auto-scaling-group-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-auto-scaling-group-recommendations-response
                    'make-export-auto-scaling-group-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-destination common-lisp:nil
                       ((s3 :initarg :s3 :initform common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor struct-shape-export-destination-s3 :shape
                         "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'export-destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-destination 'make-export-destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input export-destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3))
      (common-lisp:list
       (common-lisp:cons "s3"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input export-destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ebsvolume-recommendations-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or ebsfilters common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-filters
                         :shape "EBSFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-volume-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-fields-to-export
                         :shape "ExportableVolumeFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ebsvolume-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ebsvolume-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-request
                    'make-export-ebsvolume-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ebsvolume-recommendations-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-ebsvolume-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ebsvolume-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ebsvolume-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ebsvolume-recommendations-response
                    'make-export-ebsvolume-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ec2instance-recommendations-request
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or filters common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-filters
                         :shape "Filters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-instance-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-fields-to-export
                         :shape "ExportableInstanceFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-preferences :initarg
                         :recommendation-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-request-recommendation-preferences
                         :shape "RecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ec2instance-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ec2instance-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-request
                    'make-export-ec2instance-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ec2instance-recommendations-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-ec2instance-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ec2instance-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ec2instance-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ec2instance-recommendations-response
                    'make-export-ec2instance-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ecsservice-recommendations-request
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or ecsservice-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-filters
                         :shape "ECSServiceRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-ecsservice-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-fields-to-export
                         :shape "ExportableECSServiceFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ecsservice-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ecsservice-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-request
                    'make-export-ecsservice-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-ecsservice-recommendations-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-ecsservice-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-ecsservice-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-ecsservice-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-ecsservice-recommendations-response
                    'make-export-ecsservice-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-lambda-function-recommendations-request
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-function-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-filters
                         :shape "LambdaFunctionRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-lambda-function-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-fields-to-export
                         :shape "ExportableLambdaFunctionFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-lambda-function-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-lambda-function-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-request
                    'make-export-lambda-function-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-lambda-function-recommendations-response
                       common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-lambda-function-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-lambda-function-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-lambda-function-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-lambda-function-recommendations-response
                    'make-export-lambda-function-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-license-recommendations-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or license-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-filters
                         :shape "LicenseRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (fields-to-export :initarg :fields-to-export :initform
                         common-lisp:nil :type
                         (common-lisp:or exportable-license-fields
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-fields-to-export
                         :shape "ExportableLicenseFields" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (s3destination-config :initarg :s3destination-config
                         :initform
                         (common-lisp:error ":s3destinationconfig is required")
                         :type
                         (common-lisp:or s3destination-config common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-s3destination-config
                         :shape "S3DestinationConfig" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-format :initarg :file-format :initform
                         common-lisp:nil :type
                         (common-lisp:or file-format common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-file-format
                         :shape "FileFormat" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-license-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-license-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-license-recommendations-request
                    'make-export-license-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'fields-to-export))
      (common-lisp:list
       (common-lisp:cons "fieldsToExport"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           's3destination-config))
      (common-lisp:list
       (common-lisp:cons "s3DestinationConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-format))
      (common-lisp:list
       (common-lisp:cons "fileFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass export-license-recommendations-response common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-response-job-id
                         :shape "JobId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-export-license-recommendations-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-export-license-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'export-license-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'export-license-recommendations-response
                    'make-export-license-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "s3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          export-license-recommendations-response))
   common-lisp:nil))
(common-lisp:deftype exportable-auto-scaling-group-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-auto-scaling-group-fields ()
   '(trivial-types:proper-list exportable-auto-scaling-group-field))
 (common-lisp:defun make-exportable-auto-scaling-group-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-auto-scaling-group-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-ecsservice-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-ecsservice-fields ()
   '(trivial-types:proper-list exportable-ecsservice-field))
 (common-lisp:defun make-exportable-ecsservice-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-ecsservice-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-instance-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-instance-fields ()
   '(trivial-types:proper-list exportable-instance-field))
 (common-lisp:defun make-exportable-instance-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-instance-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-lambda-function-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-lambda-function-fields ()
   '(trivial-types:proper-list exportable-lambda-function-field))
 (common-lisp:defun make-exportable-lambda-function-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-lambda-function-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-license-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-license-fields ()
   '(trivial-types:proper-list exportable-license-field))
 (common-lisp:defun make-exportable-license-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            exportable-license-field))
   aws-sdk/generator/shape::members))
(common-lisp:deftype exportable-volume-field () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype exportable-volume-fields ()
   '(trivial-types:proper-list exportable-volume-field))
 (common-lisp:defun make-exportable-volume-fields
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list exportable-volume-field))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass external-metric-status common-lisp:nil
                       ((status-code :initarg :status-code :initform
                         common-lisp:nil :type
                         (common-lisp:or external-metric-status-code
                                         common-lisp:null)
                         :accessor
                         struct-shape-external-metric-status-status-code :shape
                         "ExternalMetricStatusCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or external-metric-status-reason
                                         common-lisp:null)
                         :accessor
                         struct-shape-external-metric-status-status-reason
                         :shape "ExternalMetricStatusReason" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-external-metric-status
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'external-metric-status
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'external-metric-status 'make-external-metric-status))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          external-metric-status))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          external-metric-status))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-code))
      (common-lisp:list
       (common-lisp:cons "statusCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          external-metric-status))
   common-lisp:nil))
(common-lisp:deftype external-metric-status-code () 'common-lisp:string)
(common-lisp:deftype external-metric-status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass external-metrics-preference common-lisp:nil
                       ((source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metrics-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-external-metrics-preference-source :shape
                         "ExternalMetricsSource" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-external-metrics-preference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'external-metrics-preference
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'external-metrics-preference
                    'make-external-metrics-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          external-metrics-preference))
   common-lisp:nil))
(common-lisp:deftype external-metrics-source () 'common-lisp:string)
(common-lisp:deftype failure-reason () 'common-lisp:string)
(common-lisp:deftype file-format () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or filter-name common-lisp:null)
                         :accessor struct-shape-filter-name :shape "FilterName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'filter 'make-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input filter))
   common-lisp:nil))
(common-lisp:deftype filter-name () 'common-lisp:string)
(common-lisp:deftype filter-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values ()
   '(trivial-types:proper-list filter-value))
 (common-lisp:defun make-filter-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype filters () '(trivial-types:proper-list filter))
 (common-lisp:defun make-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype finding () 'common-lisp:string)
(common-lisp:deftype finding-reason-code () 'common-lisp:string)
(common-lisp:deftype function-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype function-arns ()
   '(trivial-types:proper-list function-arn))
 (common-lisp:defun make-function-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list function-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype function-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-auto-scaling-group-recommendations-request
                       common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-scaling-group-arns :initarg
                         :auto-scaling-group-arns :initform common-lisp:nil
                         :type
                         (common-lisp:or auto-scaling-group-arns
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-auto-scaling-group-arns
                         :shape "AutoScalingGroupArns" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or filters common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-filters
                         :shape "Filters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-preferences :initarg
                         :recommendation-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-request-recommendation-preferences
                         :shape "RecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-auto-scaling-group-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-auto-scaling-group-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-request
                    'make-get-auto-scaling-group-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-arns))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-auto-scaling-group-recommendations-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-auto-scaling-group-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (auto-scaling-group-recommendations :initarg
                         :auto-scaling-group-recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or auto-scaling-group-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-response-auto-scaling-group-recommendations
                         :shape "AutoScalingGroupRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-auto-scaling-group-recommendations-response-errors
                         :shape "GetRecommendationErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-auto-scaling-group-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-auto-scaling-group-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-auto-scaling-group-recommendations-response
                    'make-get-auto-scaling-group-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-group-recommendations))
      (common-lisp:list
       (common-lisp:cons "autoScalingGroupRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-auto-scaling-group-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ebsvolume-recommendations-request common-lisp:nil
                       ((volume-arns :initarg :volume-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arns common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-request-volume-arns
                         :shape "VolumeArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ebsvolume-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or ebsfilters common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-request-filters
                         :shape "EBSFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ebsvolume-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ebsvolume-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-request
                    'make-get-ebsvolume-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "volumeArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ebsvolume-recommendations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ebsvolume-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-recommendations :initarg
                         :volume-recommendations :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-response-volume-recommendations
                         :shape "VolumeRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ebsvolume-recommendations-response-errors
                         :shape "GetRecommendationErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ebsvolume-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ebsvolume-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ebsvolume-recommendations-response
                    'make-get-ebsvolume-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendations))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ebsvolume-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2instance-recommendations-request common-lisp:nil
                       ((instance-arns :initarg :instance-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arns common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-request-instance-arns
                         :shape "InstanceArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ec2instance-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or filters common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-request-filters
                         :shape "Filters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-preferences :initarg
                         :recommendation-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-request-recommendation-preferences
                         :shape "RecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ec2instance-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2instance-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-request
                    'make-get-ec2instance-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arns))
      (common-lisp:list
       (common-lisp:cons "instanceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2instance-recommendations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ec2instance-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-recommendations :initarg
                         :instance-recommendations :initform common-lisp:nil
                         :type
                         (common-lisp:or instance-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-response-instance-recommendations
                         :shape "InstanceRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ec2instance-recommendations-response-errors
                         :shape "GetRecommendationErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ec2instance-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2instance-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ec2instance-recommendations-response
                    'make-get-ec2instance-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'instance-recommendations))
      (common-lisp:list
       (common-lisp:cons "instanceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2instance-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2recommendation-projected-metrics-request
                       common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         (common-lisp:error ":instancearn is required") :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stat :initarg :stat :initform
                         (common-lisp:error ":stat is required") :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-stat
                         :shape "MetricStatistic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period :initarg :period :initform
                         (common-lisp:error ":period is required") :type
                         (common-lisp:or period common-lisp:null) :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-period
                         :shape "Period" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":endtime is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-preferences :initarg
                         :recommendation-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-request-recommendation-preferences
                         :shape "RecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ec2recommendation-projected-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2recommendation-projected-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-request
                    'make-get-ec2recommendation-projected-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ec2recommendation-projected-metrics-response
                       common-lisp:nil
                       ((recommended-option-projected-metrics :initarg
                         :recommended-option-projected-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or recommended-option-projected-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ec2recommendation-projected-metrics-response-recommended-option-projected-metrics
                         :shape "RecommendedOptionProjectedMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ec2recommendation-projected-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ec2recommendation-projected-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ec2recommendation-projected-metrics-response
                    'make-get-ec2recommendation-projected-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ec2recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendation-projected-metrics-request
                       common-lisp:nil
                       ((service-arn :initarg :service-arn :initform
                         (common-lisp:error ":servicearn is required") :type
                         (common-lisp:or service-arn common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-request-service-arn
                         :shape "ServiceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (stat :initarg :stat :initform
                         (common-lisp:error ":stat is required") :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-request-stat
                         :shape "MetricStatistic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (period :initarg :period :initform
                         (common-lisp:error ":period is required") :type
                         (common-lisp:or period common-lisp:null) :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-request-period
                         :shape "Period" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":starttime is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-request-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-time :initarg :end-time :initform
                         (common-lisp:error ":endtime is required") :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-request-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ecsservice-recommendation-projected-metrics-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendation-projected-metrics-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-request
                    'make-get-ecsservice-recommendation-projected-metrics-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arn))
      (common-lisp:list
       (common-lisp:cons "serviceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stat))
      (common-lisp:list
       (common-lisp:cons "stat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period))
      (common-lisp:list
       (common-lisp:cons "period"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "startTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "endTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendation-projected-metrics-response
                       common-lisp:nil
                       ((recommended-option-projected-metrics :initarg
                         :recommended-option-projected-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          ecsservice-recommended-option-projected-metrics
                          common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendation-projected-metrics-response-recommended-option-projected-metrics
                         :shape "ECSServiceRecommendedOptionProjectedMetrics"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ecsservice-recommendation-projected-metrics-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendation-projected-metrics-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendation-projected-metrics-response
                    'make-get-ecsservice-recommendation-projected-metrics-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-option-projected-metrics))
      (common-lisp:list
       (common-lisp:cons "recommendedOptionProjectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendation-projected-metrics-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendations-request common-lisp:nil
                       ((service-arns :initarg :service-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or service-arns common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-request-service-arns
                         :shape "ServiceArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ecsservice-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or ecsservice-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-request-filters
                         :shape "ECSServiceRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ecsservice-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-request
                    'make-get-ecsservice-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'service-arns))
      (common-lisp:list
       (common-lisp:cons "serviceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-ecsservice-recommendations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-ecsservice-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ecs-service-recommendations :initarg
                         :ecs-service-recommendations :initform common-lisp:nil
                         :type
                         (common-lisp:or ecsservice-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-response-ecs-service-recommendations
                         :shape "ECSServiceRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-ecsservice-recommendations-response-errors
                         :shape "GetRecommendationErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-ecsservice-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-ecsservice-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-ecsservice-recommendations-response
                    'make-get-ecsservice-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ecs-service-recommendations))
      (common-lisp:list
       (common-lisp:cons "ecsServiceRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-ecsservice-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-effective-recommendation-preferences-request
                       common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-request-resource-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-effective-recommendation-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-effective-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-request
                    'make-get-effective-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-effective-recommendation-preferences-response
                       common-lisp:nil
                       ((enhanced-infrastructure-metrics :initarg
                         :enhanced-infrastructure-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-response-enhanced-infrastructure-metrics
                         :shape "EnhancedInfrastructureMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (external-metrics-preference :initarg
                         :external-metrics-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-response-external-metrics-preference
                         :shape "ExternalMetricsPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (look-back-period :initarg :look-back-period :initform
                         common-lisp:nil :type
                         (common-lisp:or look-back-period-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-response-look-back-period
                         :shape "LookBackPeriodPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (utilization-preferences :initarg
                         :utilization-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or utilization-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-response-utilization-preferences
                         :shape "UtilizationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preferred-resources :initarg :preferred-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or effective-preferred-resources
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-effective-recommendation-preferences-response-preferred-resources
                         :shape "EffectivePreferredResources" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-effective-recommendation-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-effective-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-effective-recommendation-preferences-response
                    'make-get-effective-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'look-back-period))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'utilization-preferences))
      (common-lisp:list
       (common-lisp:cons "utilizationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferred-resources))
      (common-lisp:list
       (common-lisp:cons "preferredResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-effective-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-status-request common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-enrollment-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-request
                    'make-get-enrollment-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-status-response common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-status-response-status
                         :shape "Status" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-status-response-status-reason
                         :shape "StatusReason" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (member-accounts-enrolled :initarg
                         :member-accounts-enrolled :initform common-lisp:nil
                         :type
                         (common-lisp:or member-accounts-enrolled
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-status-response-member-accounts-enrolled
                         :shape "MemberAccountsEnrolled" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-status-response-last-updated-timestamp
                         :shape "LastUpdatedTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (number-of-member-accounts-opted-in :initarg
                         :number-of-member-accounts-opted-in :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-member-accounts-opted-in
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-status-response-number-of-member-accounts-opted-in
                         :shape "NumberOfMemberAccountsOptedIn" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-enrollment-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-status-response
                    'make-get-enrollment-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'member-accounts-enrolled))
      (common-lisp:list
       (common-lisp:cons "memberAccountsEnrolled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-member-accounts-opted-in))
      (common-lisp:list
       (common-lisp:cons "numberOfMemberAccountsOptedIn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-status-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-statuses-for-organization-request
                       common-lisp:nil
                       ((filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or enrollment-filters common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-statuses-for-organization-request-filters
                         :shape "EnrollmentFilters" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-enrollment-statuses-for-organization-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-statuses-for-organization-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-enrollment-statuses-for-organization-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-statuses-for-organization-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-request
                    'make-get-enrollment-statuses-for-organization-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-enrollment-statuses-for-organization-response
                       common-lisp:nil
                       ((account-enrollment-statuses :initarg
                         :account-enrollment-statuses :initform common-lisp:nil
                         :type
                         (common-lisp:or account-enrollment-statuses
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-enrollment-statuses-for-organization-response-account-enrollment-statuses
                         :shape "AccountEnrollmentStatuses" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-enrollment-statuses-for-organization-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-enrollment-statuses-for-organization-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-enrollment-statuses-for-organization-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-enrollment-statuses-for-organization-response
                    'make-get-enrollment-statuses-for-organization-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'account-enrollment-statuses))
      (common-lisp:list
       (common-lisp:cons "accountEnrollmentStatuses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-enrollment-statuses-for-organization-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lambda-function-recommendations-request
                       common-lisp:nil
                       ((function-arns :initarg :function-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or function-arns common-lisp:null)
                         :accessor
                         struct-shape-get-lambda-function-recommendations-request-function-arns
                         :shape "FunctionArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-lambda-function-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-function-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-lambda-function-recommendations-request-filters
                         :shape "LambdaFunctionRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-lambda-function-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-lambda-function-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-lambda-function-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-lambda-function-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-request
                    'make-get-lambda-function-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arns))
      (common-lisp:list
       (common-lisp:cons "functionArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-lambda-function-recommendations-response
                       common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-lambda-function-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lambda-function-recommendations :initarg
                         :lambda-function-recommendations :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-function-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-lambda-function-recommendations-response-lambda-function-recommendations
                         :shape "LambdaFunctionRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-lambda-function-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-lambda-function-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-lambda-function-recommendations-response
                    'make-get-lambda-function-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lambda-function-recommendations))
      (common-lisp:list
       (common-lisp:cons "lambdaFunctionRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-lambda-function-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-license-recommendations-request common-lisp:nil
                       ((resource-arns :initarg :resource-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arns common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-request-resource-arns
                         :shape "ResourceArns" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-license-recommendations-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type
                         (common-lisp:or license-recommendation-filters
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-request-filters
                         :shape "LicenseRecommendationFilters" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-license-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-license-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-license-recommendations-request
                    'make-get-license-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arns))
      (common-lisp:list
       (common-lisp:cons "resourceArns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-license-recommendations-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-license-recommendations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-recommendations :initarg
                         :license-recommendations :initform common-lisp:nil
                         :type
                         (common-lisp:or license-recommendations
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-response-license-recommendations
                         :shape "LicenseRecommendations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (errors :initarg :errors :initform common-lisp:nil
                         :type
                         (common-lisp:or get-recommendation-errors
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-license-recommendations-response-errors
                         :shape "GetRecommendationErrors" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-license-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-license-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-license-recommendations-response
                    'make-get-license-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'license-recommendations))
      (common-lisp:list
       (common-lisp:cons "licenseRecommendations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'errors))
      (common-lisp:list
       (common-lisp:cons "errors"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-license-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-error common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         struct-shape-get-recommendation-error-identifier
                         :shape "Identifier" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (code :initarg :code :initform common-lisp:nil :type
                         (common-lisp:or code common-lisp:null) :accessor
                         struct-shape-get-recommendation-error-code :shape
                         "Code" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (message :initarg :message :initform common-lisp:nil
                         :type (common-lisp:or message common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-error-message :shape
                         "Message" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendation-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-error 'make-get-recommendation-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'identifier))
      (common-lisp:list
       (common-lisp:cons "identifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'code))
      (common-lisp:list
       (common-lisp:cons "code"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'message))
      (common-lisp:list
       (common-lisp:cons "message"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype get-recommendation-errors ()
   '(trivial-types:proper-list get-recommendation-error))
 (common-lisp:defun make-get-recommendation-errors
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            get-recommendation-error))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-preferences-request common-lisp:nil
                       ((resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resourcetype is required") :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-preferences-request-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-get-recommendation-preferences-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-recommendation-preferences-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-preferences-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-request
                    'make-get-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-preferences-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-recommendation-preferences-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-preferences-details :initarg
                         :recommendation-preferences-details :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-preferences-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-preferences-response-recommendation-preferences-details
                         :shape "RecommendationPreferencesDetails" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-preferences-response
                    'make-get-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-preferences-details))
      (common-lisp:list
       (common-lisp:cons "recommendationPreferencesDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-summaries-request common-lisp:nil
                       ((account-ids :initarg :account-ids :initform
                         common-lisp:nil :type
                         (common-lisp:or account-ids common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-summaries-request-account-ids
                         :shape "AccountIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-recommendation-summaries-request-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-summaries-request-max-results
                         :shape "MaxResults" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-summaries-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-summaries-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-request
                    'make-get-recommendation-summaries-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-ids))
      (common-lisp:list
       (common-lisp:cons "accountIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'max-results))
      (common-lisp:list
       (common-lisp:cons "maxResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendation-summaries-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-get-recommendation-summaries-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-summaries :initarg
                         :recommendation-summaries :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-summaries
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-recommendation-summaries-response-recommendation-summaries
                         :shape "RecommendationSummaries" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendation-summaries-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-recommendation-summaries-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendation-summaries-response
                    'make-get-recommendation-summaries-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-summaries))
      (common-lisp:list
       (common-lisp:cons "recommendationSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendation-summaries-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass gpu common-lisp:nil
                       ((gpu-count :initarg :gpu-count :initform
                         common-lisp:nil :type
                         (common-lisp:or gpu-count common-lisp:null) :accessor
                         struct-shape-gpu-gpu-count :shape "GpuCount" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gpu-memory-size-in-mi-b :initarg
                         :gpu-memory-size-in-mi-b :initform common-lisp:nil
                         :type
                         (common-lisp:or gpu-memory-size-in-mi-b
                                         common-lisp:null)
                         :accessor struct-shape-gpu-gpu-memory-size-in-mi-b
                         :shape "GpuMemorySizeInMiB" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gpu (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gpu
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gpu 'make-gpu))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gpu))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gpu))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gpu-count))
      (common-lisp:list
       (common-lisp:cons "gpuCount"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gpu-memory-size-in-mi-b))
      (common-lisp:list
       (common-lisp:cons "gpuMemorySizeInMiB"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gpu))
   common-lisp:nil))
(common-lisp:deftype gpu-count () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass gpu-info common-lisp:nil
                       ((gpus :initarg :gpus :initform common-lisp:nil :type
                         (common-lisp:or gpus common-lisp:null) :accessor
                         struct-shape-gpu-info-gpus :shape "Gpus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gpu-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gpu-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gpu-info 'make-gpu-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gpu-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gpu-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gpus))
      (common-lisp:list
       (common-lisp:cons "gpus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gpu-info))
   common-lisp:nil))
(common-lisp:deftype gpu-memory-size-in-mi-b () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype gpus () '(trivial-types:proper-list gpu))
 (common-lisp:defun make-gpus
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gpu))
   aws-sdk/generator/shape::members))
(common-lisp:deftype high () 'common-lisp:integer)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:deftype include-member-accounts () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass inferred-workload-saving common-lisp:nil
                       ((inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-inferred-workload-saving-inferred-workload-types
                         :shape "InferredWorkloadTypes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or estimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-inferred-workload-saving-estimated-monthly-savings
                         :shape "EstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-inferred-workload-saving
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'inferred-workload-saving
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'inferred-workload-saving 'make-inferred-workload-saving))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          inferred-workload-saving))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          inferred-workload-saving))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          inferred-workload-saving))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype inferred-workload-savings ()
   '(trivial-types:proper-list inferred-workload-saving))
 (common-lisp:defun make-inferred-workload-savings
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            inferred-workload-saving))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inferred-workload-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype inferred-workload-types ()
   '(trivial-types:proper-list inferred-workload-type))
 (common-lisp:defun make-inferred-workload-types
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list inferred-workload-type))
   aws-sdk/generator/shape::members))
(common-lisp:deftype inferred-workload-types-preference () 'common-lisp:string)
(common-lisp:deftype instance-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-arns ()
   '(trivial-types:proper-list instance-arn))
 (common-lisp:defun make-instance-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass instance-estimated-monthly-savings common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-instance-estimated-monthly-savings-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-instance-estimated-monthly-savings-value
                         :shape "Value" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-estimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-estimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-estimated-monthly-savings
                    'make-instance-estimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:deftype instance-idle () 'common-lisp:string)
(common-lisp:deftype instance-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass instance-recommendation common-lisp:nil
                       ((instance-arn :initarg :instance-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-arn common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-instance-arn
                         :shape "InstanceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-instance-recommendation-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (instance-name :initarg :instance-name :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-name common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-instance-name
                         :shape "InstanceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-instance-type :initarg :current-instance-type
                         :initform common-lisp:nil :type
                         (common-lisp:or current-instance-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-current-instance-type
                         :shape "CurrentInstanceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type (common-lisp:or finding common-lisp:null)
                         :accessor struct-shape-instance-recommendation-finding
                         :shape "Finding" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (finding-reason-codes :initarg :finding-reason-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          instance-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-finding-reason-codes
                         :shape "InstanceRecommendationFindingReasonCodes"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (utilization-metrics :initarg :utilization-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or utilization-metrics common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-utilization-metrics
                         :shape "UtilizationMetrics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :look-back-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-look-back-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-options :initarg
                         :recommendation-options :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-recommendation-options
                         :shape "RecommendationOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-sources :initarg
                         :recommendation-sources :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-sources
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-recommendation-sources
                         :shape "RecommendationSources" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-performance-risk :initarg
                         :current-performance-risk :initform common-lisp:nil
                         :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-current-performance-risk
                         :shape "CurrentPerformanceRisk" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :effective-recommendation-preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or effective-recommendation-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-effective-recommendation-preferences
                         :shape "EffectiveRecommendationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-inferred-workload-types
                         :shape "InferredWorkloadTypes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (instance-state :initarg :instance-state :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-state common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-instance-state
                         :shape "InstanceState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-instance-recommendation-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (external-metric-status :initarg
                         :external-metric-status :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metric-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-external-metric-status
                         :shape "ExternalMetricStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-instance-gpu-info :initarg
                         :current-instance-gpu-info :initform common-lisp:nil
                         :type (common-lisp:or gpu-info common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-current-instance-gpu-info
                         :shape "GpuInfo" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (idle :initarg :idle :initform common-lisp:nil :type
                         (common-lisp:or instance-idle common-lisp:null)
                         :accessor struct-shape-instance-recommendation-idle
                         :shape "InstanceIdle" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'instance-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation 'make-instance-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-arn))
      (common-lisp:list
       (common-lisp:cons "instanceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-name))
      (common-lisp:list
       (common-lisp:cons "instanceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-instance-type))
      (common-lisp:list
       (common-lisp:cons "currentInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-options))
      (common-lisp:list
       (common-lisp:cons "recommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-sources))
      (common-lisp:list
       (common-lisp:cons "recommendationSources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-state))
      (common-lisp:list
       (common-lisp:cons "instanceState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metric-status))
      (common-lisp:list
       (common-lisp:cons "externalMetricStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-instance-gpu-info))
      (common-lisp:list
       (common-lisp:cons "currentInstanceGpuInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'idle))
      (common-lisp:list
       (common-lisp:cons "idle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation))
   common-lisp:nil))
(common-lisp:deftype instance-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype instance-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list instance-recommendation-finding-reason-code))
 (common-lisp:defun make-instance-recommendation-finding-reason-codes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass instance-recommendation-option common-lisp:nil
                       ((instance-type :initarg :instance-type :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-instance-type
                         :shape "InstanceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :projected-utilization-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or projected-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-projected-utilization-metrics
                         :shape "ProjectedUtilizationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (platform-differences :initarg :platform-differences
                         :initform common-lisp:nil :type
                         (common-lisp:or platform-differences common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-platform-differences
                         :shape "PlatformDifferences" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (performance-risk :initarg :performance-risk :initform
                         common-lisp:nil :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-performance-risk
                         :shape "PerformanceRisk" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-instance-recommendation-option-rank
                         :shape "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (migration-effort :initarg :migration-effort :initform
                         common-lisp:nil :type
                         (common-lisp:or migration-effort common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-migration-effort
                         :shape "MigrationEffort" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-gpu-info :initarg :instance-gpu-info
                         :initform common-lisp:nil :type
                         (common-lisp:or gpu-info common-lisp:null) :accessor
                         struct-shape-instance-recommendation-option-instance-gpu-info
                         :shape "GpuInfo" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity-after-discounts :initarg
                         :savings-opportunity-after-discounts :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          instance-savings-opportunity-after-discounts
                          common-lisp:null)
                         :accessor
                         struct-shape-instance-recommendation-option-savings-opportunity-after-discounts
                         :shape "InstanceSavingsOpportunityAfterDiscounts"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-recommendation-option
                    'make-instance-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'platform-differences))
      (common-lisp:list
       (common-lisp:cons "platformDifferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'migration-effort))
      (common-lisp:list
       (common-lisp:cons "migrationEffort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-gpu-info))
      (common-lisp:list
       (common-lisp:cons "instanceGpuInfo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-after-discounts))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityAfterDiscounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype instance-recommendations ()
   '(trivial-types:proper-list instance-recommendation))
 (common-lisp:defun make-instance-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list instance-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass instance-savings-estimation-mode common-lisp:nil
                       ((source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or
                          instance-savings-estimation-mode-source
                          common-lisp:null)
                         :accessor
                         struct-shape-instance-savings-estimation-mode-source
                         :shape "InstanceSavingsEstimationModeSource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-savings-estimation-mode
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-savings-estimation-mode
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-savings-estimation-mode
                    'make-instance-savings-estimation-mode))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-estimation-mode))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-estimation-mode))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-estimation-mode))
   common-lisp:nil))
(common-lisp:deftype instance-savings-estimation-mode-source ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass instance-savings-opportunity-after-discounts
                       common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-savings-opportunity-after-discounts-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or instance-estimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-instance-savings-opportunity-after-discounts-estimated-monthly-savings
                         :shape "InstanceEstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-instance-savings-opportunity-after-discounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'instance-savings-opportunity-after-discounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'instance-savings-opportunity-after-discounts
                    'make-instance-savings-opportunity-after-discounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-opportunity-after-discounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-opportunity-after-discounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          instance-savings-opportunity-after-discounts))
   common-lisp:nil))
(common-lisp:deftype instance-state () 'common-lisp:string)
(common-lisp:deftype instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-server-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-exception
                    'internal-server-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-parameter-value-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-parameter-value-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-parameter-value-exception
                    'invalid-parameter-value-exception-message)))
(common-lisp:progn
 (common-lisp:defclass job-filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or job-filter-name common-lisp:null)
                         :accessor struct-shape-job-filter-name :shape
                         "JobFilterName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-job-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-job-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'job-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'job-filter 'make-job-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input job-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input job-filter))
   common-lisp:nil))
(common-lisp:deftype job-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-filters () '(trivial-types:proper-list job-filter))
 (common-lisp:defun make-job-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype job-ids () '(trivial-types:proper-list job-id))
 (common-lisp:defun make-job-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list job-id))
   aws-sdk/generator/shape::members))
(common-lisp:deftype job-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-effective-recommendation-preferences
                       common-lisp:nil
                       ((savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-savings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-effective-recommendation-preferences-savings-estimation-mode
                         :shape "LambdaSavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-effective-recommendation-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-effective-recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-effective-recommendation-preferences
                    'make-lambda-effective-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-effective-recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-effective-recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-effective-recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lambda-estimated-monthly-savings common-lisp:nil
                       ((currency :initarg :currency :initform common-lisp:nil
                         :type (common-lisp:or currency common-lisp:null)
                         :accessor
                         struct-shape-lambda-estimated-monthly-savings-currency
                         :shape "Currency" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-lambda-estimated-monthly-savings-value
                         :shape "Value" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-estimated-monthly-savings
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-estimated-monthly-savings
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-estimated-monthly-savings
                    'make-lambda-estimated-monthly-savings))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-estimated-monthly-savings))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-estimated-monthly-savings))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'currency))
      (common-lisp:list
       (common-lisp:cons "currency"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-estimated-monthly-savings))
   common-lisp:nil))
(common-lisp:deftype lambda-function-memory-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-memory-metric-statistic ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-function-memory-projected-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or lambda-function-memory-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-projected-metric-name
                         :shape "LambdaFunctionMemoryMetricName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          lambda-function-memory-metric-statistic
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-projected-metric-statistic
                         :shape "LambdaFunctionMemoryMetricStatistic" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-projected-metric-value
                         :shape "MetricValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-memory-projected-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-memory-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-projected-metric
                    'make-lambda-function-memory-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-projected-metrics ()
   '(trivial-types:proper-list lambda-function-memory-projected-metric))
 (common-lisp:defun make-lambda-function-memory-projected-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-function-memory-recommendation-option
                       common-lisp:nil
                       ((rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-lambda-function-memory-recommendation-option-rank
                         :shape "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (memory-size :initarg :memory-size :initform
                         common-lisp:nil :type
                         (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-recommendation-option-memory-size
                         :shape "MemorySize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (projected-utilization-metrics :initarg
                         :projected-utilization-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          lambda-function-memory-projected-metrics
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-recommendation-option-projected-utilization-metrics
                         :shape "LambdaFunctionMemoryProjectedMetrics"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity-after-discounts :initarg
                         :savings-opportunity-after-discounts :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          lambda-savings-opportunity-after-discounts
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-memory-recommendation-option-savings-opportunity-after-discounts
                         :shape "LambdaSavingsOpportunityAfterDiscounts"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-memory-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-memory-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-memory-recommendation-option
                    'make-lambda-function-memory-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-size))
      (common-lisp:list
       (common-lisp:cons "memorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'projected-utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedUtilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-after-discounts))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityAfterDiscounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-memory-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-memory-recommendation-options ()
   '(trivial-types:proper-list lambda-function-memory-recommendation-option))
 (common-lisp:defun make-lambda-function-memory-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-memory-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-metric-name () 'common-lisp:string)
(common-lisp:deftype lambda-function-metric-statistic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-function-recommendation common-lisp:nil
                       ((function-arn :initarg :function-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or function-arn common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-function-arn
                         :shape "FunctionArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (function-version :initarg :function-version :initform
                         common-lisp:nil :type
                         (common-lisp:or function-version common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-function-version
                         :shape "FunctionVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-lambda-function-recommendation-account-id
                         :shape "AccountId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-memory-size :initarg :current-memory-size
                         :initform common-lisp:nil :type
                         (common-lisp:or memory-size common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-current-memory-size
                         :shape "MemorySize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (number-of-invocations :initarg :number-of-invocations
                         :initform common-lisp:nil :type
                         (common-lisp:or number-of-invocations
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-number-of-invocations
                         :shape "NumberOfInvocations" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (utilization-metrics :initarg :utilization-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or lambda-function-utilization-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-utilization-metrics
                         :shape "LambdaFunctionUtilizationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lookback-period-in-days :initarg
                         :lookback-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-lookback-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-function-recommendation-finding
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-finding
                         :shape "LambdaFunctionRecommendationFinding" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding-reason-codes :initarg :finding-reason-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or
                          lambda-function-recommendation-finding-reason-codes
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-finding-reason-codes
                         :shape
                         "LambdaFunctionRecommendationFindingReasonCodes"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (memory-size-recommendation-options :initarg
                         :memory-size-recommendation-options :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          lambda-function-memory-recommendation-options
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-memory-size-recommendation-options
                         :shape "LambdaFunctionMemoryRecommendationOptions"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (current-performance-risk :initarg
                         :current-performance-risk :initform common-lisp:nil
                         :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-current-performance-risk
                         :shape "CurrentPerformanceRisk" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-lambda-function-recommendation-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :effective-recommendation-preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          lambda-effective-recommendation-preferences
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-effective-recommendation-preferences
                         :shape "LambdaEffectiveRecommendationPreferences"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation
                    'make-lambda-function-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-arn))
      (common-lisp:list
       (common-lisp:cons "functionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'function-version))
      (common-lisp:list
       (common-lisp:cons "functionVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'current-memory-size))
      (common-lisp:list
       (common-lisp:cons "currentMemorySize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'number-of-invocations))
      (common-lisp:list
       (common-lisp:cons "numberOfInvocations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'memory-size-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "memorySizeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass lambda-function-recommendation-filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or
                          lambda-function-recommendation-filter-name
                          common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-filter-name
                         :shape "LambdaFunctionRecommendationFilterName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-recommendation-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-recommendation-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-recommendation-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-recommendation-filter
                    'make-lambda-function-recommendation-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype lambda-function-recommendation-filter-name ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-filters ()
   '(trivial-types:proper-list lambda-function-recommendation-filter))
 (common-lisp:defun make-lambda-function-recommendation-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:deftype lambda-function-recommendation-finding ()
  'common-lisp:string)
(common-lisp:deftype lambda-function-recommendation-finding-reason-code ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendation-finding-reason-codes ()
   '(trivial-types:proper-list
     lambda-function-recommendation-finding-reason-code))
 (common-lisp:defun make-lambda-function-recommendation-finding-reason-codes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype lambda-function-recommendations ()
   '(trivial-types:proper-list lambda-function-recommendation))
 (common-lisp:defun make-lambda-function-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-function-utilization-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or lambda-function-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-utilization-metric-name
                         :shape "LambdaFunctionMetricName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or lambda-function-metric-statistic
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-utilization-metric-statistic
                         :shape "LambdaFunctionMetricStatistic" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor
                         struct-shape-lambda-function-utilization-metric-value
                         :shape "MetricValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-function-utilization-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-function-utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-function-utilization-metric
                    'make-lambda-function-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-function-utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype lambda-function-utilization-metrics ()
   '(trivial-types:proper-list lambda-function-utilization-metric))
 (common-lisp:defun make-lambda-function-utilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            lambda-function-utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass lambda-savings-estimation-mode common-lisp:nil
                       ((source :initarg :source :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-savings-estimation-mode-source
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-savings-estimation-mode-source
                         :shape "LambdaSavingsEstimationModeSource" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-savings-estimation-mode
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-savings-estimation-mode
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-savings-estimation-mode
                    'make-lambda-savings-estimation-mode))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-estimation-mode))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-estimation-mode))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-estimation-mode))
   common-lisp:nil))
(common-lisp:deftype lambda-savings-estimation-mode-source ()
  'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass lambda-savings-opportunity-after-discounts
                       common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-savings-opportunity-after-discounts-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or lambda-estimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-lambda-savings-opportunity-after-discounts-estimated-monthly-savings
                         :shape "LambdaEstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-lambda-savings-opportunity-after-discounts
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'lambda-savings-opportunity-after-discounts
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'lambda-savings-opportunity-after-discounts
                    'make-lambda-savings-opportunity-after-discounts))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-opportunity-after-discounts))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-opportunity-after-discounts))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          lambda-savings-opportunity-after-discounts))
   common-lisp:nil))
(common-lisp:deftype last-refresh-timestamp () 'common-lisp:string)
(common-lisp:deftype last-updated-timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass license-configuration common-lisp:nil
                       ((number-of-cores :initarg :number-of-cores :initform
                         common-lisp:nil :type
                         (common-lisp:or number-of-cores common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-number-of-cores
                         :shape "NumberOfCores" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (instance-type :initarg :instance-type :initform
                         common-lisp:nil :type
                         (common-lisp:or instance-type common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-instance-type
                         :shape "InstanceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (operating-system :initarg :operating-system :initform
                         common-lisp:nil :type
                         (common-lisp:or operating-system common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-operating-system
                         :shape "OperatingSystem" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-edition :initarg :license-edition :initform
                         common-lisp:nil :type
                         (common-lisp:or license-edition common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-license-edition
                         :shape "LicenseEdition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-name :initarg :license-name :initform
                         common-lisp:nil :type
                         (common-lisp:or license-name common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-license-name :shape
                         "LicenseName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (license-model :initarg :license-model :initform
                         common-lisp:nil :type
                         (common-lisp:or license-model common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-license-model
                         :shape "LicenseModel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-version :initarg :license-version :initform
                         common-lisp:nil :type
                         (common-lisp:or license-version common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-license-version
                         :shape "LicenseVersion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metrics-source :initarg :metrics-source :initform
                         common-lisp:nil :type
                         (common-lisp:or metrics-source common-lisp:null)
                         :accessor
                         struct-shape-license-configuration-metrics-source
                         :shape "MetricsSource" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-license-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'license-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'license-configuration 'make-license-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          license-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          license-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'number-of-cores))
      (common-lisp:list
       (common-lisp:cons "numberOfCores"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'instance-type))
      (common-lisp:list
       (common-lisp:cons "instanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operating-system))
      (common-lisp:list
       (common-lisp:cons "operatingSystem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-edition))
      (common-lisp:list
       (common-lisp:cons "licenseEdition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-name))
      (common-lisp:list
       (common-lisp:cons "licenseName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-model))
      (common-lisp:list
       (common-lisp:cons "licenseModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-version))
      (common-lisp:list
       (common-lisp:cons "licenseVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metrics-source))
      (common-lisp:list
       (common-lisp:cons "metricsSource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          license-configuration))
   common-lisp:nil))
(common-lisp:deftype license-edition () 'common-lisp:string)
(common-lisp:deftype license-finding () 'common-lisp:string)
(common-lisp:deftype license-finding-reason-code () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype license-finding-reason-codes ()
   '(trivial-types:proper-list license-finding-reason-code))
 (common-lisp:defun make-license-finding-reason-codes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            license-finding-reason-code))
   aws-sdk/generator/shape::members))
(common-lisp:deftype license-model () 'common-lisp:string)
(common-lisp:deftype license-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass license-recommendation common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-resource-arn
                         :shape "ResourceArn" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-license-recommendation-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (current-license-configuration :initarg
                         :current-license-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or license-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-current-license-configuration
                         :shape "LicenseConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (lookback-period-in-days :initarg
                         :lookback-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-lookback-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type
                         (common-lisp:or license-finding common-lisp:null)
                         :accessor struct-shape-license-recommendation-finding
                         :shape "LicenseFinding" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (finding-reason-codes :initarg :finding-reason-codes
                         :initform common-lisp:nil :type
                         (common-lisp:or license-finding-reason-codes
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-finding-reason-codes
                         :shape "LicenseFindingReasonCodes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (license-recommendation-options :initarg
                         :license-recommendation-options :initform
                         common-lisp:nil :type
                         (common-lisp:or license-recommendation-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-license-recommendation-options
                         :shape "LicenseRecommendationOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-license-recommendation-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-license-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'license-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'license-recommendation 'make-license-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "resourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-license-configuration))
      (common-lisp:list
       (common-lisp:cons "currentLicenseConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'lookback-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookbackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'finding-reason-codes))
      (common-lisp:list
       (common-lisp:cons "findingReasonCodes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'license-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "licenseRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass license-recommendation-filter common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or license-recommendation-filter-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-filter-name :shape
                         "LicenseRecommendationFilterName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-license-recommendation-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'license-recommendation-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'license-recommendation-filter
                    'make-license-recommendation-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-filter))
   common-lisp:nil))
(common-lisp:deftype license-recommendation-filter-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype license-recommendation-filters ()
   '(trivial-types:proper-list license-recommendation-filter))
 (common-lisp:defun make-license-recommendation-filters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            license-recommendation-filter))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass license-recommendation-option common-lisp:nil
                       ((rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-license-recommendation-option-rank :shape
                         "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (operating-system :initarg :operating-system :initform
                         common-lisp:nil :type
                         (common-lisp:or operating-system common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-option-operating-system
                         :shape "OperatingSystem" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-edition :initarg :license-edition :initform
                         common-lisp:nil :type
                         (common-lisp:or license-edition common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-option-license-edition
                         :shape "LicenseEdition" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (license-model :initarg :license-model :initform
                         common-lisp:nil :type
                         (common-lisp:or license-model common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-option-license-model
                         :shape "LicenseModel" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-license-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-license-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'license-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'license-recommendation-option
                    'make-license-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'operating-system))
      (common-lisp:list
       (common-lisp:cons "operatingSystem"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-edition))
      (common-lisp:list
       (common-lisp:cons "licenseEdition"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'license-model))
      (common-lisp:list
       (common-lisp:cons "licenseModel"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          license-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype license-recommendation-options ()
   '(trivial-types:proper-list license-recommendation-option))
 (common-lisp:defun make-license-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            license-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype license-recommendations ()
   '(trivial-types:proper-list license-recommendation))
 (common-lisp:defun make-license-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list license-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype license-version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition limit-exceeded-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       limit-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'limit-exceeded-exception
                    'limit-exceeded-exception-message)))
(common-lisp:deftype look-back-period-in-days () 'common-lisp:double-float)
(common-lisp:deftype look-back-period-preference () 'common-lisp:string)
(common-lisp:deftype low () 'common-lisp:integer)
(common-lisp:deftype lower-bound-value () 'common-lisp:double-float)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype max-size () 'common-lisp:integer)
(common-lisp:deftype medium () 'common-lisp:integer)
(common-lisp:deftype member-accounts-enrolled () 'common-lisp:boolean)
(common-lisp:deftype memory-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass memory-size-configuration common-lisp:nil
                       ((memory :initarg :memory :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor
                         struct-shape-memory-size-configuration-memory :shape
                         "NullableMemory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (memory-reservation :initarg :memory-reservation
                         :initform common-lisp:nil :type
                         (common-lisp:or nullable-memory-reservation
                                         common-lisp:null)
                         :accessor
                         struct-shape-memory-size-configuration-memory-reservation
                         :shape "NullableMemoryReservation" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-memory-size-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'memory-size-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'memory-size-configuration
                    'make-memory-size-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory-reservation))
      (common-lisp:list
       (common-lisp:cons "memoryReservation"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          memory-size-configuration))
   common-lisp:nil))
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype metadata-key () 'common-lisp:string)
(common-lisp:deftype metric-name () 'common-lisp:string)
(common-lisp:deftype metric-provider-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass metric-source common-lisp:nil
                       ((provider :initarg :provider :initform common-lisp:nil
                         :type
                         (common-lisp:or metric-source-provider
                                         common-lisp:null)
                         :accessor struct-shape-metric-source-provider :shape
                         "MetricSourceProvider" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (provider-arn :initarg :provider-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or metric-provider-arn common-lisp:null)
                         :accessor struct-shape-metric-source-provider-arn
                         :shape "MetricProviderArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-metric-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'metric-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'metric-source 'make-metric-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input metric-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input metric-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider))
      (common-lisp:list
       (common-lisp:cons "provider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'provider-arn))
      (common-lisp:list
       (common-lisp:cons "providerArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input metric-source))
   common-lisp:nil))
(common-lisp:deftype metric-source-provider () 'common-lisp:string)
(common-lisp:deftype metric-statistic () 'common-lisp:string)
(common-lisp:deftype metric-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:deftype metric-values ()
   '(trivial-types:proper-list metric-value))
 (common-lisp:defun make-metric-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metrics-source ()
   '(trivial-types:proper-list metric-source))
 (common-lisp:defun make-metrics-source
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list metric-source))
   aws-sdk/generator/shape::members))
(common-lisp:deftype migration-effort () 'common-lisp:string)
(common-lisp:deftype min-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition missing-authentication-token
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       missing-authentication-token-message)))
 (common-lisp:export
  (common-lisp:list 'missing-authentication-token
                    'missing-authentication-token-message)))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype nullable-cpu () 'common-lisp:integer)
(common-lisp:deftype nullable-memory () 'common-lisp:integer)
(common-lisp:deftype nullable-memory-reservation () 'common-lisp:integer)
(common-lisp:deftype number-of-cores () 'common-lisp:integer)
(common-lisp:deftype number-of-invocations () 'common-lisp:integer)
(common-lisp:deftype number-of-member-accounts-opted-in () 'common-lisp:integer)
(common-lisp:deftype operating-system () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition opt-in-required-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       opt-in-required-exception-message)))
 (common-lisp:export
  (common-lisp:list 'opt-in-required-exception
                    'opt-in-required-exception-message)))
(common-lisp:deftype performance-risk () 'common-lisp:double-float)
(common-lisp:deftype period () 'common-lisp:integer)
(common-lisp:deftype platform-difference () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype platform-differences ()
   '(trivial-types:proper-list platform-difference))
 (common-lisp:defun make-platform-differences
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list platform-difference))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass preferred-resource common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or preferred-resource-name
                                         common-lisp:null)
                         :accessor struct-shape-preferred-resource-name :shape
                         "PreferredResourceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-list :initarg :include-list :initform
                         common-lisp:nil :type
                         (common-lisp:or preferred-resource-values
                                         common-lisp:null)
                         :accessor struct-shape-preferred-resource-include-list
                         :shape "PreferredResourceValues" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (exclude-list :initarg :exclude-list :initform
                         common-lisp:nil :type
                         (common-lisp:or preferred-resource-values
                                         common-lisp:null)
                         :accessor struct-shape-preferred-resource-exclude-list
                         :shape "PreferredResourceValues" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-preferred-resource
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'preferred-resource
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'preferred-resource 'make-preferred-resource))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input preferred-resource))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input preferred-resource))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'include-list))
      (common-lisp:list
       (common-lisp:cons "includeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'exclude-list))
      (common-lisp:list
       (common-lisp:cons "excludeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input preferred-resource))
   common-lisp:nil))
(common-lisp:deftype preferred-resource-name () 'common-lisp:string)
(common-lisp:deftype preferred-resource-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype preferred-resource-values ()
   '(trivial-types:proper-list preferred-resource-value))
 (common-lisp:defun make-preferred-resource-values
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            preferred-resource-value))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype preferred-resources ()
   '(trivial-types:proper-list preferred-resource))
 (common-lisp:defun make-preferred-resources
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list preferred-resource))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass projected-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or metric-name common-lisp:null)
                         :accessor struct-shape-projected-metric-name :shape
                         "MetricName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timestamps :initarg :timestamps :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamps common-lisp:null) :accessor
                         struct-shape-projected-metric-timestamps :shape
                         "Timestamps" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (values :initarg :values :initform common-lisp:nil
                         :type (common-lisp:or metric-values common-lisp:null)
                         :accessor struct-shape-projected-metric-values :shape
                         "MetricValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-projected-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'projected-metric 'make-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamps))
      (common-lisp:list
       (common-lisp:cons "timestamps"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'values))
      (common-lisp:list
       (common-lisp:cons "values"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype projected-metrics ()
   '(trivial-types:proper-list projected-metric))
 (common-lisp:defun make-projected-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype projected-utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun make-projected-utilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass put-recommendation-preferences-request common-lisp:nil
                       ((resource-type :initarg :resource-type :initform
                         (common-lisp:error ":resourcetype is required") :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-put-recommendation-preferences-request-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :enhanced-infrastructure-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-enhanced-infrastructure-metrics
                         :shape "EnhancedInfrastructureMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-inferred-workload-types
                         :shape "InferredWorkloadTypesPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (external-metrics-preference :initarg
                         :external-metrics-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-external-metrics-preference
                         :shape "ExternalMetricsPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (look-back-period :initarg :look-back-period :initform
                         common-lisp:nil :type
                         (common-lisp:or look-back-period-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-look-back-period
                         :shape "LookBackPeriodPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (utilization-preferences :initarg
                         :utilization-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or utilization-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-utilization-preferences
                         :shape "UtilizationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preferred-resources :initarg :preferred-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or preferred-resources common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-preferred-resources
                         :shape "PreferredResources" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or savings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-put-recommendation-preferences-request-savings-estimation-mode
                         :shape "SavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-recommendation-preferences-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-recommendation-preferences-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-request
                    'make-put-recommendation-preferences-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'look-back-period))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'utilization-preferences))
      (common-lisp:list
       (common-lisp:cons "utilizationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferred-resources))
      (common-lisp:list
       (common-lisp:cons "preferredResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass put-recommendation-preferences-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-put-recommendation-preferences-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'put-recommendation-preferences-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'put-recommendation-preferences-response
                    'make-put-recommendation-preferences-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          put-recommendation-preferences-response))
   common-lisp:nil))
(common-lisp:deftype rank () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype reason-code-summaries ()
   '(trivial-types:proper-list reason-code-summary))
 (common-lisp:defun make-reason-code-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list reason-code-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass reason-code-summary common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or finding-reason-code common-lisp:null)
                         :accessor struct-shape-reason-code-summary-name :shape
                         "FindingReasonCode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or summary-value common-lisp:null)
                         :accessor struct-shape-reason-code-summary-value
                         :shape "SummaryValue" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reason-code-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reason-code-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reason-code-summary 'make-reason-code-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reason-code-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reason-code-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recommendation-export-job common-lisp:nil
                       ((job-id :initarg :job-id :initform common-lisp:nil
                         :type (common-lisp:or job-id common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-job-id :shape
                         "JobId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (destination :initarg :destination :initform
                         common-lisp:nil :type
                         (common-lisp:or export-destination common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-destination
                         :shape "ExportDestination" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or job-status common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-status :shape
                         "JobStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (creation-timestamp :initarg :creation-timestamp
                         :initform common-lisp:nil :type
                         (common-lisp:or creation-timestamp common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-creation-timestamp
                         :shape "CreationTimestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-updated-timestamp :initarg
                         :last-updated-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-updated-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-last-updated-timestamp
                         :shape "LastUpdatedTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (failure-reason :initarg :failure-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or failure-reason common-lisp:null)
                         :accessor
                         struct-shape-recommendation-export-job-failure-reason
                         :shape "FailureReason" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-export-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-export-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-export-job
                    'make-recommendation-export-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'job-id))
      (common-lisp:list
       (common-lisp:cons "jobId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'destination))
      (common-lisp:list
       (common-lisp:cons "destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'creation-timestamp))
      (common-lisp:list
       (common-lisp:cons "creationTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-updated-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastUpdatedTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'failure-reason))
      (common-lisp:list
       (common-lisp:cons "failureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-export-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-export-jobs ()
   '(trivial-types:proper-list recommendation-export-job))
 (common-lisp:defun make-recommendation-export-jobs
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-export-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-options ()
   '(trivial-types:proper-list instance-recommendation-option))
 (common-lisp:defun make-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            instance-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recommendation-preference-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-preference-names ()
   '(trivial-types:proper-list recommendation-preference-name))
 (common-lisp:defun make-recommendation-preference-names
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preference-name))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-preferences common-lisp:nil
                       ((cpu-vendor-architectures :initarg
                         :cpu-vendor-architectures :initform common-lisp:nil
                         :type
                         (common-lisp:or cpu-vendor-architectures
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-cpu-vendor-architectures
                         :shape "CpuVendorArchitectures" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-preferences
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences
                    'make-recommendation-preferences))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cpu-vendor-architectures))
      (common-lisp:list
       (common-lisp:cons "cpuVendorArchitectures"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass recommendation-preferences-detail common-lisp:nil
                       ((scope :initarg :scope :initform common-lisp:nil :type
                         (common-lisp:or scope common-lisp:null) :accessor
                         struct-shape-recommendation-preferences-detail-scope
                         :shape "Scope" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (resource-type :initarg :resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-type common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-resource-type
                         :shape "ResourceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (enhanced-infrastructure-metrics :initarg
                         :enhanced-infrastructure-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or enhanced-infrastructure-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-enhanced-infrastructure-metrics
                         :shape "EnhancedInfrastructureMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-types :initarg
                         :inferred-workload-types :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-types-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-inferred-workload-types
                         :shape "InferredWorkloadTypesPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (external-metrics-preference :initarg
                         :external-metrics-preference :initform common-lisp:nil
                         :type
                         (common-lisp:or external-metrics-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-external-metrics-preference
                         :shape "ExternalMetricsPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (look-back-period :initarg :look-back-period :initform
                         common-lisp:nil :type
                         (common-lisp:or look-back-period-preference
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-look-back-period
                         :shape "LookBackPeriodPreference" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (utilization-preferences :initarg
                         :utilization-preferences :initform common-lisp:nil
                         :type
                         (common-lisp:or utilization-preferences
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-utilization-preferences
                         :shape "UtilizationPreferences" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (preferred-resources :initarg :preferred-resources
                         :initform common-lisp:nil :type
                         (common-lisp:or effective-preferred-resources
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-preferred-resources
                         :shape "EffectivePreferredResources" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (savings-estimation-mode :initarg
                         :savings-estimation-mode :initform common-lisp:nil
                         :type
                         (common-lisp:or savings-estimation-mode
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-preferences-detail-savings-estimation-mode
                         :shape "SavingsEstimationMode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-preferences-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommendation-preferences-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-preferences-detail
                    'make-recommendation-preferences-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'scope))
      (common-lisp:list
       (common-lisp:cons "scope"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-type))
      (common-lisp:list
       (common-lisp:cons "resourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'enhanced-infrastructure-metrics))
      (common-lisp:list
       (common-lisp:cons "enhancedInfrastructureMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-types))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadTypes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'external-metrics-preference))
      (common-lisp:list
       (common-lisp:cons "externalMetricsPreference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'look-back-period))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'utilization-preferences))
      (common-lisp:list
       (common-lisp:cons "utilizationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preferred-resources))
      (common-lisp:list
       (common-lisp:cons "preferredResources"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-estimation-mode))
      (common-lisp:list
       (common-lisp:cons "savingsEstimationMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-preferences-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommendation-preferences-details ()
   '(trivial-types:proper-list recommendation-preferences-detail))
 (common-lisp:defun make-recommendation-preferences-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommendation-preferences-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-source common-lisp:nil
                       ((recommendation-source-arn :initarg
                         :recommendation-source-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-source-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-source-recommendation-source-arn
                         :shape "RecommendationSourceArn" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (recommendation-source-type :initarg
                         :recommendation-source-type :initform common-lisp:nil
                         :type
                         (common-lisp:or recommendation-source-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-source-recommendation-source-type
                         :shape "RecommendationSourceType" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-source
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-source
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-source 'make-recommendation-source))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-arn))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-source-type))
      (common-lisp:list
       (common-lisp:cons "recommendationSourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-source))
   common-lisp:nil))
(common-lisp:deftype recommendation-source-arn () 'common-lisp:string)
(common-lisp:deftype recommendation-source-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype recommendation-sources ()
   '(trivial-types:proper-list recommendation-source))
 (common-lisp:defun make-recommendation-sources
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype recommendation-summaries ()
   '(trivial-types:proper-list recommendation-summary))
 (common-lisp:defun make-recommendation-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list recommendation-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass recommendation-summary common-lisp:nil
                       ((summaries :initarg :summaries :initform
                         common-lisp:nil :type
                         (common-lisp:or summaries common-lisp:null) :accessor
                         struct-shape-recommendation-summary-summaries :shape
                         "Summaries" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (recommendation-resource-type :initarg
                         :recommendation-resource-type :initform
                         common-lisp:nil :type
                         (common-lisp:or recommendation-source-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-recommendation-resource-type
                         :shape "RecommendationSourceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-recommendation-summary-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (current-performance-risk-ratings :initarg
                         :current-performance-risk-ratings :initform
                         common-lisp:nil :type
                         (common-lisp:or current-performance-risk-ratings
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-current-performance-risk-ratings
                         :shape "CurrentPerformanceRiskRatings" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (inferred-workload-savings :initarg
                         :inferred-workload-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or inferred-workload-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommendation-summary-inferred-workload-savings
                         :shape "InferredWorkloadSavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommendation-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'recommendation-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommendation-summary 'make-recommendation-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'summaries))
      (common-lisp:list
       (common-lisp:cons "summaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommendation-resource-type))
      (common-lisp:list
       (common-lisp:cons "recommendationResourceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk-ratings))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRiskRatings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'inferred-workload-savings))
      (common-lisp:list
       (common-lisp:cons "inferredWorkloadSavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommendation-summary))
   common-lisp:nil))
(common-lisp:deftype recommended-instance-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass recommended-option-projected-metric common-lisp:nil
                       ((recommended-instance-type :initarg
                         :recommended-instance-type :initform common-lisp:nil
                         :type
                         (common-lisp:or recommended-instance-type
                                         common-lisp:null)
                         :accessor
                         struct-shape-recommended-option-projected-metric-recommended-instance-type
                         :shape "RecommendedInstanceType" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-recommended-option-projected-metric-rank
                         :shape "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (projected-metrics :initarg :projected-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or projected-metrics common-lisp:null)
                         :accessor
                         struct-shape-recommended-option-projected-metric-projected-metrics
                         :shape "ProjectedMetrics" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-recommended-option-projected-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'recommended-option-projected-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'recommended-option-projected-metric
                    'make-recommended-option-projected-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'recommended-instance-type))
      (common-lisp:list
       (common-lisp:cons "recommendedInstanceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'projected-metrics))
      (common-lisp:list
       (common-lisp:cons "projectedMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          recommended-option-projected-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype recommended-option-projected-metrics ()
   '(trivial-types:proper-list recommended-option-projected-metric))
 (common-lisp:defun make-recommended-option-projected-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            recommended-option-projected-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype resource-arns ()
   '(trivial-types:proper-list resource-arn))
 (common-lisp:defun make-resource-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list resource-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype resource-type () 'common-lisp:string)
(common-lisp:deftype root-volume () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass s3destination common-lisp:nil
                       ((bucket :initarg :bucket :initform common-lisp:nil
                         :type
                         (common-lisp:or destination-bucket common-lisp:null)
                         :accessor struct-shape-s3destination-bucket :shape
                         "DestinationBucket" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or destination-key common-lisp:null)
                         :accessor struct-shape-s3destination-key :shape
                         "DestinationKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata-key :initarg :metadata-key :initform
                         common-lisp:nil :type
                         (common-lisp:or metadata-key common-lisp:null)
                         :accessor struct-shape-s3destination-metadata-key
                         :shape "MetadataKey" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-key))
      (common-lisp:list
       (common-lisp:cons "metadataKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3destination-config common-lisp:nil
                       ((bucket :initarg :bucket :initform common-lisp:nil
                         :type
                         (common-lisp:or destination-bucket common-lisp:null)
                         :accessor struct-shape-s3destination-config-bucket
                         :shape "DestinationBucket" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (key-prefix :initarg :key-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or destination-key-prefix
                                         common-lisp:null)
                         :accessor struct-shape-s3destination-config-key-prefix
                         :shape "DestinationKeyPrefix" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3destination-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3destination-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 's3destination-config 'make-s3destination-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket))
      (common-lisp:list
       (common-lisp:cons "bucket"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key-prefix))
      (common-lisp:list
       (common-lisp:cons "keyPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination-config))
   common-lisp:nil))
(common-lisp:deftype savings-estimation-mode () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass savings-opportunity common-lisp:nil
                       ((savings-opportunity-percentage :initarg
                         :savings-opportunity-percentage :initform
                         common-lisp:nil :type
                         (common-lisp:or savings-opportunity-percentage
                                         common-lisp:null)
                         :accessor
                         struct-shape-savings-opportunity-savings-opportunity-percentage
                         :shape "SavingsOpportunityPercentage" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (estimated-monthly-savings :initarg
                         :estimated-monthly-savings :initform common-lisp:nil
                         :type
                         (common-lisp:or estimated-monthly-savings
                                         common-lisp:null)
                         :accessor
                         struct-shape-savings-opportunity-estimated-monthly-savings
                         :shape "EstimatedMonthlySavings" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-savings-opportunity
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'savings-opportunity
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'savings-opportunity 'make-savings-opportunity))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input savings-opportunity))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-percentage))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'estimated-monthly-savings))
      (common-lisp:list
       (common-lisp:cons "estimatedMonthlySavings"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input savings-opportunity))
   common-lisp:nil))
(common-lisp:deftype savings-opportunity-percentage ()
  'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass scope common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or scope-name common-lisp:null) :accessor
                         struct-shape-scope-name :shape "ScopeName" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or scope-value common-lisp:null)
                         :accessor struct-shape-scope-value :shape "ScopeValue"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-scope
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'scope
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'scope 'make-scope))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input scope))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input scope))
   common-lisp:nil))
(common-lisp:deftype scope-name () 'common-lisp:string)
(common-lisp:deftype scope-value () 'common-lisp:string)
(common-lisp:deftype service-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype service-arns () '(trivial-types:proper-list service-arn))
 (common-lisp:defun make-service-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list service-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass service-configuration common-lisp:nil
                       ((memory :initarg :memory :initform common-lisp:nil
                         :type
                         (common-lisp:or nullable-memory common-lisp:null)
                         :accessor struct-shape-service-configuration-memory
                         :shape "NullableMemory" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cpu :initarg :cpu :initform common-lisp:nil :type
                         (common-lisp:or nullable-cpu common-lisp:null)
                         :accessor struct-shape-service-configuration-cpu
                         :shape "NullableCpu" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (container-configurations :initarg
                         :container-configurations :initform common-lisp:nil
                         :type
                         (common-lisp:or container-configurations
                                         common-lisp:null)
                         :accessor
                         struct-shape-service-configuration-container-configurations
                         :shape "ContainerConfigurations" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (auto-scaling-configuration :initarg
                         :auto-scaling-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or auto-scaling-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-service-configuration-auto-scaling-configuration
                         :shape "AutoScalingConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (task-definition-arn :initarg :task-definition-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or task-definition-arn common-lisp:null)
                         :accessor
                         struct-shape-service-configuration-task-definition-arn
                         :shape "TaskDefinitionArn" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-service-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'service-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'service-configuration 'make-service-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'memory))
      (common-lisp:list
       (common-lisp:cons "memory"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cpu))
      (common-lisp:list
       (common-lisp:cons "cpu"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'container-configurations))
      (common-lisp:list
       (common-lisp:cons "containerConfigurations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'auto-scaling-configuration))
      (common-lisp:list
       (common-lisp:cons "autoScalingConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'task-definition-arn))
      (common-lisp:list
       (common-lisp:cons "taskDefinitionArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          service-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype status-reason () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype summaries () '(trivial-types:proper-list summary))
 (common-lisp:defun make-summaries
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass summary common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or finding common-lisp:null) :accessor
                         struct-shape-summary-name :shape "Finding" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or summary-value common-lisp:null)
                         :accessor struct-shape-summary-value :shape
                         "SummaryValue" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (reason-code-summaries :initarg :reason-code-summaries
                         :initform common-lisp:nil :type
                         (common-lisp:or reason-code-summaries
                                         common-lisp:null)
                         :accessor struct-shape-summary-reason-code-summaries
                         :shape "ReasonCodeSummaries" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'summary 'make-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'reason-code-summaries))
      (common-lisp:list
       (common-lisp:cons "reasonCodeSummaries"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input summary))
   common-lisp:nil))
(common-lisp:deftype summary-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform common-lisp:nil :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tags
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:deftype task-definition-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (compute-optimizer-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype timestamps () '(trivial-types:proper-list timestamp))
 (common-lisp:defun make-timestamps
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list timestamp))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass update-enrollment-status-request common-lisp:nil
                       ((status :initarg :status :initform
                         (common-lisp:error ":status is required") :type
                         (common-lisp:or status common-lisp:null) :accessor
                         struct-shape-update-enrollment-status-request-status
                         :shape "Status" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (include-member-accounts :initarg
                         :include-member-accounts :initform common-lisp:nil
                         :type
                         (common-lisp:or include-member-accounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-enrollment-status-request-include-member-accounts
                         :shape "IncludeMemberAccounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-enrollment-status-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-enrollment-status-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-request
                    'make-update-enrollment-status-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-member-accounts))
      (common-lisp:list
       (common-lisp:cons "includeMemberAccounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-enrollment-status-response common-lisp:nil
                       ((status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor
                         struct-shape-update-enrollment-status-response-status
                         :shape "Status" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or status-reason common-lisp:null)
                         :accessor
                         struct-shape-update-enrollment-status-response-status-reason
                         :shape "StatusReason" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-enrollment-status-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-enrollment-status-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-enrollment-status-response
                    'make-update-enrollment-status-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "statusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-enrollment-status-response))
   common-lisp:nil))
(common-lisp:deftype upper-bound-value () 'common-lisp:double-float)
(common-lisp:progn
 (common-lisp:defclass utilization-metric common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or metric-name common-lisp:null)
                         :accessor struct-shape-utilization-metric-name :shape
                         "MetricName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (statistic :initarg :statistic :initform
                         common-lisp:nil :type
                         (common-lisp:or metric-statistic common-lisp:null)
                         :accessor struct-shape-utilization-metric-statistic
                         :shape "MetricStatistic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or metric-value common-lisp:null)
                         :accessor struct-shape-utilization-metric-value :shape
                         "MetricValue" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-utilization-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'utilization-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'utilization-metric 'make-utilization-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input utilization-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'statistic))
      (common-lisp:list
       (common-lisp:cons "statistic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input utilization-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype utilization-metrics ()
   '(trivial-types:proper-list utilization-metric))
 (common-lisp:defun make-utilization-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-metric))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass utilization-preference common-lisp:nil
                       ((metric-name :initarg :metric-name :initform
                         common-lisp:nil :type
                         (common-lisp:or customizable-metric-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-utilization-preference-metric-name :shape
                         "CustomizableMetricName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metric-parameters :initarg :metric-parameters
                         :initform common-lisp:nil :type
                         (common-lisp:or customizable-metric-parameters
                                         common-lisp:null)
                         :accessor
                         struct-shape-utilization-preference-metric-parameters
                         :shape "CustomizableMetricParameters" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-utilization-preference
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'utilization-preference
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'utilization-preference 'make-utilization-preference))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          utilization-preference))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          utilization-preference))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "metricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-parameters))
      (common-lisp:list
       (common-lisp:cons "metricParameters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          utilization-preference))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype utilization-preferences ()
   '(trivial-types:proper-list utilization-preference))
 (common-lisp:defun make-utilization-preferences
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list utilization-preference))
   aws-sdk/generator/shape::members))
(common-lisp:deftype value () 'common-lisp:double-float)
(common-lisp:deftype very-low () 'common-lisp:integer)
(common-lisp:deftype volume-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-arns () '(trivial-types:proper-list volume-arn))
 (common-lisp:defun make-volume-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-baseline-iops () 'common-lisp:integer)
(common-lisp:deftype volume-baseline-throughput () 'common-lisp:integer)
(common-lisp:deftype volume-burst-iops () 'common-lisp:integer)
(common-lisp:deftype volume-burst-throughput () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass volume-configuration common-lisp:nil
                       ((volume-type :initarg :volume-type :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-type common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-type :shape
                         "VolumeType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-size :initarg :volume-size :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-size common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-size :shape
                         "VolumeSize" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-baseline-iops :initarg :volume-baseline-iops
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-baseline-iops common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-baseline-iops
                         :shape "VolumeBaselineIOPS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-burst-iops :initarg :volume-burst-iops
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-burst-iops common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-burst-iops
                         :shape "VolumeBurstIOPS" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-baseline-throughput :initarg
                         :volume-baseline-throughput :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-baseline-throughput
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-baseline-throughput
                         :shape "VolumeBaselineThroughput" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-burst-throughput :initarg
                         :volume-burst-throughput :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-burst-throughput
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-volume-burst-throughput
                         :shape "VolumeBurstThroughput" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (root-volume :initarg :root-volume :initform
                         common-lisp:nil :type
                         (common-lisp:or root-volume common-lisp:null)
                         :accessor
                         struct-shape-volume-configuration-root-volume :shape
                         "RootVolume" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volume-configuration 'make-volume-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "volumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-size))
      (common-lisp:list
       (common-lisp:cons "volumeSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-burst-iops))
      (common-lisp:list
       (common-lisp:cons "volumeBurstIOPS"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-baseline-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBaselineThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-burst-throughput))
      (common-lisp:list
       (common-lisp:cons "volumeBurstThroughput"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'root-volume))
      (common-lisp:list
       (common-lisp:cons "rootVolume"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass volume-recommendation common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-volume-recommendation-volume-arn :shape
                         "VolumeArn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (account-id :initarg :account-id :initform
                         common-lisp:nil :type
                         (common-lisp:or account-id common-lisp:null) :accessor
                         struct-shape-volume-recommendation-account-id :shape
                         "AccountId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (current-configuration :initarg :current-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-configuration common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-current-configuration
                         :shape "VolumeConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (finding :initarg :finding :initform common-lisp:nil
                         :type (common-lisp:or ebsfinding common-lisp:null)
                         :accessor struct-shape-volume-recommendation-finding
                         :shape "EBSFinding" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (utilization-metrics :initarg :utilization-metrics
                         :initform common-lisp:nil :type
                         (common-lisp:or ebsutilization-metrics
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-utilization-metrics
                         :shape "EBSUtilizationMetrics" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (look-back-period-in-days :initarg
                         :look-back-period-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or look-back-period-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-look-back-period-in-days
                         :shape "LookBackPeriodInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-recommendation-options :initarg
                         :volume-recommendation-options :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-recommendation-options
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-volume-recommendation-options
                         :shape "VolumeRecommendationOptions" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-refresh-timestamp :initarg
                         :last-refresh-timestamp :initform common-lisp:nil
                         :type
                         (common-lisp:or last-refresh-timestamp
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-last-refresh-timestamp
                         :shape "LastRefreshTimestamp" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (current-performance-risk :initarg
                         :current-performance-risk :initform common-lisp:nil
                         :type
                         (common-lisp:or current-performance-risk
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-current-performance-risk
                         :shape "CurrentPerformanceRisk" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-volume-recommendation-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (effective-recommendation-preferences :initarg
                         :effective-recommendation-preferences :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          ebseffective-recommendation-preferences
                          common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-effective-recommendation-preferences
                         :shape "EBSEffectiveRecommendationPreferences"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-recommendation
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-recommendation
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation 'make-volume-recommendation))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "volumeArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'account-id))
      (common-lisp:list
       (common-lisp:cons "accountId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-configuration))
      (common-lisp:list
       (common-lisp:cons "currentConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'finding))
      (common-lisp:list
       (common-lisp:cons "finding"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utilization-metrics))
      (common-lisp:list
       (common-lisp:cons "utilizationMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'look-back-period-in-days))
      (common-lisp:list
       (common-lisp:cons "lookBackPeriodInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recommendation-options))
      (common-lisp:list
       (common-lisp:cons "volumeRecommendationOptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-refresh-timestamp))
      (common-lisp:list
       (common-lisp:cons "lastRefreshTimestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'current-performance-risk))
      (common-lisp:list
       (common-lisp:cons "currentPerformanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'effective-recommendation-preferences))
      (common-lisp:list
       (common-lisp:cons "effectiveRecommendationPreferences"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass volume-recommendation-option common-lisp:nil
                       ((configuration :initarg :configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-configuration common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-option-configuration
                         :shape "VolumeConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (performance-risk :initarg :performance-risk :initform
                         common-lisp:nil :type
                         (common-lisp:or performance-risk common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-option-performance-risk
                         :shape "PerformanceRisk" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (rank :initarg :rank :initform common-lisp:nil :type
                         (common-lisp:or rank common-lisp:null) :accessor
                         struct-shape-volume-recommendation-option-rank :shape
                         "Rank" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (savings-opportunity :initarg :savings-opportunity
                         :initform common-lisp:nil :type
                         (common-lisp:or savings-opportunity common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-option-savings-opportunity
                         :shape "SavingsOpportunity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (savings-opportunity-after-discounts :initarg
                         :savings-opportunity-after-discounts :initform
                         common-lisp:nil :type
                         (common-lisp:or ebssavings-opportunity-after-discounts
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-recommendation-option-savings-opportunity-after-discounts
                         :shape "EBSSavingsOpportunityAfterDiscounts" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-recommendation-option
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-recommendation-option
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volume-recommendation-option
                    'make-volume-recommendation-option))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'configuration))
      (common-lisp:list
       (common-lisp:cons "configuration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'performance-risk))
      (common-lisp:list
       (common-lisp:cons "performanceRisk"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'rank))
      (common-lisp:list
       (common-lisp:cons "rank"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'savings-opportunity))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'savings-opportunity-after-discounts))
      (common-lisp:list
       (common-lisp:cons "savingsOpportunityAfterDiscounts"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recommendation-option))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-recommendation-options ()
   '(trivial-types:proper-list volume-recommendation-option))
 (common-lisp:defun make-volume-recommendation-options
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            volume-recommendation-option))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype volume-recommendations ()
   '(trivial-types:proper-list volume-recommendation))
 (common-lisp:defun make-volume-recommendations
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-recommendation))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-size () 'common-lisp:integer)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     recommendation-preference-names)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope
     recommendation-preference-names))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "DeleteRecommendationPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun describe-recommendation-export-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key job-ids filters next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable job-ids filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-recommendation-export-jobs-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "DescribeRecommendationExportJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-recommendation-export-jobs))
(common-lisp:progn
 (common-lisp:defun export-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportAutoScalingGroupRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportEBSVolumeRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts
                     recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportEC2InstanceRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun export-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportECSServiceRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun export-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportLambdaFunctionRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun export-license-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids filters fields-to-export
                     s3destination-config file-format include-member-accounts)
   (common-lisp:declare
    (common-lisp:ignorable account-ids filters fields-to-export
     s3destination-config file-format include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-export-license-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "ExportLicenseRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'export-license-recommendations))
(common-lisp:progn
 (common-lisp:defun get-auto-scaling-group-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids auto-scaling-group-arns
                     next-token max-results filters recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable account-ids auto-scaling-group-arns next-token
     max-results filters recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-auto-scaling-group-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetAutoScalingGroupRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-auto-scaling-group-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ebsvolume-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable volume-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ebsvolume-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEBSVolumeRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ebsvolume-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2instance-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arns next-token max-results
                     filters account-ids recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arns next-token max-results filters
     account-ids recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2instance-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEC2InstanceRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ec2instance-recommendations))
(common-lisp:progn
 (common-lisp:defun get-ec2recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key instance-arn stat period start-time
                     end-time recommendation-preferences)
   (common-lisp:declare
    (common-lisp:ignorable instance-arn stat period start-time end-time
     recommendation-preferences))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ec2recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEC2RecommendationProjectedMetrics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ec2recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendation-projected-metrics
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arn stat period start-time
                     end-time)
   (common-lisp:declare
    (common-lisp:ignorable service-arn stat period start-time end-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendation-projected-metrics-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetECSServiceRecommendationProjectedMetrics"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ecsservice-recommendation-projected-metrics))
(common-lisp:progn
 (common-lisp:defun get-ecsservice-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key service-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable service-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-ecsservice-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetECSServiceRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-ecsservice-recommendations))
(common-lisp:progn
 (common-lisp:defun get-effective-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-effective-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEffectiveRecommendationPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-effective-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-enrollment-status ()
   (aws-sdk/generator/operation::parse-response
    (aws-sdk/api:aws-request
     (common-lisp:make-instance 'compute-optimizer-request :method "POST" :path
                                "/" :operation "GetEnrollmentStatus"))
    common-lisp:nil common-lisp:nil *error-map*))
 (common-lisp:export 'get-enrollment-status))
(common-lisp:progn
 (common-lisp:defun get-enrollment-statuses-for-organization
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key filters next-token max-results)
   (common-lisp:declare (common-lisp:ignorable filters next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-enrollment-statuses-for-organization-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetEnrollmentStatusesForOrganization"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-enrollment-statuses-for-organization))
(common-lisp:progn
 (common-lisp:defun get-lambda-function-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key function-arns account-ids filters
                     next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable function-arns account-ids filters next-token
     max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-lambda-function-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetLambdaFunctionRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-lambda-function-recommendations))
(common-lisp:progn
 (common-lisp:defun get-license-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arns next-token max-results
                     filters account-ids)
   (common-lisp:declare
    (common-lisp:ignorable resource-arns next-token max-results filters
     account-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-license-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetLicenseRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-license-recommendations))
(common-lisp:progn
 (common-lisp:defun get-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetRecommendationPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun get-recommendation-summaries
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key account-ids next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable account-ids next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-recommendation-summaries-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "GetRecommendationSummaries"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommendation-summaries))
(common-lisp:progn
 (common-lisp:defun put-recommendation-preferences
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-type scope
                     enhanced-infrastructure-metrics inferred-workload-types
                     external-metrics-preference look-back-period
                     utilization-preferences preferred-resources
                     savings-estimation-mode)
   (common-lisp:declare
    (common-lisp:ignorable resource-type scope enhanced-infrastructure-metrics
     inferred-workload-types external-metrics-preference look-back-period
     utilization-preferences preferred-resources savings-estimation-mode))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-put-recommendation-preferences-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "PutRecommendationPreferences"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'put-recommendation-preferences))
(common-lisp:progn
 (common-lisp:defun update-enrollment-status
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key status include-member-accounts)
   (common-lisp:declare (common-lisp:ignorable status include-member-accounts))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-enrollment-status-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'compute-optimizer-request aws-sdk/generator/operation::input "POST"
        "/" "UpdateEnrollmentStatus"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-enrollment-status))
