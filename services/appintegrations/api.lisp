;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(common-lisp:defpackage #:aws-sdk/services/appintegrations/api
  (:use)
  (:nicknames #:aws/appintegrations)
  (:import-from #:aws-sdk/generator/shape)
  (:import-from #:aws-sdk/generator/operation)
  (:import-from #:aws-sdk/api)
  (:import-from #:aws-sdk/request)
  (:import-from #:aws-sdk/json-request)
  (:import-from #:aws-sdk/rest-json-request)
  (:import-from #:aws-sdk/rest-xml-request)
  (:import-from #:aws-sdk/query-request)
  (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/appintegrations/api)
(common-lisp:progn
 (common-lisp:define-condition appintegrations-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'appintegrations-error))
(common-lisp:progn
 (common-lisp:defclass appintegrations-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "appintegrations"
                        :api-version "2020-07-29" :host-prefix
                        "app-integrations" :signing-name "app-integrations"
                        :global-host common-lisp:nil))
 (common-lisp:export 'appintegrations-request))
(common-lisp:defvar *error-map*
  '(("AccessDeniedException" . access-denied-exception)
    ("DuplicateResourceException" . duplicate-resource-exception)
    ("InternalServiceError" . internal-service-error)
    ("InvalidRequestException" . invalid-request-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ResourceQuotaExceededException" . resource-quota-exceeded-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnsupportedOperationException" . unsupported-operation-exception)))
(common-lisp:progn
 (common-lisp:define-condition access-denied-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       access-denied-exception-message)))
 (common-lisp:export
  (common-lisp:list 'access-denied-exception 'access-denied-exception-message)))
(common-lisp:progn
 (common-lisp:deftype application-approved-origins ()
   '(trivial-types:proper-list application-trusted-source))
 (common-lisp:defun make-application-approved-origins
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            application-trusted-source))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass application-association-summary common-lisp:nil
                       ((application-association-arn :initarg
                         :application-association-arn :initform common-lisp:nil
                         :type (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-application-association-summary-application-association-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (application-arn :initarg :application-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-application-association-summary-application-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-id :initarg :client-id :initform
                         common-lisp:nil :type
                         (common-lisp:or client-id common-lisp:null) :accessor
                         struct-shape-application-association-summary-client-id
                         :shape "ClientId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-association-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'application-association-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-association-summary
                    'make-application-association-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-association-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-association-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-association-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssociationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'application-arn))
      (common-lisp:list
       (common-lisp:cons "ApplicationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-association-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype application-associations-list ()
   '(trivial-types:proper-list application-association-summary))
 (common-lisp:defun make-application-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            application-association-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype application-name () 'common-lisp:string)
(common-lisp:deftype application-namespace () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass application-source-config common-lisp:nil
                       ((external-url-config :initarg :external-url-config
                         :initform common-lisp:nil :type
                         (common-lisp:or external-url-config common-lisp:null)
                         :accessor
                         struct-shape-application-source-config-external-url-config
                         :shape "ExternalUrlConfig" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-source-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application-source-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-source-config
                    'make-application-source-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          application-source-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          application-source-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'external-url-config))
      (common-lisp:list
       (common-lisp:cons "ExternalUrlConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          application-source-config))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass application-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-application-summary-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-application-summary-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor struct-shape-application-summary-name :shape
                         "ApplicationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (namespace :initarg :namespace :initform
                         common-lisp:nil :type
                         (common-lisp:or application-namespace
                                         common-lisp:null)
                         :accessor struct-shape-application-summary-namespace
                         :shape "ApplicationNamespace" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-time :initarg :created-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-application-summary-created-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-application-summary-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-application-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'application-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'application-summary 'make-application-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input application-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input application-summary))
   common-lisp:nil))
(common-lisp:deftype application-trusted-source () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype applications-list ()
   '(trivial-types:proper-list application-summary))
 (common-lisp:defun make-applications-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list application-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype arn-or-uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype client-association-metadata () 'common-lisp:hash-table)
 (common-lisp:defun make-client-association-metadata
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype client-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-application-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor struct-shape-create-application-request-name
                         :shape "ApplicationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (namespace :initarg :namespace :initform
                         (common-lisp:error ":namespace is required") :type
                         (common-lisp:or application-namespace
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-namespace
                         :shape "ApplicationNamespace" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-source-config :initarg
                         :application-source-config :initform
                         (common-lisp:error
                          ":application-source-config is required")
                         :type
                         (common-lisp:or application-source-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-application-source-config
                         :shape "ApplicationSourceConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subscriptions :initarg :subscriptions :initform
                         common-lisp:nil :type
                         (common-lisp:or subscription-list common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-subscriptions
                         :shape "SubscriptionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (publications :initarg :publications :initform
                         common-lisp:nil :type
                         (common-lisp:or publication-list common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-publications
                         :shape "PublicationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-application-request-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (permissions :initarg :permissions :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-list common-lisp:null)
                         :accessor
                         struct-shape-create-application-request-permissions
                         :shape "PermissionList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-request
                    'make-create-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-source-config))
      (common-lisp:list
       (common-lisp:cons "ApplicationSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publications))
      (common-lisp:list
       (common-lisp:cons "Publications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-application-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-application-response-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-application-response-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-application-response
                    'make-create-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-data-integration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-data-integration-request-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key :initarg :kms-key :initform
                         (common-lisp:error ":kms-key is required") :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-kms-key
                         :shape "NonBlankString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-uri :initarg :source-uri :initform
                         (common-lisp:error ":source-uri is required") :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         struct-shape-create-data-integration-request-source-uri
                         :shape "SourceURI" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-config :initarg :schedule-config :initform
                         common-lisp:nil :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-schedule-config
                         :shape "ScheduleConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-data-integration-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-configuration :initarg :file-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-file-configuration
                         :shape "FileConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-configuration :initarg :object-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-request-object-configuration
                         :shape "ObjectConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-data-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-data-integration-request
                    'make-create-data-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-config))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-data-integration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-data-integration-response-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-create-data-integration-response-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-data-integration-response-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key :initarg :kms-key :initform common-lisp:nil
                         :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-kms-key
                         :shape "NonBlankString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-uri :initarg :source-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         struct-shape-create-data-integration-response-source-uri
                         :shape "SourceURI" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-configuration :initarg
                         :schedule-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-schedule-configuration
                         :shape "ScheduleConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-data-integration-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-configuration :initarg :file-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-file-configuration
                         :shape "FileConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-configuration :initarg :object-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         struct-shape-create-data-integration-response-object-configuration
                         :shape "ObjectConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-data-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-data-integration-response
                    'make-create-data-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-integration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-create-event-integration-request-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-create-event-integration-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-filter :initarg :event-filter :initform
                         (common-lisp:error ":event-filter is required") :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor
                         struct-shape-create-event-integration-request-event-filter
                         :shape "EventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :initform
                         (common-lisp:error ":event-bridge-bus is required")
                         :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor
                         struct-shape-create-event-integration-request-event-bridge-bus
                         :shape "EventBridgeBus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         common-lisp:nil :type
                         (common-lisp:or idempotency-token common-lisp:null)
                         :accessor
                         struct-shape-create-event-integration-request-client-token
                         :shape "IdempotencyToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-create-event-integration-request-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-event-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-event-integration-request
                    'make-create-event-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-event-integration-response common-lisp:nil
                       ((event-integration-arn :initarg :event-integration-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-create-event-integration-response-event-integration-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-event-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-event-integration-response
                    'make-create-event-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-event-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass data-integration-association-summary common-lisp:nil
                       ((data-integration-association-arn :initarg
                         :data-integration-association-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-data-integration-association-summary-data-integration-association-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (data-integration-arn :initarg :data-integration-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-data-integration-association-summary-data-integration-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-id :initarg :client-id :initform
                         common-lisp:nil :type
                         (common-lisp:or client-id common-lisp:null) :accessor
                         struct-shape-data-integration-association-summary-client-id
                         :shape "ClientId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-integration-association-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'data-integration-association-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'data-integration-association-summary
                    'make-data-integration-association-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-association-arn))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationAssociationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-arn))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-association-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-integration-associations-list ()
   '(trivial-types:proper-list data-integration-association-summary))
 (common-lisp:defun make-data-integration-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            data-integration-association-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass data-integration-summary common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-data-integration-summary-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-data-integration-summary-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-uri :initarg :source-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         struct-shape-data-integration-summary-source-uri
                         :shape "SourceURI" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-data-integration-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'data-integration-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'data-integration-summary 'make-data-integration-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          data-integration-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype data-integrations-list ()
   '(trivial-types:proper-list data-integration-summary))
 (common-lisp:defun make-data-integrations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            data-integration-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-application-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn-or-uuid common-lisp:null)
                         :accessor struct-shape-delete-application-request-arn
                         :shape "ArnOrUUID" :location "uri" :location-name
                         "ApplicationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-request
                    'make-delete-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-application-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-application-response
                    'make-delete-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-data-integration-request common-lisp:nil
                       ((data-integration-identifier :initarg
                         :data-integration-identifier :initform
                         (common-lisp:error
                          ":data-integration-identifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-delete-data-integration-request-data-integration-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "Identifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-data-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-data-integration-request
                    'make-delete-data-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-data-integration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-data-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-data-integration-response
                    'make-delete-data-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-integration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-delete-event-integration-request-name
                         :shape "Name" :location "uri" :location-name "Name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-event-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-event-integration-request
                    'make-delete-event-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-event-integration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-event-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-event-integration-response
                    'make-delete-event-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-event-integration-response))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition duplicate-resource-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       duplicate-resource-exception-message)))
 (common-lisp:export
  (common-lisp:list 'duplicate-resource-exception
                    'duplicate-resource-exception-message)))
(common-lisp:deftype event-bridge-bus () 'common-lisp:string)
(common-lisp:deftype event-bridge-rule-name () 'common-lisp:string)
(common-lisp:deftype event-definition-schema () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass event-filter common-lisp:nil
                       ((source :initarg :source :initform
                         (common-lisp:error ":source is required") :type
                         (common-lisp:or source common-lisp:null) :accessor
                         struct-shape-event-filter-source :shape "Source"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-filter
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-filter
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'event-filter 'make-event-filter))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-filter))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source))
      (common-lisp:list
       (common-lisp:cons "Source"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-filter))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-integration common-lisp:nil
                       ((event-integration-arn :initarg :event-integration-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-event-integration-event-integration-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-event-integration-name :shape "Name"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-event-integration-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-filter :initarg :event-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor struct-shape-event-integration-event-filter
                         :shape "EventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor
                         struct-shape-event-integration-event-bridge-bus :shape
                         "EventBridgeBus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-event-integration-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-integration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'event-integration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-integration 'make-event-integration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input event-integration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input event-integration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input event-integration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass event-integration-association common-lisp:nil
                       ((event-integration-association-arn :initarg
                         :event-integration-association-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-event-integration-association-event-integration-association-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-integration-association-id :initarg
                         :event-integration-association-id :initform
                         common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-event-integration-association-event-integration-association-id
                         :shape "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-integration-name :initarg
                         :event-integration-name :initform common-lisp:nil
                         :type (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-event-integration-association-event-integration-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-id :initarg :client-id :initform
                         common-lisp:nil :type
                         (common-lisp:or client-id common-lisp:null) :accessor
                         struct-shape-event-integration-association-client-id
                         :shape "ClientId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-bridge-rule-name :initarg
                         :event-bridge-rule-name :initform common-lisp:nil
                         :type
                         (common-lisp:or event-bridge-rule-name
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-integration-association-event-bridge-rule-name
                         :shape "EventBridgeRuleName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-association-metadata :initarg
                         :client-association-metadata :initform common-lisp:nil
                         :type
                         (common-lisp:or client-association-metadata
                                         common-lisp:null)
                         :accessor
                         struct-shape-event-integration-association-client-association-metadata
                         :shape "ClientAssociationMetadata" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-event-integration-association
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'event-integration-association
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'event-integration-association
                    'make-event-integration-association))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-association-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-association-id))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-name))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-id))
      (common-lisp:list
       (common-lisp:cons "ClientId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-bridge-rule-name))
      (common-lisp:list
       (common-lisp:cons "EventBridgeRuleName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'client-association-metadata))
      (common-lisp:list
       (common-lisp:cons "ClientAssociationMetadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          event-integration-association))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype event-integration-associations-list ()
   '(trivial-types:proper-list event-integration-association))
 (common-lisp:defun make-event-integration-associations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            event-integration-association))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype event-integrations-list ()
   '(trivial-types:proper-list event-integration))
 (common-lisp:defun make-event-integrations-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list event-integration))
   aws-sdk/generator/shape::members))
(common-lisp:deftype event-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass external-url-config common-lisp:nil
                       ((access-url :initarg :access-url :initform
                         (common-lisp:error ":access-url is required") :type
                         (common-lisp:or url common-lisp:null) :accessor
                         struct-shape-external-url-config-access-url :shape
                         "URL" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (approved-origins :initarg :approved-origins :initform
                         common-lisp:nil :type
                         (common-lisp:or application-approved-origins
                                         common-lisp:null)
                         :accessor
                         struct-shape-external-url-config-approved-origins
                         :shape "ApplicationApprovedOrigins" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-external-url-config
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'external-url-config
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'external-url-config 'make-external-url-config))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input external-url-config))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input external-url-config))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'access-url))
      (common-lisp:list
       (common-lisp:cons "AccessUrl"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'approved-origins))
      (common-lisp:list
       (common-lisp:cons "ApprovedOrigins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input external-url-config))
   common-lisp:nil))
(common-lisp:deftype fields () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype fields-list () '(trivial-types:proper-list fields))
 (common-lisp:defun make-fields-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list fields))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype fields-map () 'common-lisp:hash-table)
 (common-lisp:defun make-fields-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass file-configuration common-lisp:nil
                       ((folders :initarg :folders :initform
                         (common-lisp:error ":folders is required") :type
                         (common-lisp:or folder-list common-lisp:null)
                         :accessor struct-shape-file-configuration-folders
                         :shape "FolderList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filters :initarg :filters :initform common-lisp:nil
                         :type (common-lisp:or fields-map common-lisp:null)
                         :accessor struct-shape-file-configuration-filters
                         :shape "FieldsMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-file-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'file-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'file-configuration 'make-file-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'folders))
      (common-lisp:list
       (common-lisp:cons "Folders"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filters))
      (common-lisp:list
       (common-lisp:cons "Filters"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-configuration))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype folder-list ()
   '(trivial-types:proper-list non-blank-long-string))
 (common-lisp:defun make-folder-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list non-blank-long-string))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass get-application-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn-or-uuid common-lisp:null)
                         :accessor struct-shape-get-application-request-arn
                         :shape "ArnOrUUID" :location "uri" :location-name
                         "ApplicationIdentifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-request 'make-get-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-application-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-application-response-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-application-response-id :shape "UUID"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor struct-shape-get-application-response-name
                         :shape "ApplicationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (namespace :initarg :namespace :initform
                         common-lisp:nil :type
                         (common-lisp:or application-namespace
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-namespace :shape
                         "ApplicationNamespace" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-source-config :initarg
                         :application-source-config :initform common-lisp:nil
                         :type
                         (common-lisp:or application-source-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-application-source-config
                         :shape "ApplicationSourceConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subscriptions :initarg :subscriptions :initform
                         common-lisp:nil :type
                         (common-lisp:or subscription-list common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-subscriptions
                         :shape "SubscriptionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (publications :initarg :publications :initform
                         common-lisp:nil :type
                         (common-lisp:or publication-list common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-publications
                         :shape "PublicationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (created-time :initarg :created-time :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-application-response-created-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-application-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-application-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (permissions :initarg :permissions :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-list common-lisp:null)
                         :accessor
                         struct-shape-get-application-response-permissions
                         :shape "PermissionList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-application-response 'make-get-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'namespace))
      (common-lisp:list
       (common-lisp:cons "Namespace"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-source-config))
      (common-lisp:list
       (common-lisp:cons "ApplicationSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publications))
      (common-lisp:list
       (common-lisp:cons "Publications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-time))
      (common-lisp:list
       (common-lisp:cons "CreatedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "LastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-data-integration-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         struct-shape-get-data-integration-request-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "Identifier"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-integration-request
                    'make-get-data-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-data-integration-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-data-integration-response-arn :shape
                         "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or uuid common-lisp:null) :accessor
                         struct-shape-get-data-integration-response-id :shape
                         "UUID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-data-integration-response-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-get-data-integration-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kms-key :initarg :kms-key :initform common-lisp:nil
                         :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor
                         struct-shape-get-data-integration-response-kms-key
                         :shape "NonBlankString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-uri :initarg :source-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or source-uri common-lisp:null) :accessor
                         struct-shape-get-data-integration-response-source-uri
                         :shape "SourceURI" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-configuration :initarg
                         :schedule-configuration :initform common-lisp:nil
                         :type
                         (common-lisp:or schedule-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-get-data-integration-response-schedule-configuration
                         :shape "ScheduleConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-data-integration-response-tags :shape
                         "TagMap" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-configuration :initarg :file-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or file-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-data-integration-response-file-configuration
                         :shape "FileConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-configuration :initarg :object-configuration
                         :initform common-lisp:nil :type
                         (common-lisp:or object-configuration common-lisp:null)
                         :accessor
                         struct-shape-get-data-integration-response-object-configuration
                         :shape "ObjectConfiguration" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-data-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-data-integration-response
                    'make-get-data-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kms-key))
      (common-lisp:list
       (common-lisp:cons "KmsKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-uri))
      (common-lisp:list
       (common-lisp:cons "SourceURI"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'schedule-configuration))
      (common-lisp:list
       (common-lisp:cons "ScheduleConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-configuration))
      (common-lisp:list
       (common-lisp:cons "FileConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'object-configuration))
      (common-lisp:list
       (common-lisp:cons "ObjectConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-event-integration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-event-integration-request-name :shape
                         "Name" :location "uri" :location-name "Name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-event-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-event-integration-request
                    'make-get-event-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-event-integration-response common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-get-event-integration-response-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-get-event-integration-response-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-integration-arn :initarg :event-integration-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-event-integration-response-event-integration-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (event-bridge-bus :initarg :event-bridge-bus :initform
                         common-lisp:nil :type
                         (common-lisp:or event-bridge-bus common-lisp:null)
                         :accessor
                         struct-shape-get-event-integration-response-event-bridge-bus
                         :shape "EventBridgeBus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (event-filter :initarg :event-filter :initform
                         common-lisp:nil :type
                         (common-lisp:or event-filter common-lisp:null)
                         :accessor
                         struct-shape-get-event-integration-response-event-filter
                         :shape "EventFilter" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-get-event-integration-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-event-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-event-integration-response
                    'make-get-event-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-arn))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-bridge-bus))
      (common-lisp:list
       (common-lisp:cons "EventBridgeBus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-filter))
      (common-lisp:list
       (common-lisp:cons "EventFilter"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-event-integration-response))
   common-lisp:nil))
(common-lisp:deftype idempotency-token () 'common-lisp:string)
(common-lisp:deftype identifier () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition internal-service-error
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-error-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-error 'internal-service-error-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-application-associations-request common-lisp:nil
                       ((application-id :initarg :application-id :initform
                         (common-lisp:error ":application-id is required")
                         :type (common-lisp:or arn-or-uuid common-lisp:null)
                         :accessor
                         struct-shape-list-application-associations-request-application-id
                         :shape "ArnOrUUID" :location "uri" :location-name
                         "ApplicationIdentifier")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-application-associations-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-application-associations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-associations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-associations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-associations-request
                    'make-list-application-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-application-associations-response common-lisp:nil
                       ((application-associations :initarg
                         :application-associations :initform common-lisp:nil
                         :type
                         (common-lisp:or application-associations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-application-associations-response-application-associations
                         :shape "ApplicationAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-application-associations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-application-associations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-application-associations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-application-associations-response
                    'make-list-application-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-associations))
      (common-lisp:list
       (common-lisp:cons "ApplicationAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-application-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-applications-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-applications-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-applications-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-applications-request
                    'make-list-applications-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-applications-response common-lisp:nil
                       ((applications :initarg :applications :initform
                         common-lisp:nil :type
                         (common-lisp:or applications-list common-lisp:null)
                         :accessor
                         struct-shape-list-applications-response-applications
                         :shape "ApplicationsList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-applications-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-applications-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-applications-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-applications-response
                    'make-list-applications-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'applications))
      (common-lisp:list
       (common-lisp:cons "Applications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-applications-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integration-associations-request
                       common-lisp:nil
                       ((data-integration-identifier :initarg
                         :data-integration-identifier :initform
                         (common-lisp:error
                          ":data-integration-identifier is required")
                         :type (common-lisp:or identifier common-lisp:null)
                         :accessor
                         struct-shape-list-data-integration-associations-request-data-integration-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "Identifier")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-data-integration-associations-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-data-integration-associations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-data-integration-associations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integration-associations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-data-integration-associations-request
                    'make-list-data-integration-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integration-associations-response
                       common-lisp:nil
                       ((data-integration-associations :initarg
                         :data-integration-associations :initform
                         common-lisp:nil :type
                         (common-lisp:or data-integration-associations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-data-integration-associations-response-data-integration-associations
                         :shape "DataIntegrationAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-data-integration-associations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-data-integration-associations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integration-associations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-data-integration-associations-response
                    'make-list-data-integration-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'data-integration-associations))
      (common-lisp:list
       (common-lisp:cons "DataIntegrationAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integration-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integrations-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-data-integrations-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-data-integrations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-data-integrations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integrations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-data-integrations-request
                    'make-list-data-integrations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-data-integrations-response common-lisp:nil
                       ((data-integrations :initarg :data-integrations
                         :initform common-lisp:nil :type
                         (common-lisp:or data-integrations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-data-integrations-response-data-integrations
                         :shape "DataIntegrationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-data-integrations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-data-integrations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-data-integrations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-data-integrations-response
                    'make-list-data-integrations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'data-integrations))
      (common-lisp:list
       (common-lisp:cons "DataIntegrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-data-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integration-associations-request
                       common-lisp:nil
                       ((event-integration-name :initarg
                         :event-integration-name :initform
                         (common-lisp:error
                          ":event-integration-name is required")
                         :type (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-list-event-integration-associations-request-event-integration-name
                         :shape "Name" :location "uri" :location-name "Name")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-integration-associations-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-event-integration-associations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-integration-associations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integration-associations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-integration-associations-request
                    'make-list-event-integration-associations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integration-associations-response
                       common-lisp:nil
                       ((event-integration-associations :initarg
                         :event-integration-associations :initform
                         common-lisp:nil :type
                         (common-lisp:or event-integration-associations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-event-integration-associations-response-event-integration-associations
                         :shape "EventIntegrationAssociationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-integration-associations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-integration-associations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integration-associations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-integration-associations-response
                    'make-list-event-integration-associations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'event-integration-associations))
      (common-lisp:list
       (common-lisp:cons "EventIntegrationAssociations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integration-associations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integrations-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-integrations-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-event-integrations-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-integrations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integrations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-integrations-request
                    'make-list-event-integrations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-event-integrations-response common-lisp:nil
                       ((event-integrations :initarg :event-integrations
                         :initform common-lisp:nil :type
                         (common-lisp:or event-integrations-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-event-integrations-response-event-integrations
                         :shape "EventIntegrationsList" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-event-integrations-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-event-integrations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-event-integrations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-event-integrations-response
                    'make-list-event-integrations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event-integrations))
      (common-lisp:list
       (common-lisp:cons "EventIntegrations"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-event-integrations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "resourceArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "TagMap" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message () 'common-lisp:string)
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype non-blank-long-string () 'common-lisp:string)
(common-lisp:deftype non-blank-string () 'common-lisp:string)
(common-lisp:deftype object () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype object-configuration () 'common-lisp:hash-table)
 (common-lisp:defun make-object-configuration
                    (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype permission () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype permission-list ()
   '(trivial-types:proper-list permission))
 (common-lisp:defun make-permission-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list permission))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass publication common-lisp:nil
                       ((event :initarg :event :initform
                         (common-lisp:error ":event is required") :type
                         (common-lisp:or event-name common-lisp:null) :accessor
                         struct-shape-publication-event :shape "EventName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (schema :initarg :schema :initform
                         (common-lisp:error ":schema is required") :type
                         (common-lisp:or event-definition-schema
                                         common-lisp:null)
                         :accessor struct-shape-publication-schema :shape
                         "EventDefinitionSchema" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-publication-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publication
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publication
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'publication 'make-publication))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publication))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publication))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schema))
      (common-lisp:list
       (common-lisp:cons "Schema"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publication))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype publication-list ()
   '(trivial-types:proper-list publication))
 (common-lisp:defun make-publication-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list publication))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-quota-exceeded-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-quota-exceeded-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-quota-exceeded-exception
                    'resource-quota-exceeded-exception-message)))
(common-lisp:progn
 (common-lisp:defclass schedule-configuration common-lisp:nil
                       ((first-execution-from :initarg :first-execution-from
                         :initform common-lisp:nil :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor
                         struct-shape-schedule-configuration-first-execution-from
                         :shape "NonBlankString" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object :initarg :object :initform common-lisp:nil
                         :type (common-lisp:or object common-lisp:null)
                         :accessor struct-shape-schedule-configuration-object
                         :shape "Object" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (schedule-expression :initarg :schedule-expression
                         :initform
                         (common-lisp:error ":schedule-expression is required")
                         :type
                         (common-lisp:or non-blank-string common-lisp:null)
                         :accessor
                         struct-shape-schedule-configuration-schedule-expression
                         :shape "NonBlankString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-schedule-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'schedule-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'schedule-configuration 'make-schedule-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'first-execution-from))
      (common-lisp:list
       (common-lisp:cons "FirstExecutionFrom"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object))
      (common-lisp:list
       (common-lisp:cons "Object"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'schedule-expression))
      (common-lisp:list
       (common-lisp:cons "ScheduleExpression"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          schedule-configuration))
   common-lisp:nil))
(common-lisp:deftype source () 'common-lisp:string)
(common-lisp:deftype source-uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass subscription common-lisp:nil
                       ((event :initarg :event :initform
                         (common-lisp:error ":event is required") :type
                         (common-lisp:or event-name common-lisp:null) :accessor
                         struct-shape-subscription-event :shape "EventName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor struct-shape-subscription-description :shape
                         "Description" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-subscription
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'subscription
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'subscription 'make-subscription))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input subscription))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'event))
      (common-lisp:list
       (common-lisp:cons "Event"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input subscription))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype subscription-list ()
   '(trivial-types:proper-list subscription))
 (common-lisp:defun make-subscription-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list subscription))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-key-list () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-key-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype tag-map () 'common-lisp:hash-table)
 (common-lisp:defun make-tag-map (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "Arn" :location "uri" :location-name "resourceArn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tag-map common-lisp:null) :accessor
                         struct-shape-tag-resource-request-tags :shape "TagMap"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-response 'make-tag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tag-resource-response))
   common-lisp:nil))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype url () 'common-lisp:string)
(common-lisp:deftype uuid () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unsupported-operation-exception
     (appintegrations-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-operation-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-operation-exception
                    'unsupported-operation-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resourcearn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "Arn" :location "uri" :location-name
                         "resourceArn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tagkeys is required") :type
                         (common-lisp:or tag-key-list common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "TagKeyList" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass untag-resource-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-response 'make-untag-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-request common-lisp:nil
                       ((arn :initarg :arn :initform
                         (common-lisp:error ":arn is required") :type
                         (common-lisp:or arn-or-uuid common-lisp:null)
                         :accessor struct-shape-update-application-request-arn
                         :shape "ArnOrUUID" :location "uri" :location-name
                         "ApplicationIdentifier")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or application-name common-lisp:null)
                         :accessor struct-shape-update-application-request-name
                         :shape "ApplicationName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (application-source-config :initarg
                         :application-source-config :initform common-lisp:nil
                         :type
                         (common-lisp:or application-source-config
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-application-source-config
                         :shape "ApplicationSourceConfig" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (subscriptions :initarg :subscriptions :initform
                         common-lisp:nil :type
                         (common-lisp:or subscription-list common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-subscriptions
                         :shape "SubscriptionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (publications :initarg :publications :initform
                         common-lisp:nil :type
                         (common-lisp:or publication-list common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-publications
                         :shape "PublicationList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (permissions :initarg :permissions :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-list common-lisp:null)
                         :accessor
                         struct-shape-update-application-request-permissions
                         :shape "PermissionList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-request
                    'make-update-application-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'application-source-config))
      (common-lisp:list
       (common-lisp:cons "ApplicationSourceConfig"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'subscriptions))
      (common-lisp:list
       (common-lisp:cons "Subscriptions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'publications))
      (common-lisp:list
       (common-lisp:cons "Publications"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'permissions))
      (common-lisp:list
       (common-lisp:cons "Permissions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-application-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-application-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-application-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-application-response
                    'make-update-application-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-application-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-integration-request common-lisp:nil
                       ((identifier :initarg :identifier :initform
                         (common-lisp:error ":identifier is required") :type
                         (common-lisp:or identifier common-lisp:null) :accessor
                         struct-shape-update-data-integration-request-identifier
                         :shape "Identifier" :location "uri" :location-name
                         "Identifier")
                        (name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-data-integration-request-name
                         :shape "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-data-integration-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-data-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-data-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-data-integration-request
                    'make-update-data-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "Name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-data-integration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-data-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-data-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-data-integration-response
                    'make-update-data-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-data-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-event-integration-request common-lisp:nil
                       ((name :initarg :name :initform
                         (common-lisp:error ":name is required") :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-update-event-integration-request-name
                         :shape "Name" :location "uri" :location-name "Name")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-event-integration-request-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-event-integration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-event-integration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-event-integration-request
                    'make-update-event-integration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-event-integration-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-event-integration-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-event-integration-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-event-integration-response
                    'make-update-event-integration-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-event-integration-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defun create-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name namespace description
                     application-source-config subscriptions publications
                     client-token tags permissions)
   (common-lisp:declare
    (common-lisp:ignorable name namespace description application-source-config
     subscriptions publications client-token tags permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        "/applications" "CreateApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-application))
(common-lisp:progn
 (common-lisp:defun create-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description kms-key source-uri
                     schedule-config tags client-token file-configuration
                     object-configuration)
   (common-lisp:declare
    (common-lisp:ignorable name description kms-key source-uri schedule-config
     tags client-token file-configuration object-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        "/dataIntegrations" "CreateDataIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-data-integration))
(common-lisp:progn
 (common-lisp:defun create-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description event-filter
                     event-bridge-bus client-token tags)
   (common-lisp:declare
    (common-lisp:ignorable name description event-filter event-bridge-bus
     client-token tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        "/eventIntegrations" "CreateEventIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-event-integration))
(common-lisp:progn
 (common-lisp:defun delete-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "DeleteApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-application))
(common-lisp:progn
 (common-lisp:defun delete-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-integration-identifier)
   (common-lisp:declare (common-lisp:ignorable data-integration-identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "DeleteDataIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-data-integration))
(common-lisp:progn
 (common-lisp:defun delete-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "DeleteEventIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-event-integration))
(common-lisp:progn
 (common-lisp:defun get-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn)
   (common-lisp:declare (common-lisp:ignorable arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "GetApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-application))
(common-lisp:progn
 (common-lisp:defun get-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier)
   (common-lisp:declare (common-lisp:ignorable identifier))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "GetDataIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-data-integration))
(common-lisp:progn
 (common-lisp:defun get-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name)
   (common-lisp:declare (common-lisp:ignorable name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "GetEventIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-event-integration))
(common-lisp:progn
 (common-lisp:defun list-application-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key application-id next-token max-results)
   (common-lisp:declare
    (common-lisp:ignorable application-id next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-application-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A/associations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "ListApplicationAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-application-associations))
(common-lisp:progn
 (common-lisp:defun list-applications
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-applications-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        "/applications" "ListApplications"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-applications))
(common-lisp:progn
 (common-lisp:defun list-data-integration-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key data-integration-identifier next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable data-integration-identifier next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-data-integration-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/dataIntegrations/~A/associations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "ListDataIntegrationAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-data-integration-associations))
(common-lisp:progn
 (common-lisp:defun list-data-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-data-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        "/dataIntegrations" "ListDataIntegrations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-data-integrations))
(common-lisp:progn
 (common-lisp:defun list-event-integration-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key event-integration-name next-token
                     max-results)
   (common-lisp:declare
    (common-lisp:ignorable event-integration-name next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-event-integration-associations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil
                              "/eventIntegrations/~A/associations"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "ListEventIntegrationAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-event-integration-associations))
(common-lisp:progn
 (common-lisp:defun list-event-integrations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-event-integrations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        "/eventIntegrations" "ListEventIntegrations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-event-integrations))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "GET"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "POST"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "DELETE"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/tags/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'resource-arn))))
        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-application
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key arn name description
                     application-source-config subscriptions publications
                     permissions)
   (common-lisp:declare
    (common-lisp:ignorable arn name description application-source-config
     subscriptions publications permissions))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-application-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/applications/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'application-identifier))))
        "UpdateApplication"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-application))
(common-lisp:progn
 (common-lisp:defun update-data-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key identifier name description)
   (common-lisp:declare (common-lisp:ignorable identifier name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-data-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/dataIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input
                                'identifier))))
        "UpdateDataIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-data-integration))
(common-lisp:progn
 (common-lisp:defun update-event-integration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key name description)
   (common-lisp:declare (common-lisp:ignorable name description))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-event-integration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'appintegrations-request aws-sdk/generator/operation::input "PATCH"
        (common-lisp:lambda (aws-sdk/generator/operation::input)
          (common-lisp:format common-lisp:nil "/eventIntegrations/~A"
                              (quri.encode:url-encode
                               (common-lisp:slot-value
                                aws-sdk/generator/operation::input 'name))))
        "UpdateEventIntegration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-event-integration))
