;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/mediapackage/api (:use)
                             (:nicknames #:aws/mediapackage)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/mediapackage/api)
(common-lisp:progn
 (common-lisp:define-condition mediapackage-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'mediapackage-error))
(common-lisp:progn
 (common-lisp:defclass mediapackage-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "mediapackage" :api-version
                        "2017-10-12" :host-prefix "mediapackage" :signing-name
                        "mediapackage" :global-host common-lisp:nil))
 (common-lisp:export 'mediapackage-request))
(common-lisp:defvar *error-map*
  '(("ForbiddenException" . forbidden-exception)
    ("InternalServerErrorException" . internal-server-error-exception)
    ("NotFoundException" . not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("TooManyRequestsException" . too-many-requests-exception)
    ("UnprocessableEntityException" . unprocessable-entity-exception)))
(common-lisp:deftype ad-markers () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype ad-triggers ()
   '(trivial-types:proper-list |__AdTriggersElement|))
 (common-lisp:defun make-ad-triggers
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__AdTriggersElement|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype ads-on-delivery-restrictions () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass authorization common-lisp:nil
                       ((cdn-identifier-secret :initarg :cdn-identifier-secret
                         :initform
                         (common-lisp:error
                          ":cdn-identifier-secret is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-authorization-cdn-identifier-secret
                         :shape "__string" :location common-lisp:nil
                         :location-name "cdnIdentifierSecret")
                        (secrets-role-arn :initarg :secrets-role-arn :initform
                         (common-lisp:error ":secrets-role-arn is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-authorization-secrets-role-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "secretsRoleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-authorization
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'authorization
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'authorization 'make-authorization))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input authorization))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input authorization))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cdn-identifier-secret))
      (common-lisp:list
       (common-lisp:cons "CdnIdentifierSecret"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'secrets-role-arn))
      (common-lisp:list
       (common-lisp:cons "SecretsRoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input authorization))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-arn :shape "__string" :location
                         common-lisp:nil :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-created-at :shape "__string"
                         :location common-lisp:nil :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-description :shape "__string"
                         :location common-lisp:nil :location-name
                         "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor struct-shape-channel-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-channel-hls-ingest :shape "HlsIngest"
                         :location common-lisp:nil :location-name "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-id :shape "__string" :location
                         common-lisp:nil :location-name "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor struct-shape-channel-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-channel-tags :shape "Tags" :location
                         common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel 'make-channel))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-create-parameters common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-create-parameters-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-create-parameters-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-channel-create-parameters-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-create-parameters
                    'make-channel-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-list common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfChannel| common-lisp:null)
                         :accessor struct-shape-channel-list-channels :shape
                         "__listOfChannel" :location common-lisp:nil
                         :location-name "channels")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-list-next-token :shape "__string"
                         :location common-lisp:nil :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'channel-list 'make-channel-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input channel-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input channel-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input channel-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass channel-update-parameters common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-channel-update-parameters-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-channel-update-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'channel-update-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'channel-update-parameters
                    'make-channel-update-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          channel-update-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          channel-update-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          channel-update-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cmaf-encryption common-lisp:nil
                       ((constant-initialization-vector :initarg
                         :constant-initialization-vector :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cmaf-encryption-constant-initialization-vector
                         :shape "__string" :location common-lisp:nil
                         :location-name "constantInitializationVector")
                        (encryption-method :initarg :encryption-method
                         :initform common-lisp:nil :type
                         (common-lisp:or cmaf-encryption-method
                                         common-lisp:null)
                         :accessor
                         struct-shape-cmaf-encryption-encryption-method :shape
                         "CmafEncryptionMethod" :location common-lisp:nil
                         :location-name "encryptionMethod")
                        (key-rotation-interval-seconds :initarg
                         :key-rotation-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-cmaf-encryption-key-rotation-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "keyRotationIntervalSeconds")
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-cmaf-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cmaf-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cmaf-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cmaf-encryption 'make-cmaf-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-rotation-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "KeyRotationIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmaf-encryption))
   common-lisp:nil))
(common-lisp:deftype cmaf-encryption-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass cmaf-package common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-encryption common-lisp:null)
                         :accessor struct-shape-cmaf-package-encryption :shape
                         "CmafEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfHlsManifest|
                                         common-lisp:null)
                         :accessor struct-shape-cmaf-package-hls-manifests
                         :shape "__listOfHlsManifest" :location common-lisp:nil
                         :location-name "hlsManifests")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (segment-prefix :initarg :segment-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cmaf-package-segment-prefix :shape
                         "__string" :location common-lisp:nil :location-name
                         "segmentPrefix")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-cmaf-package-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cmaf-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cmaf-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'cmaf-package 'make-cmaf-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cmaf-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cmaf-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-prefix))
      (common-lisp:list
       (common-lisp:cons "SegmentPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cmaf-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cmaf-package-create-or-update-parameters common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-encryption common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-create-or-update-parameters-encryption
                         :shape "CmafEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (hls-manifests :initarg :hls-manifests :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          |__listOfHlsManifestCreateOrUpdateParameters|
                          common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-create-or-update-parameters-hls-manifests
                         :shape "__listOfHlsManifestCreateOrUpdateParameters"
                         :location common-lisp:nil :location-name
                         "hlsManifests")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-create-or-update-parameters-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (segment-prefix :initarg :segment-prefix :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-cmaf-package-create-or-update-parameters-segment-prefix
                         :shape "__string" :location common-lisp:nil
                         :location-name "segmentPrefix")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor
                         struct-shape-cmaf-package-create-or-update-parameters-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cmaf-package-create-or-update-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'cmaf-package-create-or-update-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cmaf-package-create-or-update-parameters
                    'make-cmaf-package-create-or-update-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-package-create-or-update-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-package-create-or-update-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-manifests))
      (common-lisp:list
       (common-lisp:cons "HlsManifests"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'segment-prefix))
      (common-lisp:list
       (common-lisp:cons "SegmentPrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cmaf-package-create-or-update-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-parameters common-lisp:nil
                       ((egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-parameters-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-parameters-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-parameters
                    'make-configure-logs-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-request common-lisp:nil
                       ((egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-request-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-request-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-request 'make-configure-logs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass configure-logs-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-configure-logs-response-hls-ingest :shape
                         "HlsIngest" :location common-lisp:nil :location-name
                         "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-configure-logs-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-configure-logs-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-configure-logs-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-configure-logs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'configure-logs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'configure-logs-response 'make-configure-logs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          configure-logs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-request-description :shape
                         "__string" :location common-lisp:nil :location-name
                         "description")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-channel-request-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-request 'make-create-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-create-channel-response-hls-ingest :shape
                         "HlsIngest" :location common-lisp:nil :location-name
                         "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-create-channel-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-channel-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-channel-response 'make-create-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-harvest-job-request common-lisp:nil
                       ((end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-request-end-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "endTime")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (origin-endpoint-id :initarg :origin-endpoint-id
                         :initform
                         (common-lisp:error ":origin-endpoint-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-harvest-job-request-origin-endpoint-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "originEndpointId")
                        (s3destination :initarg :s3destination :initform
                         (common-lisp:error ":s3destination is required") :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-create-harvest-job-request-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination")
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-request-start-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "startTime"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-harvest-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-harvest-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-harvest-job-request
                    'make-create-harvest-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "S3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-harvest-job-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-create-harvest-job-response-end-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "endTime")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (origin-endpoint-id :initarg :origin-endpoint-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-origin-endpoint-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "originEndpointId")
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-create-harvest-job-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-harvest-job-response-start-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "startTime")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor
                         struct-shape-create-harvest-job-response-status :shape
                         "Status" :location common-lisp:nil :location-name
                         "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-harvest-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-harvest-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-harvest-job-response
                    'make-create-harvest-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "S3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-harvest-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-origin-endpoint-request common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         (common-lisp:error ":channel-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          cmaf-package-create-or-update-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-cmaf-package
                         :shape "CmafPackageCreateOrUpdateParameters" :location
                         common-lisp:nil :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-request-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-request-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-origin-endpoint-request
                    'make-create-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-create-origin-endpoint-response-url
                         :shape "__string" :location common-lisp:nil
                         :location-name "url")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-create-origin-endpoint-response-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-origin-endpoint-response
                    'make-create-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-encryption common-lisp:nil
                       ((key-rotation-interval-seconds :initarg
                         :key-rotation-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-encryption-key-rotation-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "keyRotationIntervalSeconds")
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-dash-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dash-encryption 'make-dash-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-rotation-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "KeyRotationIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass dash-package common-lisp:nil
                       ((ad-triggers :initarg :ad-triggers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-triggers common-lisp:null)
                         :accessor struct-shape-dash-package-ad-triggers :shape
                         "AdTriggers" :location common-lisp:nil :location-name
                         "adTriggers")
                        (ads-on-delivery-restrictions :initarg
                         :ads-on-delivery-restrictions :initform
                         common-lisp:nil :type
                         (common-lisp:or ads-on-delivery-restrictions
                                         common-lisp:null)
                         :accessor
                         struct-shape-dash-package-ads-on-delivery-restrictions
                         :shape "AdsOnDeliveryRestrictions" :location
                         common-lisp:nil :location-name
                         "adsOnDeliveryRestrictions")
                        (encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-encryption common-lisp:null)
                         :accessor struct-shape-dash-package-encryption :shape
                         "DashEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (manifest-layout :initarg :manifest-layout :initform
                         common-lisp:nil :type
                         (common-lisp:or manifest-layout common-lisp:null)
                         :accessor struct-shape-dash-package-manifest-layout
                         :shape "ManifestLayout" :location common-lisp:nil
                         :location-name "manifestLayout")
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-manifest-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "manifestWindowSeconds")
                        (min-buffer-time-seconds :initarg
                         :min-buffer-time-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-min-buffer-time-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "minBufferTimeSeconds")
                        (min-update-period-seconds :initarg
                         :min-update-period-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-min-update-period-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "minUpdatePeriodSeconds")
                        (period-triggers :initarg :period-triggers :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__PeriodTriggersElement|
                                         common-lisp:null)
                         :accessor struct-shape-dash-package-period-triggers
                         :shape "__listOf__PeriodTriggersElement" :location
                         common-lisp:nil :location-name "periodTriggers")
                        (profile :initarg :profile :initform common-lisp:nil
                         :type (common-lisp:or profile common-lisp:null)
                         :accessor struct-shape-dash-package-profile :shape
                         "Profile" :location common-lisp:nil :location-name
                         "profile")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (segment-template-format :initarg
                         :segment-template-format :initform common-lisp:nil
                         :type
                         (common-lisp:or segment-template-format
                                         common-lisp:null)
                         :accessor
                         struct-shape-dash-package-segment-template-format
                         :shape "SegmentTemplateFormat" :location
                         common-lisp:nil :location-name
                         "segmentTemplateFormat")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-dash-package-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection")
                        (suggested-presentation-delay-seconds :initarg
                         :suggested-presentation-delay-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-dash-package-suggested-presentation-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "suggestedPresentationDelaySeconds")
                        (utc-timing :initarg :utc-timing :initform
                         common-lisp:nil :type
                         (common-lisp:or utc-timing common-lisp:null) :accessor
                         struct-shape-dash-package-utc-timing :shape
                         "UtcTiming" :location common-lisp:nil :location-name
                         "utcTiming")
                        (utc-timing-uri :initarg :utc-timing-uri :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-dash-package-utc-timing-uri :shape
                         "__string" :location common-lisp:nil :location-name
                         "utcTimingUri"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-dash-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'dash-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'dash-package 'make-dash-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input dash-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input dash-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-triggers))
      (common-lisp:list
       (common-lisp:cons "AdTriggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ads-on-delivery-restrictions))
      (common-lisp:list
       (common-lisp:cons "AdsOnDeliveryRestrictions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-layout))
      (common-lisp:list
       (common-lisp:cons "ManifestLayout"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-buffer-time-seconds))
      (common-lisp:list
       (common-lisp:cons "MinBufferTimeSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-update-period-seconds))
      (common-lisp:list
       (common-lisp:cons "MinUpdatePeriodSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'period-triggers))
      (common-lisp:list
       (common-lisp:cons "PeriodTriggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'profile))
      (common-lisp:list
       (common-lisp:cons "Profile"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-template-format))
      (common-lisp:list
       (common-lisp:cons "SegmentTemplateFormat"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'suggested-presentation-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "SuggestedPresentationDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utc-timing))
      (common-lisp:list
       (common-lisp:cons "UtcTiming"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'utc-timing-uri))
      (common-lisp:list
       (common-lisp:cons "UtcTimingUri"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input dash-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-channel-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-request 'make-delete-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-channel-response common-lisp:nil common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-channel-response 'make-delete-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-delete-origin-endpoint-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-request
                    'make-delete-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-origin-endpoint-response common-lisp:nil
                       common-lisp:nil
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-origin-endpoint-response
                    'make-delete-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-request 'make-describe-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-describe-channel-response-hls-ingest
                         :shape "HlsIngest" :location common-lisp:nil
                         :location-name "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-describe-channel-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-channel-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-channel-response
                    'make-describe-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-harvest-job-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-harvest-job-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-harvest-job-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-harvest-job-request
                    'make-describe-harvest-job-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-harvest-job-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-harvest-job-response-end-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "endTime")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (origin-endpoint-id :initarg :origin-endpoint-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-origin-endpoint-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "originEndpointId")
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-describe-harvest-job-response-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-harvest-job-response-start-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "startTime")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor
                         struct-shape-describe-harvest-job-response-status
                         :shape "Status" :location common-lisp:nil
                         :location-name "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-harvest-job-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-harvest-job-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-harvest-job-response
                    'make-describe-harvest-job-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "S3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-harvest-job-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-origin-endpoint-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-origin-endpoint-request
                    'make-describe-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-describe-origin-endpoint-response-url
                         :shape "__string" :location common-lisp:nil
                         :location-name "url")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-describe-origin-endpoint-response-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-origin-endpoint-response
                    'make-describe-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass egress-access-logs common-lisp:nil
                       ((log-group-name :initarg :log-group-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-egress-access-logs-log-group-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "logGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-egress-access-logs
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'egress-access-logs
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'egress-access-logs 'make-egress-access-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input egress-access-logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input egress-access-logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-name))
      (common-lisp:list
       (common-lisp:cons "LogGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input egress-access-logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass encryption-contract-configuration common-lisp:nil
                       ((preset-speke20audio :initarg :preset-speke20audio
                         :initform
                         (common-lisp:error ":preset-speke20audio is required")
                         :type
                         (common-lisp:or preset-speke20audio common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20audio
                         :shape "PresetSpeke20Audio" :location common-lisp:nil
                         :location-name "presetSpeke20Audio")
                        (preset-speke20video :initarg :preset-speke20video
                         :initform
                         (common-lisp:error ":preset-speke20video is required")
                         :type
                         (common-lisp:or preset-speke20video common-lisp:null)
                         :accessor
                         struct-shape-encryption-contract-configuration-preset-speke20video
                         :shape "PresetSpeke20Video" :location common-lisp:nil
                         :location-name "presetSpeke20Video"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-encryption-contract-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'encryption-contract-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'encryption-contract-configuration
                    'make-encryption-contract-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20audio))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Audio"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'preset-speke20video))
      (common-lisp:list
       (common-lisp:cons "PresetSpeke20Video"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          encryption-contract-configuration))
   common-lisp:nil))
(common-lisp:deftype encryption-method () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition forbidden-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       forbidden-exception-message)))
 (common-lisp:export
  (common-lisp:list 'forbidden-exception 'forbidden-exception-message)))
(common-lisp:progn
 (common-lisp:defclass harvest-job common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-channel-id :shape "__string"
                         :location common-lisp:nil :location-name "channelId")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-created-at :shape "__string"
                         :location common-lisp:nil :location-name "createdAt")
                        (end-time :initarg :end-time :initform common-lisp:nil
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor struct-shape-harvest-job-end-time :shape
                         "__string" :location common-lisp:nil :location-name
                         "endTime")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (origin-endpoint-id :initarg :origin-endpoint-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-origin-endpoint-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "originEndpointId")
                        (s3destination :initarg :s3destination :initform
                         common-lisp:nil :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor struct-shape-harvest-job-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination")
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-start-time :shape "__string"
                         :location common-lisp:nil :location-name "startTime")
                        (status :initarg :status :initform common-lisp:nil
                         :type (common-lisp:or status common-lisp:null)
                         :accessor struct-shape-harvest-job-status :shape
                         "Status" :location common-lisp:nil :location-name
                         "status"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-harvest-job
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'harvest-job
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'harvest-job 'make-harvest-job))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input harvest-job))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input harvest-job))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "S3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input harvest-job))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass harvest-job-create-parameters common-lisp:nil
                       ((end-time :initarg :end-time :initform
                         (common-lisp:error ":end-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-create-parameters-end-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "endTime")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-create-parameters-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (origin-endpoint-id :initarg :origin-endpoint-id
                         :initform
                         (common-lisp:error ":origin-endpoint-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-harvest-job-create-parameters-origin-endpoint-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "originEndpointId")
                        (s3destination :initarg :s3destination :initform
                         (common-lisp:error ":s3destination is required") :type
                         (common-lisp:or s3destination common-lisp:null)
                         :accessor
                         struct-shape-harvest-job-create-parameters-s3destination
                         :shape "S3Destination" :location common-lisp:nil
                         :location-name "s3Destination")
                        (start-time :initarg :start-time :initform
                         (common-lisp:error ":start-time is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-create-parameters-start-time
                         :shape "__string" :location common-lisp:nil
                         :location-name "startTime"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-harvest-job-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'harvest-job-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'harvest-job-create-parameters
                    'make-harvest-job-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          harvest-job-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          harvest-job-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-time))
      (common-lisp:list
       (common-lisp:cons "EndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoint-id))
      (common-lisp:list
       (common-lisp:cons "OriginEndpointId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3destination))
      (common-lisp:list
       (common-lisp:cons "S3Destination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          harvest-job-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass harvest-job-list common-lisp:nil
                       ((harvest-jobs :initarg :harvest-jobs :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfHarvestJob| common-lisp:null)
                         :accessor struct-shape-harvest-job-list-harvest-jobs
                         :shape "__listOfHarvestJob" :location common-lisp:nil
                         :location-name "harvestJobs")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-harvest-job-list-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-harvest-job-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'harvest-job-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'harvest-job-list 'make-harvest-job-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input harvest-job-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input harvest-job-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'harvest-jobs))
      (common-lisp:list
       (common-lisp:cons "HarvestJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input harvest-job-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-encryption common-lisp:nil
                       ((constant-initialization-vector :initarg
                         :constant-initialization-vector :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-encryption-constant-initialization-vector
                         :shape "__string" :location common-lisp:nil
                         :location-name "constantInitializationVector")
                        (encryption-method :initarg :encryption-method
                         :initform common-lisp:nil :type
                         (common-lisp:or encryption-method common-lisp:null)
                         :accessor
                         struct-shape-hls-encryption-encryption-method :shape
                         "EncryptionMethod" :location common-lisp:nil
                         :location-name "encryptionMethod")
                        (key-rotation-interval-seconds :initarg
                         :key-rotation-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-encryption-key-rotation-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "keyRotationIntervalSeconds")
                        (repeat-ext-xkey :initarg :repeat-ext-xkey :initform
                         common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor struct-shape-hls-encryption-repeat-ext-xkey
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "repeatExtXKey")
                        (speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-hls-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-encryption 'make-hls-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'constant-initialization-vector))
      (common-lisp:list
       (common-lisp:cons "ConstantInitializationVector"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption-method))
      (common-lisp:list
       (common-lisp:cons "EncryptionMethod"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'key-rotation-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "KeyRotationIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'repeat-ext-xkey))
      (common-lisp:list
       (common-lisp:cons "RepeatExtXKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-ingest common-lisp:nil
                       ((ingest-endpoints :initarg :ingest-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfIngestEndpoint|
                                         common-lisp:null)
                         :accessor struct-shape-hls-ingest-ingest-endpoints
                         :shape "__listOfIngestEndpoint" :location
                         common-lisp:nil :location-name "ingestEndpoints"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-ingest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-ingest
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-ingest 'make-hls-ingest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-ingest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-ingest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingest-endpoints))
      (common-lisp:list
       (common-lisp:cons "IngestEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-ingest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-manifest common-lisp:nil
                       ((ad-markers :initarg :ad-markers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-markers common-lisp:null) :accessor
                         struct-shape-hls-manifest-ad-markers :shape
                         "AdMarkers" :location common-lisp:nil :location-name
                         "adMarkers")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestName")
                        (playlist-type :initarg :playlist-type :initform
                         common-lisp:nil :type
                         (common-lisp:or playlist-type common-lisp:null)
                         :accessor struct-shape-hls-manifest-playlist-type
                         :shape "PlaylistType" :location common-lisp:nil
                         :location-name "playlistType")
                        (playlist-window-seconds :initarg
                         :playlist-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-playlist-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "playlistWindowSeconds")
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-program-date-time-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "programDateTimeIntervalSeconds")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-url :shape "__string"
                         :location common-lisp:nil :location-name "url"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-manifest
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-manifest
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-manifest 'make-hls-manifest))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-manifest))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-manifest))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markers))
      (common-lisp:list
       (common-lisp:cons "AdMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playlist-type))
      (common-lisp:list
       (common-lisp:cons "PlaylistType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playlist-window-seconds))
      (common-lisp:list
       (common-lisp:cons "PlaylistWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-manifest))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-manifest-create-or-update-parameters common-lisp:nil
                       ((ad-markers :initarg :ad-markers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-markers common-lisp:null) :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-ad-markers
                         :shape "AdMarkers" :location common-lisp:nil
                         :location-name "adMarkers")
                        (ad-triggers :initarg :ad-triggers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-triggers common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-ad-triggers
                         :shape "AdTriggers" :location common-lisp:nil
                         :location-name "adTriggers")
                        (ads-on-delivery-restrictions :initarg
                         :ads-on-delivery-restrictions :initform
                         common-lisp:nil :type
                         (common-lisp:or ads-on-delivery-restrictions
                                         common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-ads-on-delivery-restrictions
                         :shape "AdsOnDeliveryRestrictions" :location
                         common-lisp:nil :location-name
                         "adsOnDeliveryRestrictions")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (playlist-type :initarg :playlist-type :initform
                         common-lisp:nil :type
                         (common-lisp:or playlist-type common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-playlist-type
                         :shape "PlaylistType" :location common-lisp:nil
                         :location-name "playlistType")
                        (playlist-window-seconds :initarg
                         :playlist-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-playlist-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "playlistWindowSeconds")
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-manifest-create-or-update-parameters-program-date-time-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "programDateTimeIntervalSeconds"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-manifest-create-or-update-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'hls-manifest-create-or-update-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'hls-manifest-create-or-update-parameters
                    'make-hls-manifest-create-or-update-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          hls-manifest-create-or-update-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          hls-manifest-create-or-update-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markers))
      (common-lisp:list
       (common-lisp:cons "AdMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-triggers))
      (common-lisp:list
       (common-lisp:cons "AdTriggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ads-on-delivery-restrictions))
      (common-lisp:list
       (common-lisp:cons "AdsOnDeliveryRestrictions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playlist-type))
      (common-lisp:list
       (common-lisp:cons "PlaylistType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playlist-window-seconds))
      (common-lisp:list
       (common-lisp:cons "PlaylistWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          hls-manifest-create-or-update-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass hls-package common-lisp:nil
                       ((ad-markers :initarg :ad-markers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-markers common-lisp:null) :accessor
                         struct-shape-hls-package-ad-markers :shape "AdMarkers"
                         :location common-lisp:nil :location-name "adMarkers")
                        (ad-triggers :initarg :ad-triggers :initform
                         common-lisp:nil :type
                         (common-lisp:or ad-triggers common-lisp:null)
                         :accessor struct-shape-hls-package-ad-triggers :shape
                         "AdTriggers" :location common-lisp:nil :location-name
                         "adTriggers")
                        (ads-on-delivery-restrictions :initarg
                         :ads-on-delivery-restrictions :initform
                         common-lisp:nil :type
                         (common-lisp:or ads-on-delivery-restrictions
                                         common-lisp:null)
                         :accessor
                         struct-shape-hls-package-ads-on-delivery-restrictions
                         :shape "AdsOnDeliveryRestrictions" :location
                         common-lisp:nil :location-name
                         "adsOnDeliveryRestrictions")
                        (encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-encryption common-lisp:null)
                         :accessor struct-shape-hls-package-encryption :shape
                         "HlsEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (include-dvb-subtitles :initarg :include-dvb-subtitles
                         :initform common-lisp:nil :type
                         (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-include-dvb-subtitles :shape
                         "__boolean" :location common-lisp:nil :location-name
                         "includeDvbSubtitles")
                        (include-iframe-only-stream :initarg
                         :include-iframe-only-stream :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-include-iframe-only-stream
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "includeIframeOnlyStream")
                        (playlist-type :initarg :playlist-type :initform
                         common-lisp:nil :type
                         (common-lisp:or playlist-type common-lisp:null)
                         :accessor struct-shape-hls-package-playlist-type
                         :shape "PlaylistType" :location common-lisp:nil
                         :location-name "playlistType")
                        (playlist-window-seconds :initarg
                         :playlist-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-playlist-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "playlistWindowSeconds")
                        (program-date-time-interval-seconds :initarg
                         :program-date-time-interval-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-program-date-time-interval-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "programDateTimeIntervalSeconds")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-hls-package-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection")
                        (use-audio-rendition-group :initarg
                         :use-audio-rendition-group :initform common-lisp:nil
                         :type (common-lisp:or |__boolean| common-lisp:null)
                         :accessor
                         struct-shape-hls-package-use-audio-rendition-group
                         :shape "__boolean" :location common-lisp:nil
                         :location-name "useAudioRenditionGroup"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-hls-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'hls-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'hls-package 'make-hls-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input hls-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input hls-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-markers))
      (common-lisp:list
       (common-lisp:cons "AdMarkers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ad-triggers))
      (common-lisp:list
       (common-lisp:cons "AdTriggers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'ads-on-delivery-restrictions))
      (common-lisp:list
       (common-lisp:cons "AdsOnDeliveryRestrictions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-dvb-subtitles))
      (common-lisp:list
       (common-lisp:cons "IncludeDvbSubtitles"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'include-iframe-only-stream))
      (common-lisp:list
       (common-lisp:cons "IncludeIframeOnlyStream"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'playlist-type))
      (common-lisp:list
       (common-lisp:cons "PlaylistType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'playlist-window-seconds))
      (common-lisp:list
       (common-lisp:cons "PlaylistWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'program-date-time-interval-seconds))
      (common-lisp:list
       (common-lisp:cons "ProgramDateTimeIntervalSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'use-audio-rendition-group))
      (common-lisp:list
       (common-lisp:cons "UseAudioRenditionGroup"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input hls-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ingest-endpoint common-lisp:nil
                       ((id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ingest-endpoint-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (password :initarg :password :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-ingest-endpoint-password :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name "password")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ingest-endpoint-url :shape "__string"
                         :location common-lisp:nil :location-name "url")
                        (username :initarg :username :initform common-lisp:nil
                         :type
                         (common-lisp:or sensitive-string common-lisp:null)
                         :accessor struct-shape-ingest-endpoint-username :shape
                         "SensitiveString" :location common-lisp:nil
                         :location-name "username"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingest-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingest-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'ingest-endpoint 'make-ingest-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'username))
      (common-lisp:list
       (common-lisp:cons "Username"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingest-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass ingress-access-logs common-lisp:nil
                       ((log-group-name :initarg :log-group-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-ingress-access-logs-log-group-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "logGroupName"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-ingress-access-logs
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'ingress-access-logs
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'ingress-access-logs 'make-ingress-access-logs))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input ingress-access-logs))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input ingress-access-logs))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'log-group-name))
      (common-lisp:list
       (common-lisp:cons "LogGroupName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input ingress-access-logs))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error-exception
                    'internal-server-error-exception-message)))
(common-lisp:progn
 (common-lisp:defclass list-channels-request common-lisp:nil
                       ((max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-channels-request-max-results :shape
                         "MaxResults" :location "querystring" :location-name
                         "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-channels-request-next-token :shape
                         "__string" :location "querystring" :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-request 'make-list-channels-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-channels-response common-lisp:nil
                       ((channels :initarg :channels :initform common-lisp:nil
                         :type
                         (common-lisp:or |__listOfChannel| common-lisp:null)
                         :accessor struct-shape-list-channels-response-channels
                         :shape "__listOfChannel" :location common-lisp:nil
                         :location-name "channels")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-channels-response-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-channels-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-channels-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-channels-response 'make-list-channels-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channels))
      (common-lisp:list
       (common-lisp:cons "Channels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-channels-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-harvest-jobs-request common-lisp:nil
                       ((include-channel-id :initarg :include-channel-id
                         :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-harvest-jobs-request-include-channel-id
                         :shape "__string" :location "querystring"
                         :location-name "includeChannelId")
                        (include-status :initarg :include-status :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-harvest-jobs-request-include-status
                         :shape "__string" :location "querystring"
                         :location-name "includeStatus")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-harvest-jobs-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-harvest-jobs-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-harvest-jobs-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-harvest-jobs-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-harvest-jobs-request
                    'make-list-harvest-jobs-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-harvest-jobs-response common-lisp:nil
                       ((harvest-jobs :initarg :harvest-jobs :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfHarvestJob| common-lisp:null)
                         :accessor
                         struct-shape-list-harvest-jobs-response-harvest-jobs
                         :shape "__listOfHarvestJob" :location common-lisp:nil
                         :location-name "harvestJobs")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-harvest-jobs-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-harvest-jobs-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-harvest-jobs-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-harvest-jobs-response
                    'make-list-harvest-jobs-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'harvest-jobs))
      (common-lisp:list
       (common-lisp:cons "HarvestJobs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-harvest-jobs-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-origin-endpoints-request common-lisp:nil
                       ((channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-origin-endpoints-request-channel-id
                         :shape "__string" :location "querystring"
                         :location-name "channelId")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-origin-endpoints-request-next-token
                         :shape "__string" :location "querystring"
                         :location-name "nextToken"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origin-endpoints-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origin-endpoints-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origin-endpoints-request
                    'make-list-origin-endpoints-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-origin-endpoints-response common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-origin-endpoints-response-next-token
                         :shape "__string" :location common-lisp:nil
                         :location-name "nextToken")
                        (origin-endpoints :initarg :origin-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfOriginEndpoint|
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-origin-endpoints-response-origin-endpoints
                         :shape "__listOfOriginEndpoint" :location
                         common-lisp:nil :location-name "originEndpoints"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-origin-endpoints-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-origin-endpoints-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-origin-endpoints-response
                    'make-list-origin-endpoints-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoints))
      (common-lisp:list
       (common-lisp:cons "OriginEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-origin-endpoints-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-request
                    'make-list-tags-for-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-response common-lisp:nil
                       ((tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-response-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-response
                    'make-list-tags-for-resource-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-response))
   common-lisp:nil))
(common-lisp:deftype manifest-layout () 'common-lisp:string)
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass mss-encryption common-lisp:nil
                       ((speke-key-provider :initarg :speke-key-provider
                         :initform
                         (common-lisp:error ":speke-key-provider is required")
                         :type
                         (common-lisp:or speke-key-provider common-lisp:null)
                         :accessor
                         struct-shape-mss-encryption-speke-key-provider :shape
                         "SpekeKeyProvider" :location common-lisp:nil
                         :location-name "spekeKeyProvider"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mss-encryption
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mss-encryption
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'mss-encryption 'make-mss-encryption))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mss-encryption))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mss-encryption))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'speke-key-provider))
      (common-lisp:list
       (common-lisp:cons "SpekeKeyProvider"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mss-encryption))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass mss-package common-lisp:nil
                       ((encryption :initarg :encryption :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-encryption common-lisp:null)
                         :accessor struct-shape-mss-package-encryption :shape
                         "MssEncryption" :location common-lisp:nil
                         :location-name "encryption")
                        (manifest-window-seconds :initarg
                         :manifest-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-mss-package-manifest-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "manifestWindowSeconds")
                        (segment-duration-seconds :initarg
                         :segment-duration-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-mss-package-segment-duration-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "segmentDurationSeconds")
                        (stream-selection :initarg :stream-selection :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-selection common-lisp:null)
                         :accessor struct-shape-mss-package-stream-selection
                         :shape "StreamSelection" :location common-lisp:nil
                         :location-name "streamSelection"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-mss-package
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'mss-package
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'mss-package 'make-mss-package))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input mss-package))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input mss-package))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'encryption))
      (common-lisp:list
       (common-lisp:cons "Encryption"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'manifest-window-seconds))
      (common-lisp:list
       (common-lisp:cons "ManifestWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'segment-duration-seconds))
      (common-lisp:list
       (common-lisp:cons "SegmentDurationSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-selection))
      (common-lisp:list
       (common-lisp:cons "StreamSelection"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input mss-package))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition not-found-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'not-found-exception 'not-found-exception-message)))
(common-lisp:progn
 (common-lisp:defclass origin-endpoint common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-arn :shape "__string"
                         :location common-lisp:nil :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor struct-shape-origin-endpoint-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-channel-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor struct-shape-origin-endpoint-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor struct-shape-origin-endpoint-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-description :shape
                         "__string" :location common-lisp:nil :location-name
                         "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor struct-shape-origin-endpoint-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-id :shape "__string"
                         :location common-lisp:nil :location-name "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-manifest-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor struct-shape-origin-endpoint-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor struct-shape-origin-endpoint-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-origin-endpoint-tags :shape "Tags"
                         :location common-lisp:nil :location-name "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-time-delay-seconds :shape
                         "__integer" :location common-lisp:nil :location-name
                         "timeDelaySeconds")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-url :shape "__string"
                         :location common-lisp:nil :location-name "url")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-origin-endpoint-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origin-endpoint
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origin-endpoint
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'origin-endpoint 'make-origin-endpoint))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origin-endpoint))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origin-endpoint))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origin-endpoint))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass origin-endpoint-create-parameters common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         (common-lisp:error ":channel-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-create-parameters-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          cmaf-package-create-or-update-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-cmaf-package
                         :shape "CmafPackageCreateOrUpdateParameters" :location
                         common-lisp:nil :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-create-parameters-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-create-parameters-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-create-parameters-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-origin-endpoint-create-parameters-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-create-parameters-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origin-endpoint-create-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'origin-endpoint-create-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origin-endpoint-create-parameters
                    'make-origin-endpoint-create-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-create-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-create-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-create-parameters))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass origin-endpoint-list common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-list-next-token :shape
                         "__string" :location common-lisp:nil :location-name
                         "nextToken")
                        (origin-endpoints :initarg :origin-endpoints :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOfOriginEndpoint|
                                         common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-list-origin-endpoints
                         :shape "__listOfOriginEndpoint" :location
                         common-lisp:nil :location-name "originEndpoints"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origin-endpoint-list
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'origin-endpoint-list
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origin-endpoint-list 'make-origin-endpoint-list))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input origin-endpoint-list))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input origin-endpoint-list))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "NextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origin-endpoints))
      (common-lisp:list
       (common-lisp:cons "OriginEndpoints"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input origin-endpoint-list))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass origin-endpoint-update-parameters common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          cmaf-package-create-or-update-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-cmaf-package
                         :shape "CmafPackageCreateOrUpdateParameters" :location
                         common-lisp:nil :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-update-parameters-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-origin-endpoint-update-parameters-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-origin-endpoint-update-parameters-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-origin-endpoint-update-parameters
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'origin-endpoint-update-parameters
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'origin-endpoint-update-parameters
                    'make-origin-endpoint-update-parameters))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-update-parameters))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-update-parameters))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          origin-endpoint-update-parameters))
   common-lisp:nil))
(common-lisp:deftype origination () 'common-lisp:string)
(common-lisp:deftype playlist-type () 'common-lisp:string)
(common-lisp:deftype preset-speke20audio () 'common-lisp:string)
(common-lisp:deftype preset-speke20video () 'common-lisp:string)
(common-lisp:deftype profile () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass rotate-channel-credentials-request common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-request-id
                         :shape "__string" :location "uri" :location-name
                         "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rotate-channel-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'rotate-channel-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'rotate-channel-credentials-request
                    'make-rotate-channel-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rotate-channel-credentials-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-rotate-channel-credentials-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-hls-ingest
                         :shape "HlsIngest" :location common-lisp:nil
                         :location-name "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-rotate-channel-credentials-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-rotate-channel-credentials-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rotate-channel-credentials-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'rotate-channel-credentials-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'rotate-channel-credentials-response
                    'make-rotate-channel-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          rotate-channel-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rotate-ingest-endpoint-credentials-request
                       common-lisp:nil
                       ((id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-request-id
                         :shape "__string" :location "uri" :location-name "id")
                        (ingest-endpoint-id :initarg :ingest-endpoint-id
                         :initform
                         (common-lisp:error ":ingest-endpoint-id is required")
                         :type (common-lisp:or |__string| common-lisp:null)
                         :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-request-ingest-endpoint-id
                         :shape "__string" :location "uri" :location-name
                         "ingest_endpoint_id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rotate-ingest-endpoint-credentials-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'rotate-ingest-endpoint-credentials-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'rotate-ingest-endpoint-credentials-request
                    'make-rotate-ingest-endpoint-credentials-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass rotate-ingest-endpoint-credentials-response
                       common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-hls-ingest
                         :shape "HlsIngest" :location common-lisp:nil
                         :location-name "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-rotate-ingest-endpoint-credentials-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-rotate-ingest-endpoint-credentials-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'rotate-ingest-endpoint-credentials-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'rotate-ingest-endpoint-credentials-response
                    'make-rotate-ingest-endpoint-credentials-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          rotate-ingest-endpoint-credentials-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass s3destination common-lisp:nil
                       ((bucket-name :initarg :bucket-name :initform
                         (common-lisp:error ":bucket-name is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-bucket-name :shape
                         "__string" :location common-lisp:nil :location-name
                         "bucketName")
                        (manifest-key :initarg :manifest-key :initform
                         (common-lisp:error ":manifest-key is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-manifest-key :shape
                         "__string" :location common-lisp:nil :location-name
                         "manifestKey")
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-s3destination-role-arn :shape "__string"
                         :location common-lisp:nil :location-name "roleArn"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-s3destination
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 's3destination
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 's3destination 'make-s3destination))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input s3destination))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-name))
      (common-lisp:list
       (common-lisp:cons "BucketName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-key))
      (common-lisp:list
       (common-lisp:cons "ManifestKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input s3destination))
   common-lisp:nil))
(common-lisp:deftype segment-template-format () 'common-lisp:string)
(common-lisp:deftype sensitive-string () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:progn
 (common-lisp:defclass speke-key-provider common-lisp:nil
                       ((certificate-arn :initarg :certificate-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-certificate-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "certificateArn")
                        (encryption-contract-configuration :initarg
                         :encryption-contract-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or encryption-contract-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-speke-key-provider-encryption-contract-configuration
                         :shape "EncryptionContractConfiguration" :location
                         common-lisp:nil :location-name
                         "encryptionContractConfiguration")
                        (resource-id :initarg :resource-id :initform
                         (common-lisp:error ":resource-id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-resource-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "resourceId")
                        (role-arn :initarg :role-arn :initform
                         (common-lisp:error ":role-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-role-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "roleArn")
                        (system-ids :initarg :system-ids :initform
                         (common-lisp:error ":system-ids is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-speke-key-provider-system-ids
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "systemIds")
                        (url :initarg :url :initform
                         (common-lisp:error ":url is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-speke-key-provider-url :shape "__string"
                         :location common-lisp:nil :location-name "url"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-speke-key-provider
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'speke-key-provider
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'speke-key-provider 'make-speke-key-provider))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input speke-key-provider))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'certificate-arn))
      (common-lisp:list
       (common-lisp:cons "CertificateArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'encryption-contract-configuration))
      (common-lisp:list
       (common-lisp:cons "EncryptionContractConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-id))
      (common-lisp:list
       (common-lisp:cons "ResourceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role-arn))
      (common-lisp:list
       (common-lisp:cons "RoleArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'system-ids))
      (common-lisp:list
       (common-lisp:cons "SystemIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input speke-key-provider))
   common-lisp:nil))
(common-lisp:deftype status () 'common-lisp:string)
(common-lisp:deftype stream-order () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass stream-selection common-lisp:nil
                       ((max-video-bits-per-second :initarg
                         :max-video-bits-per-second :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-stream-selection-max-video-bits-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name "maxVideoBitsPerSecond")
                        (min-video-bits-per-second :initarg
                         :min-video-bits-per-second :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-stream-selection-min-video-bits-per-second
                         :shape "__integer" :location common-lisp:nil
                         :location-name "minVideoBitsPerSecond")
                        (stream-order :initarg :stream-order :initform
                         common-lisp:nil :type
                         (common-lisp:or stream-order common-lisp:null)
                         :accessor struct-shape-stream-selection-stream-order
                         :shape "StreamOrder" :location common-lisp:nil
                         :location-name "streamOrder"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-stream-selection
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'stream-selection
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'stream-selection 'make-stream-selection))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input stream-selection))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input stream-selection))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'max-video-bits-per-second))
      (common-lisp:list
       (common-lisp:cons "MaxVideoBitsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'min-video-bits-per-second))
      (common-lisp:list
       (common-lisp:cons "MinVideoBitsPerSecond"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'stream-order))
      (common-lisp:list
       (common-lisp:cons "StreamOrder"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input stream-selection))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass tag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-tag-resource-request-resource-arn :shape
                         "__string" :location "uri" :location-name
                         "resource-arn")
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tag-resource-request-tags
                         :shape "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tag-resource-request 'make-tag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag-resource-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tags () 'common-lisp:hash-table)
 (common-lisp:defun make-tags (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass tags-model common-lisp:nil
                       ((tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or |__mapOf__string| common-lisp:null)
                         :accessor struct-shape-tags-model-tags :shape
                         "__mapOf__string" :location common-lisp:nil
                         :location-name "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tags-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tags-model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tags-model 'make-tags-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tags-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tags-model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition too-many-requests-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       too-many-requests-exception-message)))
 (common-lisp:export
  (common-lisp:list 'too-many-requests-exception
                    'too-many-requests-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unprocessable-entity-exception
     (mediapackage-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unprocessable-entity-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unprocessable-entity-exception
                    'unprocessable-entity-exception-message)))
(common-lisp:progn
 (common-lisp:defclass untag-resource-request common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-untag-resource-request-resource-arn
                         :shape "__string" :location "uri" :location-name
                         "resource-arn")
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor struct-shape-untag-resource-request-tag-keys
                         :shape "__listOf__string" :location "querystring"
                         :location-name "tagKeys"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-untag-resource-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'untag-resource-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'untag-resource-request 'make-untag-resource-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          untag-resource-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-request common-lisp:nil
                       ((description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-request-description :shape
                         "__string" :location common-lisp:nil :location-name
                         "description")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-request-id :shape
                         "__string" :location "uri" :location-name "id"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-request 'make-update-channel-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-channel-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-arn :shape
                         "__string" :location common-lisp:nil :location-name
                         "arn")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-created-at :shape
                         "__string" :location common-lisp:nil :location-name
                         "createdAt")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (egress-access-logs :initarg :egress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or egress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-egress-access-logs
                         :shape "EgressAccessLogs" :location common-lisp:nil
                         :location-name "egressAccessLogs")
                        (hls-ingest :initarg :hls-ingest :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-ingest common-lisp:null) :accessor
                         struct-shape-update-channel-response-hls-ingest :shape
                         "HlsIngest" :location common-lisp:nil :location-name
                         "hlsIngest")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-channel-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (ingress-access-logs :initarg :ingress-access-logs
                         :initform common-lisp:nil :type
                         (common-lisp:or ingress-access-logs common-lisp:null)
                         :accessor
                         struct-shape-update-channel-response-ingress-access-logs
                         :shape "IngressAccessLogs" :location common-lisp:nil
                         :location-name "ingressAccessLogs")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-channel-response-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         "tags"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-channel-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-channel-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-channel-response 'make-update-channel-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'egress-access-logs))
      (common-lisp:list
       (common-lisp:cons "EgressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-ingest))
      (common-lisp:list
       (common-lisp:cons "HlsIngest"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ingress-access-logs))
      (common-lisp:list
       (common-lisp:cons "IngressAccessLogs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-channel-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-origin-endpoint-request common-lisp:nil
                       ((authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          cmaf-package-create-or-update-parameters
                          common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-cmaf-package
                         :shape "CmafPackageCreateOrUpdateParameters" :location
                         common-lisp:nil :location-name "cmafPackage")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-request-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform
                         (common-lisp:error ":id is required") :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-request-id :shape
                         "__string" :location "uri" :location-name "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-request-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-request-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-origin-endpoint-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-origin-endpoint-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-origin-endpoint-request
                    'make-update-origin-endpoint-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-origin-endpoint-response common-lisp:nil
                       ((arn :initarg :arn :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-arn
                         :shape "__string" :location common-lisp:nil
                         :location-name "arn")
                        (authorization :initarg :authorization :initform
                         common-lisp:nil :type
                         (common-lisp:or authorization common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-authorization
                         :shape "Authorization" :location common-lisp:nil
                         :location-name "authorization")
                        (channel-id :initarg :channel-id :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-channel-id
                         :shape "__string" :location common-lisp:nil
                         :location-name "channelId")
                        (cmaf-package :initarg :cmaf-package :initform
                         common-lisp:nil :type
                         (common-lisp:or cmaf-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-cmaf-package
                         :shape "CmafPackage" :location common-lisp:nil
                         :location-name "cmafPackage")
                        (created-at :initarg :created-at :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-created-at
                         :shape "__string" :location common-lisp:nil
                         :location-name "createdAt")
                        (dash-package :initarg :dash-package :initform
                         common-lisp:nil :type
                         (common-lisp:or dash-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-dash-package
                         :shape "DashPackage" :location common-lisp:nil
                         :location-name "dashPackage")
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-description
                         :shape "__string" :location common-lisp:nil
                         :location-name "description")
                        (hls-package :initarg :hls-package :initform
                         common-lisp:nil :type
                         (common-lisp:or hls-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-hls-package
                         :shape "HlsPackage" :location common-lisp:nil
                         :location-name "hlsPackage")
                        (id :initarg :id :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-id :shape
                         "__string" :location common-lisp:nil :location-name
                         "id")
                        (manifest-name :initarg :manifest-name :initform
                         common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-manifest-name
                         :shape "__string" :location common-lisp:nil
                         :location-name "manifestName")
                        (mss-package :initarg :mss-package :initform
                         common-lisp:nil :type
                         (common-lisp:or mss-package common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-mss-package
                         :shape "MssPackage" :location common-lisp:nil
                         :location-name "mssPackage")
                        (origination :initarg :origination :initform
                         common-lisp:nil :type
                         (common-lisp:or origination common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-origination
                         :shape "Origination" :location common-lisp:nil
                         :location-name "origination")
                        (startover-window-seconds :initarg
                         :startover-window-seconds :initform common-lisp:nil
                         :type (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-startover-window-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "startoverWindowSeconds")
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         "tags")
                        (time-delay-seconds :initarg :time-delay-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or |__integer| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-time-delay-seconds
                         :shape "__integer" :location common-lisp:nil
                         :location-name "timeDelaySeconds")
                        (url :initarg :url :initform common-lisp:nil :type
                         (common-lisp:or |__string| common-lisp:null) :accessor
                         struct-shape-update-origin-endpoint-response-url
                         :shape "__string" :location common-lisp:nil
                         :location-name "url")
                        (whitelist :initarg :whitelist :initform
                         common-lisp:nil :type
                         (common-lisp:or |__listOf__string| common-lisp:null)
                         :accessor
                         struct-shape-update-origin-endpoint-response-whitelist
                         :shape "__listOf__string" :location common-lisp:nil
                         :location-name "whitelist"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-origin-endpoint-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-origin-endpoint-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-origin-endpoint-response
                    'make-update-origin-endpoint-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'arn))
      (common-lisp:list
       (common-lisp:cons "Arn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authorization))
      (common-lisp:list
       (common-lisp:cons "Authorization"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'channel-id))
      (common-lisp:list
       (common-lisp:cons "ChannelId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cmaf-package))
      (common-lisp:list
       (common-lisp:cons "CmafPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-at))
      (common-lisp:list
       (common-lisp:cons "CreatedAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dash-package))
      (common-lisp:list
       (common-lisp:cons "DashPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hls-package))
      (common-lisp:list
       (common-lisp:cons "HlsPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'id))
      (common-lisp:list
       (common-lisp:cons "Id"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'manifest-name))
      (common-lisp:list
       (common-lisp:cons "ManifestName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mss-package))
      (common-lisp:list
       (common-lisp:cons "MssPackage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'origination))
      (common-lisp:list
       (common-lisp:cons "Origination"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'startover-window-seconds))
      (common-lisp:list
       (common-lisp:cons "StartoverWindowSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'time-delay-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeDelaySeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'url))
      (common-lisp:list
       (common-lisp:cons "Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'whitelist))
      (common-lisp:list
       (common-lisp:cons "Whitelist"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-origin-endpoint-response))
   common-lisp:nil))
(common-lisp:deftype utc-timing () 'common-lisp:string)
(common-lisp:deftype |__AdTriggersElement| () 'common-lisp:string)
(common-lisp:deftype |__PeriodTriggersElement| () 'common-lisp:string)
(common-lisp:deftype |__boolean| () 'common-lisp:boolean)
(common-lisp:deftype |__double| () 'common-lisp:double-float)
(common-lisp:deftype |__integer| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__listOfChannel| ()
   '(trivial-types:proper-list channel))
 (common-lisp:defun make-__listofchannel
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list channel))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHarvestJob| ()
   '(trivial-types:proper-list harvest-job))
 (common-lisp:defun make-__listofharvestjob
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list harvest-job))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsManifest| ()
   '(trivial-types:proper-list hls-manifest))
 (common-lisp:defun make-__listofhlsmanifest
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list hls-manifest))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfHlsManifestCreateOrUpdateParameters| ()
   '(trivial-types:proper-list hls-manifest-create-or-update-parameters))
 (common-lisp:defun make-__listofhlsmanifestcreateorupdateparameters
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            hls-manifest-create-or-update-parameters))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfIngestEndpoint| ()
   '(trivial-types:proper-list ingest-endpoint))
 (common-lisp:defun make-__listofingestendpoint
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ingest-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOfOriginEndpoint| ()
   '(trivial-types:proper-list origin-endpoint))
 (common-lisp:defun make-__listoforiginendpoint
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list origin-endpoint))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__PeriodTriggersElement| ()
   '(trivial-types:proper-list |__PeriodTriggersElement|))
 (common-lisp:defun make-__listof__periodtriggerselement
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            |__PeriodTriggersElement|))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype |__listOf__string| ()
   '(trivial-types:proper-list |__string|))
 (common-lisp:defun make-__listof__string
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list |__string|))
   aws-sdk/generator/shape::members))
(common-lisp:deftype |__long| () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype |__mapOf__string| () 'common-lisp:hash-table)
 (common-lisp:defun make-__mapof__string (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype |__string| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun configure-logs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key egress-access-logs id
                     ingress-access-logs)
   (common-lisp:declare
    (common-lisp:ignorable egress-access-logs id ingress-access-logs))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-configure-logs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/configure_logs"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "ConfigureLogs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'configure-logs))
(common-lisp:progn
 (common-lisp:defun create-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description id tags)
   (common-lisp:declare (common-lisp:ignorable description id tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/channels"
                                                        "CreateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-channel))
(common-lisp:progn
 (common-lisp:defun create-harvest-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key end-time id origin-endpoint-id
                     s3destination start-time)
   (common-lisp:declare
    (common-lisp:ignorable end-time id origin-endpoint-id s3destination
     start-time))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-harvest-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/harvest_jobs"
                                                        "CreateHarvestJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-harvest-job))
(common-lisp:progn
 (common-lisp:defun create-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authorization channel-id cmaf-package
                     dash-package description hls-package id manifest-name
                     mss-package origination startover-window-seconds tags
                     time-delay-seconds whitelist)
   (common-lisp:declare
    (common-lisp:ignorable authorization channel-id cmaf-package dash-package
     description hls-package id manifest-name mss-package origination
     startover-window-seconds tags time-delay-seconds whitelist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/origin_endpoints"
                                                        "CreateOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun delete-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-channel))
(common-lisp:progn
 (common-lisp:defun delete-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/origin_endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DeleteOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun describe-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DescribeChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-channel))
(common-lisp:progn
 (common-lisp:defun describe-harvest-job
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-harvest-job-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/harvest_jobs/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DescribeHarvestJob"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-harvest-job))
(common-lisp:progn
 (common-lisp:defun describe-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/origin_endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "DescribeOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-origin-endpoint))
(common-lisp:progn
 (common-lisp:defun list-channels
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key max-results next-token)
   (common-lisp:declare (common-lisp:ignorable max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-channels-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/channels"
                                                        "ListChannels"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-channels))
(common-lisp:progn
 (common-lisp:defun list-harvest-jobs
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key include-channel-id include-status
                     max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable include-channel-id include-status max-results
     next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-harvest-jobs-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET" "/harvest_jobs"
                                                        "ListHarvestJobs"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-harvest-jobs))
(common-lisp:progn
 (common-lisp:defun list-origin-endpoints
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key channel-id max-results next-token)
   (common-lisp:declare
    (common-lisp:ignorable channel-id max-results next-token))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-origin-endpoints-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/origin_endpoints"
                                                        "ListOriginEndpoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-origin-endpoints))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn)
   (common-lisp:declare (common-lisp:ignorable resource-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun rotate-channel-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id)
   (common-lisp:declare (common-lisp:ignorable id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-rotate-channel-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/credentials"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "RotateChannelCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'rotate-channel-credentials))
(common-lisp:progn
 (common-lisp:defun rotate-ingest-endpoint-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key id ingest-endpoint-id)
   (common-lisp:declare (common-lisp:ignorable id ingest-endpoint-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-rotate-ingest-endpoint-credentials-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A/ingest_endpoints/~A/credentials"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'ingest-endpoint-id))))
                                                        "RotateIngestEndpointCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'rotate-ingest-endpoint-credentials))
(common-lisp:progn
 (common-lisp:defun tag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-tag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "TagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'tag-resource))
(common-lisp:progn
 (common-lisp:defun untag-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-untag-resource-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/tags/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'resource-arn))))
                                                        "UntagResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'untag-resource))
(common-lisp:progn
 (common-lisp:defun update-channel
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key description id)
   (common-lisp:declare (common-lisp:ignorable description id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-channel-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/channels/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateChannel"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-channel))
(common-lisp:progn
 (common-lisp:defun update-origin-endpoint
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key authorization cmaf-package dash-package
                     description hls-package id manifest-name mss-package
                     origination startover-window-seconds time-delay-seconds
                     whitelist)
   (common-lisp:declare
    (common-lisp:ignorable authorization cmaf-package dash-package description
     hls-package id manifest-name mss-package origination
     startover-window-seconds time-delay-seconds whitelist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-origin-endpoint-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'mediapackage-request
                                                        aws-sdk/generator/operation::input
                                                        "PUT"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/origin_endpoints/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'id))))
                                                        "UpdateOriginEndpoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-origin-endpoint))
