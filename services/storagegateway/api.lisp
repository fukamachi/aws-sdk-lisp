;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/storagegateway/api (:use)
                             (:nicknames #:aws/storagegateway)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/storagegateway/api)
(common-lisp:progn
 (common-lisp:define-condition storagegateway-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'storagegateway-error))
(common-lisp:progn
 (common-lisp:defclass storagegateway-request
                       (aws-sdk/json-request:json-request) common-lisp:nil
                       (:default-initargs :service "storagegateway"
                        :api-version "2013-06-30" :host-prefix "storagegateway"
                        :signing-name common-lisp:nil :global-host
                        common-lisp:nil :target-prefix
                        "StorageGateway_20130630" :json-version "1.1"))
 (common-lisp:export 'storagegateway-request))
(common-lisp:defvar *error-map*
  '(("InternalServerError" . internal-server-error)
    ("InvalidGatewayRequestException" . invalid-gateway-request-exception)
    ("ServiceUnavailableError" . service-unavailable-error)))
(common-lisp:progn
 (common-lisp:defclass activate-gateway-input common-lisp:nil
                       ((activation-key :initarg :activation-key :initform
                         (common-lisp:error ":activation-key is required")
                         :type (common-lisp:or activation-key common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-activation-key
                         :shape "ActivationKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-name :initarg :gateway-name :initform
                         (common-lisp:error ":gateway-name is required") :type
                         (common-lisp:or gateway-name common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-gateway-name
                         :shape "GatewayName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-timezone :initarg :gateway-timezone :initform
                         (common-lisp:error ":gateway-timezone is required")
                         :type
                         (common-lisp:or gateway-timezone common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-gateway-timezone
                         :shape "GatewayTimezone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-region :initarg :gateway-region :initform
                         (common-lisp:error ":gateway-region is required")
                         :type (common-lisp:or region-id common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-gateway-region
                         :shape "RegionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-type :initarg :gateway-type :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-gateway-type
                         :shape "GatewayType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-drive-type :initarg :tape-drive-type :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-drive-type common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-tape-drive-type
                         :shape "TapeDriveType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (medium-changer-type :initarg :medium-changer-type
                         :initform common-lisp:nil :type
                         (common-lisp:or medium-changer-type common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-input-medium-changer-type
                         :shape "MediumChangerType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-activate-gateway-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activate-gateway-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'activate-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'activate-gateway-input 'make-activate-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'activation-key))
      (common-lisp:list
       (common-lisp:cons "ActivationKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-region))
      (common-lisp:list
       (common-lisp:cons "GatewayRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-drive-type))
      (common-lisp:list
       (common-lisp:cons "TapeDriveType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'medium-changer-type))
      (common-lisp:list
       (common-lisp:cons "MediumChangerType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass activate-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-activate-gateway-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-activate-gateway-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'activate-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'activate-gateway-output 'make-activate-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          activate-gateway-output))
   common-lisp:nil))
(common-lisp:deftype activation-key () 'common-lisp:string)
(common-lisp:deftype active-directory-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass add-cache-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-add-cache-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform
                         (common-lisp:error ":disk-ids is required") :type
                         (common-lisp:or disk-ids common-lisp:null) :accessor
                         struct-shape-add-cache-input-disk-ids :shape "DiskIds"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-cache-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-cache-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'add-cache-input 'make-add-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-cache-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-add-cache-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-cache-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-cache-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-cache-output 'make-add-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input add-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input add-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input add-cache-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-tags-to-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-add-tags-to-resource-input-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform
                         (common-lisp:error ":tags is required") :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-add-tags-to-resource-input-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-tags-to-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-tags-to-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-input
                    'make-add-tags-to-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-tags-to-resource-output common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-add-tags-to-resource-output-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-tags-to-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-tags-to-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-tags-to-resource-output
                    'make-add-tags-to-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-tags-to-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-upload-buffer-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-add-upload-buffer-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform
                         (common-lisp:error ":disk-ids is required") :type
                         (common-lisp:or disk-ids common-lisp:null) :accessor
                         struct-shape-add-upload-buffer-input-disk-ids :shape
                         "DiskIds" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-upload-buffer-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-upload-buffer-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-upload-buffer-input 'make-add-upload-buffer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-upload-buffer-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-add-upload-buffer-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-upload-buffer-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-upload-buffer-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-upload-buffer-output 'make-add-upload-buffer-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-upload-buffer-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-working-storage-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-add-working-storage-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform
                         (common-lisp:error ":disk-ids is required") :type
                         (common-lisp:or disk-ids common-lisp:null) :accessor
                         struct-shape-add-working-storage-input-disk-ids :shape
                         "DiskIds" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-working-storage-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-working-storage-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-working-storage-input
                    'make-add-working-storage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass add-working-storage-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-add-working-storage-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-add-working-storage-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'add-working-storage-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'add-working-storage-output
                    'make-add-working-storage-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          add-working-storage-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass assign-tape-pool-input common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-assign-tape-pool-input-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-id :initarg :pool-id :initform
                         (common-lisp:error ":pool-id is required") :type
                         (common-lisp:or pool-id common-lisp:null) :accessor
                         struct-shape-assign-tape-pool-input-pool-id :shape
                         "PoolId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bypass-governance-retention :initarg
                         :bypass-governance-retention :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-assign-tape-pool-input-bypass-governance-retention
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-assign-tape-pool-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'assign-tape-pool-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'assign-tape-pool-input 'make-assign-tape-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bypass-governance-retention))
      (common-lisp:list
       (common-lisp:cons "BypassGovernanceRetention"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass assign-tape-pool-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-assign-tape-pool-output-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-assign-tape-pool-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'assign-tape-pool-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'assign-tape-pool-output 'make-assign-tape-pool-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          assign-tape-pool-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-file-system-input common-lisp:nil
                       ((user-name :initarg :user-name :initform
                         (common-lisp:error ":user-name is required") :type
                         (common-lisp:or domain-user-name common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-user-name
                         :shape "DomainUserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or domain-user-password common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-password
                         :shape "DomainUserPassword" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or file-system-location-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-location-arn
                         :shape "FileSystemLocationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-associate-file-system-input-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-network-configuration :initarg
                         :endpoint-network-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-network-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-input-endpoint-network-configuration
                         :shape "EndpointNetworkConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-file-system-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-file-system-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-file-system-input
                    'make-associate-file-system-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-name))
      (common-lisp:list
       (common-lisp:cons "UserName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-network-configuration))
      (common-lisp:list
       (common-lisp:cons "EndpointNetworkConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass associate-file-system-output common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-associate-file-system-output-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-associate-file-system-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'associate-file-system-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'associate-file-system-output
                    'make-associate-file-system-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          associate-file-system-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attach-volume-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-attach-volume-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-name :initarg :target-name :initform
                         common-lisp:nil :type
                         (common-lisp:or target-name common-lisp:null)
                         :accessor struct-shape-attach-volume-input-target-name
                         :shape "TargetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-attach-volume-input-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (network-interface-id :initarg :network-interface-id
                         :initform
                         (common-lisp:error
                          ":network-interface-id is required")
                         :type
                         (common-lisp:or network-interface-id common-lisp:null)
                         :accessor
                         struct-shape-attach-volume-input-network-interface-id
                         :shape "NetworkInterfaceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-id :initarg :disk-id :initform common-lisp:nil
                         :type (common-lisp:or disk-id common-lisp:null)
                         :accessor struct-shape-attach-volume-input-disk-id
                         :shape "DiskId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-volume-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attach-volume-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attach-volume-input 'make-attach-volume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attach-volume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attach-volume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-id))
      (common-lisp:list
       (common-lisp:cons "DiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attach-volume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass attach-volume-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-attach-volume-output-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-attach-volume-output-target-arn :shape
                         "TargetARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-attach-volume-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'attach-volume-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'attach-volume-output 'make-attach-volume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input attach-volume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input attach-volume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input attach-volume-output))
   common-lisp:nil))
(common-lisp:deftype audit-destination-arn () 'common-lisp:string)
(common-lisp:deftype authentication () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass automatic-tape-creation-policy-info common-lisp:nil
                       ((automatic-tape-creation-rules :initarg
                         :automatic-tape-creation-rules :initform
                         common-lisp:nil :type
                         (common-lisp:or automatic-tape-creation-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-policy-info-automatic-tape-creation-rules
                         :shape "AutomaticTapeCreationRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-policy-info-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-automatic-tape-creation-policy-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'automatic-tape-creation-policy-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'automatic-tape-creation-policy-info
                    'make-automatic-tape-creation-policy-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-policy-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-policy-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-tape-creation-rules))
      (common-lisp:list
       (common-lisp:cons "AutomaticTapeCreationRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-policy-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype automatic-tape-creation-policy-infos ()
   '(trivial-types:proper-list automatic-tape-creation-policy-info))
 (common-lisp:defun make-automatic-tape-creation-policy-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automatic-tape-creation-policy-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass automatic-tape-creation-rule common-lisp:nil
                       ((tape-barcode-prefix :initarg :tape-barcode-prefix
                         :initform
                         (common-lisp:error ":tape-barcode-prefix is required")
                         :type
                         (common-lisp:or tape-barcode-prefix common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-rule-tape-barcode-prefix
                         :shape "TapeBarcodePrefix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pool-id :initarg :pool-id :initform
                         (common-lisp:error ":pool-id is required") :type
                         (common-lisp:or pool-id common-lisp:null) :accessor
                         struct-shape-automatic-tape-creation-rule-pool-id
                         :shape "PoolId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform
                         (common-lisp:error ":tape-size-in-bytes is required")
                         :type (common-lisp:or tape-size common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-rule-tape-size-in-bytes
                         :shape "TapeSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (minimum-num-tapes :initarg :minimum-num-tapes
                         :initform
                         (common-lisp:error ":minimum-num-tapes is required")
                         :type
                         (common-lisp:or minimum-num-tapes common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-rule-minimum-num-tapes
                         :shape "MinimumNumTapes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (worm :initarg :worm :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-automatic-tape-creation-rule-worm :shape
                         "boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-automatic-tape-creation-rule
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'automatic-tape-creation-rule
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'automatic-tape-creation-rule
                    'make-automatic-tape-creation-rule))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-rule))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-rule))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode-prefix))
      (common-lisp:list
       (common-lisp:cons "TapeBarcodePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minimum-num-tapes))
      (common-lisp:list
       (common-lisp:cons "MinimumNumTapes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worm))
      (common-lisp:list
       (common-lisp:cons "Worm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          automatic-tape-creation-rule))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype automatic-tape-creation-rules ()
   '(trivial-types:proper-list automatic-tape-creation-rule))
 (common-lisp:defun make-automatic-tape-creation-rules
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            automatic-tape-creation-rule))
   aws-sdk/generator/shape::members))
(common-lisp:deftype availability-monitor-test-status () 'common-lisp:string)
(common-lisp:deftype bandwidth-download-rate-limit () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass bandwidth-rate-limit-interval common-lisp:nil
                       ((start-hour-of-day :initarg :start-hour-of-day
                         :initform
                         (common-lisp:error ":start-hour-of-day is required")
                         :type (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-start-hour-of-day
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-minute-of-hour :initarg :start-minute-of-hour
                         :initform
                         (common-lisp:error
                          ":start-minute-of-hour is required")
                         :type (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-start-minute-of-hour
                         :shape "MinuteOfHour" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-hour-of-day :initarg :end-hour-of-day :initform
                         (common-lisp:error ":end-hour-of-day is required")
                         :type (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-end-hour-of-day
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (end-minute-of-hour :initarg :end-minute-of-hour
                         :initform
                         (common-lisp:error ":end-minute-of-hour is required")
                         :type (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-end-minute-of-hour
                         :shape "MinuteOfHour" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (days-of-week :initarg :days-of-week :initform
                         (common-lisp:error ":days-of-week is required") :type
                         (common-lisp:or days-of-week common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-days-of-week
                         :shape "DaysOfWeek" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-upload-rate-limit-in-bits-per-sec :initarg
                         :average-upload-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-upload-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-average-upload-rate-limit-in-bits-per-sec
                         :shape "BandwidthUploadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (average-download-rate-limit-in-bits-per-sec :initarg
                         :average-download-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-download-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-bandwidth-rate-limit-interval-average-download-rate-limit-in-bits-per-sec
                         :shape "BandwidthDownloadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-bandwidth-rate-limit-interval
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'bandwidth-rate-limit-interval
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'bandwidth-rate-limit-interval
                    'make-bandwidth-rate-limit-interval))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "StartHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'start-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "StartMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-hour-of-day))
      (common-lisp:list
       (common-lisp:cons "EndHourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'end-minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "EndMinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'days-of-week))
      (common-lisp:list
       (common-lisp:cons "DaysOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-download-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageDownloadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          bandwidth-rate-limit-interval))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype bandwidth-rate-limit-intervals ()
   '(trivial-types:proper-list bandwidth-rate-limit-interval))
 (common-lisp:defun make-bandwidth-rate-limit-intervals
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            bandwidth-rate-limit-interval))
   aws-sdk/generator/shape::members))
(common-lisp:deftype bandwidth-type () 'common-lisp:string)
(common-lisp:deftype bandwidth-upload-rate-limit () 'common-lisp:integer)
(common-lisp:deftype boolean () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:defclass cache-attributes common-lisp:nil
                       ((cache-stale-timeout-in-seconds :initarg
                         :cache-stale-timeout-in-seconds :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-stale-timeout-in-seconds
                                         common-lisp:null)
                         :accessor
                         struct-shape-cache-attributes-cache-stale-timeout-in-seconds
                         :shape "CacheStaleTimeoutInSeconds" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cache-attributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cache-attributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cache-attributes 'make-cache-attributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cache-attributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cache-attributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-stale-timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "CacheStaleTimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cache-attributes))
   common-lisp:nil))
(common-lisp:deftype cache-stale-timeout-in-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass cachedi-scsivolume common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-cachedi-scsivolume-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-id :initarg :volume-id :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-id common-lisp:null) :accessor
                         struct-shape-cachedi-scsivolume-volume-id :shape
                         "VolumeId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-type :initarg :volume-type :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-type common-lisp:null)
                         :accessor struct-shape-cachedi-scsivolume-volume-type
                         :shape "VolumeType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-status :initarg :volume-status :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-status common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volume-status :shape
                         "VolumeStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-attachment-status :initarg
                         :volume-attachment-status :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-attachment-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volume-attachment-status
                         :shape "VolumeAttachmentStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volume-size-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-progress :initarg :volume-progress :initform
                         common-lisp:nil :type
                         (common-lisp:or double-object common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volume-progress :shape
                         "DoubleObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-snapshot-id :initarg :source-snapshot-id
                         :initform common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-source-snapshot-id
                         :shape "SnapshotId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volumei-scsiattributes :initarg
                         :volumei-scsiattributes :initform common-lisp:nil
                         :type
                         (common-lisp:or volumei-scsiattributes
                                         common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volumei-scsiattributes
                         :shape "VolumeiSCSIAttributes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or created-date common-lisp:null)
                         :accessor struct-shape-cachedi-scsivolume-created-date
                         :shape "CreatedDate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-used-in-bytes :initarg :volume-used-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-used-in-bytes common-lisp:null)
                         :accessor
                         struct-shape-cachedi-scsivolume-volume-used-in-bytes
                         :shape "VolumeUsedInBytes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-cachedi-scsivolume-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-name :initarg :target-name :initform
                         common-lisp:nil :type
                         (common-lisp:or target-name common-lisp:null)
                         :accessor struct-shape-cachedi-scsivolume-target-name
                         :shape "TargetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cachedi-scsivolume
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cachedi-scsivolume
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cachedi-scsivolume 'make-cachedi-scsivolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-status))
      (common-lisp:list
       (common-lisp:cons "VolumeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-attachment-status))
      (common-lisp:list
       (common-lisp:cons "VolumeAttachmentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-progress))
      (common-lisp:list
       (common-lisp:cons "VolumeProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SourceSnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volumei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "VolumeiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input cachedi-scsivolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype cachedi-scsivolumes ()
   '(trivial-types:proper-list cachedi-scsivolume))
 (common-lisp:defun make-cachedi-scsivolumes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list cachedi-scsivolume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass cancel-archival-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-cancel-archival-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-cancel-archival-input-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-archival-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-archival-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-archival-input 'make-cancel-archival-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-archival-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor struct-shape-cancel-archival-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-archival-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-archival-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-archival-output 'make-cancel-archival-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-archival-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-retrieval-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-cancel-retrieval-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-cancel-retrieval-input-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-retrieval-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-retrieval-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-retrieval-input 'make-cancel-retrieval-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass cancel-retrieval-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-cancel-retrieval-output-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-cancel-retrieval-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'cancel-retrieval-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'cancel-retrieval-output 'make-cancel-retrieval-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          cancel-retrieval-output))
   common-lisp:nil))
(common-lisp:deftype case-sensitivity () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype chap-credentials ()
   '(trivial-types:proper-list chap-info))
 (common-lisp:defun make-chap-credentials
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list chap-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass chap-info common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-chap-info-target-arn :shape "TargetARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (secret-to-authenticate-initiator :initarg
                         :secret-to-authenticate-initiator :initform
                         common-lisp:nil :type
                         (common-lisp:or chap-secret common-lisp:null)
                         :accessor
                         struct-shape-chap-info-secret-to-authenticate-initiator
                         :shape "ChapSecret" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiator-name :initarg :initiator-name :initform
                         common-lisp:nil :type
                         (common-lisp:or iqn-name common-lisp:null) :accessor
                         struct-shape-chap-info-initiator-name :shape "IqnName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (secret-to-authenticate-target :initarg
                         :secret-to-authenticate-target :initform
                         common-lisp:nil :type
                         (common-lisp:or chap-secret common-lisp:null)
                         :accessor
                         struct-shape-chap-info-secret-to-authenticate-target
                         :shape "ChapSecret" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-chap-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'chap-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'chap-info 'make-chap-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input chap-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input chap-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-initiator))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateInitiator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-target))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input chap-info))
   common-lisp:nil))
(common-lisp:deftype chap-secret () 'common-lisp:string)
(common-lisp:deftype client-token () 'common-lisp:string)
(common-lisp:deftype cloud-watch-log-group-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass create-cachedi-scsivolume-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform
                         (common-lisp:error
                          ":volume-size-in-bytes is required")
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-volume-size-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (snapshot-id :initarg :snapshot-id :initform
                         common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-snapshot-id
                         :shape "SnapshotId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-name :initarg :target-name :initform
                         (common-lisp:error ":target-name is required") :type
                         (common-lisp:or target-name common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-target-name
                         :shape "TargetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (source-volume-arn :initarg :source-volume-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-cachedi-scsivolume-input-source-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (network-interface-id :initarg :network-interface-id
                         :initform
                         (common-lisp:error
                          ":network-interface-id is required")
                         :type
                         (common-lisp:or network-interface-id common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-network-interface-id
                         :shape "NetworkInterfaceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-cachedi-scsivolume-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-create-cachedi-scsivolume-input-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-cachedi-scsivolume-input-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cachedi-scsivolume-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-cachedi-scsivolume-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cachedi-scsivolume-input
                    'make-create-cachedi-scsivolume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-volume-arn))
      (common-lisp:list
       (common-lisp:cons "SourceVolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-cachedi-scsivolume-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-cachedi-scsivolume-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-create-cachedi-scsivolume-output-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-cachedi-scsivolume-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-cachedi-scsivolume-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-cachedi-scsivolume-output
                    'make-create-cachedi-scsivolume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-cachedi-scsivolume-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-nfsfile-share-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (nfsfile-share-defaults :initarg
                         :nfsfile-share-defaults :initform common-lisp:nil
                         :type
                         (common-lisp:or nfsfile-share-defaults
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-nfsfile-share-defaults
                         :shape "NFSFileShareDefaults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-kmskey :shape
                         "KMSKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role :initarg :role :initform
                         (common-lisp:error ":role is required") :type
                         (common-lisp:or role common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-role :shape
                         "Role" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-location-arn
                         :shape "LocationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-object-acl
                         :shape "ObjectACL" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-list :initarg :client-list :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-client-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-client-list
                         :shape "FileShareClientList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (squash :initarg :squash :initform common-lisp:nil
                         :type (common-lisp:or squash common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-squash :shape
                         "Squash" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-read-only
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-requester-pays
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-file-share-name
                         :shape "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpcendpoint-dnsname :initarg :vpcendpoint-dnsname
                         :initform common-lisp:nil :type
                         (common-lisp:or dnshost-name common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-vpcendpoint-dnsname
                         :shape "DNSHostName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-region :initarg :bucket-region :initform
                         common-lisp:nil :type
                         (common-lisp:or region-id common-lisp:null) :accessor
                         struct-shape-create-nfsfile-share-input-bucket-region
                         :shape "RegionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-nfsfile-share-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-nfsfile-share-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-nfsfile-share-input
                    'make-create-nfsfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpcendpoint-dnsname))
      (common-lisp:list
       (common-lisp:cons "VPCEndpointDNSName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-region))
      (common-lisp:list
       (common-lisp:cons "BucketRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-nfsfile-share-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-create-nfsfile-share-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-nfsfile-share-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-nfsfile-share-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-nfsfile-share-output
                    'make-create-nfsfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-nfsfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-smbfile-share-input common-lisp:nil
                       ((client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-kmskey :shape
                         "KMSKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role :initarg :role :initform
                         (common-lisp:error ":role is required") :type
                         (common-lisp:or role common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-role :shape
                         "Role" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         (common-lisp:error ":location-arn is required") :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-location-arn
                         :shape "LocationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-object-acl
                         :shape "ObjectACL" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-read-only
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-requester-pays
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smbaclenabled :initarg :smbaclenabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-smbaclenabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-based-enumeration :initarg
                         :access-based-enumeration :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-access-based-enumeration
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (admin-user-list :initarg :admin-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-admin-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (valid-user-list :initarg :valid-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-valid-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invalid-user-list :initarg :invalid-user-list
                         :initform common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-invalid-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication :initarg :authentication :initform
                         common-lisp:nil :type
                         (common-lisp:or authentication common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-authentication
                         :shape "Authentication" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (case-sensitivity :initarg :case-sensitivity :initform
                         common-lisp:nil :type
                         (common-lisp:or case-sensitivity common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-case-sensitivity
                         :shape "CaseSensitivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-file-share-name
                         :shape "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpcendpoint-dnsname :initarg :vpcendpoint-dnsname
                         :initform common-lisp:nil :type
                         (common-lisp:or dnshost-name common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-input-vpcendpoint-dnsname
                         :shape "DNSHostName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-region :initarg :bucket-region :initform
                         common-lisp:nil :type
                         (common-lisp:or region-id common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-bucket-region
                         :shape "RegionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (oplocks-enabled :initarg :oplocks-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-smbfile-share-input-oplocks-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-smbfile-share-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-smbfile-share-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-smbfile-share-input
                    'make-create-smbfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smbaclenabled))
      (common-lisp:list
       (common-lisp:cons "SMBACLEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-based-enumeration))
      (common-lisp:list
       (common-lisp:cons "AccessBasedEnumeration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-user-list))
      (common-lisp:list
       (common-lisp:cons "AdminUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'valid-user-list))
      (common-lisp:list
       (common-lisp:cons "ValidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invalid-user-list))
      (common-lisp:list
       (common-lisp:cons "InvalidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication))
      (common-lisp:list
       (common-lisp:cons "Authentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'case-sensitivity))
      (common-lisp:list
       (common-lisp:cons "CaseSensitivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpcendpoint-dnsname))
      (common-lisp:list
       (common-lisp:cons "VPCEndpointDNSName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-region))
      (common-lisp:list
       (common-lisp:cons "BucketRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oplocks-enabled))
      (common-lisp:list
       (common-lisp:cons "OplocksEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-smbfile-share-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-create-smbfile-share-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-smbfile-share-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-smbfile-share-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-smbfile-share-output
                    'make-create-smbfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-smbfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-from-volume-recovery-point-input
                       common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-input-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (snapshot-description :initarg :snapshot-description
                         :initform
                         (common-lisp:error
                          ":snapshot-description is required")
                         :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-input-snapshot-description
                         :shape "SnapshotDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-input-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-snapshot-from-volume-recovery-point-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-snapshot-from-volume-recovery-point-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-from-volume-recovery-point-input
                    'make-create-snapshot-from-volume-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-description))
      (common-lisp:list
       (common-lisp:cons "SnapshotDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-from-volume-recovery-point-output
                       common-lisp:nil
                       ((snapshot-id :initarg :snapshot-id :initform
                         common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-output-snapshot-id
                         :shape "SnapshotId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-recovery-point-time :initarg
                         :volume-recovery-point-time :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-create-snapshot-from-volume-recovery-point-output-volume-recovery-point-time
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-snapshot-from-volume-recovery-point-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-snapshot-from-volume-recovery-point-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-from-volume-recovery-point-output
                    'make-create-snapshot-from-volume-recovery-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-from-volume-recovery-point-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-snapshot-input-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (snapshot-description :initarg :snapshot-description
                         :initform
                         (common-lisp:error
                          ":snapshot-description is required")
                         :type
                         (common-lisp:or snapshot-description common-lisp:null)
                         :accessor
                         struct-shape-create-snapshot-input-snapshot-description
                         :shape "SnapshotDescription" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-snapshot-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-snapshot-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-snapshot-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-input 'make-create-snapshot-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'snapshot-description))
      (common-lisp:list
       (common-lisp:cons "SnapshotDescription"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-snapshot-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-snapshot-output-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (snapshot-id :initarg :snapshot-id :initform
                         common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-create-snapshot-output-snapshot-id :shape
                         "SnapshotId" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-snapshot-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-snapshot-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-snapshot-output 'make-create-snapshot-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-snapshot-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-storedi-scsivolume-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-id :initarg :disk-id :initform
                         (common-lisp:error ":disk-id is required") :type
                         (common-lisp:or disk-id common-lisp:null) :accessor
                         struct-shape-create-storedi-scsivolume-input-disk-id
                         :shape "DiskId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (snapshot-id :initarg :snapshot-id :initform
                         common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-snapshot-id
                         :shape "SnapshotId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (preserve-existing-data :initarg
                         :preserve-existing-data :initform
                         (common-lisp:error
                          ":preserve-existing-data is required")
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-preserve-existing-data
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-name :initarg :target-name :initform
                         (common-lisp:error ":target-name is required") :type
                         (common-lisp:or target-name common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-target-name
                         :shape "TargetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (network-interface-id :initarg :network-interface-id
                         :initform
                         (common-lisp:error
                          ":network-interface-id is required")
                         :type
                         (common-lisp:or network-interface-id common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-network-interface-id
                         :shape "NetworkInterfaceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-storedi-scsivolume-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-input-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-storedi-scsivolume-input-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-storedi-scsivolume-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-storedi-scsivolume-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-storedi-scsivolume-input
                    'make-create-storedi-scsivolume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-id))
      (common-lisp:list
       (common-lisp:cons "DiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserve-existing-data))
      (common-lisp:list
       (common-lisp:cons "PreserveExistingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-storedi-scsivolume-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-create-storedi-scsivolume-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-create-storedi-scsivolume-output-volume-size-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-create-storedi-scsivolume-output-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-storedi-scsivolume-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-storedi-scsivolume-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-storedi-scsivolume-output
                    'make-create-storedi-scsivolume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-storedi-scsivolume-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tape-pool-input common-lisp:nil
                       ((pool-name :initarg :pool-name :initform
                         (common-lisp:error ":pool-name is required") :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-create-tape-pool-input-pool-name :shape
                         "PoolName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (storage-class :initarg :storage-class :initform
                         (common-lisp:error ":storage-class is required") :type
                         (common-lisp:or tape-storage-class common-lisp:null)
                         :accessor
                         struct-shape-create-tape-pool-input-storage-class
                         :shape "TapeStorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-lock-type :initarg :retention-lock-type
                         :initform common-lisp:nil :type
                         (common-lisp:or retention-lock-type common-lisp:null)
                         :accessor
                         struct-shape-create-tape-pool-input-retention-lock-type
                         :shape "RetentionLockType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-lock-time-in-days :initarg
                         :retention-lock-time-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or retention-lock-time-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-create-tape-pool-input-retention-lock-time-in-days
                         :shape "RetentionLockTimeInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-tape-pool-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tape-pool-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tape-pool-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tape-pool-input 'make-create-tape-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-lock-type))
      (common-lisp:list
       (common-lisp:cons "RetentionLockType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-lock-time-in-days))
      (common-lisp:list
       (common-lisp:cons "RetentionLockTimeInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tape-pool-output common-lisp:nil
                       ((pool-arn :initarg :pool-arn :initform common-lisp:nil
                         :type (common-lisp:or pool-arn common-lisp:null)
                         :accessor
                         struct-shape-create-tape-pool-output-pool-arn :shape
                         "PoolARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tape-pool-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tape-pool-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tape-pool-output 'make-create-tape-pool-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-arn))
      (common-lisp:list
       (common-lisp:cons "PoolARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-pool-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tape-with-barcode-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform
                         (common-lisp:error ":tape-size-in-bytes is required")
                         :type (common-lisp:or tape-size common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-tape-size-in-bytes
                         :shape "TapeSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-barcode :initarg :tape-barcode :initform
                         (common-lisp:error ":tape-barcode is required") :type
                         (common-lisp:or tape-barcode common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-tape-barcode
                         :shape "TapeBarcode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-tape-with-barcode-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pool-id :initarg :pool-id :initform common-lisp:nil
                         :type (common-lisp:or pool-id common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-pool-id
                         :shape "PoolId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (worm :initarg :worm :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-input-worm
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-tape-with-barcode-input-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tape-with-barcode-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-tape-with-barcode-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tape-with-barcode-input
                    'make-create-tape-with-barcode-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worm))
      (common-lisp:list
       (common-lisp:cons "Worm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tape-with-barcode-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-create-tape-with-barcode-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tape-with-barcode-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'create-tape-with-barcode-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tape-with-barcode-output
                    'make-create-tape-with-barcode-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          create-tape-with-barcode-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tapes-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-create-tapes-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform
                         (common-lisp:error ":tape-size-in-bytes is required")
                         :type (common-lisp:or tape-size common-lisp:null)
                         :accessor
                         struct-shape-create-tapes-input-tape-size-in-bytes
                         :shape "TapeSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-token :initarg :client-token :initform
                         (common-lisp:error ":client-token is required") :type
                         (common-lisp:or client-token common-lisp:null)
                         :accessor struct-shape-create-tapes-input-client-token
                         :shape "ClientToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (num-tapes-to-create :initarg :num-tapes-to-create
                         :initform
                         (common-lisp:error ":num-tapes-to-create is required")
                         :type
                         (common-lisp:or num-tapes-to-create common-lisp:null)
                         :accessor
                         struct-shape-create-tapes-input-num-tapes-to-create
                         :shape "NumTapesToCreate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-barcode-prefix :initarg :tape-barcode-prefix
                         :initform
                         (common-lisp:error ":tape-barcode-prefix is required")
                         :type
                         (common-lisp:or tape-barcode-prefix common-lisp:null)
                         :accessor
                         struct-shape-create-tapes-input-tape-barcode-prefix
                         :shape "TapeBarcodePrefix" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-create-tapes-input-kmsencrypted :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-create-tapes-input-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (pool-id :initarg :pool-id :initform common-lisp:nil
                         :type (common-lisp:or pool-id common-lisp:null)
                         :accessor struct-shape-create-tapes-input-pool-id
                         :shape "PoolId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (worm :initarg :worm :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor struct-shape-create-tapes-input-worm :shape
                         "boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-create-tapes-input-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tapes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tapes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tapes-input 'make-create-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-token))
      (common-lisp:list
       (common-lisp:cons "ClientToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-tapes-to-create))
      (common-lisp:list
       (common-lisp:cons "NumTapesToCreate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode-prefix))
      (common-lisp:list
       (common-lisp:cons "TapeBarcodePrefix"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worm))
      (common-lisp:list
       (common-lisp:cons "Worm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass create-tapes-output common-lisp:nil
                       ((tape-arns :initarg :tape-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-arns common-lisp:null) :accessor
                         struct-shape-create-tapes-output-tape-arns :shape
                         "TapeARNs" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-create-tapes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'create-tapes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'create-tapes-output 'make-create-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input create-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input create-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input create-tapes-output))
   common-lisp:nil))
(common-lisp:deftype created-date () 'common-lisp:string)
(common-lisp:deftype dnshost-name () 'common-lisp:string)
(common-lisp:deftype day-of-month () 'common-lisp:integer)
(common-lisp:deftype day-of-week () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype days-of-week () '(trivial-types:proper-list day-of-week))
 (common-lisp:defun make-days-of-week
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list day-of-week))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass delete-automatic-tape-creation-policy-input
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-automatic-tape-creation-policy-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-automatic-tape-creation-policy-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-automatic-tape-creation-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-automatic-tape-creation-policy-input
                    'make-delete-automatic-tape-creation-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-automatic-tape-creation-policy-output
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-automatic-tape-creation-policy-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-automatic-tape-creation-policy-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-automatic-tape-creation-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-automatic-tape-creation-policy-output
                    'make-delete-automatic-tape-creation-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-automatic-tape-creation-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-bandwidth-rate-limit-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-bandwidth-rate-limit-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bandwidth-type :initarg :bandwidth-type :initform
                         (common-lisp:error ":bandwidth-type is required")
                         :type (common-lisp:or bandwidth-type common-lisp:null)
                         :accessor
                         struct-shape-delete-bandwidth-rate-limit-input-bandwidth-type
                         :shape "BandwidthType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-bandwidth-rate-limit-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-bandwidth-rate-limit-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-bandwidth-rate-limit-input
                    'make-delete-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bandwidth-type))
      (common-lisp:list
       (common-lisp:cons "BandwidthType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-bandwidth-rate-limit-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-bandwidth-rate-limit-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-bandwidth-rate-limit-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-bandwidth-rate-limit-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-bandwidth-rate-limit-output
                    'make-delete-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-chap-credentials-input common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-delete-chap-credentials-input-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiator-name :initarg :initiator-name :initform
                         (common-lisp:error ":initiator-name is required")
                         :type (common-lisp:or iqn-name common-lisp:null)
                         :accessor
                         struct-shape-delete-chap-credentials-input-initiator-name
                         :shape "IqnName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-chap-credentials-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-chap-credentials-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-chap-credentials-input
                    'make-delete-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-chap-credentials-output common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-delete-chap-credentials-output-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiator-name :initarg :initiator-name :initform
                         common-lisp:nil :type
                         (common-lisp:or iqn-name common-lisp:null) :accessor
                         struct-shape-delete-chap-credentials-output-initiator-name
                         :shape "IqnName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-chap-credentials-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-chap-credentials-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-chap-credentials-output
                    'make-delete-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-file-share-input common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         (common-lisp:error ":file-share-arn is required")
                         :type (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-file-share-input-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (force-delete :initarg :force-delete :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-delete-file-share-input-force-delete
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-file-share-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-file-share-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-file-share-input 'make-delete-file-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-delete))
      (common-lisp:list
       (common-lisp:cons "ForceDelete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-file-share-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-file-share-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-file-share-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-file-share-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-file-share-output 'make-delete-file-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-file-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-gateway-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-gateway-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-input 'make-delete-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-gateway-output-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-gateway-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-gateway-output 'make-delete-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-snapshot-schedule-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-delete-snapshot-schedule-input-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-snapshot-schedule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-snapshot-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-schedule-input
                    'make-delete-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-snapshot-schedule-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-delete-snapshot-schedule-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-snapshot-schedule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'delete-snapshot-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-snapshot-schedule-output
                    'make-delete-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-archive-input common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-delete-tape-archive-input-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bypass-governance-retention :initarg
                         :bypass-governance-retention :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-delete-tape-archive-input-bypass-governance-retention
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-archive-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-archive-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-archive-input
                    'make-delete-tape-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bypass-governance-retention))
      (common-lisp:list
       (common-lisp:cons "BypassGovernanceRetention"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-archive-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-tape-archive-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-archive-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-archive-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-archive-output
                    'make-delete-tape-archive-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-archive-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-delete-tape-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-delete-tape-input-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (bypass-governance-retention :initarg
                         :bypass-governance-retention :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-delete-tape-input-bypass-governance-retention
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-input 'make-delete-tape-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tape-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tape-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bypass-governance-retention))
      (common-lisp:list
       (common-lisp:cons "BypassGovernanceRetention"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tape-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor struct-shape-delete-tape-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-output 'make-delete-tape-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-tape-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-tape-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-tape-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-pool-input common-lisp:nil
                       ((pool-arn :initarg :pool-arn :initform
                         (common-lisp:error ":pool-arn is required") :type
                         (common-lisp:or pool-arn common-lisp:null) :accessor
                         struct-shape-delete-tape-pool-input-pool-arn :shape
                         "PoolARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-pool-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-pool-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-pool-input 'make-delete-tape-pool-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-arn))
      (common-lisp:list
       (common-lisp:cons "PoolARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-tape-pool-output common-lisp:nil
                       ((pool-arn :initarg :pool-arn :initform common-lisp:nil
                         :type (common-lisp:or pool-arn common-lisp:null)
                         :accessor
                         struct-shape-delete-tape-pool-output-pool-arn :shape
                         "PoolARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-tape-pool-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-tape-pool-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-tape-pool-output 'make-delete-tape-pool-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-arn))
      (common-lisp:list
       (common-lisp:cons "PoolARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-tape-pool-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-volume-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-delete-volume-input-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-volume-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-volume-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-volume-input 'make-delete-volume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-volume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-volume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-volume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-volume-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-delete-volume-output-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-volume-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-volume-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-volume-output 'make-delete-volume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input delete-volume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input delete-volume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input delete-volume-output))
   common-lisp:nil))
(common-lisp:deftype deprecation-date () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass describe-availability-monitor-test-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-availability-monitor-test-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-availability-monitor-test-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-availability-monitor-test-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-availability-monitor-test-input
                    'make-describe-availability-monitor-test-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-availability-monitor-test-output
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-availability-monitor-test-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or availability-monitor-test-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-availability-monitor-test-output-status
                         :shape "AvailabilityMonitorTestStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (start-time :initarg :start-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-describe-availability-monitor-test-output-start-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-availability-monitor-test-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-availability-monitor-test-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-availability-monitor-test-output
                    'make-describe-availability-monitor-test-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-time))
      (common-lisp:list
       (common-lisp:cons "StartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-availability-monitor-test-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-bandwidth-rate-limit-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-bandwidth-rate-limit-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-bandwidth-rate-limit-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-input
                    'make-describe-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-bandwidth-rate-limit-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-upload-rate-limit-in-bits-per-sec :initarg
                         :average-upload-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-upload-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-output-average-upload-rate-limit-in-bits-per-sec
                         :shape "BandwidthUploadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (average-download-rate-limit-in-bits-per-sec :initarg
                         :average-download-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-download-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-output-average-download-rate-limit-in-bits-per-sec
                         :shape "BandwidthDownloadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-bandwidth-rate-limit-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-bandwidth-rate-limit-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-output
                    'make-describe-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-download-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageDownloadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-bandwidth-rate-limit-schedule-input
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-schedule-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-bandwidth-rate-limit-schedule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-bandwidth-rate-limit-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-schedule-input
                    'make-describe-bandwidth-rate-limit-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-bandwidth-rate-limit-schedule-output
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-schedule-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bandwidth-rate-limit-intervals :initarg
                         :bandwidth-rate-limit-intervals :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-rate-limit-intervals
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-bandwidth-rate-limit-schedule-output-bandwidth-rate-limit-intervals
                         :shape "BandwidthRateLimitIntervals" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-bandwidth-rate-limit-schedule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-bandwidth-rate-limit-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-bandwidth-rate-limit-schedule-output
                    'make-describe-bandwidth-rate-limit-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cache-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cache-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-cache-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cache-input 'make-describe-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cache-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform common-lisp:nil
                         :type (common-lisp:or disk-ids common-lisp:null)
                         :accessor struct-shape-describe-cache-output-disk-ids
                         :shape "DiskIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-allocated-in-bytes :initarg
                         :cache-allocated-in-bytes :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-cache-allocated-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-used-percentage :initarg :cache-used-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:double-float
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-cache-used-percentage
                         :shape "double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-dirty-percentage :initarg
                         :cache-dirty-percentage :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:double-float
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-cache-dirty-percentage
                         :shape "double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-hit-percentage :initarg :cache-hit-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:double-float
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-cache-hit-percentage
                         :shape "double" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-miss-percentage :initarg :cache-miss-percentage
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:double-float
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-cache-output-cache-miss-percentage
                         :shape "double" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cache-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-cache-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cache-output 'make-describe-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "CacheAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-used-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheUsedPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-dirty-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheDirtyPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-hit-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheHitPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cache-miss-percentage))
      (common-lisp:list
       (common-lisp:cons "CacheMissPercentage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cache-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cachedi-scsivolumes-input common-lisp:nil
                       ((volume-arns :initarg :volume-arns :initform
                         (common-lisp:error ":volume-arns is required") :type
                         (common-lisp:or volume-arns common-lisp:null)
                         :accessor
                         struct-shape-describe-cachedi-scsivolumes-input-volume-arns
                         :shape "VolumeARNs" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cachedi-scsivolumes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-cachedi-scsivolumes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cachedi-scsivolumes-input
                    'make-describe-cachedi-scsivolumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "VolumeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-cachedi-scsivolumes-output common-lisp:nil
                       ((cachedi-scsivolumes :initarg :cachedi-scsivolumes
                         :initform common-lisp:nil :type
                         (common-lisp:or cachedi-scsivolumes common-lisp:null)
                         :accessor
                         struct-shape-describe-cachedi-scsivolumes-output-cachedi-scsivolumes
                         :shape "CachediSCSIVolumes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-cachedi-scsivolumes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-cachedi-scsivolumes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-cachedi-scsivolumes-output
                    'make-describe-cachedi-scsivolumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cachedi-scsivolumes))
      (common-lisp:list
       (common-lisp:cons "CachediSCSIVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-cachedi-scsivolumes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-chap-credentials-input common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-describe-chap-credentials-input-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-chap-credentials-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-chap-credentials-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-chap-credentials-input
                    'make-describe-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-chap-credentials-output common-lisp:nil
                       ((chap-credentials :initarg :chap-credentials :initform
                         common-lisp:nil :type
                         (common-lisp:or chap-credentials common-lisp:null)
                         :accessor
                         struct-shape-describe-chap-credentials-output-chap-credentials
                         :shape "ChapCredentials" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-chap-credentials-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-chap-credentials-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-chap-credentials-output
                    'make-describe-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-credentials))
      (common-lisp:list
       (common-lisp:cons "ChapCredentials"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-file-system-associations-input common-lisp:nil
                       ((file-system-association-arnlist :initarg
                         :file-system-association-arnlist :initform
                         (common-lisp:error
                          ":file-system-association-arnlist is required")
                         :type
                         (common-lisp:or file-system-association-arnlist
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-file-system-associations-input-file-system-association-arnlist
                         :shape "FileSystemAssociationARNList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-file-system-associations-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-file-system-associations-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-file-system-associations-input
                    'make-describe-file-system-associations-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arnlist))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-file-system-associations-output common-lisp:nil
                       ((file-system-association-info-list :initarg
                         :file-system-association-info-list :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-association-info-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-file-system-associations-output-file-system-association-info-list
                         :shape "FileSystemAssociationInfoList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-file-system-associations-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-file-system-associations-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-file-system-associations-output
                    'make-describe-file-system-associations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-info-list))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-file-system-associations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-gateway-information-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-gateway-information-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-gateway-information-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-gateway-information-input
                    'make-describe-gateway-information-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-gateway-information-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-id :initarg :gateway-id :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-id common-lisp:null) :accessor
                         struct-shape-describe-gateway-information-output-gateway-id
                         :shape "GatewayId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-name :initarg :gateway-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-timezone :initarg :gateway-timezone :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-timezone common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-timezone
                         :shape "GatewayTimezone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-state :initarg :gateway-state :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-state common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-state
                         :shape "GatewayState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-network-interfaces :initarg
                         :gateway-network-interfaces :initform common-lisp:nil
                         :type
                         (common-lisp:or gateway-network-interfaces
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-network-interfaces
                         :shape "GatewayNetworkInterfaces" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-type :initarg :gateway-type :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-type
                         :shape "GatewayType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-update-availability-date :initarg
                         :next-update-availability-date :initform
                         common-lisp:nil :type
                         (common-lisp:or next-update-availability-date
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-next-update-availability-date
                         :shape "NextUpdateAvailabilityDate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (last-software-update :initarg :last-software-update
                         :initform common-lisp:nil :type
                         (common-lisp:or last-software-update common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-last-software-update
                         :shape "LastSoftwareUpdate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2instance-id :initarg :ec2instance-id :initform
                         common-lisp:nil :type
                         (common-lisp:or ec2instance-id common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-ec2instance-id
                         :shape "Ec2InstanceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2instance-region :initarg :ec2instance-region
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2instance-region common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-ec2instance-region
                         :shape "Ec2InstanceRegion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-gateway-information-output-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vpcendpoint :initarg :vpcendpoint :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-vpcendpoint
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or cloud-watch-log-group-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-cloud-watch-log-group-arn
                         :shape "CloudWatchLogGroupARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (host-environment :initarg :host-environment :initform
                         common-lisp:nil :type
                         (common-lisp:or host-environment common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-host-environment
                         :shape "HostEnvironment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-type :initarg :endpoint-type :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-type common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-endpoint-type
                         :shape "EndpointType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (software-updates-end-date :initarg
                         :software-updates-end-date :initform common-lisp:nil
                         :type
                         (common-lisp:or software-updates-end-date
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-software-updates-end-date
                         :shape "SoftwareUpdatesEndDate" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (deprecation-date :initarg :deprecation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or deprecation-date common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-deprecation-date
                         :shape "DeprecationDate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-capacity :initarg :gateway-capacity :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-capacity common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-gateway-capacity
                         :shape "GatewayCapacity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (supported-gateway-capacities :initarg
                         :supported-gateway-capacities :initform
                         common-lisp:nil :type
                         (common-lisp:or supported-gateway-capacities
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-supported-gateway-capacities
                         :shape "SupportedGatewayCapacities" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (host-environment-id :initarg :host-environment-id
                         :initform common-lisp:nil :type
                         (common-lisp:or host-environment-id common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-host-environment-id
                         :shape "HostEnvironmentId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (software-version :initarg :software-version :initform
                         common-lisp:nil :type
                         (common-lisp:or software-version common-lisp:null)
                         :accessor
                         struct-shape-describe-gateway-information-output-software-version
                         :shape "SoftwareVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-gateway-information-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-gateway-information-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-gateway-information-output
                    'make-describe-gateway-information-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-state))
      (common-lisp:list
       (common-lisp:cons "GatewayState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-network-interfaces))
      (common-lisp:list
       (common-lisp:cons "GatewayNetworkInterfaces"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'next-update-availability-date))
      (common-lisp:list
       (common-lisp:cons "NextUpdateAvailabilityDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'last-software-update))
      (common-lisp:list
       (common-lisp:cons "LastSoftwareUpdate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-id))
      (common-lisp:list
       (common-lisp:cons "Ec2InstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-region))
      (common-lisp:list
       (common-lisp:cons "Ec2InstanceRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpcendpoint))
      (common-lisp:list
       (common-lisp:cons "VPCEndpoint"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-environment))
      (common-lisp:list
       (common-lisp:cons "HostEnvironment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'endpoint-type))
      (common-lisp:list
       (common-lisp:cons "EndpointType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'software-updates-end-date))
      (common-lisp:list
       (common-lisp:cons "SoftwareUpdatesEndDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deprecation-date))
      (common-lisp:list
       (common-lisp:cons "DeprecationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-capacity))
      (common-lisp:list
       (common-lisp:cons "GatewayCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'supported-gateway-capacities))
      (common-lisp:list
       (common-lisp:cons "SupportedGatewayCapacities"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-environment-id))
      (common-lisp:list
       (common-lisp:cons "HostEnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'software-version))
      (common-lisp:list
       (common-lisp:cons "SoftwareVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-maintenance-start-time-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-maintenance-start-time-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-maintenance-start-time-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-start-time-input
                    'make-describe-maintenance-start-time-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-maintenance-start-time-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hour-of-day :initarg :hour-of-day :initform
                         common-lisp:nil :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-hour-of-day
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (minute-of-hour :initarg :minute-of-hour :initform
                         common-lisp:nil :type
                         (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-minute-of-hour
                         :shape "MinuteOfHour" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (day-of-week :initarg :day-of-week :initform
                         common-lisp:nil :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-day-of-week
                         :shape "DayOfWeek" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (day-of-month :initarg :day-of-month :initform
                         common-lisp:nil :type
                         (common-lisp:or day-of-month common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-day-of-month
                         :shape "DayOfMonth" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type
                         (common-lisp:or gateway-timezone common-lisp:null)
                         :accessor
                         struct-shape-describe-maintenance-start-time-output-timezone
                         :shape "GatewayTimezone" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-maintenance-start-time-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-maintenance-start-time-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-maintenance-start-time-output
                    'make-describe-maintenance-start-time-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-nfsfile-shares-input common-lisp:nil
                       ((file-share-arnlist :initarg :file-share-arnlist
                         :initform
                         (common-lisp:error ":file-share-arnlist is required")
                         :type
                         (common-lisp:or file-share-arnlist common-lisp:null)
                         :accessor
                         struct-shape-describe-nfsfile-shares-input-file-share-arnlist
                         :shape "FileShareARNList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-nfsfile-shares-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-nfsfile-shares-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-nfsfile-shares-input
                    'make-describe-nfsfile-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arnlist))
      (common-lisp:list
       (common-lisp:cons "FileShareARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-nfsfile-shares-output common-lisp:nil
                       ((nfsfile-share-info-list :initarg
                         :nfsfile-share-info-list :initform common-lisp:nil
                         :type
                         (common-lisp:or nfsfile-share-info-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-nfsfile-shares-output-nfsfile-share-info-list
                         :shape "NFSFileShareInfoList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-nfsfile-shares-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-nfsfile-shares-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-nfsfile-shares-output
                    'make-describe-nfsfile-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-info-list))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-nfsfile-shares-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-smbfile-shares-input common-lisp:nil
                       ((file-share-arnlist :initarg :file-share-arnlist
                         :initform
                         (common-lisp:error ":file-share-arnlist is required")
                         :type
                         (common-lisp:or file-share-arnlist common-lisp:null)
                         :accessor
                         struct-shape-describe-smbfile-shares-input-file-share-arnlist
                         :shape "FileShareARNList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-smbfile-shares-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-smbfile-shares-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-smbfile-shares-input
                    'make-describe-smbfile-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arnlist))
      (common-lisp:list
       (common-lisp:cons "FileShareARNList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-smbfile-shares-output common-lisp:nil
                       ((smbfile-share-info-list :initarg
                         :smbfile-share-info-list :initform common-lisp:nil
                         :type
                         (common-lisp:or smbfile-share-info-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-smbfile-shares-output-smbfile-share-info-list
                         :shape "SMBFileShareInfoList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-smbfile-shares-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-smbfile-shares-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-smbfile-shares-output
                    'make-describe-smbfile-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'smbfile-share-info-list))
      (common-lisp:list
       (common-lisp:cons "SMBFileShareInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbfile-shares-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-smbsettings-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-smbsettings-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-smbsettings-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-smbsettings-input
                    'make-describe-smbsettings-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-smbsettings-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-name :initarg :domain-name :initform
                         common-lisp:nil :type
                         (common-lisp:or domain-name common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-output-domain-name
                         :shape "DomainName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (active-directory-status :initarg
                         :active-directory-status :initform common-lisp:nil
                         :type
                         (common-lisp:or active-directory-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-output-active-directory-status
                         :shape "ActiveDirectoryStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (smbguest-password-set :initarg :smbguest-password-set
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-describe-smbsettings-output-smbguest-password-set
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smbsecurity-strategy :initarg :smbsecurity-strategy
                         :initform common-lisp:nil :type
                         (common-lisp:or smbsecurity-strategy common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-output-smbsecurity-strategy
                         :shape "SMBSecurityStrategy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-shares-visible :initarg :file-shares-visible
                         :initform common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-describe-smbsettings-output-file-shares-visible
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smblocal-groups :initarg :smblocal-groups :initform
                         common-lisp:nil :type
                         (common-lisp:or smblocal-groups common-lisp:null)
                         :accessor
                         struct-shape-describe-smbsettings-output-smblocal-groups
                         :shape "SMBLocalGroups" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-smbsettings-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-smbsettings-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-smbsettings-output
                    'make-describe-smbsettings-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-directory-status))
      (common-lisp:list
       (common-lisp:cons "ActiveDirectoryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'smbguest-password-set))
      (common-lisp:list
       (common-lisp:cons "SMBGuestPasswordSet"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'smbsecurity-strategy))
      (common-lisp:list
       (common-lisp:cons "SMBSecurityStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-shares-visible))
      (common-lisp:list
       (common-lisp:cons "FileSharesVisible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smblocal-groups))
      (common-lisp:list
       (common-lisp:cons "SMBLocalGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-smbsettings-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-snapshot-schedule-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-describe-snapshot-schedule-input-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-snapshot-schedule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-snapshot-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-snapshot-schedule-input
                    'make-describe-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-snapshot-schedule-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-describe-snapshot-schedule-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-at :initarg :start-at :initform common-lisp:nil
                         :type (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-describe-snapshot-schedule-output-start-at
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recurrence-in-hours :initarg :recurrence-in-hours
                         :initform common-lisp:nil :type
                         (common-lisp:or recurrence-in-hours common-lisp:null)
                         :accessor
                         struct-shape-describe-snapshot-schedule-output-recurrence-in-hours
                         :shape "RecurrenceInHours" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-describe-snapshot-schedule-output-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timezone :initarg :timezone :initform common-lisp:nil
                         :type
                         (common-lisp:or gateway-timezone common-lisp:null)
                         :accessor
                         struct-shape-describe-snapshot-schedule-output-timezone
                         :shape "GatewayTimezone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-describe-snapshot-schedule-output-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-snapshot-schedule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-snapshot-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-snapshot-schedule-output
                    'make-describe-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-at))
      (common-lisp:list
       (common-lisp:cons "StartAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurrence-in-hours))
      (common-lisp:list
       (common-lisp:cons "RecurrenceInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timezone))
      (common-lisp:list
       (common-lisp:cons "Timezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storedi-scsivolumes-input common-lisp:nil
                       ((volume-arns :initarg :volume-arns :initform
                         (common-lisp:error ":volume-arns is required") :type
                         (common-lisp:or volume-arns common-lisp:null)
                         :accessor
                         struct-shape-describe-storedi-scsivolumes-input-volume-arns
                         :shape "VolumeARNs" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storedi-scsivolumes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storedi-scsivolumes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storedi-scsivolumes-input
                    'make-describe-storedi-scsivolumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arns))
      (common-lisp:list
       (common-lisp:cons "VolumeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-storedi-scsivolumes-output common-lisp:nil
                       ((storedi-scsivolumes :initarg :storedi-scsivolumes
                         :initform common-lisp:nil :type
                         (common-lisp:or storedi-scsivolumes common-lisp:null)
                         :accessor
                         struct-shape-describe-storedi-scsivolumes-output-storedi-scsivolumes
                         :shape "StorediSCSIVolumes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-storedi-scsivolumes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-storedi-scsivolumes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-storedi-scsivolumes-output
                    'make-describe-storedi-scsivolumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storedi-scsivolumes))
      (common-lisp:list
       (common-lisp:cons "StorediSCSIVolumes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-storedi-scsivolumes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tape-archives-input common-lisp:nil
                       ((tape-arns :initarg :tape-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-arns common-lisp:null) :accessor
                         struct-shape-describe-tape-archives-input-tape-arns
                         :shape "TapeARNs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-archives-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-archives-input-limit :shape
                         "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tape-archives-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-tape-archives-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tape-archives-input
                    'make-describe-tape-archives-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tape-archives-output common-lisp:nil
                       ((tape-archives :initarg :tape-archives :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-archives common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-archives-output-tape-archives
                         :shape "TapeArchives" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-archives-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tape-archives-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-tape-archives-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tape-archives-output
                    'make-describe-tape-archives-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-archives))
      (common-lisp:list
       (common-lisp:cons "TapeArchives"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-archives-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tape-recovery-points-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tape-recovery-points-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-tape-recovery-points-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tape-recovery-points-input
                    'make-describe-tape-recovery-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tape-recovery-points-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-recovery-point-infos :initarg
                         :tape-recovery-point-infos :initform common-lisp:nil
                         :type
                         (common-lisp:or tape-recovery-point-infos
                                         common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-output-tape-recovery-point-infos
                         :shape "TapeRecoveryPointInfos" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-tape-recovery-points-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tape-recovery-points-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-tape-recovery-points-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tape-recovery-points-output
                    'make-describe-tape-recovery-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tape-recovery-point-infos))
      (common-lisp:list
       (common-lisp:cons "TapeRecoveryPointInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tape-recovery-points-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tapes-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-tapes-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-arns :initarg :tape-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-arns common-lisp:null) :accessor
                         struct-shape-describe-tapes-input-tape-arns :shape
                         "TapeARNs" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-describe-tapes-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-describe-tapes-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tapes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-tapes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tapes-input 'make-describe-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input describe-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-tapes-output common-lisp:nil
                       ((tapes :initarg :tapes :initform common-lisp:nil :type
                         (common-lisp:or tapes common-lisp:null) :accessor
                         struct-shape-describe-tapes-output-tapes :shape
                         "Tapes" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-describe-tapes-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-tapes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-tapes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-tapes-output 'make-describe-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tapes))
      (common-lisp:list
       (common-lisp:cons "Tapes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-tapes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-upload-buffer-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-upload-buffer-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-upload-buffer-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-upload-buffer-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-upload-buffer-input
                    'make-describe-upload-buffer-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-upload-buffer-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-upload-buffer-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform common-lisp:nil
                         :type (common-lisp:or disk-ids common-lisp:null)
                         :accessor
                         struct-shape-describe-upload-buffer-output-disk-ids
                         :shape "DiskIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (upload-buffer-used-in-bytes :initarg
                         :upload-buffer-used-in-bytes :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-upload-buffer-output-upload-buffer-used-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (upload-buffer-allocated-in-bytes :initarg
                         :upload-buffer-allocated-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-upload-buffer-output-upload-buffer-allocated-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-upload-buffer-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-upload-buffer-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-upload-buffer-output
                    'make-describe-upload-buffer-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upload-buffer-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "UploadBufferUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'upload-buffer-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "UploadBufferAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-upload-buffer-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-vtldevices-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-vtldevices-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vtldevice-arns :initarg :vtldevice-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-arns common-lisp:null)
                         :accessor
                         struct-shape-describe-vtldevices-input-vtldevice-arns
                         :shape "VTLDeviceARNs" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-vtldevices-input-marker :shape
                         "Marker" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-describe-vtldevices-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-vtldevices-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-vtldevices-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-vtldevices-input
                    'make-describe-vtldevices-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arns))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-vtldevices-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-vtldevices-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vtldevices :initarg :vtldevices :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevices common-lisp:null) :accessor
                         struct-shape-describe-vtldevices-output-vtldevices
                         :shape "VTLDevices" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-describe-vtldevices-output-marker :shape
                         "Marker" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-vtldevices-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'describe-vtldevices-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-vtldevices-output
                    'make-describe-vtldevices-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevices))
      (common-lisp:list
       (common-lisp:cons "VTLDevices"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-vtldevices-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-working-storage-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-working-storage-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-working-storage-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-working-storage-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-working-storage-input
                    'make-describe-working-storage-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass describe-working-storage-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-describe-working-storage-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-ids :initarg :disk-ids :initform common-lisp:nil
                         :type (common-lisp:or disk-ids common-lisp:null)
                         :accessor
                         struct-shape-describe-working-storage-output-disk-ids
                         :shape "DiskIds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (working-storage-used-in-bytes :initarg
                         :working-storage-used-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-working-storage-output-working-storage-used-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (working-storage-allocated-in-bytes :initarg
                         :working-storage-allocated-in-bytes :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-describe-working-storage-output-working-storage-allocated-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-describe-working-storage-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'describe-working-storage-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'describe-working-storage-output
                    'make-describe-working-storage-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-ids))
      (common-lisp:list
       (common-lisp:cons "DiskIds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'working-storage-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "WorkingStorageUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'working-storage-allocated-in-bytes))
      (common-lisp:list
       (common-lisp:cons "WorkingStorageAllocatedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          describe-working-storage-output))
   common-lisp:nil))
(common-lisp:deftype description () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass detach-volume-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-detach-volume-input-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (force-detach :initarg :force-detach :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-detach-volume-input-force-detach :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-volume-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detach-volume-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detach-volume-input 'make-detach-volume-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detach-volume-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detach-volume-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-detach))
      (common-lisp:list
       (common-lisp:cons "ForceDetach"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detach-volume-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass detach-volume-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-detach-volume-output-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-detach-volume-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'detach-volume-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'detach-volume-output 'make-detach-volume-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input detach-volume-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input detach-volume-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input detach-volume-output))
   common-lisp:nil))
(common-lisp:deftype device-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass devicei-scsiattributes common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-devicei-scsiattributes-target-arn :shape
                         "TargetARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (network-interface-id :initarg :network-interface-id
                         :initform common-lisp:nil :type
                         (common-lisp:or network-interface-id common-lisp:null)
                         :accessor
                         struct-shape-devicei-scsiattributes-network-interface-id
                         :shape "NetworkInterfaceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (network-interface-port :initarg
                         :network-interface-port :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-devicei-scsiattributes-network-interface-port
                         :shape "integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chap-enabled :initarg :chap-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-devicei-scsiattributes-chap-enabled
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-devicei-scsiattributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'devicei-scsiattributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'devicei-scsiattributes 'make-devicei-scsiattributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-port))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfacePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-enabled))
      (common-lisp:list
       (common-lisp:cons "ChapEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          devicei-scsiattributes))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-disable-gateway-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-gateway-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disable-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-gateway-input 'make-disable-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disable-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-disable-gateway-output-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disable-gateway-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disable-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disable-gateway-output 'make-disable-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disable-gateway-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-file-system-input common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform
                         (common-lisp:error
                          ":file-system-association-arn is required")
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-file-system-input-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (force-delete :initarg :force-delete :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-disassociate-file-system-input-force-delete
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-file-system-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-file-system-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-file-system-input
                    'make-disassociate-file-system-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'force-delete))
      (common-lisp:list
       (common-lisp:cons "ForceDelete"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disassociate-file-system-output common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-disassociate-file-system-output-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disassociate-file-system-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'disassociate-file-system-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'disassociate-file-system-output
                    'make-disassociate-file-system-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          disassociate-file-system-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass disk common-lisp:nil
                       ((disk-id :initarg :disk-id :initform common-lisp:nil
                         :type (common-lisp:or disk-id common-lisp:null)
                         :accessor struct-shape-disk-disk-id :shape "DiskId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-path :initarg :disk-path :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-disk-disk-path :shape "string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-node :initarg :disk-node :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-disk-disk-node :shape "string"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-status :initarg :disk-status :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-disk-disk-status :shape
                         "string" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-size-in-bytes :initarg :disk-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor struct-shape-disk-disk-size-in-bytes :shape
                         "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (disk-allocation-type :initarg :disk-allocation-type
                         :initform common-lisp:nil :type
                         (common-lisp:or disk-allocation-type common-lisp:null)
                         :accessor struct-shape-disk-disk-allocation-type
                         :shape "DiskAllocationType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-allocation-resource :initarg
                         :disk-allocation-resource :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-disk-disk-allocation-resource
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disk-attribute-list :initarg :disk-attribute-list
                         :initform common-lisp:nil :type
                         (common-lisp:or disk-attribute-list common-lisp:null)
                         :accessor struct-shape-disk-disk-attribute-list :shape
                         "DiskAttributeList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-disk (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'disk
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'disk 'make-disk))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input disk))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-id))
      (common-lisp:list
       (common-lisp:cons "DiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-path))
      (common-lisp:list
       (common-lisp:cons "DiskPath"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-node))
      (common-lisp:list
       (common-lisp:cons "DiskNode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-status))
      (common-lisp:list
       (common-lisp:cons "DiskStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "DiskSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disk-allocation-type))
      (common-lisp:list
       (common-lisp:cons "DiskAllocationType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'disk-allocation-resource))
      (common-lisp:list
       (common-lisp:cons "DiskAllocationResource"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disk-attribute-list))
      (common-lisp:list
       (common-lisp:cons "DiskAttributeList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input disk))
   common-lisp:nil))
(common-lisp:deftype disk-allocation-type () 'common-lisp:string)
(common-lisp:deftype disk-attribute () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype disk-attribute-list ()
   '(trivial-types:proper-list disk-attribute))
 (common-lisp:defun make-disk-attribute-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk-attribute))
   aws-sdk/generator/shape::members))
(common-lisp:deftype disk-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype disk-ids () '(trivial-types:proper-list disk-id))
 (common-lisp:defun make-disk-ids
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype disks () '(trivial-types:proper-list disk))
 (common-lisp:defun make-disks
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list disk))
   aws-sdk/generator/shape::members))
(common-lisp:deftype domain-name () 'common-lisp:string)
(common-lisp:deftype domain-user-name () 'common-lisp:string)
(common-lisp:deftype domain-user-password () 'common-lisp:string)
(common-lisp:deftype double-object () 'common-lisp:double-float)
(common-lisp:deftype ec2instance-id () 'common-lisp:string)
(common-lisp:deftype ec2instance-region () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass endpoint-network-configuration common-lisp:nil
                       ((ip-addresses :initarg :ip-addresses :initform
                         common-lisp:nil :type
                         (common-lisp:or ip-address-list common-lisp:null)
                         :accessor
                         struct-shape-endpoint-network-configuration-ip-addresses
                         :shape "IpAddressList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-endpoint-network-configuration
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'endpoint-network-configuration
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'endpoint-network-configuration
                    'make-endpoint-network-configuration))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-network-configuration))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-network-configuration))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ip-addresses))
      (common-lisp:list
       (common-lisp:cons "IpAddresses"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          endpoint-network-configuration))
   common-lisp:nil))
(common-lisp:deftype endpoint-type () 'common-lisp:string)
(common-lisp:deftype error-code () 'common-lisp:string)
(common-lisp:deftype file-share-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype file-share-arnlist ()
   '(trivial-types:proper-list file-share-arn))
 (common-lisp:defun make-file-share-arnlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-share-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype file-share-client-list ()
   '(trivial-types:proper-list ipv4address-cidr))
 (common-lisp:defun make-file-share-client-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipv4address-cidr))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-share-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass file-share-info common-lisp:nil
                       ((file-share-type :initarg :file-share-type :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-type common-lisp:null)
                         :accessor struct-shape-file-share-info-file-share-type
                         :shape "FileShareType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor struct-shape-file-share-info-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-id :initarg :file-share-id :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-id common-lisp:null)
                         :accessor struct-shape-file-share-info-file-share-id
                         :shape "FileShareId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-status :initarg :file-share-status
                         :initform common-lisp:nil :type
                         (common-lisp:or file-share-status common-lisp:null)
                         :accessor
                         struct-shape-file-share-info-file-share-status :shape
                         "FileShareStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-file-share-info-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-file-share-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'file-share-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'file-share-info 'make-file-share-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input file-share-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input file-share-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-type))
      (common-lisp:list
       (common-lisp:cons "FileShareType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-id))
      (common-lisp:list
       (common-lisp:cons "FileShareId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-status))
      (common-lisp:list
       (common-lisp:cons "FileShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input file-share-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-share-info-list ()
   '(trivial-types:proper-list file-share-info))
 (common-lisp:defun make-file-share-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list file-share-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-share-name () 'common-lisp:string)
(common-lisp:deftype file-share-status () 'common-lisp:string)
(common-lisp:deftype file-share-type () 'common-lisp:string)
(common-lisp:deftype file-system-association-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype file-system-association-arnlist ()
   '(trivial-types:proper-list file-system-association-arn))
 (common-lisp:defun make-file-system-association-arnlist
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            file-system-association-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-system-association-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass file-system-association-info common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-location-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-location-arn
                         :shape "FileSystemLocationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (file-system-association-status :initarg
                         :file-system-association-status :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-association-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-file-system-association-status
                         :shape "FileSystemAssociationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-file-system-association-info-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (endpoint-network-configuration :initarg
                         :endpoint-network-configuration :initform
                         common-lisp:nil :type
                         (common-lisp:or endpoint-network-configuration
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-endpoint-network-configuration
                         :shape "EndpointNetworkConfiguration" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (file-system-association-status-details :initarg
                         :file-system-association-status-details :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-association-status-details
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-info-file-system-association-status-details
                         :shape "FileSystemAssociationStatusDetails" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-file-system-association-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'file-system-association-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'file-system-association-info
                    'make-file-system-association-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-status))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'endpoint-network-configuration))
      (common-lisp:list
       (common-lisp:cons "EndpointNetworkConfiguration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-status-details))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationStatusDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-system-association-info-list ()
   '(trivial-types:proper-list file-system-association-info))
 (common-lisp:defun make-file-system-association-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            file-system-association-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-system-association-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass file-system-association-status-detail common-lisp:nil
                       ((error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or
                          file-system-association-sync-error-code
                          common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-status-detail-error-code
                         :shape "FileSystemAssociationSyncErrorCode" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-file-system-association-status-detail
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'file-system-association-status-detail
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'file-system-association-status-detail
                    'make-file-system-association-status-detail))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-status-detail))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-status-detail))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "ErrorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-status-detail))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-system-association-status-details ()
   '(trivial-types:proper-list file-system-association-status-detail))
 (common-lisp:defun make-file-system-association-status-details
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            file-system-association-status-detail))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass file-system-association-summary common-lisp:nil
                       ((file-system-association-id :initarg
                         :file-system-association-id :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-id
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-summary-file-system-association-id
                         :shape "FileSystemAssociationId" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (file-system-association-arn :initarg
                         :file-system-association-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-summary-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (file-system-association-status :initarg
                         :file-system-association-status :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-association-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-summary-file-system-association-status
                         :shape "FileSystemAssociationStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-file-system-association-summary-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-file-system-association-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'file-system-association-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'file-system-association-summary
                    'make-file-system-association-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-id))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-status))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          file-system-association-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype file-system-association-summary-list ()
   '(trivial-types:proper-list file-system-association-summary))
 (common-lisp:defun make-file-system-association-summary-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            file-system-association-summary))
   aws-sdk/generator/shape::members))
(common-lisp:deftype file-system-association-sync-error-code ()
  'common-lisp:string)
(common-lisp:deftype file-system-location-arn () 'common-lisp:string)
(common-lisp:deftype folder () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype folder-list () '(trivial-types:proper-list folder))
 (common-lisp:defun make-folder-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list folder))
   aws-sdk/generator/shape::members))
(common-lisp:deftype gateway-arn () 'common-lisp:string)
(common-lisp:deftype gateway-capacity () 'common-lisp:string)
(common-lisp:deftype gateway-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass gateway-info common-lisp:nil
                       ((gateway-id :initarg :gateway-id :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-id common-lisp:null) :accessor
                         struct-shape-gateway-info-gateway-id :shape
                         "GatewayId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-gateway-info-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (gateway-type :initarg :gateway-type :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-type common-lisp:null)
                         :accessor struct-shape-gateway-info-gateway-type
                         :shape "GatewayType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-operational-state :initarg
                         :gateway-operational-state :initform common-lisp:nil
                         :type
                         (common-lisp:or gateway-operational-state
                                         common-lisp:null)
                         :accessor
                         struct-shape-gateway-info-gateway-operational-state
                         :shape "GatewayOperationalState" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-name :initarg :gateway-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-gateway-info-gateway-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2instance-id :initarg :ec2instance-id :initform
                         common-lisp:nil :type
                         (common-lisp:or ec2instance-id common-lisp:null)
                         :accessor struct-shape-gateway-info-ec2instance-id
                         :shape "Ec2InstanceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ec2instance-region :initarg :ec2instance-region
                         :initform common-lisp:nil :type
                         (common-lisp:or ec2instance-region common-lisp:null)
                         :accessor struct-shape-gateway-info-ec2instance-region
                         :shape "Ec2InstanceRegion" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (host-environment :initarg :host-environment :initform
                         common-lisp:nil :type
                         (common-lisp:or host-environment common-lisp:null)
                         :accessor struct-shape-gateway-info-host-environment
                         :shape "HostEnvironment" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (host-environment-id :initarg :host-environment-id
                         :initform common-lisp:nil :type
                         (common-lisp:or host-environment-id common-lisp:null)
                         :accessor
                         struct-shape-gateway-info-host-environment-id :shape
                         "HostEnvironmentId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deprecation-date :initarg :deprecation-date :initform
                         common-lisp:nil :type
                         (common-lisp:or deprecation-date common-lisp:null)
                         :accessor struct-shape-gateway-info-deprecation-date
                         :shape "DeprecationDate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (software-version :initarg :software-version :initform
                         common-lisp:nil :type
                         (common-lisp:or software-version common-lisp:null)
                         :accessor struct-shape-gateway-info-software-version
                         :shape "SoftwareVersion" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-gateway-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'gateway-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'gateway-info 'make-gateway-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input gateway-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input gateway-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-type))
      (common-lisp:list
       (common-lisp:cons "GatewayType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'gateway-operational-state))
      (common-lisp:list
       (common-lisp:cons "GatewayOperationalState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-id))
      (common-lisp:list
       (common-lisp:cons "Ec2InstanceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ec2instance-region))
      (common-lisp:list
       (common-lisp:cons "Ec2InstanceRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-environment))
      (common-lisp:list
       (common-lisp:cons "HostEnvironment"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'host-environment-id))
      (common-lisp:list
       (common-lisp:cons "HostEnvironmentId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deprecation-date))
      (common-lisp:list
       (common-lisp:cons "DeprecationDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'software-version))
      (common-lisp:list
       (common-lisp:cons "SoftwareVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input gateway-info))
   common-lisp:nil))
(common-lisp:deftype gateway-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateway-network-interfaces ()
   '(trivial-types:proper-list network-interface))
 (common-lisp:defun make-gateway-network-interfaces
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list network-interface))
   aws-sdk/generator/shape::members))
(common-lisp:deftype gateway-operational-state () 'common-lisp:string)
(common-lisp:deftype gateway-state () 'common-lisp:string)
(common-lisp:deftype gateway-timezone () 'common-lisp:string)
(common-lisp:deftype gateway-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype gateways () '(trivial-types:proper-list gateway-info))
 (common-lisp:defun make-gateways
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype host () 'common-lisp:string)
(common-lisp:deftype host-environment () 'common-lisp:string)
(common-lisp:deftype host-environment-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype hosts () '(trivial-types:proper-list host))
 (common-lisp:defun make-hosts
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list host))
   aws-sdk/generator/shape::members))
(common-lisp:deftype hour-of-day () 'common-lisp:integer)
(common-lisp:deftype ipv4address () 'common-lisp:string)
(common-lisp:deftype ipv4address-cidr () 'common-lisp:string)
(common-lisp:deftype initiator () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype initiators () '(trivial-types:proper-list initiator))
 (common-lisp:defun make-initiators
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list initiator))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition internal-server-error
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-server-error-message)
      (error :initarg :error :initform common-lisp:nil :reader
       internal-server-error-error)))
 (common-lisp:export
  (common-lisp:list 'internal-server-error 'internal-server-error-message
                    'internal-server-error-error)))
(common-lisp:progn
 (common-lisp:define-condition invalid-gateway-request-exception
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-gateway-request-exception-message)
      (error :initarg :error :initform common-lisp:nil :reader
       invalid-gateway-request-exception-error)))
 (common-lisp:export
  (common-lisp:list 'invalid-gateway-request-exception
                    'invalid-gateway-request-exception-message
                    'invalid-gateway-request-exception-error)))
(common-lisp:progn
 (common-lisp:deftype ip-address-list ()
   '(trivial-types:proper-list ipv4address))
 (common-lisp:defun make-ip-address-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list ipv4address))
   aws-sdk/generator/shape::members))
(common-lisp:deftype iqn-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass join-domain-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-join-domain-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-name :initarg :domain-name :initform
                         (common-lisp:error ":domain-name is required") :type
                         (common-lisp:or domain-name common-lisp:null)
                         :accessor struct-shape-join-domain-input-domain-name
                         :shape "DomainName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (organizational-unit :initarg :organizational-unit
                         :initform common-lisp:nil :type
                         (common-lisp:or organizational-unit common-lisp:null)
                         :accessor
                         struct-shape-join-domain-input-organizational-unit
                         :shape "OrganizationalUnit" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (domain-controllers :initarg :domain-controllers
                         :initform common-lisp:nil :type
                         (common-lisp:or hosts common-lisp:null) :accessor
                         struct-shape-join-domain-input-domain-controllers
                         :shape "Hosts" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timeout-in-seconds :initarg :timeout-in-seconds
                         :initform common-lisp:nil :type
                         (common-lisp:or timeout-in-seconds common-lisp:null)
                         :accessor
                         struct-shape-join-domain-input-timeout-in-seconds
                         :shape "TimeoutInSeconds" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-name :initarg :user-name :initform
                         (common-lisp:error ":user-name is required") :type
                         (common-lisp:or domain-user-name common-lisp:null)
                         :accessor struct-shape-join-domain-input-user-name
                         :shape "DomainUserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or domain-user-password common-lisp:null)
                         :accessor struct-shape-join-domain-input-password
                         :shape "DomainUserPassword" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-join-domain-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'join-domain-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'join-domain-input 'make-join-domain-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input join-domain-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input join-domain-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-name))
      (common-lisp:list
       (common-lisp:cons "DomainName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'organizational-unit))
      (common-lisp:list
       (common-lisp:cons "OrganizationalUnit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'domain-controllers))
      (common-lisp:list
       (common-lisp:cons "DomainControllers"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timeout-in-seconds))
      (common-lisp:list
       (common-lisp:cons "TimeoutInSeconds"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-name))
      (common-lisp:list
       (common-lisp:cons "UserName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input join-domain-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass join-domain-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-join-domain-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (active-directory-status :initarg
                         :active-directory-status :initform common-lisp:nil
                         :type
                         (common-lisp:or active-directory-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-join-domain-output-active-directory-status
                         :shape "ActiveDirectoryStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-join-domain-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'join-domain-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'join-domain-output 'make-join-domain-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input join-domain-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input join-domain-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'active-directory-status))
      (common-lisp:list
       (common-lisp:cons "ActiveDirectoryStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input join-domain-output))
   common-lisp:nil))
(common-lisp:deftype kmskey () 'common-lisp:string)
(common-lisp:deftype last-software-update () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass list-automatic-tape-creation-policies-input
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-automatic-tape-creation-policies-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-automatic-tape-creation-policies-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-automatic-tape-creation-policies-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-automatic-tape-creation-policies-input
                    'make-list-automatic-tape-creation-policies-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-automatic-tape-creation-policies-output
                       common-lisp:nil
                       ((automatic-tape-creation-policy-infos :initarg
                         :automatic-tape-creation-policy-infos :initform
                         common-lisp:nil :type
                         (common-lisp:or automatic-tape-creation-policy-infos
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-automatic-tape-creation-policies-output-automatic-tape-creation-policy-infos
                         :shape "AutomaticTapeCreationPolicyInfos" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-automatic-tape-creation-policies-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-automatic-tape-creation-policies-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-automatic-tape-creation-policies-output
                    'make-list-automatic-tape-creation-policies-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-tape-creation-policy-infos))
      (common-lisp:list
       (common-lisp:cons "AutomaticTapeCreationPolicyInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-automatic-tape-creation-policies-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-file-shares-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-file-shares-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-list-file-shares-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-file-shares-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-file-shares-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-file-shares-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-file-shares-input 'make-list-file-shares-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-file-shares-output common-lisp:nil
                       ((marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-file-shares-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-marker :initarg :next-marker :initform
                         common-lisp:nil :type
                         (common-lisp:or marker common-lisp:null) :accessor
                         struct-shape-list-file-shares-output-next-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-info-list :initarg :file-share-info-list
                         :initform common-lisp:nil :type
                         (common-lisp:or file-share-info-list common-lisp:null)
                         :accessor
                         struct-shape-list-file-shares-output-file-share-info-list
                         :shape "FileShareInfoList" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-file-shares-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-file-shares-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-file-shares-output 'make-list-file-shares-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-share-info-list))
      (common-lisp:list
       (common-lisp:cons "FileShareInfoList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-shares-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-file-system-associations-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-file-system-associations-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor
                         struct-shape-list-file-system-associations-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-list-file-system-associations-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-file-system-associations-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-file-system-associations-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-file-system-associations-input
                    'make-list-file-system-associations-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-file-system-associations-output common-lisp:nil
                       ((marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-list-file-system-associations-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-marker :initarg :next-marker :initform
                         common-lisp:nil :type
                         (common-lisp:or marker common-lisp:null) :accessor
                         struct-shape-list-file-system-associations-output-next-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-system-association-summary-list :initarg
                         :file-system-association-summary-list :initform
                         common-lisp:nil :type
                         (common-lisp:or file-system-association-summary-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-file-system-associations-output-file-system-association-summary-list
                         :shape "FileSystemAssociationSummaryList" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-file-system-associations-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-file-system-associations-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-file-system-associations-output
                    'make-list-file-system-associations-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-marker))
      (common-lisp:list
       (common-lisp:cons "NextMarker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-summary-list))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationSummaryList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-file-system-associations-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-gateways-input common-lisp:nil
                       ((marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-gateways-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-list-gateways-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-gateways-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-gateways-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-gateways-input 'make-list-gateways-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-gateways-output common-lisp:nil
                       ((gateways :initarg :gateways :initform common-lisp:nil
                         :type (common-lisp:or gateways common-lisp:null)
                         :accessor struct-shape-list-gateways-output-gateways
                         :shape "Gateways" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-gateways-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-gateways-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-gateways-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-gateways-output 'make-list-gateways-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-gateways-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateways))
      (common-lisp:list
       (common-lisp:cons "Gateways"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-gateways-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-local-disks-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-local-disks-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-local-disks-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-local-disks-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-local-disks-input 'make-list-local-disks-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-local-disks-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-local-disks-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (disks :initarg :disks :initform common-lisp:nil :type
                         (common-lisp:or disks common-lisp:null) :accessor
                         struct-shape-list-local-disks-output-disks :shape
                         "Disks" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-local-disks-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-local-disks-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-local-disks-output 'make-list-local-disks-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'disks))
      (common-lisp:list
       (common-lisp:cons "Disks"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-local-disks-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-input-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-input-limit :shape
                         "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tags-for-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-input
                    'make-list-tags-for-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tags-for-resource-output common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-output-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor
                         struct-shape-list-tags-for-resource-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-list-tags-for-resource-output-tags :shape
                         "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tags-for-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-tags-for-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tags-for-resource-output
                    'make-list-tags-for-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tags-for-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tape-pools-input common-lisp:nil
                       ((pool-arns :initarg :pool-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-arns common-lisp:null) :accessor
                         struct-shape-list-tape-pools-input-pool-arns :shape
                         "PoolARNs" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-tape-pools-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-list-tape-pools-input-limit
                         :shape "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tape-pools-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tape-pools-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tape-pools-input 'make-list-tape-pools-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-arns))
      (common-lisp:list
       (common-lisp:cons "PoolARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tape-pools-output common-lisp:nil
                       ((pool-infos :initarg :pool-infos :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-infos common-lisp:null) :accessor
                         struct-shape-list-tape-pools-output-pool-infos :shape
                         "PoolInfos" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-tape-pools-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tape-pools-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tape-pools-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tape-pools-output 'make-list-tape-pools-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-infos))
      (common-lisp:list
       (common-lisp:cons "PoolInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-tape-pools-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tapes-input common-lisp:nil
                       ((tape-arns :initarg :tape-arns :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-arns common-lisp:null) :accessor
                         struct-shape-list-tapes-input-tape-arns :shape
                         "TapeARNs" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-tapes-input-marker :shape
                         "Marker" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-list-tapes-input-limit :shape
                         "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tapes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tapes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tapes-input 'make-list-tapes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tapes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tapes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arns))
      (common-lisp:list
       (common-lisp:cons "TapeARNs"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tapes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-tapes-output common-lisp:nil
                       ((tape-infos :initarg :tape-infos :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-infos common-lisp:null) :accessor
                         struct-shape-list-tapes-output-tape-infos :shape
                         "TapeInfos" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-tapes-output-marker :shape
                         "Marker" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-tapes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-tapes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-tapes-output 'make-list-tapes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-tapes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-tapes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-infos))
      (common-lisp:list
       (common-lisp:cons "TapeInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-tapes-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volume-initiators-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-list-volume-initiators-input-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volume-initiators-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-volume-initiators-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volume-initiators-input
                    'make-list-volume-initiators-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volume-initiators-output common-lisp:nil
                       ((initiators :initarg :initiators :initform
                         common-lisp:nil :type
                         (common-lisp:or initiators common-lisp:null) :accessor
                         struct-shape-list-volume-initiators-output-initiators
                         :shape "Initiators" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volume-initiators-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-volume-initiators-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volume-initiators-output
                    'make-list-volume-initiators-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiators))
      (common-lisp:list
       (common-lisp:cons "Initiators"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-initiators-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volume-recovery-points-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-volume-recovery-points-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volume-recovery-points-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-volume-recovery-points-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volume-recovery-points-input
                    'make-list-volume-recovery-points-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volume-recovery-points-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-list-volume-recovery-points-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-recovery-point-infos :initarg
                         :volume-recovery-point-infos :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-recovery-point-infos
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-volume-recovery-points-output-volume-recovery-point-infos
                         :shape "VolumeRecoveryPointInfos" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volume-recovery-points-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-volume-recovery-points-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volume-recovery-points-output
                    'make-list-volume-recovery-points-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-infos))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-volume-recovery-points-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volumes-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-list-volumes-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-volumes-input-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (limit :initarg :limit :initform common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor struct-shape-list-volumes-input-limit :shape
                         "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volumes-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-volumes-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volumes-input 'make-list-volumes-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-volumes-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-volumes-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'limit))
      (common-lisp:list
       (common-lisp:cons "Limit"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-volumes-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-volumes-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-list-volumes-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (marker :initarg :marker :initform common-lisp:nil
                         :type (common-lisp:or marker common-lisp:null)
                         :accessor struct-shape-list-volumes-output-marker
                         :shape "Marker" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-infos :initarg :volume-infos :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-infos common-lisp:null)
                         :accessor
                         struct-shape-list-volumes-output-volume-infos :shape
                         "VolumeInfos" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-volumes-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'list-volumes-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-volumes-output 'make-list-volumes-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input list-volumes-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input list-volumes-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'marker))
      (common-lisp:list
       (common-lisp:cons "Marker"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-infos))
      (common-lisp:list
       (common-lisp:cons "VolumeInfos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input list-volumes-output))
   common-lisp:nil))
(common-lisp:deftype local-console-password () 'common-lisp:string)
(common-lisp:deftype location-arn () 'common-lisp:string)
(common-lisp:deftype marker () 'common-lisp:string)
(common-lisp:deftype medium-changer-type () 'common-lisp:string)
(common-lisp:deftype minimum-num-tapes () 'common-lisp:integer)
(common-lisp:deftype minute-of-hour () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass nfsfile-share-defaults common-lisp:nil
                       ((file-mode :initarg :file-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-mode common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-defaults-file-mode :shape
                         "PermissionMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (directory-mode :initarg :directory-mode :initform
                         common-lisp:nil :type
                         (common-lisp:or permission-mode common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-defaults-directory-mode
                         :shape "PermissionMode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (group-id :initarg :group-id :initform common-lisp:nil
                         :type (common-lisp:or permission-id common-lisp:null)
                         :accessor struct-shape-nfsfile-share-defaults-group-id
                         :shape "PermissionId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (owner-id :initarg :owner-id :initform common-lisp:nil
                         :type (common-lisp:or permission-id common-lisp:null)
                         :accessor struct-shape-nfsfile-share-defaults-owner-id
                         :shape "PermissionId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-nfsfile-share-defaults
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'nfsfile-share-defaults
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'nfsfile-share-defaults 'make-nfsfile-share-defaults))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-mode))
      (common-lisp:list
       (common-lisp:cons "FileMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'directory-mode))
      (common-lisp:list
       (common-lisp:cons "DirectoryMode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'group-id))
      (common-lisp:list
       (common-lisp:cons "GroupId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'owner-id))
      (common-lisp:list
       (common-lisp:cons "OwnerId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          nfsfile-share-defaults))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass nfsfile-share-info common-lisp:nil
                       ((nfsfile-share-defaults :initarg
                         :nfsfile-share-defaults :initform common-lisp:nil
                         :type
                         (common-lisp:or nfsfile-share-defaults
                                         common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-nfsfile-share-defaults
                         :shape "NFSFileShareDefaults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-file-share-arn :shape
                         "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-id :initarg :file-share-id :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-id common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-file-share-id :shape
                         "FileShareId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-status :initarg :file-share-status
                         :initform common-lisp:nil :type
                         (common-lisp:or file-share-status common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-file-share-status
                         :shape "FileShareStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-kmsencrypted
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or path common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-path :shape "Path"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or role common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-role :shape "Role"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-location-arn
                         :shape "LocationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-object-acl :shape
                         "ObjectACL" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (client-list :initarg :client-list :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-client-list
                                         common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-client-list
                         :shape "FileShareClientList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (squash :initarg :squash :initform common-lisp:nil
                         :type (common-lisp:or squash common-lisp:null)
                         :accessor struct-shape-nfsfile-share-info-squash
                         :shape "Squash" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-read-only :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-requester-pays :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-file-share-name :shape
                         "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpcendpoint-dnsname :initarg :vpcendpoint-dnsname
                         :initform common-lisp:nil :type
                         (common-lisp:or dnshost-name common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-vpcendpoint-dnsname
                         :shape "DNSHostName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-region :initarg :bucket-region :initform
                         common-lisp:nil :type
                         (common-lisp:or region-id common-lisp:null) :accessor
                         struct-shape-nfsfile-share-info-bucket-region :shape
                         "RegionId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-nfsfile-share-info-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-nfsfile-share-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'nfsfile-share-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'nfsfile-share-info 'make-nfsfile-share-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-id))
      (common-lisp:list
       (common-lisp:cons "FileShareId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-status))
      (common-lisp:list
       (common-lisp:cons "FileShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpcendpoint-dnsname))
      (common-lisp:list
       (common-lisp:cons "VPCEndpointDNSName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-region))
      (common-lisp:list
       (common-lisp:cons "BucketRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input nfsfile-share-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype nfsfile-share-info-list ()
   '(trivial-types:proper-list nfsfile-share-info))
 (common-lisp:defun make-nfsfile-share-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list nfsfile-share-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass network-interface common-lisp:nil
                       ((ipv4address :initarg :ipv4address :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-network-interface-ipv4address
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (mac-address :initarg :mac-address :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-network-interface-mac-address
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (ipv6address :initarg :ipv6address :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor struct-shape-network-interface-ipv6address
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-network-interface
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'network-interface
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'network-interface 'make-network-interface))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input network-interface))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input network-interface))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipv4address))
      (common-lisp:list
       (common-lisp:cons "Ipv4Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'mac-address))
      (common-lisp:list
       (common-lisp:cons "MacAddress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'ipv6address))
      (common-lisp:list
       (common-lisp:cons "Ipv6Address"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input network-interface))
   common-lisp:nil))
(common-lisp:deftype network-interface-id () 'common-lisp:string)
(common-lisp:deftype next-update-availability-date () 'common-lisp:string)
(common-lisp:deftype notification-id () 'common-lisp:string)
(common-lisp:deftype notification-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass notify-when-uploaded-input common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         (common-lisp:error ":file-share-arn is required")
                         :type (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-notify-when-uploaded-input-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notify-when-uploaded-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notify-when-uploaded-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notify-when-uploaded-input
                    'make-notify-when-uploaded-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass notify-when-uploaded-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-notify-when-uploaded-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-id :initarg :notification-id :initform
                         common-lisp:nil :type
                         (common-lisp:or notification-id common-lisp:null)
                         :accessor
                         struct-shape-notify-when-uploaded-output-notification-id
                         :shape "NotificationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-notify-when-uploaded-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'notify-when-uploaded-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'notify-when-uploaded-output
                    'make-notify-when-uploaded-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-id))
      (common-lisp:list
       (common-lisp:cons "NotificationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          notify-when-uploaded-output))
   common-lisp:nil))
(common-lisp:deftype num-tapes-to-create () 'common-lisp:integer)
(common-lisp:deftype object-acl () 'common-lisp:string)
(common-lisp:deftype organizational-unit () 'common-lisp:string)
(common-lisp:deftype path () 'common-lisp:string)
(common-lisp:deftype permission-id () 'common-lisp:integer)
(common-lisp:deftype permission-mode () 'common-lisp:string)
(common-lisp:deftype pool-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype pool-arns () '(trivial-types:proper-list pool-arn))
 (common-lisp:defun make-pool-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pool-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pool-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass pool-info common-lisp:nil
                       ((pool-arn :initarg :pool-arn :initform common-lisp:nil
                         :type (common-lisp:or pool-arn common-lisp:null)
                         :accessor struct-shape-pool-info-pool-arn :shape
                         "PoolARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-name :initarg :pool-name :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-name common-lisp:null) :accessor
                         struct-shape-pool-info-pool-name :shape "PoolName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (storage-class :initarg :storage-class :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-storage-class common-lisp:null)
                         :accessor struct-shape-pool-info-storage-class :shape
                         "TapeStorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-lock-type :initarg :retention-lock-type
                         :initform common-lisp:nil :type
                         (common-lisp:or retention-lock-type common-lisp:null)
                         :accessor struct-shape-pool-info-retention-lock-type
                         :shape "RetentionLockType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (retention-lock-time-in-days :initarg
                         :retention-lock-time-in-days :initform common-lisp:nil
                         :type
                         (common-lisp:or retention-lock-time-in-days
                                         common-lisp:null)
                         :accessor
                         struct-shape-pool-info-retention-lock-time-in-days
                         :shape "RetentionLockTimeInDays" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (pool-status :initarg :pool-status :initform
                         common-lisp:nil :type
                         (common-lisp:or pool-status common-lisp:null)
                         :accessor struct-shape-pool-info-pool-status :shape
                         "PoolStatus" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-pool-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'pool-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'pool-info 'make-pool-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input pool-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input pool-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-arn))
      (common-lisp:list
       (common-lisp:cons "PoolARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-name))
      (common-lisp:list
       (common-lisp:cons "PoolName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'storage-class))
      (common-lisp:list
       (common-lisp:cons "StorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retention-lock-type))
      (common-lisp:list
       (common-lisp:cons "RetentionLockType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-lock-time-in-days))
      (common-lisp:list
       (common-lisp:cons "RetentionLockTimeInDays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-status))
      (common-lisp:list
       (common-lisp:cons "PoolStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input pool-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype pool-infos () '(trivial-types:proper-list pool-info))
 (common-lisp:defun make-pool-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list pool-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype pool-name () 'common-lisp:string)
(common-lisp:deftype pool-status () 'common-lisp:string)
(common-lisp:deftype positive-int-object () 'common-lisp:integer)
(common-lisp:deftype recurrence-in-hours () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass refresh-cache-input common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         (common-lisp:error ":file-share-arn is required")
                         :type (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-refresh-cache-input-file-share-arn :shape
                         "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (folder-list :initarg :folder-list :initform
                         common-lisp:nil :type
                         (common-lisp:or folder-list common-lisp:null)
                         :accessor struct-shape-refresh-cache-input-folder-list
                         :shape "FolderList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recursive :initarg :recursive :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-refresh-cache-input-recursive :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-refresh-cache-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'refresh-cache-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'refresh-cache-input 'make-refresh-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'folder-list))
      (common-lisp:list
       (common-lisp:cons "FolderList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recursive))
      (common-lisp:list
       (common-lisp:cons "Recursive"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass refresh-cache-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-refresh-cache-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-id :initarg :notification-id :initform
                         common-lisp:nil :type
                         (common-lisp:or notification-id common-lisp:null)
                         :accessor
                         struct-shape-refresh-cache-output-notification-id
                         :shape "NotificationId" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-refresh-cache-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'refresh-cache-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'refresh-cache-output 'make-refresh-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-id))
      (common-lisp:list
       (common-lisp:cons "NotificationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input refresh-cache-output))
   common-lisp:nil))
(common-lisp:deftype region-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass remove-tags-from-resource-input common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         (common-lisp:error ":resource-arn is required") :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-remove-tags-from-resource-input-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tag-keys :initarg :tag-keys :initform
                         (common-lisp:error ":tag-keys is required") :type
                         (common-lisp:or tag-keys common-lisp:null) :accessor
                         struct-shape-remove-tags-from-resource-input-tag-keys
                         :shape "TagKeys" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-tags-from-resource-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-tags-from-resource-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-input
                    'make-remove-tags-from-resource-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tag-keys))
      (common-lisp:list
       (common-lisp:cons "TagKeys"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass remove-tags-from-resource-output common-lisp:nil
                       ((resource-arn :initarg :resource-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or resource-arn common-lisp:null)
                         :accessor
                         struct-shape-remove-tags-from-resource-output-resource-arn
                         :shape "ResourceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-remove-tags-from-resource-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'remove-tags-from-resource-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'remove-tags-from-resource-output
                    'make-remove-tags-from-resource-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'resource-arn))
      (common-lisp:list
       (common-lisp:cons "ResourceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          remove-tags-from-resource-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reset-cache-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-reset-cache-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-cache-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reset-cache-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-cache-input 'make-reset-cache-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-cache-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-cache-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-cache-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass reset-cache-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-reset-cache-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-reset-cache-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'reset-cache-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'reset-cache-output 'make-reset-cache-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input reset-cache-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input reset-cache-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input reset-cache-output))
   common-lisp:nil))
(common-lisp:deftype resource-arn () 'common-lisp:string)
(common-lisp:deftype retention-lock-time-in-days () 'common-lisp:integer)
(common-lisp:deftype retention-lock-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass retrieve-tape-archive-input common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-retrieve-tape-archive-input-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-retrieve-tape-archive-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retrieve-tape-archive-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retrieve-tape-archive-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-archive-input
                    'make-retrieve-tape-archive-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass retrieve-tape-archive-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-retrieve-tape-archive-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retrieve-tape-archive-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retrieve-tape-archive-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-archive-output
                    'make-retrieve-tape-archive-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-archive-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass retrieve-tape-recovery-point-input common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform
                         (common-lisp:error ":tape-arn is required") :type
                         (common-lisp:or tape-arn common-lisp:null) :accessor
                         struct-shape-retrieve-tape-recovery-point-input-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-retrieve-tape-recovery-point-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retrieve-tape-recovery-point-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'retrieve-tape-recovery-point-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-recovery-point-input
                    'make-retrieve-tape-recovery-point-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass retrieve-tape-recovery-point-output common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-retrieve-tape-recovery-point-output-tape-arn
                         :shape "TapeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retrieve-tape-recovery-point-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'retrieve-tape-recovery-point-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retrieve-tape-recovery-point-output
                    'make-retrieve-tape-recovery-point-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retrieve-tape-recovery-point-output))
   common-lisp:nil))
(common-lisp:deftype role () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass smbfile-share-info common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-file-share-arn :shape
                         "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-id :initarg :file-share-id :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-id common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-file-share-id :shape
                         "FileShareId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-status :initarg :file-share-status
                         :initform common-lisp:nil :type
                         (common-lisp:or file-share-status common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-file-share-status
                         :shape "FileShareStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-smbfile-share-info-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor struct-shape-smbfile-share-info-kmsencrypted
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-smbfile-share-info-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (path :initarg :path :initform common-lisp:nil :type
                         (common-lisp:or path common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-path :shape "Path"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (role :initarg :role :initform common-lisp:nil :type
                         (common-lisp:or role common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-role :shape "Role"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (location-arn :initarg :location-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or location-arn common-lisp:null)
                         :accessor struct-shape-smbfile-share-info-location-arn
                         :shape "LocationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-object-acl :shape
                         "ObjectACL" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-read-only :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-requester-pays :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (smbaclenabled :initarg :smbaclenabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-smbaclenabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (access-based-enumeration :initarg
                         :access-based-enumeration :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-access-based-enumeration
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (admin-user-list :initarg :admin-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-admin-user-list :shape
                         "UserList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (valid-user-list :initarg :valid-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-valid-user-list :shape
                         "UserList" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (invalid-user-list :initarg :invalid-user-list
                         :initform common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-invalid-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (authentication :initarg :authentication :initform
                         common-lisp:nil :type
                         (common-lisp:or authentication common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-authentication :shape
                         "Authentication" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (case-sensitivity :initarg :case-sensitivity :initform
                         common-lisp:nil :type
                         (common-lisp:or case-sensitivity common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-case-sensitivity
                         :shape "CaseSensitivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-tags :shape "Tags"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-file-share-name :shape
                         "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vpcendpoint-dnsname :initarg :vpcendpoint-dnsname
                         :initform common-lisp:nil :type
                         (common-lisp:or dnshost-name common-lisp:null)
                         :accessor
                         struct-shape-smbfile-share-info-vpcendpoint-dnsname
                         :shape "DNSHostName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bucket-region :initarg :bucket-region :initform
                         common-lisp:nil :type
                         (common-lisp:or region-id common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-bucket-region :shape
                         "RegionId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (oplocks-enabled :initarg :oplocks-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-smbfile-share-info-oplocks-enabled :shape
                         "Boolean" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smbfile-share-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smbfile-share-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'smbfile-share-info 'make-smbfile-share-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smbfile-share-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smbfile-share-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-id))
      (common-lisp:list
       (common-lisp:cons "FileShareId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-status))
      (common-lisp:list
       (common-lisp:cons "FileShareStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'path))
      (common-lisp:list
       (common-lisp:cons "Path"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'role))
      (common-lisp:list
       (common-lisp:cons "Role"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'location-arn))
      (common-lisp:list
       (common-lisp:cons "LocationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smbaclenabled))
      (common-lisp:list
       (common-lisp:cons "SMBACLEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-based-enumeration))
      (common-lisp:list
       (common-lisp:cons "AccessBasedEnumeration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-user-list))
      (common-lisp:list
       (common-lisp:cons "AdminUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'valid-user-list))
      (common-lisp:list
       (common-lisp:cons "ValidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invalid-user-list))
      (common-lisp:list
       (common-lisp:cons "InvalidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'authentication))
      (common-lisp:list
       (common-lisp:cons "Authentication"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'case-sensitivity))
      (common-lisp:list
       (common-lisp:cons "CaseSensitivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vpcendpoint-dnsname))
      (common-lisp:list
       (common-lisp:cons "VPCEndpointDNSName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'bucket-region))
      (common-lisp:list
       (common-lisp:cons "BucketRegion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oplocks-enabled))
      (common-lisp:list
       (common-lisp:cons "OplocksEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smbfile-share-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype smbfile-share-info-list ()
   '(trivial-types:proper-list smbfile-share-info))
 (common-lisp:defun make-smbfile-share-info-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list smbfile-share-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype smbguest-password () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass smblocal-groups common-lisp:nil
                       ((gateway-admins :initarg :gateway-admins :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-smblocal-groups-gateway-admins :shape
                         "UserList" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-smblocal-groups
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'smblocal-groups
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'smblocal-groups 'make-smblocal-groups))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input smblocal-groups))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input smblocal-groups))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-admins))
      (common-lisp:list
       (common-lisp:cons "GatewayAdmins"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input smblocal-groups))
   common-lisp:nil))
(common-lisp:deftype smbsecurity-strategy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-error
     (storagegateway-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-error-message)
      (error :initarg :error :initform common-lisp:nil :reader
       service-unavailable-error-error)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-error
                    'service-unavailable-error-message
                    'service-unavailable-error-error)))
(common-lisp:progn
 (common-lisp:defclass set-local-console-password-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-set-local-console-password-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (local-console-password :initarg
                         :local-console-password :initform
                         (common-lisp:error
                          ":local-console-password is required")
                         :type
                         (common-lisp:or local-console-password
                                         common-lisp:null)
                         :accessor
                         struct-shape-set-local-console-password-input-local-console-password
                         :shape "LocalConsolePassword" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-local-console-password-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'set-local-console-password-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-local-console-password-input
                    'make-set-local-console-password-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'local-console-password))
      (common-lisp:list
       (common-lisp:cons "LocalConsolePassword"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-local-console-password-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-set-local-console-password-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-local-console-password-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'set-local-console-password-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-local-console-password-output
                    'make-set-local-console-password-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-local-console-password-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-smbguest-password-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-set-smbguest-password-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform
                         (common-lisp:error ":password is required") :type
                         (common-lisp:or smbguest-password common-lisp:null)
                         :accessor
                         struct-shape-set-smbguest-password-input-password
                         :shape "SMBGuestPassword" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-smbguest-password-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-smbguest-password-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-smbguest-password-input
                    'make-set-smbguest-password-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass set-smbguest-password-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-set-smbguest-password-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-set-smbguest-password-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'set-smbguest-password-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'set-smbguest-password-output
                    'make-set-smbguest-password-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          set-smbguest-password-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass shutdown-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-shutdown-gateway-input-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-shutdown-gateway-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'shutdown-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'shutdown-gateway-input 'make-shutdown-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass shutdown-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-shutdown-gateway-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-shutdown-gateway-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'shutdown-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'shutdown-gateway-output 'make-shutdown-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          shutdown-gateway-output))
   common-lisp:nil))
(common-lisp:deftype snapshot-description () 'common-lisp:string)
(common-lisp:deftype snapshot-id () 'common-lisp:string)
(common-lisp:deftype software-updates-end-date () 'common-lisp:string)
(common-lisp:deftype software-version () 'common-lisp:string)
(common-lisp:deftype squash () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass start-availability-monitor-test-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-start-availability-monitor-test-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-availability-monitor-test-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-availability-monitor-test-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-availability-monitor-test-input
                    'make-start-availability-monitor-test-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-availability-monitor-test-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-start-availability-monitor-test-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-availability-monitor-test-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'start-availability-monitor-test-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-availability-monitor-test-output
                    'make-start-availability-monitor-test-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          start-availability-monitor-test-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-gateway-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-start-gateway-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-gateway-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-gateway-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-gateway-input 'make-start-gateway-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-gateway-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-gateway-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-gateway-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass start-gateway-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-start-gateway-output-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-start-gateway-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'start-gateway-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'start-gateway-output 'make-start-gateway-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input start-gateway-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input start-gateway-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input start-gateway-output))
   common-lisp:nil))
(common-lisp:deftype storage-class () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass storage-gateway-error common-lisp:nil
                       ((error-code :initarg :error-code :initform
                         common-lisp:nil :type
                         (common-lisp:or error-code common-lisp:null) :accessor
                         struct-shape-storage-gateway-error-error-code :shape
                         "ErrorCode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (error-details :initarg :error-details :initform
                         common-lisp:nil :type
                         (common-lisp:or |errorDetails| common-lisp:null)
                         :accessor
                         struct-shape-storage-gateway-error-error-details
                         :shape "errorDetails" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-storage-gateway-error
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'storage-gateway-error
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'storage-gateway-error 'make-storage-gateway-error))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-code))
      (common-lisp:list
       (common-lisp:cons "errorCode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'error-details))
      (common-lisp:list
       (common-lisp:cons "errorDetails"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          storage-gateway-error))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass storedi-scsivolume common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-storedi-scsivolume-volume-arn :shape
                         "VolumeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-id :initarg :volume-id :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-id common-lisp:null) :accessor
                         struct-shape-storedi-scsivolume-volume-id :shape
                         "VolumeId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-type :initarg :volume-type :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-type common-lisp:null)
                         :accessor struct-shape-storedi-scsivolume-volume-type
                         :shape "VolumeType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-status :initarg :volume-status :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-status common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volume-status :shape
                         "VolumeStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-attachment-status :initarg
                         :volume-attachment-status :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-attachment-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volume-attachment-status
                         :shape "VolumeAttachmentStatus" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volume-size-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-progress :initarg :volume-progress :initform
                         common-lisp:nil :type
                         (common-lisp:or double-object common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volume-progress :shape
                         "DoubleObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-disk-id :initarg :volume-disk-id :initform
                         common-lisp:nil :type
                         (common-lisp:or disk-id common-lisp:null) :accessor
                         struct-shape-storedi-scsivolume-volume-disk-id :shape
                         "DiskId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (source-snapshot-id :initarg :source-snapshot-id
                         :initform common-lisp:nil :type
                         (common-lisp:or snapshot-id common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-source-snapshot-id
                         :shape "SnapshotId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (preserved-existing-data :initarg
                         :preserved-existing-data :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-preserved-existing-data
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volumei-scsiattributes :initarg
                         :volumei-scsiattributes :initform common-lisp:nil
                         :type
                         (common-lisp:or volumei-scsiattributes
                                         common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volumei-scsiattributes
                         :shape "VolumeiSCSIAttributes" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (created-date :initarg :created-date :initform
                         common-lisp:nil :type
                         (common-lisp:or created-date common-lisp:null)
                         :accessor struct-shape-storedi-scsivolume-created-date
                         :shape "CreatedDate" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-used-in-bytes :initarg :volume-used-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or volume-used-in-bytes common-lisp:null)
                         :accessor
                         struct-shape-storedi-scsivolume-volume-used-in-bytes
                         :shape "VolumeUsedInBytes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-storedi-scsivolume-kmskey
                         :shape "KMSKey" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (target-name :initarg :target-name :initform
                         common-lisp:nil :type
                         (common-lisp:or target-name common-lisp:null)
                         :accessor struct-shape-storedi-scsivolume-target-name
                         :shape "TargetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-storedi-scsivolume
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'storedi-scsivolume
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'storedi-scsivolume 'make-storedi-scsivolume))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-status))
      (common-lisp:list
       (common-lisp:cons "VolumeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-attachment-status))
      (common-lisp:list
       (common-lisp:cons "VolumeAttachmentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-progress))
      (common-lisp:list
       (common-lisp:cons "VolumeProgress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-disk-id))
      (common-lisp:list
       (common-lisp:cons "VolumeDiskId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'source-snapshot-id))
      (common-lisp:list
       (common-lisp:cons "SourceSnapshotId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'preserved-existing-data))
      (common-lisp:list
       (common-lisp:cons "PreservedExistingData"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volumei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "VolumeiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'created-date))
      (common-lisp:list
       (common-lisp:cons "CreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-name))
      (common-lisp:list
       (common-lisp:cons "TargetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input storedi-scsivolume))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype storedi-scsivolumes ()
   '(trivial-types:proper-list storedi-scsivolume))
 (common-lisp:defun make-storedi-scsivolumes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list storedi-scsivolume))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype supported-gateway-capacities ()
   '(trivial-types:proper-list gateway-capacity))
 (common-lisp:defun make-supported-gateway-capacities
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list gateway-capacity))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tag common-lisp:nil
                       ((key :initarg :key :initform
                         (common-lisp:error ":key is required") :type
                         (common-lisp:or tag-key common-lisp:null) :accessor
                         struct-shape-tag-key :shape "TagKey" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (value :initarg :value :initform
                         (common-lisp:error ":value is required") :type
                         (common-lisp:or tag-value common-lisp:null) :accessor
                         struct-shape-tag-value :shape "TagValue" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tag (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tag
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tag 'make-tag))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tag))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'key))
      (common-lisp:list
       (common-lisp:cons "Key"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tag))
   common-lisp:nil))
(common-lisp:deftype tag-key () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tag-keys () '(trivial-types:proper-list tag-key))
 (common-lisp:defun make-tag-keys
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag-key))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tag-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tags () '(trivial-types:proper-list tag))
 (common-lisp:defun make-tags
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tag))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tape common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor struct-shape-tape-tape-arn :shape "TapeARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-barcode :initarg :tape-barcode :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-barcode common-lisp:null)
                         :accessor struct-shape-tape-tape-barcode :shape
                         "TapeBarcode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-created-date :initarg :tape-created-date
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-tape-created-date :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-size common-lisp:null) :accessor
                         struct-shape-tape-tape-size-in-bytes :shape "TapeSize"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-status :initarg :tape-status :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-status common-lisp:null)
                         :accessor struct-shape-tape-tape-status :shape
                         "TapeStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (vtldevice :initarg :vtldevice :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-arn common-lisp:null)
                         :accessor struct-shape-tape-vtldevice :shape
                         "VTLDeviceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (progress :initarg :progress :initform common-lisp:nil
                         :type (common-lisp:or double-object common-lisp:null)
                         :accessor struct-shape-tape-progress :shape
                         "DoubleObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-used-in-bytes :initarg :tape-used-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-usage common-lisp:null) :accessor
                         struct-shape-tape-tape-used-in-bytes :shape
                         "TapeUsage" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-tape-kmskey :shape "KMSKey"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-id :initarg :pool-id :initform common-lisp:nil
                         :type (common-lisp:or pool-id common-lisp:null)
                         :accessor struct-shape-tape-pool-id :shape "PoolId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (worm :initarg :worm :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor struct-shape-tape-worm :shape "boolean"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (retention-start-date :initarg :retention-start-date
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-retention-start-date :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-entry-date :initarg :pool-entry-date :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-pool-entry-date :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tape (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tape
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tape 'make-tape))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-created-date))
      (common-lisp:list
       (common-lisp:cons "TapeCreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice))
      (common-lisp:list
       (common-lisp:cons "VTLDevice"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'progress))
      (common-lisp:list
       (common-lisp:cons "Progress"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worm))
      (common-lisp:list
       (common-lisp:cons "Worm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-start-date))
      (common-lisp:list
       (common-lisp:cons "RetentionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-entry-date))
      (common-lisp:list
       (common-lisp:cons "PoolEntryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape))
   common-lisp:nil))
(common-lisp:deftype tape-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tape-arns () '(trivial-types:proper-list tape-arn))
 (common-lisp:defun make-tape-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-arn))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tape-archive common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor struct-shape-tape-archive-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-barcode :initarg :tape-barcode :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-barcode common-lisp:null)
                         :accessor struct-shape-tape-archive-tape-barcode
                         :shape "TapeBarcode" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-created-date :initarg :tape-created-date
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-archive-tape-created-date :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-size common-lisp:null) :accessor
                         struct-shape-tape-archive-tape-size-in-bytes :shape
                         "TapeSize" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (completion-time :initarg :completion-time :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-archive-completion-time :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (retrieved-to :initarg :retrieved-to :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-tape-archive-retrieved-to
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-status :initarg :tape-status :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-archive-status common-lisp:null)
                         :accessor struct-shape-tape-archive-tape-status :shape
                         "TapeArchiveStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-used-in-bytes :initarg :tape-used-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-usage common-lisp:null) :accessor
                         struct-shape-tape-archive-tape-used-in-bytes :shape
                         "TapeUsage" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor struct-shape-tape-archive-kmskey :shape
                         "KMSKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-id :initarg :pool-id :initform common-lisp:nil
                         :type (common-lisp:or pool-id common-lisp:null)
                         :accessor struct-shape-tape-archive-pool-id :shape
                         "PoolId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (worm :initarg :worm :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor struct-shape-tape-archive-worm :shape
                         "boolean" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (retention-start-date :initarg :retention-start-date
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-archive-retention-start-date :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-entry-date :initarg :pool-entry-date :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-archive-pool-entry-date :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tape-archive
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tape-archive
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tape-archive 'make-tape-archive))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape-archive))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape-archive))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-created-date))
      (common-lisp:list
       (common-lisp:cons "TapeCreatedDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'completion-time))
      (common-lisp:list
       (common-lisp:cons "CompletionTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retrieved-to))
      (common-lisp:list
       (common-lisp:cons "RetrievedTo"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-used-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeUsedInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'worm))
      (common-lisp:list
       (common-lisp:cons "Worm"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-start-date))
      (common-lisp:list
       (common-lisp:cons "RetentionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-entry-date))
      (common-lisp:list
       (common-lisp:cons "PoolEntryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape-archive))
   common-lisp:nil))
(common-lisp:deftype tape-archive-status () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype tape-archives ()
   '(trivial-types:proper-list tape-archive))
 (common-lisp:defun make-tape-archives
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-archive))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tape-barcode () 'common-lisp:string)
(common-lisp:deftype tape-barcode-prefix () 'common-lisp:string)
(common-lisp:deftype tape-drive-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass tape-info common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor struct-shape-tape-info-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-barcode :initarg :tape-barcode :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-barcode common-lisp:null)
                         :accessor struct-shape-tape-info-tape-barcode :shape
                         "TapeBarcode" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-size common-lisp:null) :accessor
                         struct-shape-tape-info-tape-size-in-bytes :shape
                         "TapeSize" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-status :initarg :tape-status :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-status common-lisp:null)
                         :accessor struct-shape-tape-info-tape-status :shape
                         "TapeStatus" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-tape-info-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-id :initarg :pool-id :initform common-lisp:nil
                         :type (common-lisp:or pool-id common-lisp:null)
                         :accessor struct-shape-tape-info-pool-id :shape
                         "PoolId" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (retention-start-date :initarg :retention-start-date
                         :initform common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-info-retention-start-date :shape
                         "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (pool-entry-date :initarg :pool-entry-date :initform
                         common-lisp:nil :type
                         (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-info-pool-entry-date :shape "Time"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tape-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tape-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'tape-info 'make-tape-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input tape-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input tape-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-barcode))
      (common-lisp:list
       (common-lisp:cons "TapeBarcode"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-id))
      (common-lisp:list
       (common-lisp:cons "PoolId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'retention-start-date))
      (common-lisp:list
       (common-lisp:cons "RetentionStartDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'pool-entry-date))
      (common-lisp:list
       (common-lisp:cons "PoolEntryDate"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input tape-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tape-infos () '(trivial-types:proper-list tape-info))
 (common-lisp:defun make-tape-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass tape-recovery-point-info common-lisp:nil
                       ((tape-arn :initarg :tape-arn :initform common-lisp:nil
                         :type (common-lisp:or tape-arn common-lisp:null)
                         :accessor
                         struct-shape-tape-recovery-point-info-tape-arn :shape
                         "TapeARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-recovery-point-time :initarg
                         :tape-recovery-point-time :initform common-lisp:nil
                         :type (common-lisp:or time common-lisp:null) :accessor
                         struct-shape-tape-recovery-point-info-tape-recovery-point-time
                         :shape "Time" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (tape-size-in-bytes :initarg :tape-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or tape-size common-lisp:null) :accessor
                         struct-shape-tape-recovery-point-info-tape-size-in-bytes
                         :shape "TapeSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tape-status :initarg :tape-status :initform
                         common-lisp:nil :type
                         (common-lisp:or tape-recovery-point-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-tape-recovery-point-info-tape-status
                         :shape "TapeRecoveryPointStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-tape-recovery-point-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'tape-recovery-point-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'tape-recovery-point-info 'make-tape-recovery-point-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-arn))
      (common-lisp:list
       (common-lisp:cons "TapeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'tape-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "TapeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "TapeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tape-status))
      (common-lisp:list
       (common-lisp:cons "TapeStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          tape-recovery-point-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype tape-recovery-point-infos ()
   '(trivial-types:proper-list tape-recovery-point-info))
 (common-lisp:defun make-tape-recovery-point-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            tape-recovery-point-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype tape-recovery-point-status () 'common-lisp:string)
(common-lisp:deftype tape-size () 'common-lisp:integer)
(common-lisp:deftype tape-status () 'common-lisp:string)
(common-lisp:deftype tape-storage-class () 'common-lisp:string)
(common-lisp:deftype tape-usage () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:deftype tapes () '(trivial-types:proper-list tape))
 (common-lisp:defun make-tapes
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list tape))
   aws-sdk/generator/shape::members))
(common-lisp:deftype target-arn () 'common-lisp:string)
(common-lisp:deftype target-name () 'common-lisp:string)
(common-lisp:deftype time () 'common-lisp:string)
(common-lisp:deftype timeout-in-seconds () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass update-automatic-tape-creation-policy-input
                       common-lisp:nil
                       ((automatic-tape-creation-rules :initarg
                         :automatic-tape-creation-rules :initform
                         (common-lisp:error
                          ":automatic-tape-creation-rules is required")
                         :type
                         (common-lisp:or automatic-tape-creation-rules
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-automatic-tape-creation-policy-input-automatic-tape-creation-rules
                         :shape "AutomaticTapeCreationRules" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-automatic-tape-creation-policy-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-automatic-tape-creation-policy-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-automatic-tape-creation-policy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-automatic-tape-creation-policy-input
                    'make-update-automatic-tape-creation-policy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'automatic-tape-creation-rules))
      (common-lisp:list
       (common-lisp:cons "AutomaticTapeCreationRules"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-automatic-tape-creation-policy-output
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-automatic-tape-creation-policy-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-automatic-tape-creation-policy-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-automatic-tape-creation-policy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-automatic-tape-creation-policy-output
                    'make-update-automatic-tape-creation-policy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-automatic-tape-creation-policy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bandwidth-rate-limit-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (average-upload-rate-limit-in-bits-per-sec :initarg
                         :average-upload-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-upload-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-input-average-upload-rate-limit-in-bits-per-sec
                         :shape "BandwidthUploadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (average-download-rate-limit-in-bits-per-sec :initarg
                         :average-download-rate-limit-in-bits-per-sec :initform
                         common-lisp:nil :type
                         (common-lisp:or bandwidth-download-rate-limit
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-input-average-download-rate-limit-in-bits-per-sec
                         :shape "BandwidthDownloadRateLimit" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bandwidth-rate-limit-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-bandwidth-rate-limit-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-input
                    'make-update-bandwidth-rate-limit-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-upload-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageUploadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'average-download-rate-limit-in-bits-per-sec))
      (common-lisp:list
       (common-lisp:cons "AverageDownloadRateLimitInBitsPerSec"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bandwidth-rate-limit-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bandwidth-rate-limit-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-bandwidth-rate-limit-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-output
                    'make-update-bandwidth-rate-limit-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bandwidth-rate-limit-schedule-input
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-schedule-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (bandwidth-rate-limit-intervals :initarg
                         :bandwidth-rate-limit-intervals :initform
                         (common-lisp:error
                          ":bandwidth-rate-limit-intervals is required")
                         :type
                         (common-lisp:or bandwidth-rate-limit-intervals
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-schedule-input-bandwidth-rate-limit-intervals
                         :shape "BandwidthRateLimitIntervals" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bandwidth-rate-limit-schedule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-bandwidth-rate-limit-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-schedule-input
                    'make-update-bandwidth-rate-limit-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'bandwidth-rate-limit-intervals))
      (common-lisp:list
       (common-lisp:cons "BandwidthRateLimitIntervals"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-bandwidth-rate-limit-schedule-output
                       common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-bandwidth-rate-limit-schedule-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-bandwidth-rate-limit-schedule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-bandwidth-rate-limit-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-bandwidth-rate-limit-schedule-output
                    'make-update-bandwidth-rate-limit-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-bandwidth-rate-limit-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-chap-credentials-input common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         (common-lisp:error ":target-arn is required") :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-update-chap-credentials-input-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secret-to-authenticate-initiator :initarg
                         :secret-to-authenticate-initiator :initform
                         (common-lisp:error
                          ":secret-to-authenticate-initiator is required")
                         :type (common-lisp:or chap-secret common-lisp:null)
                         :accessor
                         struct-shape-update-chap-credentials-input-secret-to-authenticate-initiator
                         :shape "ChapSecret" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiator-name :initarg :initiator-name :initform
                         (common-lisp:error ":initiator-name is required")
                         :type (common-lisp:or iqn-name common-lisp:null)
                         :accessor
                         struct-shape-update-chap-credentials-input-initiator-name
                         :shape "IqnName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (secret-to-authenticate-target :initarg
                         :secret-to-authenticate-target :initform
                         common-lisp:nil :type
                         (common-lisp:or chap-secret common-lisp:null)
                         :accessor
                         struct-shape-update-chap-credentials-input-secret-to-authenticate-target
                         :shape "ChapSecret" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-chap-credentials-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-chap-credentials-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-chap-credentials-input
                    'make-update-chap-credentials-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-initiator))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateInitiator"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'secret-to-authenticate-target))
      (common-lisp:list
       (common-lisp:cons "SecretToAuthenticateTarget"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-chap-credentials-output common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-update-chap-credentials-output-target-arn
                         :shape "TargetARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (initiator-name :initarg :initiator-name :initform
                         common-lisp:nil :type
                         (common-lisp:or iqn-name common-lisp:null) :accessor
                         struct-shape-update-chap-credentials-output-initiator-name
                         :shape "IqnName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-chap-credentials-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-chap-credentials-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-chap-credentials-output
                    'make-update-chap-credentials-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'initiator-name))
      (common-lisp:list
       (common-lisp:cons "InitiatorName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-chap-credentials-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-file-system-association-input common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform
                         (common-lisp:error
                          ":file-system-association-arn is required")
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-input-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (user-name :initarg :user-name :initform
                         common-lisp:nil :type
                         (common-lisp:or domain-user-name common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-input-user-name
                         :shape "DomainUserName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (password :initarg :password :initform common-lisp:nil
                         :type
                         (common-lisp:or domain-user-password common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-input-password
                         :shape "DomainUserPassword" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-file-system-association-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-file-system-association-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-file-system-association-input
                    'make-update-file-system-association-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-name))
      (common-lisp:list
       (common-lisp:cons "UserName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'password))
      (common-lisp:list
       (common-lisp:cons "Password"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-file-system-association-output common-lisp:nil
                       ((file-system-association-arn :initarg
                         :file-system-association-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or file-system-association-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-file-system-association-output-file-system-association-arn
                         :shape "FileSystemAssociationARN" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-file-system-association-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-file-system-association-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-file-system-association-output
                    'make-update-file-system-association-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'file-system-association-arn))
      (common-lisp:list
       (common-lisp:cons "FileSystemAssociationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-file-system-association-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-information-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-name :initarg :gateway-name :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-name common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-input-gateway-name
                         :shape "GatewayName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-timezone :initarg :gateway-timezone :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-timezone common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-input-gateway-timezone
                         :shape "GatewayTimezone" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cloud-watch-log-group-arn :initarg
                         :cloud-watch-log-group-arn :initform common-lisp:nil
                         :type
                         (common-lisp:or cloud-watch-log-group-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-input-cloud-watch-log-group-arn
                         :shape "CloudWatchLogGroupARN" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (gateway-capacity :initarg :gateway-capacity :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-capacity common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-input-gateway-capacity
                         :shape "GatewayCapacity" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gateway-information-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-information-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-input
                    'make-update-gateway-information-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-timezone))
      (common-lisp:list
       (common-lisp:cons "GatewayTimezone"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'cloud-watch-log-group-arn))
      (common-lisp:list
       (common-lisp:cons "CloudWatchLogGroupARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-capacity))
      (common-lisp:list
       (common-lisp:cons "GatewayCapacity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-information-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (gateway-name :initarg :gateway-name :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-information-output-gateway-name
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gateway-information-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-information-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gateway-information-output
                    'make-update-gateway-information-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-name))
      (common-lisp:list
       (common-lisp:cons "GatewayName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-information-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-software-now-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-software-now-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gateway-software-now-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-software-now-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-input
                    'make-update-gateway-software-now-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-gateway-software-now-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-gateway-software-now-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-gateway-software-now-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-gateway-software-now-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-gateway-software-now-output
                    'make-update-gateway-software-now-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-gateway-software-now-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-maintenance-start-time-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (hour-of-day :initarg :hour-of-day :initform
                         (common-lisp:error ":hour-of-day is required") :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-input-hour-of-day
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (minute-of-hour :initarg :minute-of-hour :initform
                         (common-lisp:error ":minute-of-hour is required")
                         :type (common-lisp:or minute-of-hour common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-input-minute-of-hour
                         :shape "MinuteOfHour" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (day-of-week :initarg :day-of-week :initform
                         common-lisp:nil :type
                         (common-lisp:or day-of-week common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-input-day-of-week
                         :shape "DayOfWeek" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (day-of-month :initarg :day-of-month :initform
                         common-lisp:nil :type
                         (common-lisp:or day-of-month common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-input-day-of-month
                         :shape "DayOfMonth" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-maintenance-start-time-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-maintenance-start-time-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-start-time-input
                    'make-update-maintenance-start-time-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'hour-of-day))
      (common-lisp:list
       (common-lisp:cons "HourOfDay"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'minute-of-hour))
      (common-lisp:list
       (common-lisp:cons "MinuteOfHour"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-week))
      (common-lisp:list
       (common-lisp:cons "DayOfWeek"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'day-of-month))
      (common-lisp:list
       (common-lisp:cons "DayOfMonth"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-maintenance-start-time-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-maintenance-start-time-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-maintenance-start-time-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-maintenance-start-time-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-maintenance-start-time-output
                    'make-update-maintenance-start-time-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-maintenance-start-time-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-nfsfile-share-input common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         (common-lisp:error ":file-share-arn is required")
                         :type (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-nfsfile-share-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-kmskey :shape
                         "KMSKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (nfsfile-share-defaults :initarg
                         :nfsfile-share-defaults :initform common-lisp:nil
                         :type
                         (common-lisp:or nfsfile-share-defaults
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-nfsfile-share-defaults
                         :shape "NFSFileShareDefaults" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-update-nfsfile-share-input-object-acl
                         :shape "ObjectACL" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (client-list :initarg :client-list :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-client-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-client-list
                         :shape "FileShareClientList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (squash :initarg :squash :initform common-lisp:nil
                         :type (common-lisp:or squash common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-squash :shape
                         "Squash" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-nfsfile-share-input-read-only
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-nfsfile-share-input-requester-pays
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-file-share-name
                         :shape "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-nfsfile-share-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-nfsfile-share-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-nfsfile-share-input
                    'make-update-nfsfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'nfsfile-share-defaults))
      (common-lisp:list
       (common-lisp:cons "NFSFileShareDefaults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'client-list))
      (common-lisp:list
       (common-lisp:cons "ClientList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'squash))
      (common-lisp:list
       (common-lisp:cons "Squash"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-nfsfile-share-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-update-nfsfile-share-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-nfsfile-share-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-nfsfile-share-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-nfsfile-share-output
                    'make-update-nfsfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-nfsfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbfile-share-input common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         (common-lisp:error ":file-share-arn is required")
                         :type (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmsencrypted :initarg :kmsencrypted :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-kmsencrypted
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (kmskey :initarg :kmskey :initform common-lisp:nil
                         :type (common-lisp:or kmskey common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-kmskey :shape
                         "KMSKey" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (default-storage-class :initarg :default-storage-class
                         :initform common-lisp:nil :type
                         (common-lisp:or storage-class common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-default-storage-class
                         :shape "StorageClass" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (object-acl :initarg :object-acl :initform
                         common-lisp:nil :type
                         (common-lisp:or object-acl common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-object-acl
                         :shape "ObjectACL" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (read-only :initarg :read-only :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-read-only
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (guess-mimetype-enabled :initarg
                         :guess-mimetype-enabled :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-guess-mimetype-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (requester-pays :initarg :requester-pays :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-requester-pays
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smbaclenabled :initarg :smbaclenabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-smbaclenabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (access-based-enumeration :initarg
                         :access-based-enumeration :initform common-lisp:nil
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-access-based-enumeration
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (admin-user-list :initarg :admin-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-admin-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (valid-user-list :initarg :valid-user-list :initform
                         common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-valid-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (invalid-user-list :initarg :invalid-user-list
                         :initform common-lisp:nil :type
                         (common-lisp:or user-list common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-invalid-user-list
                         :shape "UserList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (audit-destination-arn :initarg :audit-destination-arn
                         :initform common-lisp:nil :type
                         (common-lisp:or audit-destination-arn
                                         common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-audit-destination-arn
                         :shape "AuditDestinationARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (case-sensitivity :initarg :case-sensitivity :initform
                         common-lisp:nil :type
                         (common-lisp:or case-sensitivity common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-case-sensitivity
                         :shape "CaseSensitivity" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-share-name :initarg :file-share-name :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-name common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-file-share-name
                         :shape "FileShareName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-attributes :initarg :cache-attributes :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-attributes common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-cache-attributes
                         :shape "CacheAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (notification-policy :initarg :notification-policy
                         :initform common-lisp:nil :type
                         (common-lisp:or notification-policy common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-input-notification-policy
                         :shape "NotificationPolicy" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (oplocks-enabled :initarg :oplocks-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or boolean common-lisp:null) :accessor
                         struct-shape-update-smbfile-share-input-oplocks-enabled
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbfile-share-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-smbfile-share-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbfile-share-input
                    'make-update-smbfile-share-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmsencrypted))
      (common-lisp:list
       (common-lisp:cons "KMSEncrypted"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'kmskey))
      (common-lisp:list
       (common-lisp:cons "KMSKey"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'default-storage-class))
      (common-lisp:list
       (common-lisp:cons "DefaultStorageClass"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'object-acl))
      (common-lisp:list
       (common-lisp:cons "ObjectACL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'read-only))
      (common-lisp:list
       (common-lisp:cons "ReadOnly"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'guess-mimetype-enabled))
      (common-lisp:list
       (common-lisp:cons "GuessMIMETypeEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'requester-pays))
      (common-lisp:list
       (common-lisp:cons "RequesterPays"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smbaclenabled))
      (common-lisp:list
       (common-lisp:cons "SMBACLEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'access-based-enumeration))
      (common-lisp:list
       (common-lisp:cons "AccessBasedEnumeration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'admin-user-list))
      (common-lisp:list
       (common-lisp:cons "AdminUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'valid-user-list))
      (common-lisp:list
       (common-lisp:cons "ValidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'invalid-user-list))
      (common-lisp:list
       (common-lisp:cons "InvalidUserList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'audit-destination-arn))
      (common-lisp:list
       (common-lisp:cons "AuditDestinationARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'case-sensitivity))
      (common-lisp:list
       (common-lisp:cons "CaseSensitivity"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-name))
      (common-lisp:list
       (common-lisp:cons "FileShareName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-attributes))
      (common-lisp:list
       (common-lisp:cons "CacheAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'notification-policy))
      (common-lisp:list
       (common-lisp:cons "NotificationPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'oplocks-enabled))
      (common-lisp:list
       (common-lisp:cons "OplocksEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbfile-share-output common-lisp:nil
                       ((file-share-arn :initarg :file-share-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or file-share-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-output-file-share-arn
                         :shape "FileShareARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbfile-share-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-smbfile-share-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbfile-share-output
                    'make-update-smbfile-share-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-share-arn))
      (common-lisp:list
       (common-lisp:cons "FileShareARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbfile-share-visibility-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-visibility-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (file-shares-visible :initarg :file-shares-visible
                         :initform
                         (common-lisp:error ":file-shares-visible is required")
                         :type (common-lisp:or boolean common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-visibility-input-file-shares-visible
                         :shape "Boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbfile-share-visibility-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-smbfile-share-visibility-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbfile-share-visibility-input
                    'make-update-smbfile-share-visibility-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'file-shares-visible))
      (common-lisp:list
       (common-lisp:cons "FileSharesVisible"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbfile-share-visibility-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbfile-share-visibility-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbfile-share-visibility-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-smbfile-share-visibility-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbfile-share-visibility-output
                    'make-update-smbfile-share-visibility-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbfile-share-visibility-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smblocal-groups-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smblocal-groups-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smblocal-groups :initarg :smblocal-groups :initform
                         (common-lisp:error ":smblocal-groups is required")
                         :type
                         (common-lisp:or smblocal-groups common-lisp:null)
                         :accessor
                         struct-shape-update-smblocal-groups-input-smblocal-groups
                         :shape "SMBLocalGroups" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smblocal-groups-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-smblocal-groups-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smblocal-groups-input
                    'make-update-smblocal-groups-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'smblocal-groups))
      (common-lisp:list
       (common-lisp:cons "SMBLocalGroups"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smblocal-groups-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smblocal-groups-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smblocal-groups-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-smblocal-groups-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smblocal-groups-output
                    'make-update-smblocal-groups-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smblocal-groups-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbsecurity-strategy-input common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         (common-lisp:error ":gateway-arn is required") :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbsecurity-strategy-input-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (smbsecurity-strategy :initarg :smbsecurity-strategy
                         :initform
                         (common-lisp:error
                          ":smbsecurity-strategy is required")
                         :type
                         (common-lisp:or smbsecurity-strategy common-lisp:null)
                         :accessor
                         struct-shape-update-smbsecurity-strategy-input-smbsecurity-strategy
                         :shape "SMBSecurityStrategy" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbsecurity-strategy-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-smbsecurity-strategy-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbsecurity-strategy-input
                    'make-update-smbsecurity-strategy-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'smbsecurity-strategy))
      (common-lisp:list
       (common-lisp:cons "SMBSecurityStrategy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-smbsecurity-strategy-output common-lisp:nil
                       ((gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor
                         struct-shape-update-smbsecurity-strategy-output-gateway-arn
                         :shape "GatewayARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-smbsecurity-strategy-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-smbsecurity-strategy-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-smbsecurity-strategy-output
                    'make-update-smbsecurity-strategy-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-smbsecurity-strategy-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-snapshot-schedule-input common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         (common-lisp:error ":volume-arn is required") :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-update-snapshot-schedule-input-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (start-at :initarg :start-at :initform
                         (common-lisp:error ":start-at is required") :type
                         (common-lisp:or hour-of-day common-lisp:null)
                         :accessor
                         struct-shape-update-snapshot-schedule-input-start-at
                         :shape "HourOfDay" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recurrence-in-hours :initarg :recurrence-in-hours
                         :initform
                         (common-lisp:error ":recurrence-in-hours is required")
                         :type
                         (common-lisp:or recurrence-in-hours common-lisp:null)
                         :accessor
                         struct-shape-update-snapshot-schedule-input-recurrence-in-hours
                         :shape "RecurrenceInHours" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (description :initarg :description :initform
                         common-lisp:nil :type
                         (common-lisp:or description common-lisp:null)
                         :accessor
                         struct-shape-update-snapshot-schedule-input-description
                         :shape "Description" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (tags :initarg :tags :initform common-lisp:nil :type
                         (common-lisp:or tags common-lisp:null) :accessor
                         struct-shape-update-snapshot-schedule-input-tags
                         :shape "Tags" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-snapshot-schedule-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-snapshot-schedule-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-schedule-input
                    'make-update-snapshot-schedule-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'start-at))
      (common-lisp:list
       (common-lisp:cons "StartAt"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recurrence-in-hours))
      (common-lisp:list
       (common-lisp:cons "RecurrenceInHours"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'description))
      (common-lisp:list
       (common-lisp:cons "Description"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'tags))
      (common-lisp:list
       (common-lisp:cons "Tags"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-snapshot-schedule-output common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-update-snapshot-schedule-output-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-snapshot-schedule-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'update-snapshot-schedule-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-snapshot-schedule-output
                    'make-update-snapshot-schedule-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-snapshot-schedule-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vtldevice-type-input common-lisp:nil
                       ((vtldevice-arn :initarg :vtldevice-arn :initform
                         (common-lisp:error ":vtldevice-arn is required") :type
                         (common-lisp:or vtldevice-arn common-lisp:null)
                         :accessor
                         struct-shape-update-vtldevice-type-input-vtldevice-arn
                         :shape "VTLDeviceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-type :initarg :device-type :initform
                         (common-lisp:error ":device-type is required") :type
                         (common-lisp:or device-type common-lisp:null)
                         :accessor
                         struct-shape-update-vtldevice-type-input-device-type
                         :shape "DeviceType" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vtldevice-type-input
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vtldevice-type-input
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vtldevice-type-input
                    'make-update-vtldevice-type-input))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-type))
      (common-lisp:list
       (common-lisp:cons "DeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-input))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass update-vtldevice-type-output common-lisp:nil
                       ((vtldevice-arn :initarg :vtldevice-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-arn common-lisp:null)
                         :accessor
                         struct-shape-update-vtldevice-type-output-vtldevice-arn
                         :shape "VTLDeviceARN" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-vtldevice-type-output
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-vtldevice-type-output
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-vtldevice-type-output
                    'make-update-vtldevice-type-output))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-vtldevice-type-output))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype user-list () '(trivial-types:proper-list user-list-user))
 (common-lisp:defun make-user-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list user-list-user))
   aws-sdk/generator/shape::members))
(common-lisp:deftype user-list-user () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass vtldevice common-lisp:nil
                       ((vtldevice-arn :initarg :vtldevice-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-arn common-lisp:null)
                         :accessor struct-shape-vtldevice-vtldevice-arn :shape
                         "VTLDeviceARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vtldevice-type :initarg :vtldevice-type :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-type common-lisp:null)
                         :accessor struct-shape-vtldevice-vtldevice-type :shape
                         "VTLDeviceType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vtldevice-vendor :initarg :vtldevice-vendor :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-vendor common-lisp:null)
                         :accessor struct-shape-vtldevice-vtldevice-vendor
                         :shape "VTLDeviceVendor" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (vtldevice-product-identifier :initarg
                         :vtldevice-product-identifier :initform
                         common-lisp:nil :type
                         (common-lisp:or vtldevice-product-identifier
                                         common-lisp:null)
                         :accessor
                         struct-shape-vtldevice-vtldevice-product-identifier
                         :shape "VTLDeviceProductIdentifier" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (devicei-scsiattributes :initarg
                         :devicei-scsiattributes :initform common-lisp:nil
                         :type
                         (common-lisp:or devicei-scsiattributes
                                         common-lisp:null)
                         :accessor
                         struct-shape-vtldevice-devicei-scsiattributes :shape
                         "DeviceiSCSIAttributes" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-vtldevice
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'vtldevice
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'vtldevice 'make-vtldevice))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input vtldevice))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input vtldevice))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-arn))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-type))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'vtldevice-vendor))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceVendor"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'vtldevice-product-identifier))
      (common-lisp:list
       (common-lisp:cons "VTLDeviceProductIdentifier"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'devicei-scsiattributes))
      (common-lisp:list
       (common-lisp:cons "DeviceiSCSIAttributes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input vtldevice))
   common-lisp:nil))
(common-lisp:deftype vtldevice-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vtldevice-arns ()
   '(trivial-types:proper-list vtldevice-arn))
 (common-lisp:defun make-vtldevice-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vtldevice-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype vtldevice-product-identifier () 'common-lisp:string)
(common-lisp:deftype vtldevice-type () 'common-lisp:string)
(common-lisp:deftype vtldevice-vendor () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype vtldevices () '(trivial-types:proper-list vtldevice))
 (common-lisp:defun make-vtldevices
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list vtldevice))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-arn () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype volume-arns () '(trivial-types:proper-list volume-arn))
 (common-lisp:defun make-volume-arns
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-arn))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-attachment-status () 'common-lisp:string)
(common-lisp:deftype volume-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass volume-info common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-volume-info-volume-arn :shape "VolumeARN"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-id :initarg :volume-id :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-id common-lisp:null) :accessor
                         struct-shape-volume-info-volume-id :shape "VolumeId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (gateway-arn :initarg :gateway-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-arn common-lisp:null)
                         :accessor struct-shape-volume-info-gateway-arn :shape
                         "GatewayARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (gateway-id :initarg :gateway-id :initform
                         common-lisp:nil :type
                         (common-lisp:or gateway-id common-lisp:null) :accessor
                         struct-shape-volume-info-gateway-id :shape "GatewayId"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-type :initarg :volume-type :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-type common-lisp:null)
                         :accessor struct-shape-volume-info-volume-type :shape
                         "VolumeType" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-volume-info-volume-size-in-bytes :shape
                         "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-attachment-status :initarg
                         :volume-attachment-status :initform common-lisp:nil
                         :type
                         (common-lisp:or volume-attachment-status
                                         common-lisp:null)
                         :accessor
                         struct-shape-volume-info-volume-attachment-status
                         :shape "VolumeAttachmentStatus" :location
                         common-lisp:nil :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'volume-info 'make-volume-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input volume-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input volume-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-id))
      (common-lisp:list
       (common-lisp:cons "VolumeId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-arn))
      (common-lisp:list
       (common-lisp:cons "GatewayARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'gateway-id))
      (common-lisp:list
       (common-lisp:cons "GatewayId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-type))
      (common-lisp:list
       (common-lisp:cons "VolumeType"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-attachment-status))
      (common-lisp:list
       (common-lisp:cons "VolumeAttachmentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input volume-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-infos () '(trivial-types:proper-list volume-info))
 (common-lisp:defun make-volume-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list volume-info))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass volume-recovery-point-info common-lisp:nil
                       ((volume-arn :initarg :volume-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or volume-arn common-lisp:null) :accessor
                         struct-shape-volume-recovery-point-info-volume-arn
                         :shape "VolumeARN" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (volume-size-in-bytes :initarg :volume-size-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-volume-recovery-point-info-volume-size-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-usage-in-bytes :initarg :volume-usage-in-bytes
                         :initform common-lisp:nil :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-volume-recovery-point-info-volume-usage-in-bytes
                         :shape "long" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (volume-recovery-point-time :initarg
                         :volume-recovery-point-time :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:string common-lisp:null)
                         :accessor
                         struct-shape-volume-recovery-point-info-volume-recovery-point-time
                         :shape "string" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volume-recovery-point-info
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volume-recovery-point-info
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volume-recovery-point-info
                    'make-volume-recovery-point-info))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'volume-arn))
      (common-lisp:list
       (common-lisp:cons "VolumeARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-size-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeSizeInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-usage-in-bytes))
      (common-lisp:list
       (common-lisp:cons "VolumeUsageInBytes"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'volume-recovery-point-time))
      (common-lisp:list
       (common-lisp:cons "VolumeRecoveryPointTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volume-recovery-point-info))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype volume-recovery-point-infos ()
   '(trivial-types:proper-list volume-recovery-point-info))
 (common-lisp:defun make-volume-recovery-point-infos
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            volume-recovery-point-info))
   aws-sdk/generator/shape::members))
(common-lisp:deftype volume-status () 'common-lisp:string)
(common-lisp:deftype volume-type () 'common-lisp:string)
(common-lisp:deftype volume-used-in-bytes () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass volumei-scsiattributes common-lisp:nil
                       ((target-arn :initarg :target-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or target-arn common-lisp:null) :accessor
                         struct-shape-volumei-scsiattributes-target-arn :shape
                         "TargetARN" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (network-interface-id :initarg :network-interface-id
                         :initform common-lisp:nil :type
                         (common-lisp:or network-interface-id common-lisp:null)
                         :accessor
                         struct-shape-volumei-scsiattributes-network-interface-id
                         :shape "NetworkInterfaceId" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (network-interface-port :initarg
                         :network-interface-port :initform common-lisp:nil
                         :type
                         (common-lisp:or common-lisp:integer common-lisp:null)
                         :accessor
                         struct-shape-volumei-scsiattributes-network-interface-port
                         :shape "integer" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (lun-number :initarg :lun-number :initform
                         common-lisp:nil :type
                         (common-lisp:or positive-int-object common-lisp:null)
                         :accessor
                         struct-shape-volumei-scsiattributes-lun-number :shape
                         "PositiveIntObject" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (chap-enabled :initarg :chap-enabled :initform
                         common-lisp:nil :type
                         (common-lisp:or common-lisp:boolean common-lisp:null)
                         :accessor
                         struct-shape-volumei-scsiattributes-chap-enabled
                         :shape "boolean" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-volumei-scsiattributes
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'volumei-scsiattributes
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'volumei-scsiattributes 'make-volumei-scsiattributes))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'target-arn))
      (common-lisp:list
       (common-lisp:cons "TargetARN"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-id))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfaceId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'network-interface-port))
      (common-lisp:list
       (common-lisp:cons "NetworkInterfacePort"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'lun-number))
      (common-lisp:list
       (common-lisp:cons "LunNumber"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'chap-enabled))
      (common-lisp:list
       (common-lisp:cons "ChapEnabled"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          volumei-scsiattributes))
   common-lisp:nil))
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:deftype |errorDetails| () 'common-lisp:hash-table)
 (common-lisp:defun make-errordetails (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
common-lisp:nil
common-lisp:nil
common-lisp:nil
(common-lisp:progn
 (common-lisp:defun activate-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key activation-key gateway-name
                     gateway-timezone gateway-region gateway-type
                     tape-drive-type medium-changer-type tags)
   (common-lisp:declare
    (common-lisp:ignorable activation-key gateway-name gateway-timezone
     gateway-region gateway-type tape-drive-type medium-changer-type tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-activate-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ActivateGateway"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'activate-gateway))
(common-lisp:progn
 (common-lisp:defun add-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/" "AddCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'add-cache))
(common-lisp:progn
 (common-lisp:defun add-tags-to-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tags)
   (common-lisp:declare (common-lisp:ignorable resource-arn tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-tags-to-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddTagsToResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'add-tags-to-resource))
(common-lisp:progn
 (common-lisp:defun add-upload-buffer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-upload-buffer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddUploadBuffer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'add-upload-buffer))
(common-lisp:progn
 (common-lisp:defun add-working-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-ids)
   (common-lisp:declare (common-lisp:ignorable gateway-arn disk-ids))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-add-working-storage-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AddWorkingStorage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'add-working-storage))
(common-lisp:progn
 (common-lisp:defun assign-tape-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn pool-id
                     bypass-governance-retention)
   (common-lisp:declare
    (common-lisp:ignorable tape-arn pool-id bypass-governance-retention))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-assign-tape-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AssignTapePool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'assign-tape-pool))
(common-lisp:progn
 (common-lisp:defun associate-file-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key user-name password client-token
                     gateway-arn location-arn tags audit-destination-arn
                     cache-attributes endpoint-network-configuration)
   (common-lisp:declare
    (common-lisp:ignorable user-name password client-token gateway-arn
     location-arn tags audit-destination-arn cache-attributes
     endpoint-network-configuration))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-associate-file-system-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AssociateFileSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'associate-file-system))
(common-lisp:progn
 (common-lisp:defun attach-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn target-name volume-arn
                     network-interface-id disk-id)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn target-name volume-arn
     network-interface-id disk-id))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-attach-volume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "AttachVolume"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'attach-volume))
(common-lisp:progn
 (common-lisp:defun cancel-archival
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-archival-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelArchival"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-archival))
(common-lisp:progn
 (common-lisp:defun cancel-retrieval
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn tape-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-cancel-retrieval-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CancelRetrieval"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'cancel-retrieval))
(common-lisp:progn
 (common-lisp:defun create-cachedi-scsivolume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn volume-size-in-bytes
                     snapshot-id target-name source-volume-arn
                     network-interface-id client-token kmsencrypted kmskey
                     tags)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn volume-size-in-bytes snapshot-id
     target-name source-volume-arn network-interface-id client-token
     kmsencrypted kmskey tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-cachedi-scsivolume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateCachediSCSIVolume"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-cachedi-scsivolume))
(common-lisp:progn
 (common-lisp:defun create-nfsfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token nfsfile-share-defaults
                     gateway-arn kmsencrypted kmskey role location-arn
                     default-storage-class object-acl client-list squash
                     read-only guess-mimetype-enabled requester-pays tags
                     file-share-name cache-attributes notification-policy
                     vpcendpoint-dnsname bucket-region audit-destination-arn)
   (common-lisp:declare
    (common-lisp:ignorable client-token nfsfile-share-defaults gateway-arn
     kmsencrypted kmskey role location-arn default-storage-class object-acl
     client-list squash read-only guess-mimetype-enabled requester-pays tags
     file-share-name cache-attributes notification-policy vpcendpoint-dnsname
     bucket-region audit-destination-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-nfsfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateNFSFileShare"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-nfsfile-share))
(common-lisp:progn
 (common-lisp:defun create-smbfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key client-token gateway-arn kmsencrypted
                     kmskey role location-arn default-storage-class object-acl
                     read-only guess-mimetype-enabled requester-pays
                     smbaclenabled access-based-enumeration admin-user-list
                     valid-user-list invalid-user-list audit-destination-arn
                     authentication case-sensitivity tags file-share-name
                     cache-attributes notification-policy vpcendpoint-dnsname
                     bucket-region oplocks-enabled)
   (common-lisp:declare
    (common-lisp:ignorable client-token gateway-arn kmsencrypted kmskey role
     location-arn default-storage-class object-acl read-only
     guess-mimetype-enabled requester-pays smbaclenabled
     access-based-enumeration admin-user-list valid-user-list invalid-user-list
     audit-destination-arn authentication case-sensitivity tags file-share-name
     cache-attributes notification-policy vpcendpoint-dnsname bucket-region
     oplocks-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-smbfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSMBFileShare"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-smbfile-share))
(common-lisp:progn
 (common-lisp:defun create-snapshot
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn snapshot-description tags)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn snapshot-description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-snapshot-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSnapshot"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-snapshot))
(common-lisp:progn
 (common-lisp:defun create-snapshot-from-volume-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn snapshot-description tags)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn snapshot-description tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-create-snapshot-from-volume-recovery-point-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateSnapshotFromVolumeRecoveryPoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-snapshot-from-volume-recovery-point))
(common-lisp:progn
 (common-lisp:defun create-storedi-scsivolume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn disk-id snapshot-id
                     preserve-existing-data target-name network-interface-id
                     kmsencrypted kmskey tags)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn disk-id snapshot-id
     preserve-existing-data target-name network-interface-id kmsencrypted
     kmskey tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-storedi-scsivolume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateStorediSCSIVolume"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-storedi-scsivolume))
(common-lisp:progn
 (common-lisp:defun create-tape-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-name storage-class
                     retention-lock-type retention-lock-time-in-days tags)
   (common-lisp:declare
    (common-lisp:ignorable pool-name storage-class retention-lock-type
     retention-lock-time-in-days tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tape-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTapePool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-tape-pool))
(common-lisp:progn
 (common-lisp:defun create-tape-with-barcode
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-size-in-bytes
                     tape-barcode kmsencrypted kmskey pool-id worm tags)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-size-in-bytes tape-barcode
     kmsencrypted kmskey pool-id worm tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tape-with-barcode-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTapeWithBarcode"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-tape-with-barcode))
(common-lisp:progn
 (common-lisp:defun create-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-size-in-bytes
                     client-token num-tapes-to-create tape-barcode-prefix
                     kmsencrypted kmskey pool-id worm tags)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-size-in-bytes client-token
     num-tapes-to-create tape-barcode-prefix kmsencrypted kmskey pool-id worm
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-create-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "CreateTapes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'create-tapes))
(common-lisp:progn
 (common-lisp:defun delete-automatic-tape-creation-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-automatic-tape-creation-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteAutomaticTapeCreationPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-automatic-tape-creation-policy))
(common-lisp:progn
 (common-lisp:defun delete-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn bandwidth-type)
   (common-lisp:declare (common-lisp:ignorable gateway-arn bandwidth-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-delete-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteBandwidthRateLimit"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun delete-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn initiator-name)
   (common-lisp:declare (common-lisp:ignorable target-arn initiator-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteChapCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-chap-credentials))
(common-lisp:progn
 (common-lisp:defun delete-file-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn force-delete)
   (common-lisp:declare (common-lisp:ignorable file-share-arn force-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-file-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteFileShare"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-file-share))
(common-lisp:progn
 (common-lisp:defun delete-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteGateway"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-gateway))
(common-lisp:progn
 (common-lisp:defun delete-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteSnapshotSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun delete-tape
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arn
                     bypass-governance-retention)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-arn bypass-governance-retention))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tape-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTape"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-tape))
(common-lisp:progn
 (common-lisp:defun delete-tape-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn bypass-governance-retention)
   (common-lisp:declare
    (common-lisp:ignorable tape-arn bypass-governance-retention))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tape-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTapeArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-tape-archive))
(common-lisp:progn
 (common-lisp:defun delete-tape-pool
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-arn)
   (common-lisp:declare (common-lisp:ignorable pool-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-tape-pool-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteTapePool"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-tape-pool))
(common-lisp:progn
 (common-lisp:defun delete-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-volume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DeleteVolume"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-volume))
(common-lisp:progn
 (common-lisp:defun describe-availability-monitor-test
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-availability-monitor-test-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeAvailabilityMonitorTest"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-availability-monitor-test))
(common-lisp:progn
 (common-lisp:defun describe-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBandwidthRateLimit"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun describe-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeBandwidthRateLimitSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun describe-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-cache))
(common-lisp:progn
 (common-lisp:defun describe-cachedi-scsivolumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns)
   (common-lisp:declare (common-lisp:ignorable volume-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-cachedi-scsivolumes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeCachediSCSIVolumes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-cachedi-scsivolumes))
(common-lisp:progn
 (common-lisp:defun describe-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn)
   (common-lisp:declare (common-lisp:ignorable target-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeChapCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-chap-credentials))
(common-lisp:progn
 (common-lisp:defun describe-file-system-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-association-arnlist)
   (common-lisp:declare
    (common-lisp:ignorable file-system-association-arnlist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-file-system-associations-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeFileSystemAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-file-system-associations))
(common-lisp:progn
 (common-lisp:defun describe-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-gateway-information-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeGatewayInformation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-gateway-information))
(common-lisp:progn
 (common-lisp:defun describe-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-maintenance-start-time-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeMaintenanceStartTime"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun describe-nfsfile-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arnlist)
   (common-lisp:declare (common-lisp:ignorable file-share-arnlist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-nfsfile-shares-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeNFSFileShares"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-nfsfile-shares))
(common-lisp:progn
 (common-lisp:defun describe-smbfile-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arnlist)
   (common-lisp:declare (common-lisp:ignorable file-share-arnlist))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-smbfile-shares-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSMBFileShares"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-smbfile-shares))
(common-lisp:progn
 (common-lisp:defun describe-smbsettings
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-smbsettings-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSMBSettings"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-smbsettings))
(common-lisp:progn
 (common-lisp:defun describe-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeSnapshotSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun describe-storedi-scsivolumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arns)
   (common-lisp:declare (common-lisp:ignorable volume-arns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-storedi-scsivolumes-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeStorediSCSIVolumes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-storedi-scsivolumes))
(common-lisp:progn
 (common-lisp:defun describe-tape-archives
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arns marker limit)
   (common-lisp:declare (common-lisp:ignorable tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tape-archives-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapeArchives"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-tape-archives))
(common-lisp:progn
 (common-lisp:defun describe-tape-recovery-points
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable gateway-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-describe-tape-recovery-points-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapeRecoveryPoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-tape-recovery-points))
(common-lisp:progn
 (common-lisp:defun describe-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn tape-arns marker limit)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeTapes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-tapes))
(common-lisp:progn
 (common-lisp:defun describe-upload-buffer
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-upload-buffer-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeUploadBuffer"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-upload-buffer))
(common-lisp:progn
 (common-lisp:defun describe-vtldevices
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn vtldevice-arns marker limit)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn vtldevice-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-vtldevices-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeVTLDevices"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-vtldevices))
(common-lisp:progn
 (common-lisp:defun describe-working-storage
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-describe-working-storage-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DescribeWorkingStorage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'describe-working-storage))
(common-lisp:progn
 (common-lisp:defun detach-volume
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn force-detach)
   (common-lisp:declare (common-lisp:ignorable volume-arn force-detach))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-detach-volume-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DetachVolume"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'detach-volume))
(common-lisp:progn
 (common-lisp:defun disable-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disable-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisableGateway"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disable-gateway))
(common-lisp:progn
 (common-lisp:defun disassociate-file-system
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-association-arn force-delete)
   (common-lisp:declare
    (common-lisp:ignorable file-system-association-arn force-delete))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-disassociate-file-system-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "DisassociateFileSystem"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'disassociate-file-system))
(common-lisp:progn
 (common-lisp:defun join-domain
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn domain-name
                     organizational-unit domain-controllers timeout-in-seconds
                     user-name password)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn domain-name organizational-unit
     domain-controllers timeout-in-seconds user-name password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-join-domain-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "JoinDomain"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'join-domain))
(common-lisp:progn
 (common-lisp:defun list-automatic-tape-creation-policies
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-automatic-tape-creation-policies-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListAutomaticTapeCreationPolicies"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-automatic-tape-creation-policies))
(common-lisp:progn
 (common-lisp:defun list-file-shares
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn limit marker)
   (common-lisp:declare (common-lisp:ignorable gateway-arn limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-file-shares-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFileShares"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-file-shares))
(common-lisp:progn
 (common-lisp:defun list-file-system-associations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn limit marker)
   (common-lisp:declare (common-lisp:ignorable gateway-arn limit marker))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-file-system-associations-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListFileSystemAssociations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-file-system-associations))
(common-lisp:progn
 (common-lisp:defun list-gateways
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key marker limit)
   (common-lisp:declare (common-lisp:ignorable marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-gateways-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListGateways"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-gateways))
(common-lisp:progn
 (common-lisp:defun list-local-disks
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-local-disks-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListLocalDisks"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-local-disks))
(common-lisp:progn
 (common-lisp:defun list-tags-for-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable resource-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tags-for-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTagsForResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tags-for-resource))
(common-lisp:progn
 (common-lisp:defun list-tape-pools
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key pool-arns marker limit)
   (common-lisp:declare (common-lisp:ignorable pool-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tape-pools-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTapePools"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tape-pools))
(common-lisp:progn
 (common-lisp:defun list-tapes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arns marker limit)
   (common-lisp:declare (common-lisp:ignorable tape-arns marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-tapes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListTapes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-tapes))
(common-lisp:progn
 (common-lisp:defun list-volume-initiators
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn)
   (common-lisp:declare (common-lisp:ignorable volume-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-volume-initiators-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumeInitiators"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-volume-initiators))
(common-lisp:progn
 (common-lisp:defun list-volume-recovery-points
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-volume-recovery-points-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumeRecoveryPoints"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-volume-recovery-points))
(common-lisp:progn
 (common-lisp:defun list-volumes
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn marker limit)
   (common-lisp:declare (common-lisp:ignorable gateway-arn marker limit))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-volumes-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ListVolumes"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-volumes))
(common-lisp:progn
 (common-lisp:defun notify-when-uploaded
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn)
   (common-lisp:declare (common-lisp:ignorable file-share-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-notify-when-uploaded-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "NotifyWhenUploaded"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'notify-when-uploaded))
(common-lisp:progn
 (common-lisp:defun refresh-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn folder-list recursive)
   (common-lisp:declare
    (common-lisp:ignorable file-share-arn folder-list recursive))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-refresh-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RefreshCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'refresh-cache))
(common-lisp:progn
 (common-lisp:defun remove-tags-from-resource
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key resource-arn tag-keys)
   (common-lisp:declare (common-lisp:ignorable resource-arn tag-keys))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-remove-tags-from-resource-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RemoveTagsFromResource"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'remove-tags-from-resource))
(common-lisp:progn
 (common-lisp:defun reset-cache
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-reset-cache-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ResetCache"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'reset-cache))
(common-lisp:progn
 (common-lisp:defun retrieve-tape-archive
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn gateway-arn)
   (common-lisp:declare (common-lisp:ignorable tape-arn gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-retrieve-tape-archive-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RetrieveTapeArchive"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'retrieve-tape-archive))
(common-lisp:progn
 (common-lisp:defun retrieve-tape-recovery-point
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key tape-arn gateway-arn)
   (common-lisp:declare (common-lisp:ignorable tape-arn gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-retrieve-tape-recovery-point-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "RetrieveTapeRecoveryPoint"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'retrieve-tape-recovery-point))
(common-lisp:progn
 (common-lisp:defun set-local-console-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn local-console-password)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn local-console-password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-local-console-password-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetLocalConsolePassword"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'set-local-console-password))
(common-lisp:progn
 (common-lisp:defun set-smbguest-password
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn password)
   (common-lisp:declare (common-lisp:ignorable gateway-arn password))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-set-smbguest-password-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "SetSMBGuestPassword"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'set-smbguest-password))
(common-lisp:progn
 (common-lisp:defun shutdown-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-shutdown-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "ShutdownGateway"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'shutdown-gateway))
(common-lisp:progn
 (common-lisp:defun start-availability-monitor-test
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-start-availability-monitor-test-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartAvailabilityMonitorTest"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-availability-monitor-test))
(common-lisp:progn
 (common-lisp:defun start-gateway
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-start-gateway-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "StartGateway"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'start-gateway))
(common-lisp:progn
 (common-lisp:defun update-automatic-tape-creation-policy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key automatic-tape-creation-rules
                     gateway-arn)
   (common-lisp:declare
    (common-lisp:ignorable automatic-tape-creation-rules gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-automatic-tape-creation-policy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateAutomaticTapeCreationPolicy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-automatic-tape-creation-policy))
(common-lisp:progn
 (common-lisp:defun update-bandwidth-rate-limit
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn
                     average-upload-rate-limit-in-bits-per-sec
                     average-download-rate-limit-in-bits-per-sec)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn
     average-upload-rate-limit-in-bits-per-sec
     average-download-rate-limit-in-bits-per-sec))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-bandwidth-rate-limit-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateBandwidthRateLimit"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-bandwidth-rate-limit))
(common-lisp:progn
 (common-lisp:defun update-bandwidth-rate-limit-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn
                     bandwidth-rate-limit-intervals)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn bandwidth-rate-limit-intervals))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-bandwidth-rate-limit-schedule-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateBandwidthRateLimitSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-bandwidth-rate-limit-schedule))
(common-lisp:progn
 (common-lisp:defun update-chap-credentials
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key target-arn
                     secret-to-authenticate-initiator initiator-name
                     secret-to-authenticate-target)
   (common-lisp:declare
    (common-lisp:ignorable target-arn secret-to-authenticate-initiator
     initiator-name secret-to-authenticate-target))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-chap-credentials-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateChapCredentials"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-chap-credentials))
(common-lisp:progn
 (common-lisp:defun update-file-system-association
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-system-association-arn user-name
                     password audit-destination-arn cache-attributes)
   (common-lisp:declare
    (common-lisp:ignorable file-system-association-arn user-name password
     audit-destination-arn cache-attributes))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-file-system-association-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateFileSystemAssociation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-file-system-association))
(common-lisp:progn
 (common-lisp:defun update-gateway-information
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn gateway-name gateway-timezone
                     cloud-watch-log-group-arn gateway-capacity)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn gateway-name gateway-timezone
     cloud-watch-log-group-arn gateway-capacity))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-gateway-information-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateGatewayInformation"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-gateway-information))
(common-lisp:progn
 (common-lisp:defun update-gateway-software-now
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn)
   (common-lisp:declare (common-lisp:ignorable gateway-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-gateway-software-now-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateGatewaySoftwareNow"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-gateway-software-now))
(common-lisp:progn
 (common-lisp:defun update-maintenance-start-time
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn hour-of-day minute-of-hour
                     day-of-week day-of-month)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn hour-of-day minute-of-hour day-of-week
     day-of-month))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-maintenance-start-time-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateMaintenanceStartTime"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-maintenance-start-time))
(common-lisp:progn
 (common-lisp:defun update-nfsfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn kmsencrypted kmskey
                     nfsfile-share-defaults default-storage-class object-acl
                     client-list squash read-only guess-mimetype-enabled
                     requester-pays file-share-name cache-attributes
                     notification-policy audit-destination-arn)
   (common-lisp:declare
    (common-lisp:ignorable file-share-arn kmsencrypted kmskey
     nfsfile-share-defaults default-storage-class object-acl client-list squash
     read-only guess-mimetype-enabled requester-pays file-share-name
     cache-attributes notification-policy audit-destination-arn))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-nfsfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateNFSFileShare"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-nfsfile-share))
(common-lisp:progn
 (common-lisp:defun update-smbfile-share
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key file-share-arn kmsencrypted kmskey
                     default-storage-class object-acl read-only
                     guess-mimetype-enabled requester-pays smbaclenabled
                     access-based-enumeration admin-user-list valid-user-list
                     invalid-user-list audit-destination-arn case-sensitivity
                     file-share-name cache-attributes notification-policy
                     oplocks-enabled)
   (common-lisp:declare
    (common-lisp:ignorable file-share-arn kmsencrypted kmskey
     default-storage-class object-acl read-only guess-mimetype-enabled
     requester-pays smbaclenabled access-based-enumeration admin-user-list
     valid-user-list invalid-user-list audit-destination-arn case-sensitivity
     file-share-name cache-attributes notification-policy oplocks-enabled))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-smbfile-share-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSMBFileShare"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-smbfile-share))
(common-lisp:progn
 (common-lisp:defun update-smbfile-share-visibility
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn file-shares-visible)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn file-shares-visible))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-smbfile-share-visibility-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSMBFileShareVisibility"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-smbfile-share-visibility))
(common-lisp:progn
 (common-lisp:defun update-smblocal-groups
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn smblocal-groups)
   (common-lisp:declare (common-lisp:ignorable gateway-arn smblocal-groups))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-smblocal-groups-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSMBLocalGroups"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-smblocal-groups))
(common-lisp:progn
 (common-lisp:defun update-smbsecurity-strategy
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key gateway-arn smbsecurity-strategy)
   (common-lisp:declare
    (common-lisp:ignorable gateway-arn smbsecurity-strategy))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-update-smbsecurity-strategy-input
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSMBSecurityStrategy"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-smbsecurity-strategy))
(common-lisp:progn
 (common-lisp:defun update-snapshot-schedule
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key volume-arn start-at recurrence-in-hours
                     description tags)
   (common-lisp:declare
    (common-lisp:ignorable volume-arn start-at recurrence-in-hours description
     tags))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-snapshot-schedule-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateSnapshotSchedule"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-snapshot-schedule))
(common-lisp:progn
 (common-lisp:defun update-vtldevice-type
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key vtldevice-arn device-type)
   (common-lisp:declare (common-lisp:ignorable vtldevice-arn device-type))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-vtldevice-type-input
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'storagegateway-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/"
                                                        "UpdateVTLDeviceType"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-vtldevice-type))
