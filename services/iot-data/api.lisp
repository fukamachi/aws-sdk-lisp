;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/iot-data/api (:use)
                             (:nicknames #:aws/iot-data)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/iot-data/api)
(common-lisp:progn
 (common-lisp:define-condition iot-data-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'iot-data-error))
(common-lisp:progn
 (common-lisp:defclass iot-data-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "iot-data" :api-version
                        "2015-05-28" :host-prefix "data-ats.iot" :signing-name
                        "iotdata" :global-host common-lisp:nil))
 (common-lisp:export 'iot-data-request))
(common-lisp:defvar *error-map*
  '(("ConflictException" . conflict-exception)
    ("InternalFailureException" . internal-failure-exception)
    ("InvalidRequestException" . invalid-request-exception)
    ("MethodNotAllowedException" . method-not-allowed-exception)
    ("RequestEntityTooLargeException" . request-entity-too-large-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)
    ("ServiceUnavailableException" . service-unavailable-exception)
    ("ThrottlingException" . throttling-exception)
    ("UnauthorizedException" . unauthorized-exception)
    ("UnsupportedDocumentEncodingException"
     . unsupported-document-encoding-exception)))
(common-lisp:progn
 (common-lisp:define-condition conflict-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       conflict-exception-message)))
 (common-lisp:export
  (common-lisp:list 'conflict-exception 'conflict-exception-message)))
(common-lisp:deftype content-type () 'common-lisp:string)
(common-lisp:deftype correlation-data () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass delete-thing-shadow-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         struct-shape-delete-thing-shadow-request-thing-name
                         :shape "ThingName" :location "uri" :location-name
                         "thingName")
                        (shadow-name :initarg :shadow-name :initform
                         common-lisp:nil :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor
                         struct-shape-delete-thing-shadow-request-shadow-name
                         :shape "ShadowName" :location "querystring"
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-thing-shadow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-thing-shadow-request
                    'make-delete-thing-shadow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass delete-thing-shadow-response common-lisp:nil
                       ((payload :initarg :payload :initform
                         (common-lisp:error ":payload is required") :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor
                         struct-shape-delete-thing-shadow-response-payload
                         :shape "JsonDocument" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-delete-thing-shadow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'delete-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'delete-thing-shadow-response
                    'make-delete-thing-shadow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          delete-thing-shadow-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass get-retained-message-request common-lisp:nil
                       ((topic :initarg :topic :initform
                         (common-lisp:error ":topic is required") :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         struct-shape-get-retained-message-request-topic :shape
                         "Topic" :location "uri" :location-name "topic"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-retained-message-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-retained-message-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-retained-message-request
                    'make-get-retained-message-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-retained-message-response common-lisp:nil
                       ((topic :initarg :topic :initform common-lisp:nil :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         struct-shape-get-retained-message-response-topic
                         :shape "Topic" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor
                         struct-shape-get-retained-message-response-payload
                         :shape "Payload" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (qos :initarg :qos :initform common-lisp:nil :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         struct-shape-get-retained-message-response-qos :shape
                         "Qos" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-get-retained-message-response-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-properties :initarg :user-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or user-properties-blob common-lisp:null)
                         :accessor
                         struct-shape-get-retained-message-response-user-properties
                         :shape "UserPropertiesBlob" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-retained-message-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-retained-message-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-retained-message-response
                    'make-get-retained-message-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic))
      (common-lisp:list
       (common-lisp:cons "topic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qos))
      (common-lisp:list
       (common-lisp:cons "qos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-properties))
      (common-lisp:list
       (common-lisp:cons "userProperties"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-retained-message-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-shadow-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         struct-shape-get-thing-shadow-request-thing-name
                         :shape "ThingName" :location "uri" :location-name
                         "thingName")
                        (shadow-name :initarg :shadow-name :initform
                         common-lisp:nil :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor
                         struct-shape-get-thing-shadow-request-shadow-name
                         :shape "ShadowName" :location "querystring"
                         :location-name "name"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-thing-shadow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-thing-shadow-request 'make-get-thing-shadow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-thing-shadow-response common-lisp:nil
                       ((payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or json-document common-lisp:null)
                         :accessor
                         struct-shape-get-thing-shadow-response-payload :shape
                         "JsonDocument" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-thing-shadow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-thing-shadow-response
                    'make-get-thing-shadow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          get-thing-shadow-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:define-condition internal-failure-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-failure-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-failure-exception
                    'internal-failure-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition invalid-request-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-request-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-request-exception
                    'invalid-request-exception-message)))
(common-lisp:deftype json-document ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:progn
 (common-lisp:defclass list-named-shadows-for-thing-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         struct-shape-list-named-shadows-for-thing-request-thing-name
                         :shape "ThingName" :location "uri" :location-name
                         "thingName")
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-named-shadows-for-thing-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (page-size :initarg :page-size :initform
                         common-lisp:nil :type
                         (common-lisp:or page-size common-lisp:null) :accessor
                         struct-shape-list-named-shadows-for-thing-request-page-size
                         :shape "PageSize" :location "querystring"
                         :location-name "pageSize"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-named-shadows-for-thing-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-named-shadows-for-thing-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-named-shadows-for-thing-request
                    'make-list-named-shadows-for-thing-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-named-shadows-for-thing-response common-lisp:nil
                       ((results :initarg :results :initform common-lisp:nil
                         :type
                         (common-lisp:or named-shadow-list common-lisp:null)
                         :accessor
                         struct-shape-list-named-shadows-for-thing-response-results
                         :shape "NamedShadowList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-named-shadows-for-thing-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-list-named-shadows-for-thing-response-timestamp
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-named-shadows-for-thing-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-named-shadows-for-thing-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-named-shadows-for-thing-response
                    'make-list-named-shadows-for-thing-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'results))
      (common-lisp:list
       (common-lisp:cons "results"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-named-shadows-for-thing-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-retained-messages-request common-lisp:nil
                       ((next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-retained-messages-request-next-token
                         :shape "NextToken" :location "querystring"
                         :location-name "nextToken")
                        (max-results :initarg :max-results :initform
                         common-lisp:nil :type
                         (common-lisp:or max-results common-lisp:null)
                         :accessor
                         struct-shape-list-retained-messages-request-max-results
                         :shape "MaxResults" :location "querystring"
                         :location-name "maxResults"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-retained-messages-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-retained-messages-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-retained-messages-request
                    'make-list-retained-messages-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass list-retained-messages-response common-lisp:nil
                       ((retained-topics :initarg :retained-topics :initform
                         common-lisp:nil :type
                         (common-lisp:or retained-message-list
                                         common-lisp:null)
                         :accessor
                         struct-shape-list-retained-messages-response-retained-topics
                         :shape "RetainedMessageList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (next-token :initarg :next-token :initform
                         common-lisp:nil :type
                         (common-lisp:or next-token common-lisp:null) :accessor
                         struct-shape-list-retained-messages-response-next-token
                         :shape "NextToken" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-list-retained-messages-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'list-retained-messages-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'list-retained-messages-response
                    'make-list-retained-messages-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'retained-topics))
      (common-lisp:list
       (common-lisp:cons "retainedTopics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'next-token))
      (common-lisp:list
       (common-lisp:cons "nextToken"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          list-retained-messages-response))
   common-lisp:nil))
(common-lisp:deftype max-results () 'common-lisp:integer)
(common-lisp:deftype message-expiry () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition method-not-allowed-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       method-not-allowed-exception-message)))
 (common-lisp:export
  (common-lisp:list 'method-not-allowed-exception
                    'method-not-allowed-exception-message)))
(common-lisp:progn
 (common-lisp:deftype named-shadow-list ()
   '(trivial-types:proper-list shadow-name))
 (common-lisp:defun make-named-shadow-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list shadow-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype next-token () 'common-lisp:string)
(common-lisp:deftype page-size () 'common-lisp:integer)
(common-lisp:deftype payload ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype payload-format-indicator () 'common-lisp:string)
(common-lisp:deftype payload-size () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass publish-request common-lisp:nil
                       ((topic :initarg :topic :initform
                         (common-lisp:error ":topic is required") :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         struct-shape-publish-request-topic :shape "Topic"
                         :location "uri" :location-name "topic")
                        (qos :initarg :qos :initform common-lisp:nil :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         struct-shape-publish-request-qos :shape "Qos"
                         :location "querystring" :location-name "qos")
                        (retain :initarg :retain :initform common-lisp:nil
                         :type (common-lisp:or retain common-lisp:null)
                         :accessor struct-shape-publish-request-retain :shape
                         "Retain" :location "querystring" :location-name
                         "retain")
                        (payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or payload common-lisp:null)
                         :accessor struct-shape-publish-request-payload :shape
                         "Payload" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-properties :initarg :user-properties :initform
                         common-lisp:nil :type
                         (common-lisp:or user-properties common-lisp:null)
                         :accessor struct-shape-publish-request-user-properties
                         :shape "UserProperties" :location "header"
                         :location-name "x-amz-mqtt5-user-properties")
                        (payload-format-indicator :initarg
                         :payload-format-indicator :initform common-lisp:nil
                         :type
                         (common-lisp:or payload-format-indicator
                                         common-lisp:null)
                         :accessor
                         struct-shape-publish-request-payload-format-indicator
                         :shape "PayloadFormatIndicator" :location "header"
                         :location-name "x-amz-mqtt5-payload-format-indicator")
                        (content-type :initarg :content-type :initform
                         common-lisp:nil :type
                         (common-lisp:or content-type common-lisp:null)
                         :accessor struct-shape-publish-request-content-type
                         :shape "ContentType" :location "querystring"
                         :location-name "contentType")
                        (response-topic :initarg :response-topic :initform
                         common-lisp:nil :type
                         (common-lisp:or response-topic common-lisp:null)
                         :accessor struct-shape-publish-request-response-topic
                         :shape "ResponseTopic" :location "querystring"
                         :location-name "responseTopic")
                        (correlation-data :initarg :correlation-data :initform
                         common-lisp:nil :type
                         (common-lisp:or correlation-data common-lisp:null)
                         :accessor
                         struct-shape-publish-request-correlation-data :shape
                         "CorrelationData" :location "header" :location-name
                         "x-amz-mqtt5-correlation-data")
                        (message-expiry :initarg :message-expiry :initform
                         common-lisp:nil :type
                         (common-lisp:or message-expiry common-lisp:null)
                         :accessor struct-shape-publish-request-message-expiry
                         :shape "MessageExpiry" :location "querystring"
                         :location-name "messageExpiry"))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-publish-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'publish-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'publish-request 'make-publish-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-properties))
      (common-lisp:cons "x-amz-mqtt5-user-properties"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'payload-format-indicator))
      (common-lisp:cons "x-amz-mqtt5-payload-format-indicator"
                        aws-sdk/generator/shape::value))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'correlation-data))
      (common-lisp:cons "x-amz-mqtt5-correlation-data"
                        aws-sdk/generator/shape::value))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        ((aws-sdk/generator/shape::input publish-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype qos () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:define-condition request-entity-too-large-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       request-entity-too-large-exception-message)))
 (common-lisp:export
  (common-lisp:list 'request-entity-too-large-exception
                    'request-entity-too-large-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype response-topic () 'common-lisp:string)
(common-lisp:deftype retain () 'common-lisp:boolean)
(common-lisp:progn
 (common-lisp:deftype retained-message-list ()
   '(trivial-types:proper-list retained-message-summary))
 (common-lisp:defun make-retained-message-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list
                            retained-message-summary))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass retained-message-summary common-lisp:nil
                       ((topic :initarg :topic :initform common-lisp:nil :type
                         (common-lisp:or topic common-lisp:null) :accessor
                         struct-shape-retained-message-summary-topic :shape
                         "Topic" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (payload-size :initarg :payload-size :initform
                         common-lisp:nil :type
                         (common-lisp:or payload-size common-lisp:null)
                         :accessor
                         struct-shape-retained-message-summary-payload-size
                         :shape "PayloadSize" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (qos :initarg :qos :initform common-lisp:nil :type
                         (common-lisp:or qos common-lisp:null) :accessor
                         struct-shape-retained-message-summary-qos :shape "Qos"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (last-modified-time :initarg :last-modified-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-retained-message-summary-last-modified-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-retained-message-summary
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'retained-message-summary
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'retained-message-summary 'make-retained-message-summary))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'topic))
      (common-lisp:list
       (common-lisp:cons "topic"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload-size))
      (common-lisp:list
       (common-lisp:cons "payloadSize"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'qos))
      (common-lisp:list
       (common-lisp:cons "qos"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'last-modified-time))
      (common-lisp:list
       (common-lisp:cons "lastModifiedTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          retained-message-summary))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition service-unavailable-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       service-unavailable-exception-message)))
 (common-lisp:export
  (common-lisp:list 'service-unavailable-exception
                    'service-unavailable-exception-message)))
(common-lisp:deftype shadow-name () 'common-lisp:string)
(common-lisp:deftype thing-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition throttling-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       throttling-exception-message)))
 (common-lisp:export
  (common-lisp:list 'throttling-exception 'throttling-exception-message)))
(common-lisp:deftype timestamp () 'common-lisp:integer)
(common-lisp:deftype topic () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition unauthorized-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unauthorized-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unauthorized-exception 'unauthorized-exception-message)))
(common-lisp:progn
 (common-lisp:define-condition unsupported-document-encoding-exception
     (iot-data-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       unsupported-document-encoding-exception-message)))
 (common-lisp:export
  (common-lisp:list 'unsupported-document-encoding-exception
                    'unsupported-document-encoding-exception-message)))
(common-lisp:progn
 (common-lisp:defclass update-thing-shadow-request common-lisp:nil
                       ((thing-name :initarg :thing-name :initform
                         (common-lisp:error ":thingname is required") :type
                         (common-lisp:or thing-name common-lisp:null) :accessor
                         struct-shape-update-thing-shadow-request-thing-name
                         :shape "ThingName" :location "uri" :location-name
                         "thingName")
                        (shadow-name :initarg :shadow-name :initform
                         common-lisp:nil :type
                         (common-lisp:or shadow-name common-lisp:null)
                         :accessor
                         struct-shape-update-thing-shadow-request-shadow-name
                         :shape "ShadowName" :location "querystring"
                         :location-name "name")
                        (payload :initarg :payload :initform
                         (common-lisp:error ":payload is required") :type
                         (common-lisp:or json-document common-lisp:null)
                         :accessor
                         struct-shape-update-thing-shadow-request-payload
                         :shape "JsonDocument" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-thing-shadow-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-thing-shadow-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-thing-shadow-request
                    'make-update-thing-shadow-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-request))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:progn
 (common-lisp:defclass update-thing-shadow-response common-lisp:nil
                       ((payload :initarg :payload :initform common-lisp:nil
                         :type (common-lisp:or json-document common-lisp:null)
                         :accessor
                         struct-shape-update-thing-shadow-response-payload
                         :shape "JsonDocument" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-update-thing-shadow-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'update-thing-shadow-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'update-thing-shadow-response
                    'make-update-thing-shadow-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'payload))
      (common-lisp:list
       (common-lisp:cons "payload"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:slot-value aws-sdk/generator/shape::input 'payload))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload-properties
                        (
                         (aws-sdk/generator/shape::input
                          update-thing-shadow-response))
   (common-lisp:declare (common-lisp:ignore aws-sdk/generator/shape::input))
   (common-lisp:list)))
(common-lisp:deftype user-properties () 'common-lisp:string)
(common-lisp:deftype user-properties-blob ()
  '(common-lisp:simple-array (common-lisp:unsigned-byte 8) (common-lisp:*)))
(common-lisp:deftype |errorMessage| () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun delete-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-delete-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "DELETE"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "DeleteThingShadow")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'delete-thing-shadow))
(common-lisp:progn
 (common-lisp:defun get-retained-message
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic)
   (common-lisp:declare (common-lisp:ignorable topic))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-retained-message-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/retainedMessage/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'topic))))
                                                        "GetRetainedMessage"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-retained-message))
(common-lisp:progn
 (common-lisp:defun get-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "GetThingShadow")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-thing-shadow))
(common-lisp:progn
 (common-lisp:defun list-named-shadows-for-thing
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name next-token page-size)
   (common-lisp:declare
    (common-lisp:ignorable thing-name next-token page-size))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-list-named-shadows-for-thing-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/api/things/shadow/ListNamedShadowsForThing/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "ListNamedShadowsForThing"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-named-shadows-for-thing))
(common-lisp:progn
 (common-lisp:defun list-retained-messages
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key next-token max-results)
   (common-lisp:declare (common-lisp:ignorable next-token max-results))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-list-retained-messages-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "GET"
                                                        "/retainedMessage"
                                                        "ListRetainedMessages"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'list-retained-messages))
(common-lisp:progn
 (common-lisp:defun publish
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key topic qos retain payload user-properties
                     payload-format-indicator content-type response-topic
                     correlation-data message-expiry)
   (common-lisp:declare
    (common-lisp:ignorable topic qos retain payload user-properties
     payload-format-indicator content-type response-topic correlation-data
     message-expiry))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-publish-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/topics/~A"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'topic))))
                                                        "Publish"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'publish))
(common-lisp:progn
 (common-lisp:defun update-thing-shadow
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key thing-name shadow-name payload)
   (common-lisp:declare (common-lisp:ignorable thing-name shadow-name payload))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-update-thing-shadow-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'iot-data-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        (common-lisp:lambda
                                                            (
                                                             aws-sdk/generator/operation::input)
                                                          (common-lisp:format
                                                           common-lisp:nil
                                                           "/things/~A/shadow"
                                                           (quri.encode:url-encode
                                                            (common-lisp:slot-value
                                                             aws-sdk/generator/operation::input
                                                             'thing-name))))
                                                        "UpdateThingShadow")
       :want-stream common-lisp:t)
      "blob" common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'update-thing-shadow))
