;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/personalize-runtime/api (:use)
                             (:nicknames #:aws/personalize-runtime)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/personalize-runtime/api)
(common-lisp:progn
 (common-lisp:define-condition personalize-runtime-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'personalize-runtime-error))
(common-lisp:progn
 (common-lisp:defclass personalize-runtime-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "personalize-runtime"
                        :api-version "2018-05-22" :host-prefix
                        "personalize-runtime" :signing-name "personalize"
                        :global-host common-lisp:nil))
 (common-lisp:export 'personalize-runtime-request))
(common-lisp:defvar *error-map*
  '(("InvalidInputException" . invalid-input-exception)
    ("ResourceNotFoundException" . resource-not-found-exception)))
(common-lisp:deftype action-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype action-list ()
   '(trivial-types:proper-list predicted-action))
 (common-lisp:defun make-action-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list predicted-action))
   aws-sdk/generator/shape::members))
(common-lisp:deftype arn () 'common-lisp:string)
(common-lisp:deftype attribute-name () 'common-lisp:string)
(common-lisp:deftype attribute-value () 'common-lisp:string)
(common-lisp:deftype column-name () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype column-names-list ()
   '(trivial-types:proper-list column-name))
 (common-lisp:defun make-column-names-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list column-name))
   aws-sdk/generator/shape::members))
(common-lisp:deftype column-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype context () 'common-lisp:hash-table)
 (common-lisp:defun make-context (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype dataset-type () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype filter-attribute-name () 'common-lisp:string)
(common-lisp:deftype filter-attribute-value () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype filter-values () 'common-lisp:hash-table)
 (common-lisp:defun make-filter-values (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:defclass get-action-recommendations-request common-lisp:nil
                       ((campaign-arn :initarg :campaign-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-action-recommendations-request-campaign-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor
                         struct-shape-get-action-recommendations-request-user-id
                         :shape "UserID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (num-results :initarg :num-results :initform
                         common-lisp:nil :type
                         (common-lisp:or num-results common-lisp:null)
                         :accessor
                         struct-shape-get-action-recommendations-request-num-results
                         :shape "NumResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-arn :initarg :filter-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-action-recommendations-request-filter-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-values :initarg :filter-values :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-get-action-recommendations-request-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-action-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-action-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-action-recommendations-request
                    'make-get-action-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-arn))
      (common-lisp:list
       (common-lisp:cons "campaignArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "numResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-arn))
      (common-lisp:list
       (common-lisp:cons "filterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-values))
      (common-lisp:list
       (common-lisp:cons "filterValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-action-recommendations-response common-lisp:nil
                       ((action-list :initarg :action-list :initform
                         common-lisp:nil :type
                         (common-lisp:or action-list common-lisp:null)
                         :accessor
                         struct-shape-get-action-recommendations-response-action-list
                         :shape "ActionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-id common-lisp:null)
                         :accessor
                         struct-shape-get-action-recommendations-response-recommendation-id
                         :shape "RecommendationID" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-action-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-action-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-action-recommendations-response
                    'make-get-action-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-list))
      (common-lisp:list
       (common-lisp:cons "actionList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "recommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-action-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-personalized-ranking-request common-lisp:nil
                       ((campaign-arn :initarg :campaign-arn :initform
                         (common-lisp:error ":campaignarn is required") :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-personalized-ranking-request-campaign-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (input-list :initarg :input-list :initform
                         (common-lisp:error ":inputlist is required") :type
                         (common-lisp:or input-list common-lisp:null) :accessor
                         struct-shape-get-personalized-ranking-request-input-list
                         :shape "InputList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform
                         (common-lisp:error ":userid is required") :type
                         (common-lisp:or user-id common-lisp:null) :accessor
                         struct-shape-get-personalized-ranking-request-user-id
                         :shape "UserID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or context common-lisp:null)
                         :accessor
                         struct-shape-get-personalized-ranking-request-context
                         :shape "Context" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-arn :initarg :filter-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-personalized-ranking-request-filter-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-values :initarg :filter-values :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-get-personalized-ranking-request-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata-columns :initarg :metadata-columns :initform
                         common-lisp:nil :type
                         (common-lisp:or metadata-columns common-lisp:null)
                         :accessor
                         struct-shape-get-personalized-ranking-request-metadata-columns
                         :shape "MetadataColumns" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-personalized-ranking-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-personalized-ranking-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-personalized-ranking-request
                    'make-get-personalized-ranking-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-arn))
      (common-lisp:list
       (common-lisp:cons "campaignArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'input-list))
      (common-lisp:list
       (common-lisp:cons "inputList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-arn))
      (common-lisp:list
       (common-lisp:cons "filterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-values))
      (common-lisp:list
       (common-lisp:cons "filterValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-columns))
      (common-lisp:list
       (common-lisp:cons "metadataColumns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-personalized-ranking-response common-lisp:nil
                       ((personalized-ranking :initarg :personalized-ranking
                         :initform common-lisp:nil :type
                         (common-lisp:or item-list common-lisp:null) :accessor
                         struct-shape-get-personalized-ranking-response-personalized-ranking
                         :shape "ItemList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-id common-lisp:null)
                         :accessor
                         struct-shape-get-personalized-ranking-response-recommendation-id
                         :shape "RecommendationID" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-personalized-ranking-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-personalized-ranking-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-personalized-ranking-response
                    'make-get-personalized-ranking-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'personalized-ranking))
      (common-lisp:list
       (common-lisp:cons "personalizedRanking"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "recommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-personalized-ranking-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendations-request common-lisp:nil
                       ((campaign-arn :initarg :campaign-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-recommendations-request-campaign-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (item-id :initarg :item-id :initform common-lisp:nil
                         :type (common-lisp:or item-id common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-item-id
                         :shape "ItemID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (user-id :initarg :user-id :initform common-lisp:nil
                         :type (common-lisp:or user-id common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-user-id
                         :shape "UserID" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (num-results :initarg :num-results :initform
                         common-lisp:nil :type
                         (common-lisp:or num-results common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-num-results
                         :shape "NumResults" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (context :initarg :context :initform common-lisp:nil
                         :type (common-lisp:or context common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-context
                         :shape "Context" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-arn :initarg :filter-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-recommendations-request-filter-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-values :initarg :filter-values :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-filter-values
                         :shape "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommender-arn :initarg :recommender-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-get-recommendations-request-recommender-arn
                         :shape "Arn" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (promotions :initarg :promotions :initform
                         common-lisp:nil :type
                         (common-lisp:or promotion-list common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-promotions
                         :shape "PromotionList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (metadata-columns :initarg :metadata-columns :initform
                         common-lisp:nil :type
                         (common-lisp:or metadata-columns common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-request-metadata-columns
                         :shape "MetadataColumns" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendations-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendations-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendations-request
                    'make-get-recommendations-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'campaign-arn))
      (common-lisp:list
       (common-lisp:cons "campaignArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-id))
      (common-lisp:list
       (common-lisp:cons "itemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'user-id))
      (common-lisp:list
       (common-lisp:cons "userId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'num-results))
      (common-lisp:list
       (common-lisp:cons "numResults"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'context))
      (common-lisp:list
       (common-lisp:cons "context"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-arn))
      (common-lisp:list
       (common-lisp:cons "filterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-values))
      (common-lisp:list
       (common-lisp:cons "filterValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommender-arn))
      (common-lisp:list
       (common-lisp:cons "recommenderArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'promotions))
      (common-lisp:list
       (common-lisp:cons "promotions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata-columns))
      (common-lisp:list
       (common-lisp:cons "metadataColumns"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-recommendations-response common-lisp:nil
                       ((item-list :initarg :item-list :initform
                         common-lisp:nil :type
                         (common-lisp:or item-list common-lisp:null) :accessor
                         struct-shape-get-recommendations-response-item-list
                         :shape "ItemList" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (recommendation-id :initarg :recommendation-id
                         :initform common-lisp:nil :type
                         (common-lisp:or recommendation-id common-lisp:null)
                         :accessor
                         struct-shape-get-recommendations-response-recommendation-id
                         :shape "RecommendationID" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-recommendations-response
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-recommendations-response
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-recommendations-response
                    'make-get-recommendations-response))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-response))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-response))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-list))
      (common-lisp:list
       (common-lisp:cons "itemList"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'recommendation-id))
      (common-lisp:list
       (common-lisp:cons "recommendationId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-recommendations-response))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype input-list () '(trivial-types:proper-list item-id))
 (common-lisp:defun make-input-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list item-id))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:define-condition invalid-input-exception
     (personalize-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       invalid-input-exception-message)))
 (common-lisp:export
  (common-lisp:list 'invalid-input-exception 'invalid-input-exception-message)))
(common-lisp:deftype item-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype item-list () '(trivial-types:proper-list predicted-item))
 (common-lisp:defun make-item-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list predicted-item))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:deftype metadata () 'common-lisp:hash-table)
 (common-lisp:defun make-metadata (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:progn
 (common-lisp:deftype metadata-columns () 'common-lisp:hash-table)
 (common-lisp:defun make-metadata-columns (aws-sdk/generator/shape::key-values)
   (common-lisp:etypecase aws-sdk/generator/shape::key-values
     (common-lisp:hash-table aws-sdk/generator/shape::key-values)
     (common-lisp:list
      (alexandria:alist-hash-table aws-sdk/generator/shape::key-values)))))
(common-lisp:deftype name () 'common-lisp:string)
(common-lisp:deftype num-results () 'common-lisp:integer)
(common-lisp:deftype percent-promoted-items () 'common-lisp:integer)
(common-lisp:progn
 (common-lisp:defclass predicted-action common-lisp:nil
                       ((action-id :initarg :action-id :initform
                         common-lisp:nil :type
                         (common-lisp:or action-id common-lisp:null) :accessor
                         struct-shape-predicted-action-action-id :shape
                         "ActionID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or score common-lisp:null) :accessor
                         struct-shape-predicted-action-score :shape "Score"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-predicted-action
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'predicted-action
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'predicted-action 'make-predicted-action))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input predicted-action))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input predicted-action))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'action-id))
      (common-lisp:list
       (common-lisp:cons "actionId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input predicted-action))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass predicted-item common-lisp:nil
                       ((item-id :initarg :item-id :initform common-lisp:nil
                         :type (common-lisp:or item-id common-lisp:null)
                         :accessor struct-shape-predicted-item-item-id :shape
                         "ItemID" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (score :initarg :score :initform common-lisp:nil :type
                         (common-lisp:or score common-lisp:null) :accessor
                         struct-shape-predicted-item-score :shape "Score"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (promotion-name :initarg :promotion-name :initform
                         common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-predicted-item-promotion-name :shape
                         "Name" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metadata :initarg :metadata :initform common-lisp:nil
                         :type (common-lisp:or metadata common-lisp:null)
                         :accessor struct-shape-predicted-item-metadata :shape
                         "Metadata" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-predicted-item
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'predicted-item
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'predicted-item 'make-predicted-item))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input predicted-item))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input predicted-item))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'item-id))
      (common-lisp:list
       (common-lisp:cons "itemId"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'score))
      (common-lisp:list
       (common-lisp:cons "score"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'promotion-name))
      (common-lisp:list
       (common-lisp:cons "promotionName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metadata))
      (common-lisp:list
       (common-lisp:cons "metadata"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input predicted-item))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass promotion common-lisp:nil
                       ((name :initarg :name :initform common-lisp:nil :type
                         (common-lisp:or name common-lisp:null) :accessor
                         struct-shape-promotion-name :shape "Name" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (percent-promoted-items :initarg
                         :percent-promoted-items :initform common-lisp:nil
                         :type
                         (common-lisp:or percent-promoted-items
                                         common-lisp:null)
                         :accessor
                         struct-shape-promotion-percent-promoted-items :shape
                         "PercentPromotedItems" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (filter-arn :initarg :filter-arn :initform
                         common-lisp:nil :type
                         (common-lisp:or arn common-lisp:null) :accessor
                         struct-shape-promotion-filter-arn :shape "Arn"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (filter-values :initarg :filter-values :initform
                         common-lisp:nil :type
                         (common-lisp:or filter-values common-lisp:null)
                         :accessor struct-shape-promotion-filter-values :shape
                         "FilterValues" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-promotion
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'promotion
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'promotion 'make-promotion))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input promotion))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input promotion))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'name))
      (common-lisp:list
       (common-lisp:cons "name"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'percent-promoted-items))
      (common-lisp:list
       (common-lisp:cons "percentPromotedItems"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-arn))
      (common-lisp:list
       (common-lisp:cons "filterArn"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'filter-values))
      (common-lisp:list
       (common-lisp:cons "filterValues"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input promotion))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype promotion-list () '(trivial-types:proper-list promotion))
 (common-lisp:defun make-promotion-list
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list promotion))
   aws-sdk/generator/shape::members))
(common-lisp:deftype recommendation-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:define-condition resource-not-found-exception
     (personalize-runtime-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       resource-not-found-exception-message)))
 (common-lisp:export
  (common-lisp:list 'resource-not-found-exception
                    'resource-not-found-exception-message)))
(common-lisp:deftype score () 'common-lisp:double-float)
(common-lisp:deftype user-id () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun get-action-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-arn user-id num-results
                     filter-arn filter-values)
   (common-lisp:declare
    (common-lisp:ignorable campaign-arn user-id num-results filter-arn
     filter-values))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply
                       'make-get-action-recommendations-request
                       aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-runtime-request aws-sdk/generator/operation::input "POST"
        "/action-recommendations" "GetActionRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-action-recommendations))
(common-lisp:progn
 (common-lisp:defun get-personalized-ranking
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-arn input-list user-id context
                     filter-arn filter-values metadata-columns)
   (common-lisp:declare
    (common-lisp:ignorable campaign-arn input-list user-id context filter-arn
     filter-values metadata-columns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-personalized-ranking-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-runtime-request aws-sdk/generator/operation::input "POST"
        "/personalize-ranking" "GetPersonalizedRanking"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-personalized-ranking))
(common-lisp:progn
 (common-lisp:defun get-recommendations
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key campaign-arn item-id user-id num-results
                     context filter-arn filter-values recommender-arn
                     promotions metadata-columns)
   (common-lisp:declare
    (common-lisp:ignorable campaign-arn item-id user-id num-results context
     filter-arn filter-values recommender-arn promotions metadata-columns))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-recommendations-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input
        'personalize-runtime-request aws-sdk/generator/operation::input "POST"
        "/recommendations" "GetRecommendations"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-recommendations))
