;; DO NOT EDIT: File is generated by AWS-SDK/GENERATOR.

(uiop/package:define-package #:aws-sdk/services/sagemaker-edge/api (:use)
                             (:nicknames #:aws/sagemaker-edge)
                             (:import-from #:aws-sdk/generator/shape)
                             (:import-from #:aws-sdk/generator/operation)
                             (:import-from #:aws-sdk/api)
                             (:import-from #:aws-sdk/request)
                             (:import-from #:aws-sdk/json-request)
                             (:import-from #:aws-sdk/rest-json-request)
                             (:import-from #:aws-sdk/rest-xml-request)
                             (:import-from #:aws-sdk/query-request)
                             (:import-from #:aws-sdk/error))
(common-lisp:in-package #:aws-sdk/services/sagemaker-edge/api)
(common-lisp:progn
 (common-lisp:define-condition sagemaker-edge-error
     (aws-sdk/error:aws-error)
     common-lisp:nil)
 (common-lisp:export 'sagemaker-edge-error))
(common-lisp:progn
 (common-lisp:defclass sagemaker-edge-request
                       (aws-sdk/generator/service::rest-json-request)
                       common-lisp:nil
                       (:default-initargs :service "sagemaker-edge"
                        :api-version "2020-09-23" :host-prefix "edge.sagemaker"
                        :signing-name "sagemaker" :global-host
                        common-lisp:nil))
 (common-lisp:export 'sagemaker-edge-request))
(common-lisp:defvar *error-map*
  '(("InternalServiceException" . internal-service-exception)))
(common-lisp:deftype cache-ttlseconds () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass checksum common-lisp:nil
                       ((type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or checksum-type common-lisp:null)
                         :accessor struct-shape-checksum-type :shape
                         "ChecksumType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (sum :initarg :sum :initform common-lisp:nil :type
                         (common-lisp:or checksum-string common-lisp:null)
                         :accessor struct-shape-checksum-sum :shape
                         "ChecksumString" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-checksum
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'checksum
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'checksum 'make-checksum))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input checksum))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input checksum))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'sum))
      (common-lisp:list
       (common-lisp:cons "Sum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input checksum))
   common-lisp:nil))
(common-lisp:deftype checksum-string () 'common-lisp:string)
(common-lisp:deftype checksum-type () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass definition common-lisp:nil
                       ((model-handle :initarg :model-handle :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-name common-lisp:null)
                         :accessor struct-shape-definition-model-handle :shape
                         "EntityName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (s3url :initarg :s3url :initform common-lisp:nil :type
                         (common-lisp:or s3uri common-lisp:null) :accessor
                         struct-shape-definition-s3url :shape "S3Uri" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (checksum :initarg :checksum :initform common-lisp:nil
                         :type (common-lisp:or checksum common-lisp:null)
                         :accessor struct-shape-definition-checksum :shape
                         "Checksum" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or model-state common-lisp:null)
                         :accessor struct-shape-definition-state :shape
                         "ModelState" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-definition
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'definition
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'definition 'make-definition))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input definition))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-handle))
      (common-lisp:list
       (common-lisp:cons "ModelHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 's3url))
      (common-lisp:list
       (common-lisp:cons "S3Url"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'checksum))
      (common-lisp:list
       (common-lisp:cons "Checksum"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input definition))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype definitions () '(trivial-types:proper-list definition))
 (common-lisp:defun make-definitions
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list definition))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass deployment-model common-lisp:nil
                       ((model-handle :initarg :model-handle :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-name common-lisp:null)
                         :accessor struct-shape-deployment-model-model-handle
                         :shape "EntityName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (model-name :initarg :model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or model-name common-lisp:null) :accessor
                         struct-shape-deployment-model-model-name :shape
                         "ModelName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model-version :initarg :model-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version common-lisp:null) :accessor
                         struct-shape-deployment-model-model-version :shape
                         "Version" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (desired-state :initarg :desired-state :initform
                         common-lisp:nil :type
                         (common-lisp:or model-state common-lisp:null)
                         :accessor struct-shape-deployment-model-desired-state
                         :shape "ModelState" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (state :initarg :state :initform common-lisp:nil :type
                         (common-lisp:or model-state common-lisp:null)
                         :accessor struct-shape-deployment-model-state :shape
                         "ModelState" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (status :initarg :status :initform common-lisp:nil
                         :type
                         (common-lisp:or deployment-status common-lisp:null)
                         :accessor struct-shape-deployment-model-status :shape
                         "DeploymentStatus" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (status-reason :initarg :status-reason :initform
                         common-lisp:nil :type
                         (common-lisp:or string common-lisp:null) :accessor
                         struct-shape-deployment-model-status-reason :shape
                         "String" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (rollback-failure-reason :initarg
                         :rollback-failure-reason :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-deployment-model-rollback-failure-reason
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-model
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-model 'make-deployment-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-handle))
      (common-lisp:list
       (common-lisp:cons "ModelHandle"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'desired-state))
      (common-lisp:list
       (common-lisp:cons "DesiredState"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'state))
      (common-lisp:list
       (common-lisp:cons "State"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status))
      (common-lisp:list
       (common-lisp:cons "Status"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'status-reason))
      (common-lisp:list
       (common-lisp:cons "StatusReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'rollback-failure-reason))
      (common-lisp:list
       (common-lisp:cons "RollbackFailureReason"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-model))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype deployment-models ()
   '(trivial-types:proper-list deployment-model))
 (common-lisp:defun make-deployment-models
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list deployment-model))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass deployment-result common-lisp:nil
                       ((deployment-name :initarg :deployment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-name common-lisp:null)
                         :accessor
                         struct-shape-deployment-result-deployment-name :shape
                         "EntityName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (deployment-status :initarg :deployment-status
                         :initform common-lisp:nil :type
                         (common-lisp:or entity-name common-lisp:null)
                         :accessor
                         struct-shape-deployment-result-deployment-status
                         :shape "EntityName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-status-message :initarg
                         :deployment-status-message :initform common-lisp:nil
                         :type (common-lisp:or string common-lisp:null)
                         :accessor
                         struct-shape-deployment-result-deployment-status-message
                         :shape "String" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-start-time :initarg :deployment-start-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deployment-result-deployment-start-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-end-time :initarg :deployment-end-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-deployment-result-deployment-end-time
                         :shape "Timestamp" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-models :initarg :deployment-models
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-models common-lisp:null)
                         :accessor
                         struct-shape-deployment-result-deployment-models
                         :shape "DeploymentModels" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-deployment-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'deployment-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'deployment-result 'make-deployment-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input deployment-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "DeploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-status))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatus"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-status-message))
      (common-lisp:list
       (common-lisp:cons "DeploymentStatusMessage"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'deployment-start-time))
      (common-lisp:list
       (common-lisp:cons "DeploymentStartTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-end-time))
      (common-lisp:list
       (common-lisp:cons "DeploymentEndTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-models))
      (common-lisp:list
       (common-lisp:cons "DeploymentModels"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input deployment-result))
   common-lisp:nil))
(common-lisp:deftype deployment-status () 'common-lisp:string)
(common-lisp:deftype deployment-type () 'common-lisp:string)
(common-lisp:deftype device-fleet-name () 'common-lisp:string)
(common-lisp:deftype device-name () 'common-lisp:string)
(common-lisp:deftype device-registration () 'common-lisp:string)
(common-lisp:deftype dimension () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass edge-deployment common-lisp:nil
                       ((deployment-name :initarg :deployment-name :initform
                         common-lisp:nil :type
                         (common-lisp:or entity-name common-lisp:null)
                         :accessor struct-shape-edge-deployment-deployment-name
                         :shape "EntityName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (type :initarg :type :initform common-lisp:nil :type
                         (common-lisp:or deployment-type common-lisp:null)
                         :accessor struct-shape-edge-deployment-type :shape
                         "DeploymentType" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (failure-handling-policy :initarg
                         :failure-handling-policy :initform common-lisp:nil
                         :type
                         (common-lisp:or failure-handling-policy
                                         common-lisp:null)
                         :accessor
                         struct-shape-edge-deployment-failure-handling-policy
                         :shape "FailureHandlingPolicy" :location
                         common-lisp:nil :location-name common-lisp:nil)
                        (definitions :initarg :definitions :initform
                         common-lisp:nil :type
                         (common-lisp:or definitions common-lisp:null)
                         :accessor struct-shape-edge-deployment-definitions
                         :shape "Definitions" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-edge-deployment
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'edge-deployment
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'edge-deployment 'make-edge-deployment))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-deployment))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-deployment))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-name))
      (common-lisp:list
       (common-lisp:cons "DeploymentName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'type))
      (common-lisp:list
       (common-lisp:cons "Type"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input
                           'failure-handling-policy))
      (common-lisp:list
       (common-lisp:cons "FailureHandlingPolicy"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'definitions))
      (common-lisp:list
       (common-lisp:cons "Definitions"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-deployment))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype edge-deployments ()
   '(trivial-types:proper-list edge-deployment))
 (common-lisp:defun make-edge-deployments
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list edge-deployment))
   aws-sdk/generator/shape::members))
(common-lisp:progn
 (common-lisp:defclass edge-metric common-lisp:nil
                       ((dimension :initarg :dimension :initform
                         common-lisp:nil :type
                         (common-lisp:or dimension common-lisp:null) :accessor
                         struct-shape-edge-metric-dimension :shape "Dimension"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (metric-name :initarg :metric-name :initform
                         common-lisp:nil :type
                         (common-lisp:or metric common-lisp:null) :accessor
                         struct-shape-edge-metric-metric-name :shape "Metric"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (value :initarg :value :initform common-lisp:nil :type
                         (common-lisp:or value common-lisp:null) :accessor
                         struct-shape-edge-metric-value :shape "Value"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (timestamp :initarg :timestamp :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-edge-metric-timestamp :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-edge-metric
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'edge-metric
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'edge-metric 'make-edge-metric))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input edge-metric))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input edge-metric))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'dimension))
      (common-lisp:list
       (common-lisp:cons "Dimension"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'metric-name))
      (common-lisp:list
       (common-lisp:cons "MetricName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'value))
      (common-lisp:list
       (common-lisp:cons "Value"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'timestamp))
      (common-lisp:list
       (common-lisp:cons "Timestamp"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input edge-metric))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:deftype edge-metrics () '(trivial-types:proper-list edge-metric))
 (common-lisp:defun make-edge-metrics
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list edge-metric))
   aws-sdk/generator/shape::members))
(common-lisp:deftype entity-name () 'common-lisp:string)
(common-lisp:deftype error-message () 'common-lisp:string)
(common-lisp:deftype failure-handling-policy () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass get-deployments-request common-lisp:nil
                       ((device-name :initarg :device-name :initform
                         (common-lisp:error ":device-name is required") :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor
                         struct-shape-get-deployments-request-device-name
                         :shape "DeviceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-fleet-name :initarg :device-fleet-name
                         :initform
                         (common-lisp:error ":device-fleet-name is required")
                         :type
                         (common-lisp:or device-fleet-name common-lisp:null)
                         :accessor
                         struct-shape-get-deployments-request-device-fleet-name
                         :shape "DeviceFleetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployments-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployments-request 'make-get-deployments-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-deployments-result common-lisp:nil
                       ((deployments :initarg :deployments :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-deployments common-lisp:null)
                         :accessor
                         struct-shape-get-deployments-result-deployments :shape
                         "EdgeDeployments" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-deployments-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'get-deployments-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-deployments-result 'make-get-deployments-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployments))
      (common-lisp:list
       (common-lisp:cons "Deployments"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-deployments-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-registration-request common-lisp:nil
                       ((device-name :initarg :device-name :initform
                         (common-lisp:error ":device-name is required") :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor
                         struct-shape-get-device-registration-request-device-name
                         :shape "DeviceName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-fleet-name :initarg :device-fleet-name
                         :initform
                         (common-lisp:error ":device-fleet-name is required")
                         :type
                         (common-lisp:or device-fleet-name common-lisp:null)
                         :accessor
                         struct-shape-get-device-registration-request-device-fleet-name
                         :shape "DeviceFleetName" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-device-registration-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-registration-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-device-registration-request
                    'make-get-device-registration-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-request))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:defclass get-device-registration-result common-lisp:nil
                       ((device-registration :initarg :device-registration
                         :initform common-lisp:nil :type
                         (common-lisp:or device-registration common-lisp:null)
                         :accessor
                         struct-shape-get-device-registration-result-device-registration
                         :shape "DeviceRegistration" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (cache-ttl :initarg :cache-ttl :initform
                         common-lisp:nil :type
                         (common-lisp:or cache-ttlseconds common-lisp:null)
                         :accessor
                         struct-shape-get-device-registration-result-cache-ttl
                         :shape "CacheTTLSeconds" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-get-device-registration-result
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance
                      'get-device-registration-result
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'get-device-registration-result
                    'make-get-device-registration-result))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-registration))
      (common-lisp:list
       (common-lisp:cons "DeviceRegistration"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'cache-ttl))
      (common-lisp:list
       (common-lisp:cons "CacheTTL"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          get-device-registration-result))
   common-lisp:nil))
(common-lisp:progn
 (common-lisp:define-condition internal-service-exception
     (sagemaker-edge-error)
     ((message :initarg :message :initform common-lisp:nil :reader
       internal-service-exception-message)))
 (common-lisp:export
  (common-lisp:list 'internal-service-exception
                    'internal-service-exception-message)))
(common-lisp:deftype metric () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass model common-lisp:nil
                       ((model-name :initarg :model-name :initform
                         common-lisp:nil :type
                         (common-lisp:or model-name common-lisp:null) :accessor
                         struct-shape-model-model-name :shape "ModelName"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model-version :initarg :model-version :initform
                         common-lisp:nil :type
                         (common-lisp:or version common-lisp:null) :accessor
                         struct-shape-model-model-version :shape "Version"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (latest-sample-time :initarg :latest-sample-time
                         :initform common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-model-latest-sample-time :shape
                         "Timestamp" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (latest-inference :initarg :latest-inference :initform
                         common-lisp:nil :type
                         (common-lisp:or timestamp common-lisp:null) :accessor
                         struct-shape-model-latest-inference :shape "Timestamp"
                         :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (model-metrics :initarg :model-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-metrics common-lisp:null)
                         :accessor struct-shape-model-model-metrics :shape
                         "EdgeMetrics" :location common-lisp:nil :location-name
                         common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-model
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'model
                      aws-sdk/generator/shape::args))
 (common-lisp:export (common-lisp:list 'model 'make-model))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        ((aws-sdk/generator/shape::input model))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-name))
      (common-lisp:list
       (common-lisp:cons "ModelName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-version))
      (common-lisp:list
       (common-lisp:cons "ModelVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-sample-time))
      (common-lisp:list
       (common-lisp:cons "LatestSampleTime"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'latest-inference))
      (common-lisp:list
       (common-lisp:cons "LatestInference"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'model-metrics))
      (common-lisp:list
       (common-lisp:cons "ModelMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        ((aws-sdk/generator/shape::input model))
   common-lisp:nil))
(common-lisp:deftype model-name () 'common-lisp:string)
(common-lisp:deftype model-state () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:deftype models () '(trivial-types:proper-list model))
 (common-lisp:defun make-models
                    (common-lisp:&rest aws-sdk/generator/shape::members)
   (common-lisp:check-type aws-sdk/generator/shape::members
                           (trivial-types:proper-list model))
   aws-sdk/generator/shape::members))
(common-lisp:deftype s3uri () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defclass send-heartbeat-request common-lisp:nil
                       ((agent-metrics :initarg :agent-metrics :initform
                         common-lisp:nil :type
                         (common-lisp:or edge-metrics common-lisp:null)
                         :accessor
                         struct-shape-send-heartbeat-request-agent-metrics
                         :shape "EdgeMetrics" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (models :initarg :models :initform common-lisp:nil
                         :type (common-lisp:or models common-lisp:null)
                         :accessor struct-shape-send-heartbeat-request-models
                         :shape "Models" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (agent-version :initarg :agent-version :initform
                         (common-lisp:error ":agent-version is required") :type
                         (common-lisp:or version common-lisp:null) :accessor
                         struct-shape-send-heartbeat-request-agent-version
                         :shape "Version" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (device-name :initarg :device-name :initform
                         (common-lisp:error ":device-name is required") :type
                         (common-lisp:or device-name common-lisp:null)
                         :accessor
                         struct-shape-send-heartbeat-request-device-name :shape
                         "DeviceName" :location common-lisp:nil :location-name
                         common-lisp:nil)
                        (device-fleet-name :initarg :device-fleet-name
                         :initform
                         (common-lisp:error ":device-fleet-name is required")
                         :type
                         (common-lisp:or device-fleet-name common-lisp:null)
                         :accessor
                         struct-shape-send-heartbeat-request-device-fleet-name
                         :shape "DeviceFleetName" :location common-lisp:nil
                         :location-name common-lisp:nil)
                        (deployment-result :initarg :deployment-result
                         :initform common-lisp:nil :type
                         (common-lisp:or deployment-result common-lisp:null)
                         :accessor
                         struct-shape-send-heartbeat-request-deployment-result
                         :shape "DeploymentResult" :location common-lisp:nil
                         :location-name common-lisp:nil))
                       (:metaclass aws-sdk/generator/shape::members-class))
 (common-lisp:defun make-send-heartbeat-request
                    (common-lisp:&rest aws-sdk/generator/shape::args)
   (common-lisp:apply #'common-lisp:make-instance 'send-heartbeat-request
                      aws-sdk/generator/shape::args))
 (common-lisp:export
  (common-lisp:list 'send-heartbeat-request 'make-send-heartbeat-request))
 (common-lisp:defmethod aws-sdk/generator/shape::input-headers
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   (common-lisp:append))
 (common-lisp:defmethod aws-sdk/generator/shape::input-params
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   (common-lisp:append
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-metrics))
      (common-lisp:list
       (common-lisp:cons "AgentMetrics"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'models))
      (common-lisp:list
       (common-lisp:cons "Models"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'agent-version))
      (common-lisp:list
       (common-lisp:cons "AgentVersion"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-name))
      (common-lisp:list
       (common-lisp:cons "DeviceName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'device-fleet-name))
      (common-lisp:list
       (common-lisp:cons "DeviceFleetName"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))
    (alexandria:when-let (aws-sdk/generator/shape::value
                          (common-lisp:slot-value
                           aws-sdk/generator/shape::input 'deployment-result))
      (common-lisp:list
       (common-lisp:cons "DeploymentResult"
                         (aws-sdk/generator/shape::input-params
                          aws-sdk/generator/shape::value))))))
 (common-lisp:defmethod aws-sdk/generator/shape::input-payload
                        (
                         (aws-sdk/generator/shape::input
                          send-heartbeat-request))
   common-lisp:nil))
(common-lisp:deftype string () 'common-lisp:string)
(common-lisp:deftype timestamp () 'common-lisp:string)
(common-lisp:deftype value () 'common-lisp:double-float)
(common-lisp:deftype version () 'common-lisp:string)
(common-lisp:progn
 (common-lisp:defun get-deployments
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-name device-fleet-name)
   (common-lisp:declare (common-lisp:ignorable device-name device-fleet-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-deployments-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetDeployments"
                                                        "GetDeployments"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-deployments))
(common-lisp:progn
 (common-lisp:defun get-device-registration
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key device-name device-fleet-name)
   (common-lisp:declare (common-lisp:ignorable device-name device-fleet-name))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-get-device-registration-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST"
                                                        "/GetDeviceRegistration"
                                                        "GetDeviceRegistration"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'get-device-registration))
(common-lisp:progn
 (common-lisp:defun send-heartbeat
                    (
                     common-lisp:&rest aws-sdk/generator/operation::args
                     common-lisp:&key agent-metrics models agent-version
                     device-name device-fleet-name deployment-result)
   (common-lisp:declare
    (common-lisp:ignorable agent-metrics models agent-version device-name
     device-fleet-name deployment-result))
   (common-lisp:let ((aws-sdk/generator/operation::input
                      (common-lisp:apply 'make-send-heartbeat-request
                                         aws-sdk/generator/operation::args)))
     (aws-sdk/generator/operation::parse-response
      (aws-sdk/api:aws-request
       (aws-sdk/generator/shape:make-request-with-input 'sagemaker-edge-request
                                                        aws-sdk/generator/operation::input
                                                        "POST" "/SendHeartbeat"
                                                        "SendHeartbeat"))
      common-lisp:nil common-lisp:nil *error-map* "application/json")))
 (common-lisp:export 'send-heartbeat))
